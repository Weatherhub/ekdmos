      SUBROUTINE UNPKPLAIN(ND7,IS1,PLAIN)
C
C        HISTORY
C
C        MAY       2013   ENGLE       CREATED.
C
C        PURPOSE
C
C            TO READ UNPACK THE PLAIN LANGUAGE FROM TDLPACK IS1( ) ARRAY.
C
C        VARIABLES (INPUT/OUTPUT)
C
C                 ND7 = DIMENSION IF IS0( ), IS1( ), IS2( ), AND IS4 ( ).
C              IS1(I) = HOLDS THE BYTES DECODED FROM SECTION 1
C                       (I=1,MAX OF ND7).
C               PLAIN = CHARACTER*32 TO HOLD THE PLAIN LANGUAGE OF THE TDLPACK RECORD.
C
C        VARIABLES (INTERNAL)
C
C              IPLAIN = 4-BYTE INTEGER ARRAY OF SIZE 8 TO HOLD TO ALL THE
C                       PLAIN LANGUAGE DATA TOGETHER.
C             IPLAIN1 = 1-BYTE INTEGER ARRAY OF SIZE 32 TO HOLD A SINGLE
C                       CHARACTER ASCII NUMERIC VALUE.
C
      IMPLICIT NONE
C        INPUT/OUTPUT VARIABLES
      INTEGER, INTENT(IN) :: ND7
      INTEGER, INTENT(IN), DIMENSION(ND7) :: IS1
      CHARACTER*32, INTENT(INOUT) :: PLAIN
C        INTERNAL VARIABLES
      INTEGER :: J,JJ,JJJ,JBIT
      INTEGER*1 :: IPLAIN1(32)
      INTEGER :: IPLAIN(8)
C        INITIALIZE VARIABLES
      JBIT=0
      JJ=0
      JJJ=1
C
C        UNPACK PLAIN LANGUAGE. TDLPACK DOCUMENTATION STATES THAT A SINGLE
C        PLAIN LANGUAGE CHARACTER IS STORED IN 1 ELEMENT OF IS1( ). THE
C        DO LOOP BELOW USES THE CALL TO MVBITS TO MOVE THE 8-BITS (1-BYTE)
C        OF PLAIN LANGUAGE IN EACH IS1( ) SLOT INTO IPLAIN( ). IPLAIN( ) IS
C        A 4-BYTE ARRAY OF SIZE 8 SO ALL 32 POSSIBLE CHARACTERS FIT IN THE
C        ARRAY TOGETHER.
C
C        NOTE: MVBITS REQUIRES THE "TO" AND "FROM" VARIABLES TO BE THE SAME
C              BYTE SIZE.
C
      DO J=1,32
         IF(MOD(J,4).EQ.0)THEN
            JJ=J/4
         ELSE
            JJ=(J/4)+1
         ENDIF
         IF(JJ.GT.JJJ)THEN
            JBIT=0
         ELSE
            JBIT=JBIT+8
         ENDIF
         IF(J.EQ.1)JBIT=0
         CALL MVBITS(IS1(22+J),0,8,IPLAIN(JJ),JBIT)
         JJJ=JJ
      END DO
C
C        GIVEN THE NOTE ABOVE, NOW WE WANT EACH CHARACTER TO BE IN THEIR
C        OWN 1-BYTE SPACE.  HERE WE USE THE INTRINSIC TRANSFER FUNCTION TO
C        COPY ALL 32 BYTES FROM IPLAIN(8) INTO IPLAIN1(32). ALSO, IF
C        IPLAIN1( ) CONTAIN A 0 VALUE, CHANGE IT TO 32 WHICH REPRESENTS
C        A SPACE (BLANK CHARACTER) IN ASCII.
C
      IPLAIN1=TRANSFER(IPLAIN,IPLAIN1)
      DO J=1, 32
         IF(IPLAIN1(J).EQ.0)IPLAIN1(J)=32
      ENDDO
C
C        USE THE TRANSFER FUNCTION TO COPY THE PLAIN LANGUAGE
C        FROM IPLAIN1 TO PLAIN (CHARACTER*32).
C
      PLAIN=TRANSFER(IPLAIN1,PLAIN)
C
      RETURN
      END SUBROUTINE UNPKPLAIN
