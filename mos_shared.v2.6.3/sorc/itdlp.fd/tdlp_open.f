      SUBROUTINE TDLP_OPEN(KFILDO,KFILIN,CNAME,ISRA,ISSQ,IENDIAN,
     1                     FSIZE,MASTER,IER)
C
C       APRIL    2013   ENGLE   MDL   CREATED
C
C        PURPOSE
C
C            TO DETERMINE THE TDLPACK FILE TYPE.
C
C        DATA SET USE 
C            KFILDO - DEFAULT UNIT NUMBER FOR OUTPUT (PRINT) FILE.
C                     (OUTPUT)
C            KFILIN - INPUT UNIT NUMBER FOR TDLPACK FILE. (INPUT)
C
C        VARIABLES (INPUT/OUTPUT)                                                       
C              KFILDO = DEFAULT UNIT NUMBER FOR OUTPUT (PRINT) FILE.
C              KFILIN = INPUT UNIT NUMBER FOR TDLPACK FILE.
C               CNAME = INPUT FILE NAME FOR TDLPACK FILE.
C                ISRA = VARIABLE TO STORE IF FILE IS RANDOM-ACCESS.
C                ISSQ = VARIABLE TO STORE IF FILE IS SEQUENTIAL.
C             IENDIAN = HOLDS EITHER THE VALUE OF IRAEND OR IFILEND.
C               FSIZE = FILE SIZE IN BYTES OF THE INPUT TDLPACK FILE.
C              MASTER = INTEGER ARRAY THAT HOLDS THE RANDOM ACCESS
C                       MASTER KEY RECORD.
C
C        VARIABLES (INTERNAL)                                                       
C            CONVERTX = CHARACTER*20 TO HOLD THE VALUE OF HOW THE INPUT
C                       FILE SHOULD BE CONVERTED. THE DEFAULT VALUE IS
C                       'BIG_ENDIAN'.
C         FILE_EXISTS = LOGICAL VARIABLES THE IS (.TRUE.) IF THE FILE
C                       EXISTS AND (.FALSE.) IF NOT.
C             IFILEND = HOLD THE VALUE THAT REPRESENTS THE ENDIAN OF THE
C                       INPUT TDLPACK SEQUENTIAL FILE.
C                 IOS = HOLDS THE IOSTAT VALUE FROM FORTRAN I/O STATEMENTS.
C              IRAEND = HOLD THE VALUE THAT REPRESENTS THE ENDIAN OF THE
C                       INPUT RANDOM ACCESS FILE.
C              ISOPEN = LOGICAL TO CHECK IF FILE IS CONNECTED (OPENED)
C                       (.TRUE.) OR NOT OPENED (.FALSE.). (INTERNAL)
C             ISYSEND = HOLD THE VALUE THAT REPRESENTS THE SYSTEM
C                       ENDIAN.
C                        -1 = SYSTEM IS LITLE-ENDIAN.
C                         1 = SYSTEM IS BIG-ENDIAN.
C               ITEMP = CONTAINS THE FIRST 4 BYTES OF THE INPUT TDLPACK
C                       WHEN OPENED AS STREAM ACCESS.
C
C        NONSYSTEM SUBROUTINES CALLED 
C            CKFILEND,CKRAEND
C
      USE, INTRINSIC :: ISO_C_BINDING
      USE ITDLP_MOD
      IMPLICIT NONE
C        INPUT/OUTPUT VARIABLES
      CHARACTER(LEN=*), INTENT(INOUT) :: CNAME
      INTEGER, INTENT(IN) :: KFILDO,KFILIN
      INTEGER, INTENT(INOUT) :: ISRA,ISSQ,FSIZE,IENDIAN,IER
      INTEGER, INTENT(INOUT), DIMENSION(6) :: MASTER
C        INTERNAL VARIABLES
      CHARACTER*20 :: CONVERTX,CPID
      INTEGER :: ITEMP,ISYSEND,IRAEND,IFILEND,IOS,PID
      LOGICAL :: ISOPEN,FILE_EXISTS
C        INITIALIZE VARIABLES
      CONVERTX='BIG_ENDIAN'
      IENDIAN=0
      ISYSEND=0
      IRAEND=0
      IFILEND=0
C
C        CHECK FOR 1) FILE EXISTS OR FILE SIZE IS 0.
C                  2) IS THE FILE OPEN.
C                  3) FILE SIZE.
C
      INQUIRE(FILE=CNAME,OPENED=ISOPEN,EXIST=FILE_EXISTS,
     1        SIZE=FSIZE)
      IF(.NOT.FILE_EXISTS)THEN
C           FILE DOES NOT EXIST, STOP THE PROGRAM.
         WRITE(6,100)TRIM(CNAME)
 100     FORMAT(/'error: Could not open file ',A/)
         CALL ITDLP_STOP
      ENDIF
C
      IF(FSIZE.EQ.0)THEN
         WRITE(6,105)TRIM(CNAME)
 105     FORMAT(/'error: File ',A,' is 0 bytes.'/)
         CALL ITDLP_STOP
      ENDIF
C
      IF(ISOPEN) CLOSE(KFILIN)
C
C        BEFORE OPENING, CHECK THE FILENAME LENGTH.
C        MOS2K ROUTINES LIMIT FILENAMES TO LENGTH OF
C        60. IF LONGER, CREATE SYMLINK WITH PID IN
C        THE SYMLINK NAME.
C
      IF(LEN_TRIM(CNAME).GT.60)THEN
         PID=GETPID()
         WRITE(CPID,FMT='(I0.1)')PID
         CSLINK='/tmp/itdlp.'//TRIM(CPID)
         CALL SYMLINK(TRIM(CNAME)//C_NULL_CHAR,
     1                TRIM(CSLINK)//C_NULL_CHAR)
         IS_SYMLINK=.TRUE.
         CNAME=TRIM(CSLINK)
      ENDIF
C
C        OPEN THE FILE AS STREAM ACCESS TO DETERMINE
C        TDLPACK FILE TYPE.
C
      OPEN(UNIT=KFILIN,FILE=CNAME,FORM="UNFORMATTED",
     1     ACCESS="STREAM",STATUS="OLD")
C
C        READ THE FIRST 4 BYTES OF THE FILE. THEN CHECK
C        THE VALUE OF ITEMP.
C
      READ(KFILIN)ITEMP
      CLOSE(KFILIN)
      IF(ITEMP.EQ.0)THEN
C           CHECK ENDIANNESS OF RANDOM ACCESS FILE
         CALL CKRAEND(KFILDO,KFILIN,CNAME,ISYSEND,
     1                IRAEND,CONVERTX,IER)
         IENDIAN=IRAEND
      ELSE
C           CHECK ENDIANNESS OF SEQUENTIAL FILE
         CALL CKFILEND(KFILDO,KFILIN,CNAME,ISYSEND,
     1                 IFILEND,CONVERTX,IER)  
         IENDIAN=IFILEND
      ENDIF
C
C        OPEN THE FILE IF SEQUENTIAL AND SET SOME VARIABLES.
C        IF RA, JUST SET SOME VARIABLES.
C
      IF(IFILEND.NE.0.AND.IRAEND.EQ.0)THEN
C           TDLPACK FILE IS SEQUENTIAL
         OPEN(UNIT=KFILIN,FILE=CNAME,FORM="UNFORMATTED",
     1        CONVERT=CONVERTX,STATUS="OLD")
C
         READ(KFILIN,IOSTAT=IOS)ITEMP
         IF(IOS.EQ.0)THEN
            REWIND(KFILIN)
         ELSE
            WRITE(6,110)IOS
 110        FORMAT(/'error: File is not sequential. iostat = ',I3/)
            CLOSE(KFILIN)
            CALL ITDLP_STOP
         ENDIF
C
         ISSQ=1
         ISRA=0
      ELSEIF(IRAEND.NE.0.AND.IFILEND.EQ.0)THEN
C           TDLPACK FILE IS RANDOM ACCESS
         ISSQ=0
         ISRA=1
C           GET RA MASTER KEY RECORD INFORMATION
         OPEN(UNIT=KFILIN,FILE=CNAME,
     1        CONVERT=CONVERTX,ACCESS="DIRECT",RECL=24,
     2        STATUS="OLD")
         READ(KFILIN,REC=1,IOSTAT=IOS)MASTER
         CLOSE(KFILIN)
         IF(IOS.NE.0)THEN
            WRITE(6,115)IOS
 115        FORMAT(/'error: Trouble reading master key record. ',
     1              'iostat = ',I3/)
            CALL ITDLP_STOP
         ENDIF
      ENDIF
C
      RETURN
      END SUBROUTINE TDLP_OPEN
