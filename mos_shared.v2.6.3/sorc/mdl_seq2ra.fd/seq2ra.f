      PROGRAM SEQ2RA
C
C$$$  MAIN PROGRAM DOCUMENTATION BLOCK  ***
C
C MAIN PROGRAM: SEQ2RA  
C   PRGMMR: MALONEY          ORG: W/OST22     DATE: 2007-07-20
C
C ABSTRACT:  TO WRITE A MOS-2000 RANDOM ACCESS EXTERNAL FILE WITH PACKED
C   DATA.  THE FILE MUST HAVE BEEN CREATED WITH U350.  IF THESE
C   DATA ARE THE FIRST TO BE WRITTEN TO THE FILE, THE DIRECTORY
C   RECORD WILL BE WRITTEN.  OTHERWISE, WHEN THE FILE IS 
C   OPENED THE DIRECTORY WILL BE CHECKED TO AGREE WITH THE
C   ONE PROVIDED IN THIS RUN.  OPTIONALLY, THE STATION WBAN
C   NUMBERS, ELEVATIONS, LATITUDES, AND LONGITUDES WILL BE
C   WRITTEN.  THE INPUT DATA ARE FROM A PACKED FILE.
C   THE CALL LETTERS RECORDS ON THE INPUT AND OUTPUT FILES
C   NEED NOT MATCH.  FOR INSTANCE, THERE MAY NOT BE CONSTANTS
C   FOR ALL STATIONS IN THE RANDOM ACCESS FILE; IN THAT 
C   CASE, THE MISSING VALUES ARE 9999.  ALSO, THERE COULD
C   BE CONSTANTS ON THE INPUT THAT ARE NOT TO BE PUT ON
C   THE RANDOM ACCESS FILE.  MULTIPLE FILES OF INPUT DATA
C   ARE ACCOMMODATED.  ALL DATA ARE WRITTEN WITH REPLACEMENT.
C   INPUT DATA ARE UNPACKED AND REPACKED FOR OUTPUT WITH THE
C   SAME SCALING AS INPUT.  BECAUSE THE STATION LIST CAN
C   DIFFER BETWEEN INPUT AND OUTPUT, THE PACKED VALUES ON
C   UNPACKING COULD BE SLIGHTLY DIFFERENT.
C
C PROGRAM HISTORY LOG:
C 1998-03-01  GLAHN
C   98-08-01  GLAHN   COMMENTS UPDATED; GO TO 193 CHANGED 
C                     TO GO TO 1915
C   98-09-05  GLAHN   MODIFIED TO NOT REQUIRE MATCH BETWEEN
C                     PACKED INPUT AND OUTPUT CALL LETTERS;
C                     TIMEZ( ) ADDED TO CALL TO RDSTAD;
C                     DEFINITION OF NWORDS FOR DIR CHANGED
C   99-05-15  GLAHN   ADDED DIAGNOSTIC WHEN NO PACKED INPUT
C   99-07-04  GLAHN   MODIFIED TO ACCOMMODATE DATA FROM
C                     MULTIPLE FILES; MISSING STATIONS
C                     INDICATED IN INDEX( ) BY 99999999
C   99-08-03  SHIREY  ICOUNT = 0 BELOW 1915
C   99-08-22  GLAHN   MODIFIED COMMENTS
C 2000-02-14  GLAHN   MODIFIED COMMENTS TO INDICATE WRITING
C                     WITH REPLACEMENT; CHANGES TO MORE
C                     CLOSELY PARALLEL U351; SPELLING
C 2004-11-01  RLC     LIBRARY WEEK: UPPED ND4 FROM 200 TO 300,
C                     ADDED COMMAS TO FORMAT STATEMENTS
C 2007-07-16  MALONEY ADDED IMATCH( ) TO TRACK IDS NOT
C                     FOUND ON INPUT FILES; REWORKED 243 LOOP;
C                     D-COMMENTED 246 OUTPUT; 
C 2007-07-20  MALONEY ADDED NCEP DOCBLOCK. ADDED CALLS TO W3TAGB
C                     AND W3TAGE. CHANGED THE VALUE OF KFILDO FROM
C                     12 TO 6.  RENAMED MDL_SEQ2RA.  SET IP(5)=0 
C                     TO DISABLE DICTIONARY PRINTOUT.
C 2012-06-25  ENGLE   ADDED PLAIN( ) TO THE CALLING SEQUENCE FOR ALL
C                     CALLS TO PAWRA.
C 2012-09-24  ENGLE   ADDED CALL TO WRTDLMC TO WRITE STATION
C                     CALL LETTERS TO RANDOMA ACCESS FILE.
C
C        DATA SET USE
C        INPUT FILES:
C         FORT.KFILDI - UNIT NUMBER OF DEFAULT INPUT FILE.
C                       THIS IS PROBABLY SPECIFIED FOR THE SYSTEM
C                       BEING USED.  SET IN DATA STATEMENT.
C       FORT.KFILD(J) - THE UNIT NUMBER FOR WHERE THE STATION LIST
C                       (J=1) AND THE STATION DIRECTORY (J=2) RESIDES.
C                       CORRESPONDS TO DIRNAM(J).  WHEN KFILD(1) = 
C                       KFILDI, THE DEFAULT INPUT IS INDICATED,
C                       DIRNAM(1) IS NOT USED, AND THE FILE IS NOT
C                       OPENED.  KFILD(1) CAN EQUAL KFILD(2), IN WHICH 
C                       CASE THE STATION LIST IS TAKEN FROM THE
C                       DIRECTORY (I.E., A SEPARATE STATION LIST IS NOT
C                       PROVIDED).  
C          FORT.KFILP - UNIT NUMBER OF INPUT PACKED DATA SET.  
C
C        OUTPUT FILES:  (INCLUDING WORK FILES)
C         FORT.KFILDO - UNIT NUMBER OF DEFAULT OUTPUT (PRINT) FILE.
C                       THIS IS PROBABLY SPECIFIED FOR THE SYSTEM
C                       BEING USED.  SET IN DATA STATEMENT.
C          FORT.KFILX - UNIT NUMBER FOR THE OUTPUT RANDOM ACCESS FILE.
C                       (INPUT/OUTPUT)
C
C        VARIABLES 
C              KFILDI = UNIT NUMBER FOR INPUT FILE.
C              KFILDO = UNIT NUMBER FOR OUTPUT (PRINT) FILE.  SET TO 12 
C                       BY DATA STATEMENT. 
C            KFILD(J) = UNIT NUMBER FOR WHERE THE STATION LIST (J=1)
C                       AND THE STATION DIRECTORY (J=2) RESIDES.
C                       CORRESPONDS TO DIRNAM(J).  WHEN KFILD(1) =
C                       KFILDI, THE DEFAULT INPUT IS INDICATED, 
C                       DIRNAM(1) IS NOT USED, AND THE FILE IS NOT 
C                       OPENED.  KFILD(1) CAN EQUAL KFILD(2), IN WHICH 
C                       CASE THE STATION LIST IS TAKEN FROM THE 
C                       DIRECTORY (I.E., A SEPARATE STATION LIST IS NOT
C                       PROVIDED).
C               KFILX = UNIT NUMBER OF THE OUTPUT RANDOM ACCESS FILE.
C               KFILP = UNIT NUMBER OF INPUT PACKED DATA SET.
C                 ND1 = THE MAXIMUM NUMBER OF STATIONS THAT CAN BE DEALT
C                       WITH ON THIS RUN.  DIMENSION OF SEVERAL
C                       VARIABLES.  SET BY PARAMETER.
C                 ND4 = MAXIMUM NUMBER OF VARIABLE IDS TO READ AND 
C                       RECORDS TO WRITE (EXCLUSIVE OF DIRECTORY
C                       RECORD, WBAN NUMBERS, ETC.).
C                 ND5 = ND1.  ND5 IS USED TO BE CONSISTENT WITH OTHER
C                       MOS-2000 PROGRAMS.  SET BY PARAMETER.
C                 ND7 = DIMENSION OF IS0( ), IS1( ), IS2( ),AND IS4( ).
C                       SHOULD BE 54.  SET BY PARAMETER.
C              L3264B = INTEGER WORD LENGTH IN BITS OF MACHINE BEING
C                       USED (EITHER 32 OR 64).  SET BY PARAMETER.
C              L3264W = NUMBER OF WORDS IN 64 BITS (EITHER 1 OR 2).  
C                       CALCULATED BY PARAMETER, BASED ON L3464B.
C        ICALL(L,K,J) = 8 STATION CALL LETTERS AS CHARACTERS IN AN 
C                       INTEGER VARIABLE (L=1,L3264W) (K=1,NSTA).
C                       SIX SETS ARE PROVIDED FOR (J=1,6).
C                       NOTE THAT THIS REQUIRES TWO 32-BIT WORDS TO HOLD
C                       THE DESCRIPTION BUT ONLY ONE 64-BIT WORD.
C                       EQUIVALENCED TO CCALL( , ).
C         ICALLD(L,K) = 8 STATION CALL LETTERS AS CHARACTERS IN AN
C                       INTEGER VARIABLE (L=1,L3264W) (K=1,ND1).  THIS
C                       LIST IS USED IN RDTDLM.  EQUIVALENCED TO 
C                       CCALLD( ).
C          CCALL(K,J) = 8-CHARACTER STATION CALL LETTERS (K=1,NSTA)
C                       FOR UP TO 6 STATIONS (J=1,6).
C                       EQUIVALENCED TO ICALL( ).
C           CCALLD(K) = 8 STATION CALL LETTERS (K=1,NSTA).  THIS LIST IS
C                       USED IN RDSTAD TO RETAIN THE ORIGINAL LIST IN
C                       CCALL( ).
C                       EQUIVALENCED TO ICALLD( , ).
C             NAME(K) = NAMES OF STATIONS (K=1,NSTA)  (CHARACTER*20)
C           DIRNAM(J) = HOLDS NAME OF DATA SET CONTAINING THE STATION
C                       CALL LETTERS (J=1) AND STATION DIRECTORY (J=2).
C                       IT IS EXPECTED THAT THE STATIONS IN
C                       THE DIRECTORY BE ORDERED ALPHABETICALLY BY CALL
C                       LETTERS.  (CHARACTER*60)
C            NELEV(K) = ELEVATION OF STATIONS (K=1,NSTA).  EQUIVALENCED
C                       TO ELEV( ).
C             ELEV(K) = ELEVATION OF STATIONS (K=1,NSTA).  EQUIVALENCED
C                       TO NELEV( ).
C            IWBAN(K) = WBAN NUMBERS OF STATIONS (K=1,NSTA).
C                       EQUIVALENCED TO WBAN( ).
C             WBAN(K) = WBAN NUMBERS OF STATIONS (K=1,NSTA).
C                       EQUIVALENCED TO IWBAN( ).
C           STALAT(K) = LATITUDE OF STATIONS (K=1,NSTA).
C           STALON(K) = LONGITUDE OF STATIONS (K=1,NSTA).
C           IFOUND(K) = SCRATCH IN TWO SUBROUTINES (K=1,NSTA)
C           ITIMEZ(K) = TIME ZONE OF STATIONS (K=1,NSTA)
C              PAKNAM = NAME OF PACKED INPUT FILE, ASSOCIATED WITH
C                       KFILP.  (CHARACTER*60)
C                NSTA = THE NUMBER OF STATIONS TO BE WRITTEN TO
C                       THE RANDOM ACCESS FILE.
C            INDEX(J) = INDEX FOR CORRESPONDENCE BETWEEN INPUT AND
C                       OUTPUT VALUES (J=1,ND1). VALUES OF 99999999
C                       MEAN STATION IS NOT AVAILABLE ON INPUT.
C               IC(J) = SCRATCH ARRAY USED IN PACKING THE DATA
C                       (J=1,ND1).
C            IPACK(J) = SCRATCH ARRAY USED IN PACKING THE DATA
C                       (J=1,ND5).
C            IWORK(J) = SCRATCH ARRAY (J=1,ND5).
C             DATA(J) = SCRATCH ARRAY (J=1,ND5).
C            DATA1(J) = SCRATCH ARRAY (J=1,ND5).
C              IS0(L) = HOLDS THE VALUES TO FURNISH FOR GRIB
C                       SECTION 0 (L=1,ND7).
C              IS1(L) = HOLDS THE VALUES TO FURNISH FOR GRIB
C                       SECTION 1 (L=1,ND7).
C              IS2(L) = HOLDS THE VALUES FOR GRIB SECTION 2 (L=1,ND7).
C                       NOT ALL LOCATIONS ARE USED.
C              IS4(L) = HOLDS THE VALUES FOR GRIB SECTION 4.  NONE OF 
C                       THE VALUES NEED BE FURNISHED BY THE USER.
C                       IS4(2) IS SET BY PACK1D TO INDICATE
C                       NON-GRIDPOINT DATA, COMPLEX PACKING, ORIGINAL
C                       SCALED VALUES TO BE PACKED (NOT SECOND ORDER
C                       SPATIAL DIFFERENCES), AND MISSING VALUES OR NOT
C                       DEPENDING ON WHETHER OR NOT XMISS NE OR EQ ZERO,
C                       RESPECTIVELY.
C             ID(J,L) = MOS IDS OF VARIABLES TO WRITE (J=1,4) (L=1,ND4).
C              ISCALE = THE SCALING PARAMETER FOR THE SET OF DATA
C                       IDENTIFIED IN ID( , ).  THE DATA WILL BE PACKED TO
C                       THE RESOLUTION DATA*10**ISCALE ROUNDED.
C               NCHAR = THE NUMBER OF CHARACTERS OF PLAIN LANGUAGE IN 
C                       PLAIN TO PACK WITH THE DATA.
C       IPLAIN( , ,J) = NAMES OF VARIABLES (J=1,5).  EQUIVALENCED TO 
C                       PLAIN.
C            PLAIN(J) = NAMES OF VARIABLES (J=1,5).  EQUIVALENCED TO 
C                       IPLAIN( , , ).  (CHARACTER*32)
C               IP(J) = PRINT PARAMETERS (J=1,25).  ALL ARE SET BY DATA
C                       STATEMENT TO THE SAME VALUE AS THE DEFAULT
C                       KFILDO = 12.
C              XMISSP = SET TO 9999. INDICATING THAT ANY MISSING DATA 
C                       VALUE WILL BE PACKED AS 9999.
C              XMISSS = SET TO 0 TO INDICATE THERE WILL BE NO SECONDARY 
C                       MISSING VALUE INDICATOR (SEE XMISSP).
C               MINPK = VALUES ARE PACKED IN GROUPS OF MINIMUM SIZE
C                       MINPK.  ONLY WHEN THE NUMBER OF BITS TO HANDLE
C                       A GROUP CHANGES WILL A NEW GROUP BE FORMED.  
C                       SET TO 14 BY DATA STATEMENT.
C                  LX = THE NUMBER OF GROUPS (THE NUMBER OF 2ND ORDER 
C                       MINIMA).  WHILE NEEDED ONLY IN SUBROUTINE PACK,
C                       IT IS OUTPUT IN THE ARGUMENT LIST OF PAWRA IN 
C                       CASE THE USER WANTS TO KNOW IT.  
C              IOCTET = THE TOTAL MESSAGE SIZE IN OCTETS.
C           NBYTES(J) = HOLDS THE INITIAL 64 BITS READ FROM A TDLPACK 
C                       RECORD (J=1,L3264W)
C                 IER = STATUS RETURN FROM SUBROUTINES.
C                         0 = GOOD VALUE.
C                       SEE CALLED SUBROUTINE FOR OTHER VALUES.
C              ICOUNT = COUNTS THE VARIABLES WRITTEN.  WHEN NVRBL
C                       HAVE BEEN WRITTEN, U352 STOPS.
C               STATE = SET TO A STATEMENT NUMBER FOR USE IN WRITING
C                       DIAGNOSTIC.
C               BLANK = 8 BLANK CHARACTERS.  (CHARACTER*8)
C               RUNID = 72 CHARACTERS TO IDENTIFY RUN.  (CHARACTER*72)
C            INDEX(J) = HOLDS THE CORRESPONDENCE BETWEEN THE STATIONS
C                       READ AND THE STATION LIST TO WRITE (J=1,NSTA).
C             DATA(J) = THE DATA TO WRITE, AFTER ORDERING (J=1,NSTA).
C                IDUM = DUMMY VARIABLE FOR CALL TO RDSNAM.
C              NVALUE = NUMBER OF BYTES READ FROM THE RANDOM ACCESS
C                       FILE, THEN THE NUMBER OF WORDS.
C              IWRELE = INDICATES WHETHER (=1) OR NOT (=0) THE ELEVATIONS
C                       TAKEN FROM THE STATION DIRECTORY ARE TO BE 
C                       WRITTEN.
C              IWRWBN = INDICATES WHETHER (=1) OR NOT (=0) THE WBAN NUMBERS
C                       TAKEN FROM THE STATION DIRECTORY ARE TO BE 
C                       WRITTEN.
C              IWRLAT = INDICATES WHETHER (=1) OR NOT (=0) THE LATITUDES
C                       TAKEN FROM THE STATION DIRECTORY ARE TO BE 
C                       WRITTEN.
C              IWRLON = INDICATES WHETHER (=1) OR NOT (=0) THE LONGITUDES
C                       TAKEN FROM THE STATION DIRECTORY ARE TO BE 
C                       WRITTEN.
C           IMATCH(L) = INDICATES WHETHER (=1) OR NOT (=0) ID( ,L) WAS
C                       FOUND ON INPUT FILE.  (L=1,NVRBL)
C 
C       SUBPROGRAMS CALLED:  RDSNAM, RDSTAL, RDTDLM, WRTDLM, PAWRA, 
C                            CLFILM, TIMPR, W3TAGB, W3TAGE
C          UNIQUE: - NONE
C          LIBRARY:
C            W3LIB - W3TAGB, W3TAGE
C           MOSLIB - RDSNAM, RDSTAL, RDTDLM, WRTDLM, PAWRA, CLFILM, 
C                    TIMPR
C
C        EXIT STATES:
C          COND =    0 - SUCCESSFUL RUN
C                  106 - ERROR READING UNIT NUMBERS FOR STATION LIST AND
C                        STATION DIRECTORY DATA SETS
C                  107 - ERROR READING UNIT NUMBER FOR RANDOM ACCESS
C                        OUTPUT FILE
C                  112 - ERROR READING STATION DIRECTORY IN RANDOM ACCESS FILE
C                  120 - NUMBER OF CALL LETTERS TO WRITE DOES NOT EQUAL THE
C                        NUMBER READ FROM THE CONSTANT FILE
C                  135 - MISMATCH OF CALL LETTERS TO BE WRITTEN AND THOSE ON
C                        RANDOM ACCESS FILE
C                  141 - ERROR WRITING STATION DIRECTORY ON RANDOM ACCESS FILE
C                  161 - ERROR WRITING WBAN NUMBERS ON RANDOM ACCESS FILE
C                  171 - ERROR WRITING ELEVATIONS ON RANDOM ACCESS FILE
C                  181 - ERROR WRITING LATITUDES ON RANDOM ACCESS FILE
C                  191 - ERROR WRITING LONGITUDES ON RANDOM ACCESS FILE
C                  192 - ERROR READING UNIT NUMBER FOR PACKED INPUT DATA SET
C                  200 - INSUFFICIENT MEMORY TO READ LIST OF INPUT IDS 
C                        AND TERMINATOR
C                  230 - INSUFFICIENT MEMORY TO READ LIST OF IDS FROM 
C                        INPUT FILE(S)   
C                  242 - ERROR UNPACKING IDS OF DATA FROM INPUT FILE(S)
C                  247 - ERROR UNPACKING DATA FROM INPUT FILE(S)
C                  249 - ERROR PACKING DATA
C                  251 - ERROR WRITING DATA ON RANDOM ACCESS FILE
C                  900 - ERROR OPENING OR READING A FILE, OR END OF FILE ENCOUNTERED
C                 1090 - ERROR READING STATION LIST/DIRECTORY INPUT FILE(S)   
C                 2055 - ERROR READING STATION DIRECTORY FROM INPUT FILE(S)   
C                 2381 - ERROR UNPACKING DATE OF DATA FROM INPUT FILE(S)   
C
C REMARKS:  NONE
C
C ATTRIBUTES:
C   LANGUAGE:  FORTRAN 90 (xlf90 compiler)
C   MACHINE:  IBM SP
C   LANGUAGE:  FORTRAN 90 (ifort compiler)
C   MACHINE:  INTEL/LINUX
C
C$$$
C
      PARAMETER (ND1=5000)
      PARAMETER (ND4=5000)
      PARAMETER (ND5=ND1)
      PARAMETER (ND7=54)
      PARAMETER (L3264B=32)
C        SET L3264B = 64 FOR RUNNING ON THE CRAY.
      PARAMETER (L3264W=64/L3264B)
C
      CHARACTER*4 STATE
      CHARACTER*8 CCALL(ND1,6),CCALLD(ND1),BLANK
      CHARACTER*20 NAME(ND1)
      CHARACTER*60 DIRNAM(2),CFILX,PAKNAM
      CHARACTER*32 PLAIN(5)
      CHARACTER*72 RUNID
C
      DIMENSION ICALL(L3264W,ND1,6),ICALLD(L3264W,ND1),
     1                              ICALLE(ND1)
      DIMENSION NELEV(ND1),ELEV(ND1),IWBAN(ND1),WBAN(ND1),
     1          STALAT(ND1),STALON(ND1),IFOUND(ND1),
     2          IC(ND1),INDEX(ND1),ITIMEZ(ND1)
      DIMENSION ID(4,ND4),IMATCH(ND4)
      DIMENSION IPACK(ND5),IWORK(ND5),DATA(ND5),DATA1(ND5)
      DIMENSION IS0(ND7),IS1(ND7),IS2(ND7),IS4(ND7)
      DIMENSION IPLAIN(L3264W,4,5)
      DIMENSION KFILD(2),IDUM(2),IP(25),JD(4),NBYTES(2)
C
      EQUIVALENCE (NELEV,ELEV),(IWBAN,WBAN)
      EQUIVALENCE (PLAIN,IPLAIN),(ICALL,CCALL),(ICALLD,CCALLD,ICALLE)
C
      DATA KFILDI/5/,
     1     KFILDO/6/,
     2     IP/25*6/
      DATA XMISSP/9999./,
     1     XMISSS/0./
      DATA MINPK/14/
      DATA PLAIN/'WBAN NUMBER                     ',
     1           'ELEVATION                       ',
     2           'LATITUDE                        ',
     3           'LONGITUDE                       ',
     4           '                                '/
      DATA BLANK/'        '/
      DATA ICOUNT/0/
C
      CALL W3TAGB('MDL_SEQ2RA',2007,0200,0065,'OSD211')
C
      CALL TIMPR(KFILDO,KFILDO,'START U352          ')
C
C        SET IP5 TO 0 SO THE DICTIONARY WON'T BE WRITTEN OUT
C
      IP(5)=0
C
C        OPEN INPUT FILE.
C
c     STATE='101 '
c     OPEN(UNIT=KFILDI,FILE='U352.CN',STATUS='OLD',IOSTAT=IOS,
c    1     ERR=900)
C
C        READ AND PRINT RUN DESCRIPTION.
C
      STATE='102 ' 
      READ(KFILDI,102,IOSTAT=IOS,ERR=900,END=900)RUNID
 102  FORMAT(A72)
      WRITE(KFILDO,103)RUNID
 103  FORMAT(' ',A72)
C
C        READ CONTROL TO INDICATE WHETHER OR NOT WBAN NUMBERS,
C        ELEVATIONS, LATITUDES, AND LONGITUDES WILL BE WRITTEN.
C
      STATE='104 '
      READ(KFILDI,104,IOSTAT=IOS,ERR=900,END=900)
     1     IWRELE,IWRWBN,IWRLAT,IWRLON
 104  FORMAT(4I4)
      WRITE(KFILDO,105)IWRELE,IWRWBN,IWRLAT,IWRLON
 105  FORMAT(/' IWRELE',I4,'   WILL ELEVATIONS BE WRITTEN?'/
     1        ' IWRWBN',I4,'   WILL WBAN NUMBERS BE WRITTEN?'/
     2        ' IWRLAT',I4,'   WILL LATITUDES BE WRITTEN?'/
     3        ' IWRLON',I4,'   WILL LONGITUDES BE WRITTEN?')
C
C        READ AND PROCESS UNIT NUMBERS AND FILE NAMES FOR STATION LIST
C        (CALL LETTERS) AND STATION DIRECTORY WHICH HOLDS CALL LETTERS,
C        LATITUDE, LONGITUDE, WBAN NUMBER, ELEVATION, AND NAME FOR EACH 
C        POSSIBLE STATION.  THIS CAN BE A MASTER DIRECTORY, OR BE A 
C        DIRECTORY SUPPLIED BY A USER.
C
      CALL RDSNAM(KFILDI,KFILDO,KFILD,DIRNAM,IDUM,IDUM,2,NUMIN,'OLD',
     1            'FORMATTED',IP,IER)
C
      IF(IER.NE.0)THEN
         WRITE(KFILDO,106)IER
 106     FORMAT(/' ****ERROR READING UNIT NUMBERS AND NAMES OF STATION',
     1           ' LIST AND DIRECTORY DATA SETS IN U352 AT 106.',
     2           '  IER =',I4)
         CALL W3TAGE('MDL_SEQ2RA')
         STOP 106
      ENDIF
C
      WRITE(KFILDO,1060)(KFILD(J),DIRNAM(J),J=1,2)
 1060 FORMAT(/' STATION LIST AND DIRECTORY DATA SETS, UNITS AND NAMES.'/
     1       (' ',I4,2X,A60))
C
C        READ AND PROCESS UNIT NUMBER AND FILE NAME OF OUTPUT
C        RANDOM ACCESS FILE.
C
      CALL RDSNAM(KFILDI,KFILDO,KFILX,CFILX,IDUM,IDUM,1,NUMIN,'NOT',
     1            'FORMATTED',IP,IER)
C        NOTE THAT THIS FILE IS NOT OPENED.
C
      IF(IER.NE.0)THEN
         WRITE(KFILDO,107)IER
 107     FORMAT(/' ****ERROR READING UNIT NUMBER AND NAME OF',
     1           ' OUTPUT RANDOM ACCESS FILE IN U352 AT 107.',
     2           '  IER =',I4)
         CALL W3TAGE('MDL_SEQ2RA')
         STOP 107
      ENDIF
C
      WRITE(KFILDO,1070)KFILX,CFILX
 1070 FORMAT(/' RANDOM ACCESS FILE UNIT AND NAME.'/
     1       (' ',I4,2X,A60))
C
C        INITIALIZE CCALL( , ) AND CCALLD( ).
C   
      DO 109 K=1,ND1
C
      DO 108 J=1,6
      CCALL(K,J)=BLANK
 108  CONTINUE
C
      CCALLD(K)=BLANK
 109  CONTINUE
C
C        READ AND PRINT THE STATION DIRECTORY.
C
      NEW=1
C        NEW CALL LETTERS ARE USED IN RANDOM ACCESS FILES.
      CALL RDSTAD(KFILDO,IP(4),IP(5),KFILD,NEW,CCALL,CCALLD,
     1            NAME,NELEV,IWBAN,STALAT,STALON,ITIMEZ,IFOUND,
     2            ND1,NSTA,IER)
C
      IF(IER.NE.0)THEN
C           RDSTAD WILL HAVE PRODUCED A DIAGNOSTIC FOR ANY
C           IER NE 0.
         CALL W3TAGE('MDL_SEQ2RA')
         STOP 1090
      ENDIF
C
C        CONVERT ELEVATIONS AND WBAN NUMBERS TO FLOATING POINT.
C
      DO 110 J=1,NSTA
      ELEV(J)=NELEV(J)
      WBAN(J)=IWBAN(J)
 110  CONTINUE
C
C        ZERO ARRAYS.
C
      DO 111 J=1,ND7
      IS0(J)=0
      IS1(J)=0
      IS2(J)=0
      IS4(J)=0
 111  CONTINUE
C
C        READ CALL LETTERS IF THEY EXIST AND CHECK THEM
C        TO MAKE ADDITION OF RECORDS POSSIBLE.
C
      JD(1)=400001000
      JD(2)=0
      JD(3)=0
      JD(4)=0
CINTEL
C      CALL RDTDLM(KFILDO,KFILX,CFILX,JD,ICALLD,ND1*L3264W,NVALUE,
C     1            L3264B,IER)
      CALL RDTDLMC(KFILDO,KFILX,CFILX,JD,CCALLD,ND1*L3264W,NVALUE,
     1            L3264B,IER)
CINTEL
C
      IF(IER.EQ.155)THEN
C           THE DIRECTORY DID NOT EXIST.  THIS IS NOT AN ERROR.
         WRITE(KFILDO,1115)CFILX
 1115    FORMAT('     THE DIRECTORY DOES NOT EXIST ON FILE ',A60/
     1          '     SO WRITE THE CALL LETTERS.')
         GO TO 140
C
      ELSEIF(IER.NE.0)THEN
         WRITE(KFILDO,112)IER
 112     FORMAT('     ERROR READING STATION DIRECTORY',
     1           ' IN RANDOM ACCESS FILE IN U352 AT 112.  IER =',I4)
         CALL W3TAGE('MDL_SEQ2RA')
         STOP 112
      ENDIF
C
      NVALUE=NVALUE/L3264W
C        THE CALL LETTERS ARE 8 BYTES EACH.  THIS IS TWO WORDS
C        ON A 32-BIT MACHINE.  THE NUMBER OF WORDS WRITTEN AND
C        READ MUST ACCOUNT FOR THIS.  THE ACTUAL NUMBER OF CALL
C        LETTERS IS NVALUE/L3264W.
C
C        CALL LETTERS WERE READ.  DO THEY MATCH?
C
      IF(NVALUE.EQ.NSTA)GO TO 125
      WRITE(KFILDO,120)NVALUE,NSTA,
     1     (CCALL(J,1),CCALLD(J),J=1,MAX(NVALUE,NSTA))
 120  FORMAT(/' ****NUMBER OF CALL LETTERS READ FROM',
     1        ' RANDOM ACCESS OUTPUT FILE =',I5/
     2        '     DOES NOT EQUAL THE NUMBER TO BE WRITTEN =',I5,
     3        '.  STOP IN U352 AT 120.'/('     ',A8,1X,A8))
C        VALUES BEYOND NVALUE IN CCALL( , ) WILL NOT BE
C        CHARACTER ORIENTED, AND PROBABLY NOT PRINTABLE AS A8.
      CALL W3TAGE('MDL_SEQ2RA')
      STOP 120
C
 125  MATCH=0
C
      DO 130 J=1,NSTA
      IF(CCALL(J,1).EQ.CCALLD(J))GO TO 130
      WRITE(KFILDO,126)CCALL(J,1),CCALLD(J)
 126  FORMAT(/' ****MISMATCH OF CALL LETTERS TO BE WRITTEN',
     1        ' AND THOSE ON RANDOM ACCESS FILE.',2(2X,A8))
      MATCH=1
 130  CONTINUE
C
      IF(MATCH.EQ.0)GO TO 150
      WRITE(KFILDO,134)(CCALL(J,1),CCALLD(J),J=1,NSTA)
 134  FORMAT(/' TO WRITE  ON CONSTANT FILE'/
     1       (' ',A8,2X,A8))
      WRITE(KFILDO,135)
 135  FORMAT(/'     STOP IN U352 AT 135.' ) 
      CALL W3TAGE('MDL_SEQ2RA')
      STOP 135
C  
C        WRITE CALL LETTERS RECORD WHEN SUCH A RECORD DOES
C        NOT EXIST.
C
CINTEL
C 140  CALL WRTDLM(KFILDO,KFILX,CFILX,JD,ICALL,NSTA*L3264W,
C     1               0,0,L3264B,IER)
 140  CALL WRTDLMC(KFILDO,KFILX,CFILX,JD,CCALL,NSTA*L3264W,
     1               0,0,L3264B,IER)
CINTEL
C        THE CALL LETTERS ARE 8 BYTES EACH.  THIS IS TWO WORDS
C        ON A 32-BIT MACHINE.  THE NUMBER OF WORDS WRITTEN AND
C        READ MUST ACCOUNT FOR THIS.
C
      IF(IER.NE.0)THEN
         WRITE(KFILDO,1041)IER
 1041    FORMAT(/' ****ERROR WRITING STATION DIRECTORY',
     1           ' ON RANDOM ACCESS FILE IN U352 AT 141.  IER =',I4)
         CALL W3TAGE('MDL_SEQ2RA')
         STOP 141
      ENDIF
C
C        THE STATION LIST IN CCALL( ) AND THE DATA IN WBAN( ),
C        ELEV( ), STALAT( ), AND STALON( ) ARE IN THE ORDER
C        TO BE WRITTEN.
C         
C        WRITE WBAN NUMBERS IF DESIRED.  WRITTEN WITH
C        REPLACEMENT.
C
 150  IF(IWRWBN.EQ.0)GO TO 165
C
      DO 160 J=1,ND7
      IS1(J)=0
 160  CONTINUE
C 
      JD(1)=400003000
      IS1(17)=0
      NCHAR=11
      WRITE(KFILDO,255)(JD(J),J=1,4)
      CALL PAWRA(KFILDO,KFILX,CFILX,JD,
     1           WBAN,IC,ND1,NSTA,IPACK,ND5,MINPK,
     2           IS0,IS1,IS2,IS4,ND7,
     3           IPLAIN(1,1,1),PLAIN(1),NCHAR,
     4           XMISSP,XMISSS,LX,IOCTET,
     5           L3264B,L3264W,IER)
C
      IF(IER.NE.0)THEN
         WRITE(KFILDO,161)IER
 161     FORMAT(/' ****ERROR WRITING WBAN NUMBERS',
     1           ' ON RANDOM ACCESS FILE IN U352 AT 161.  IER =',I4)
         CALL W3TAGE('MDL_SEQ2RA')
         STOP 161
      ENDIF
C
C        WRITE ELEVATIONS IF DESIRED.  WRITTEN WITH
C        REPLACEMENT.
C
 165  IF(IWRELE.EQ.0)GO TO 175
C
      DO 170 J=1,ND7
      IS1(J)=0
 170  CONTINUE
C 
      JD(1)=400005000
      IS1(17)=0
      NCHAR=9
      WRITE(KFILDO,255)(JD(J),J=1,4)
      CALL PAWRA(KFILDO,KFILX,CFILX,JD,
     1           ELEV,IC,ND1,NSTA,IPACK,ND5,MINPK,
     2           IS0,IS1,IS2,IS4,ND7,
     3           IPLAIN(1,1,2),PLAIN(2),NCHAR,
     4           XMISSP,XMISSS,LX,IOCTET,
     5           L3264B,L3264W,IER)
C
      IF(IER.NE.0)THEN
         WRITE(KFILDO,171)IER
 171     FORMAT(/' ****ERROR WRITING ELEVATIONS',
     1           ' ON RANDOM ACCESS FILE IN U352 AT 171.  IER =',I4)
         CALL W3TAGE('MDL_SEQ2RA')
         STOP 171
      ENDIF
C
C        WRITE LATITUDES IF DESIRED.  WRITTEN WITH
C        REPLACEMENT.
C
 175  IF(IWRLAT.EQ.0)GO TO 185
C
      DO 180 J=1,ND7
      IS1(J)=0
 180  CONTINUE
C 
      JD(1)=400006000
      IS1(17)=2
      NCHAR=8
      WRITE(KFILDO,255)(JD(J),J=1,4)
      CALL PAWRA(KFILDO,KFILX,CFILX,JD,
     1           STALAT,IC,ND1,NSTA,IPACK,ND5,MINPK,
     2           IS0,IS1,IS2,IS4,ND7,
     3           IPLAIN(1,1,3),PLAIN(3),NCHAR,
     4           XMISSP,XMISSS,LX,IOCTET,
     5           L3264B,L3264W,IER)
C
      IF(IER.NE.0)THEN
         WRITE(KFILDO,181)IER
 181     FORMAT(/' ****ERROR WRITING LATITUDES',
     1           ' ON RANDOM ACCESS FILE IN U352 AT 181.  IER =',I4)
         CALL W3TAGE('MDL_SEQ2RA')
         STOP 181
      ENDIF
C
C        WRITE LONGITUDES IF DESIRED.  WRITTEN WITH
C        REPLACEMENT.
C
 185  IF(IWRLON.EQ.0)GO TO 1915
C
      DO 190 J=1,ND7
      IS1(J)=0
 190  CONTINUE
C 
      JD(1)=400007000
      IS1(17)=2
      NCHAR=9
      WRITE(KFILDO,255)(JD(J),J=1,4)
      CALL PAWRA(KFILDO,KFILX,CFILX,JD,
     1           STALON,IC,ND1,NSTA,IPACK,ND5,MINPK,
     2           IS0,IS1,IS2,IS4,ND7,
     3           IPLAIN(1,1,4),PLAIN(4),NCHAR,
     4           XMISSP,XMISSS,LX,IOCTET,
     5           L3264B,L3264W,IER)
C
      IF(IER.NE.0)THEN
         WRITE(KFILDO,191)IER
 191     FORMAT(/' ****ERROR WRITING LONGITUDES',
     1           ' ON RANDOM ACCESS FILE IN U352 AT 191.  IER =',I4)
         CALL W3TAGE('MDL_SEQ2RA')
         STOP 191
      ENDIF
C
C        READ AND PROCESS UNIT NUMBER AND FILE NAME FOR TDLPACK 
C        INPUT.  FILE WILL BE OPENED AS 'OLD'.
C
 1915 CALL RDSNAM(KFILDI,KFILDO,KFILP,PAKNAM,IDUM,IDUM,1,NUMIN,
     1            'OLD','UNFORMATTED',IP,IER)
      ICOUNT=0
C
      IF(IER.NE.0)THEN
         WRITE(KFILDO,192)IER
 192     FORMAT(/' ****ERROR READING UNIT NUMBER AND NAME OF',
     1           ' PACKED INPUT DATA SET IN U352 AT 192.  IER =',I4)
         CALL W3TAGE('MDL_SEQ2RA')
         STOP 192
      ENDIF
C
      IF(NUMIN.EQ.0)THEN
         WRITE(KFILDO,1920)
 1920    FORMAT(/' INPUT DATA SET LIST EXHAUSTED.') 
         GO TO 300 
      ENDIF     
C
      WRITE(KFILDO,1921)KFILP,PAKNAM
 1921 FORMAT(/' PACKED INPUT DATA SET, UNIT AND NAME.  ',I4,2X,A60)
C
C        READ LIST OF IDS TO WRITE.
C
      STATE='195 '
      NVRBL=1
 194  READ(KFILDI,195,IOSTAT=IOS,ERR=900,END=204)
     1     (ID(J,NVRBL),J=1,4)
C        NOTE THAT A TERMINATOR IS NOT REQUIRED.  HOWEVER, IF
C        MULTIPLE FILES ARE TO BE INPUT, THE TERMINATOR IS REQUIRED.
 195  FORMAT(I9,3I10)
C
      IF(ID(1,NVRBL).NE.999999)THEN
         NVRBL=NVRBL+1
         IF(NVRBL.LE.ND4)GO TO 194
C
         WRITE(KFILDO,200)ND4
 200     FORMAT(/' ****ND4 =',I4,' NOT LARGE ENOUGH TO HOLD IDS',
     1           ' AND TERMINATOR IN U352 AT 200.  IDS READ ARE:',/
     2          ('    ',4I11))
         CALL W3TAGE('MDL_SEQ2RA')
         STOP 200
C
      ENDIF
C
 204  NVRBL=NVRBL-1
C        THIS IS THE END OF THE VARIABLE IDS BEING READ.
C        RESET IMATCH FOR THIS INPUT LIST.
      DO 2041 L=1,NVRBL
         IMATCH(L)=0
 2041 CONTINUE
C
C        WRITE THE IDS OF THE DATA TO PUT ONTO THE RANDOM
C        ACCESS FILE.
C
      WRITE(KFILDO,205)NVRBL,((ID(J,L),J=1,4),L=1,NVRBL)
 205  FORMAT(/' ',I4,' VARIABLES TO WRITE TO RANDOM ACCESS FILE',/
     1       (7X,4I11))
C
C        READ THE DIRECTORY RECORD FROM THE PACKED INPUT,
C        COMPARE WITH THE DIRECTORY LIST, AND FORM A CORRESPONDENCE
C        TABLE IN INDEX( ) BETWEEN THE OUTPUT AND INPUT.
C
      STATE='205 '
      READ(KFILP,IOSTAT=IOS,ERR=900,END=235)
     1              (NBYTES(J),J=1,L3264W),
     2              (CCALLD(J),J=1,MIN(ND1,NBYTES(L3264W)/8))
C        CCALLD( ) CONTAINS THE DIRECTORY RECORD.  EACH CALL LETTERS
C        IS 8 BYTES, NO MATTER WHICH MACHINE.
C        THE RECORD CONSISTS OF AN INITIAL 64 BITS CONTAINING THE NUMBER
C        OF BYTES FOLLOWING.  FOR A 32-BIT MACHINE, THIS IS TWO WORDS.
C
      NWORDS=NBYTES(L3264W)/8
C        NWORDS IS THE NUMBER OF CALL LETTERS NOW IN CCALLD( ).
C
      IF(NWORDS.GT.ND1)THEN
         WRITE(KFILDO,2055)ND5,NWORDS
 2055    FORMAT(/' ****ERROR IN U352 AT 2055.',
     1           '  ND1 MUST BE INCREASED FROM',I8,' TO GE',I8)
         CALL W3TAGE('MDL_SEQ2RA')
         STOP 2055
C
      ENDIF
C
C        FORM THE CORRESPONDENCE TABLE IN INDEX( ).
C 
      IFIRST=0
C
      DO 210 J=1,NSTA
C
      DO 209 K=1,NWORDS
C
      IF(CCALL(J,1).EQ.CCALLD(K))THEN
         INDEX(J)=K
         GO TO 210
      ENDIF
 209  CONTINUE
C
C        A DROP THROUGH HERE MEANS STATION WAS NOT FOUND.
C
      INDEX(J)=99999999
      IFIRST=IFIRST+1
      IF(IFIRST.EQ.1)WRITE(KFILDO,206)
 206  FORMAT(/' ****STATIONS ON OUTPUT NOT ON INPUT')
      WRITE(KFILDO,207)IFIRST,CCALL(J,1)
 207  FORMAT('    ',I4,2X,A8)
C
 210  CONTINUE
C
D     WRITE(KFILDO,212)NSTA,(CCALL(J,1),J=1,NSTA)
D212  FORMAT(/' 'I4,' STATIONS WRITTEN'/(10(' 'A8)))
D     WRITE(KFILDO,213)NWORDS,(CCALLD(J),J=1,NWORDS)
D213  FORMAT(/' 'I4' STATIONS ON INPUT'/(10(' 'A8)))
D     WRITE(KFILDO,214)NSTA,(INDEX(J),J=1,NSTA)
D214  FORMAT(/' 'I4,' INDEX VALUES'/(10(' 'I8)))
      WRITE(KFILDO,211)
 211  FORMAT(' ')
C
 215  STATE='215 '
      READ(KFILP,IOSTAT=IOS,ERR=900,END=235)
     1              (NBYTES(J),J=1,L3264W),
     2              (IPACK(J),J=1,MIN(ND5,NBYTES(L3264W)*8/L3264B))
C        IPACK( ) CONTAINS THE PACKED RECORD.
C        THE RECORD CONSISTS OF AN INITIAL 64 BITS CONTAINING THE NUMBER
C        OF BYTES FOLLOWING.  FOR A 32-BIT MACHINE, THIS IS TWO WORDS.
C
      LWORDS=NBYTES(L3264W)*8/L3264B
C        NOTE THAT LWORDS IS NOT THE NUMBER OF VALUES, BUT THE SIZE
C        OF THE ARRAY NEEDED TO HOLD THE PACKED RECORD.
C
      IF(LWORDS.GT.ND5)THEN
         WRITE(KFILDO,230)ND5,LWORDS
 230     FORMAT(/' ****ERROR IN U352 AT 230.',
     1           '  ND5 MUST BE INCREASED FROM',I8,' TO GE',I8)
         CALL W3TAGE('MDL_SEQ2RA')
         STOP 230
C
      ENDIF
C
      GO TO 237
C
 235  WRITE(KFILDO,236)
 236  FORMAT(/' END OF FILE READING PACKED DATA.',
     1        '  READ ANOTHER INPUT FILE NAME.')
      CLOSE(UNIT=KFILP)
C        OPEN FILE IS CLOSED BEFORE ANOTHER IS READ.
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C        CHECK IMATCH AND ALERT USER TO ANY IDS NOT FOUND
      DO 2362 L=1,NVRBL
         IF(IMATCH(L).EQ.0) WRITE(KFILDO,2361) (ID(J,L),J=1,4)
 2361    FORMAT(/' ****WARNING, ID NOT FOUND:  ',4I11)
 2362 CONTINUE
C
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
      GO TO 1915
C
C        ONLY ONE DIRECTORY RECORD IS ACCOMMODATED ON THE PACKED
C        INPUT FILE.
C
 237  IF(L3264B.EQ.32)THEN
C           FOR A 32-BIT MACHINE, IPACK(5) HOLDS THE DATE/TIME OF THE
C           RECORD, WHICH IS WHERE THE TRAILER INDICATOR IS.
         IDATE=IPACK(5)
C
      ELSE
C           FOR A 64-BIT MACHINE, THE LEFT HALF OF IPACK(3) HOLDS
C           THE DATE/TIME OF THE RECORD.
         LOC=3
         IPOS=1
         CALL UNPKBG(KFILDO,IPACK,ND5,LOC,IPOS,IDATE,32,L3264B,IER,*238)
      ENDIF
C
      GO TO 2385
C
 238  WRITE(KFILDO,2381)IER
 2381 FORMAT(/' ****ERROR UNPACKING DATE OF DATA IN U352 AT 2381,',
     1        ' IER =',I4)
      CALL W3TAGE('MDL_SEQ2RA')
      STOP 2381
C
 2385 IF(IDATE.EQ.9999)THEN
         WRITE(KFILDO,239)
 239     FORMAT(/' TRAILER RECORD ENCOUNTERED ON PACKED INPUT.',
     1           '  READ ANOTHER INPUT FILE NAME.')
         CLOSE(UNIT=KFILP)
C           OPEN FILE IS CLOSED BEFORE ANOTHER IS READ.
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C        CHECK IMATCH AND ALERT USER TO ANY IDS NOT FOUND
      DO 2392 L=1,NVRBL
         IF(IMATCH(L).EQ.0) WRITE(KFILDO,2391) (ID(J,L),J=1,4)
 2391    FORMAT(/' ****WARNING, ID NOT FOUND:  ',4I11)
 2392 CONTINUE
C
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
         GO TO 1915
      ENDIF
C
      IF(L3264B.EQ.32)THEN
         IPA6=IPACK(6)
         IPA7=IPACK(7)
         IPA8=IPACK(8)
         IPA9=IPACK(9)
C
      ELSE
         LOC=3
         IPOS=33
         CALL UNPKBG(KFILDO,IPACK,ND5,LOC,IPOS,IPA6,32,L3264B,IER,*241)
         CALL UNPKBG(KFILDO,IPACK,ND5,LOC,IPOS,IPA7,32,L3264B,IER,*241)
         CALL UNPKBG(KFILDO,IPACK,ND5,LOC,IPOS,IPA8,32,L3264B,IER,*241)
         CALL UNPKBG(KFILDO,IPACK,ND5,LOC,IPOS,IPA9,32,L3264B,IER,*241)
      ENDIF
C
      GO TO 243
C
 241  WRITE(KFILDO,242)IER
 242  FORMAT(/' ****ERROR UNPACKING IDS OF DATA IN U352 AT 242,',
     1        ' IER =',I4)
      CALL W3TAGE('MDL_SEQ2RA')
      STOP 242
C      
C        DETERMINE WHETHER THE DATA ARE TO BE WRITTEN.
C
 243  DO 245 L=1,NVRBL
         IF(IPA6.EQ.ID(1,L).AND.
     1      IPA7.EQ.ID(2,L).AND.
     2      IPA8.EQ.ID(3,L).AND.
     3      IPA9.EQ.ID(4,L)) THEN
C        THERE IS A MATCH.
            IMATCH(L)=1
            GO TO 2460
         ENDIF
C
 245  CONTINUE
C
C        D-COMMENTED THIS VOLUMINOUS OUTPUT
C
D     WRITE(KFILDO,246)IPA6,IPA7,IPA8,IPA9
D246  FORMAT(' DID NOT WRITE TO RANDOM ACCESS FILE DATA FOUND ON',
D    1       ' PACKED INPUT  ',4I11)
      GO TO 215
C
C        MUST UNPACK THE DATA AND REPACK IT BECAUSE THE 
C        INPUT AND OUTPUT LISTS MAY NOT MATCH.  (IF THERE
C        WERE AN EXACT MATCH BETWEEN INPUT AND OUTPUT, THIS
C        WOULD NOT BE NECESSARY, BUT IS NOT ACCOMMODATED.)
C     
 2460 CALL UNPACK(KFILDO,IPACK,IWORK,DATA,ND5,
     1            IS0,IS1,IS2,IS4,ND7,MISSPX,MISSSX,
     2            2,L3264B,IER)
C
      IF(IER.NE.0)THEN
         WRITE(KFILDO,247)IER
 247     FORMAT(/' ****ERROR IER =',I5,' UNPACKING DATA.',
     1           '  STOP IN U352 AT 247.') 
         CALL W3TAGE('MDL_SEQ2RA')
         STOP 247
      ENDIF
C
      DO 248 J=1,NSTA
      IF(INDEX(J).EQ.99999999)THEN
         DATA1(J)=9999.
      ELSE
         DATA1(J)=DATA(INDEX(J))
      ENDIF
C
 248  CONTINUE
C
D     WRITE(KFILDO,2480)(DATA(J),J=1,NWORDS)
D     WRITE(KFILDO,2480)(DATA1(J),J=1,NSTA)
D2480 FORMAT(' '10F10.3)
      XMISSP=MISSPX
      XMISSS=MISSSX
      CALL PACK1D(KFILDO,DATA1,IWORK,NSTA,
     1            IS0,IS1,IS2,IS4,ND7,XMISSP,XMISSS,IPACK,ND5,
     2            MINPK,LX,IOCTET,L3264B,IER)
C
      IF(IER.NE.0)THEN
         WRITE(KFILDO,249)IER
 249     FORMAT(/' ****ERROR IER =',I5,'  PACKING DATA.',
     1           '  STOP IN U352 AT 249.') 
         CALL W3TAGE('MDL_SEQ2RA')
         STOP 249
      ENDIF
C
C        WRITE THE DATA WITH REPLACEMENT.
C    
      CALL WRTDLM(KFILDO,KFILX,CFILX,ID(1,L),IPACK,(IOCTET*8)/L3264B,
     1            2,0,L3264B,IER)
C
      IF(IER.NE.0)THEN
         WRITE(KFILDO,251)IER
 251     FORMAT(/' ****ERROR IER =',I5,' WRITING DATA',
     1           ' ON RANDOM ACCESS FILE.  STOP IN U352 AT 251.')
         CALL W3TAGE('MDL_SEQ2RA')
         STOP 251
      ENDIF
C
      WRITE(KFILDO,255)(ID(J,L),J=1,4)
 255  FORMAT(' WRITING DATA TO RANDOM ACCESS FILE',4I11)
      ICOUNT=ICOUNT+1
      IF(ICOUNT.LT.NVRBL)GO TO 215 
C        READ AND PROCESS ANOTHER RECORD IF MORE ARE
C        INDICATED BY THE VARIABLE LIST.
      GO TO 1915
C        READ ANOTHER FILE NAME IF AVAILABLE.   
C
C        CLOSE RANDOM ACCESS FILE.
C
 300  CALL CLFILM(KFILDO,KFILX,IER)
      WRITE(KFILDO,301)
 301  FORMAT(' ')
      CALL TIMPR(KFILDO,KFILDO,'END U352            ')
      CALL W3TAGE('MDL_SEQ2RA')
      STOP   
C
 900  CALL IERX(KFILDO,KFILDO,IOS,'U352  ',STATE)
      WRITE(KFILDO,901)
 901  FORMAT(' ')
      CALL TIMPR(KFILDO,KFILDO,'END U352            ')
      CALL W3TAGE('MDL_SEQ2RA')
      STOP 900 
      END
           
