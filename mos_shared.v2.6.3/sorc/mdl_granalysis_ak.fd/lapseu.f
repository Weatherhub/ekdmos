      SUBROUTINE LAPSEU(KFILDO,KFIL10,IP14,ID,IDPARS,
     1                  CCALL,NAME,LNDSEA,
     2                  XDATA,XLAPSE,ELEVLO,ELEVHI,ELEV,NSTA,ND1,
     3                  ALATL,ALONL,XPL,YPL,NXL,NYL,BMESH,
     4                  NORUNS,LEVELS,
     5                  LSTORE,ND9,LITEMS,NDATE,
     6                  IS0,IS1,IS2,IS4,ND7,
     7                  IPACK,IWORK,DATA,ND5,
     8                  CORE,ND10,NBLOCK,NFETCH,MISTOT,NSLAB,
     9                  NPROJ,ORIENT,XLAT,L3264B,ISTOP,IER)
C
C        OCTOBER   2007   GLAHN   MDL   MOS-2000
C        OCTOBER   2007   GLAHN   MODIFIED ALGORITHM
C        OCTOBER   2007   GLAHN   CHANGED IF(L.EQ.1) TO IF(L.LE.4)
C                                 ABOVE DO 135
C        DECEMBER  2007   GLAHN   ADDED ISTOP(6) CAPABILITY
C        DECEMBER  2007   GLAHN   ADDED RETURN STATEMENT; UPDATED
C                                 ITABLE( , ); REMOVED 200 FOR
C                                 SMOOTHING IN 4TH WORD OF UP ID
C        FEBRUARY  2008   GLAHN   COMMENTS
C        MARCH     2008   GLAHN   REMOVED COMPUTATION DOWNWARD 
C        APRIL     2008   JCM     ADDED W3TAGE CALLS BEFORE STOPS
C
C        PURPOSE
C            TO COMPUTE A LAPSE RATE FOR EACH STATION OF THE VARIABLE
C            BEING ANALYZED FROM UPPER AIR DATA.  AVERAGE OF RUNS
C            (CYCLES) IS USED, BUT ONLY ONE LEVEL.  LEVEL IS USED
C            FOR PROBABILITY LEVELS AND WILL NEED SPECIAL TREATMENT.
C
C            THE LAPSE IS COMPUTED FROM THE FIRST LEVEL ABOVE THE
C            STATION ELEVATION ELEV( ) TO THE FIRST LEVEL ABOVE THE
C            HIGHEST GRIDPOINT TO CORRECT WITH THIS STATION
C            ELEVHI( ).  IT DOES NOT USE THE DATA TO ANALYZE.  THIS
C            MAY NOT WORK WELL IN INTENSE INVERSIONS.  PERHAPS THE
C            LOWEST LEVEL COULD BE THE AVERAGE OF WHAT IS NOW USED
C            AND THE STATION VALUE.
C
C            THE INTERPOLATION IS TO ALL STATIONS IN THE NSTA LIST,
C            NOT JUST THE ONES WITH DATA TO ANALYZE.  THIS COULD BE
C            TRIMMED TO ONLY INTERPOLATE FOR NON-MISSING AND 
C            NON-WATER POINTS WITH SOME EXTRA CODING.  FOR ALASKA,
C            THIS IS NOT WORTH THE EFFORT, AND LAPSEU IS NOT 
C            CURRENTLY USED FOR THE CONUS WHERE THE STATION LIST
C            IS LONG.
C
C           NOTE:  CURRENTLY ACCOMMODATES TEMPERATURE.  CONVERSION OF
C                  UNITS AT DO 153
C
C        DATA SET USE
C            KFILDO   - UNIT NUMBER OF OUTPUT (PRINT) FILE.  (OUTPUT)
C            KFIL10   - UNIT NUMBER FOR INTERNAL RANDOM ACCESS STORAGE.
C                       (INPUT/OUTPUT)
C            IP14     - UNIT NUMBER FOR WRITING COMPUTED LAPSE RATES.
C                       (OUTPUT)
C
C        VARIABLES
C              KFILDO = UNIT NUMBER OF OUTPUT (PRINT) FILE.  (INPUT)
C              KFIL10 = UNIT NUMBER FOR INTERNAL RANDOM ACCESS STORAGE.
C                       (INPUT)
C                IP14 = UNIT NUMBER FOR WRITING COMPUTED LAPSE
C                       RATES.  (INPUT)
C               ID(J) = ID OF VARIABLE BEING ANALYZED (J=1,4).
C                       (INPUT)
C           IDPARS(J) = THE PARSED, INDIVIDUAL COMPONENTS OF THE
C                       ID'S CORRESPONDING TO ID( )
C                       (J=1,15).  (INPUT)
C                       J=1--CCC (CLASS OF VARIABLE),
C                       J=2--FFF (SUBCLASS OF VARIABLE),
C                       J=3--B (BINARY INDICATOR),
C                       J=4--DD (DATA SOURCE, MODEL NUMBER),
C                       J=5--V (VERTICAL APPLICATION),
C                       J=6--LBLBLBLB (BOTTOM OF LAYER, 0 IF ONLY 
C                            1 LAYER),
C                       J=7--LTLTLTLT (TOP OF LAYER),
C                       J=8--T (TRANSFORMATION),
C                       J=9--RR (RUN TIME OFFSET, ALWAYS + AND BACK 
C                            IN TIME),
C                       J=10--OT (TIME APPLICATION),
C                       J=11--OH (TIME PERIOD IN HOURS),
C                       J=12--TAU (PROJECTION IN HOURS),
C                       J=13--I (INTERPOLATION TYPE),
C                       J=14--S (SMOOTHING INDICATOR), AND
C                       J=15--G (GRID INDICATOR).
C            CCALL(K) = 8-CHARACTER STATION CALL LETTERS (K=1,NSTA).
C                       (CHARACTER*8)  (INPUT)
C             NAME(K) = 20-CHARACTER STATION NAME (K=1,NSTA).
C                       (CHARACTER*20)  (INPUT)
C           LNDSEA(K) = LAND/SEA INFLUENCE FLAG FOR EACH STATION
C                       (K=1,ND1).
C                       0 = WILL BE USED FOR ONLY OCEAN WATER (=0)
C                           GRIDPOINTS.
C                       3 = WILL BE USED FOR ONLY INLAND WATER (=3)
C                           GRIDPOINTS.
C                       6 = WILL BE USED FOR BOTH INLAND WATER (=3)
C                           AND LAND (=9) GRIDPOINTS.
C                       9 = WILL BE USED FOR ONLY LAND (=9) GRIDPOINTS.
C                       (INPUT)
C        XDATA(K,J,L) = HOLDS THE DATA TO ANALYZE (K=1,NSTA)
C                       (J=2,NORUNS) (L=1,LEVELS).
C                       THE DATA FOR THE FIRST CYCLE, IF THERE IS
C                       MORE THAN ONE, IS IN COLUMN 2.  PROBABILITY
C                       LEVELS ARE IN THE 3RD DIMENSION.
C                       DATA ARE READ INTO COLUMNS J=2,NORUNS.  THE
C                       DATA TO ANALYZE ARE PUT INTO COLUMN J=1.
C                       (INPUT/OUTPUT)
C           XLAPSE(K) = CALCULATED LAPSE RATE IN UNITS OF THE VARIABLE
C                       BEING ANALYZED PER M. (K=1,KSTA).  THIS IS
C                       NEVER 9999, BUT RATHER 0 WHEN THERE IS NO
C                       LAPSE RATE CALCULATED.  (OUTPUT)
C           ELEVLO(K) = THE LOW ELEVATION ASSOCIATED WITH STATION
C                       CCALL(K) (K=1,NSTA).  (INPUT)
C           ELEVHI(K) = THE HIGH ELEVATION ASSOCIATED WITH STATION
C                       CCALL(K) (K=1,NSTA).  (INPUT)
C             ELEV(K) = ELEVATION OF STATIONS (K=1,NSTA).  (INPUT)
C                NSTA = NUMBER OF STATIONS OR LOCATIONS BEING DEALT
C                       WITH.  (INPUT)
C                 ND1 = MAXIMUM NUMBER OF STATIONS THAT CAN BE DEALT
C                       WITH.  (INPUT)
C               ALATL = NORTH LATITUDE OF LOWER LEFT CORNER POINT
C                       OF A GRID OF THE SIZE  NXL, NYL.  TRUNCATED
C                       TO TEN THOUSANDTHS OF DEGREES.  NOTE THAT THE
C                       MOS-2000 ARCHIVE IS ONLY TO THOUSANDTHS OF
C                       DEGREES.  (INPUT)
C               ALONL = WEST LONGITUDE OF LOWER LEFT CORNER POINT
C                       OF A  GRID OF THE SIZE  NXL, NYL.  TRUNCATED
C                       TO TEN THOUSANDTHS OF DEGREES.  NOTE THAT THE
C                       MOS-2000 ARCHIVE IS ONLY TO THOUSANDTHS OF
C                       DEGREES.  (INPUT)
C              XPL(K) = THE X POSITION FOR STATION K (K=1,NSTA) ON
C                       THE ANALYSIS GRID AREA AT THE MESH LENGTH 
C                       MESHB.  (INPUT)
C              YPL(K) = THE Y POSITION FOR STATION K (K=1,NSTA) ON
C                       THE ANALYSIS GRID AREA AT THE MESH LENGTH
C                       MESHB.  (INPUT)
C              NORUNS = NUMBER OF RUNS OR CYCLES TO INCLUDE IN AN
C                       ANALYSIS, ALL VERIFYING AT THE SAME TIME, 
C                       MAXIMUM OF 5.  (INPUT)
C              LEVELS = THE NUMBER OF PROBABILITY LEVELS TO ANALYZE.
C                       (INPUT)
C                 NXL = NUMBER OF GRIDPOINTS IN THE XI (LEFT TO RIGHT)
C                       DIRECTION.  (INPUT)
C                 NYL = NUMBER OF GRIDPOINTS IN THE YJ (BOTTOM TO TOP)
C                       DIRECTION.  (INPUT)
C               BMESH = MESH LENGTH OF THE CURRENT GRID.  (INPUT)
C         LSTORE(L,J) = THE ARRAY HOLDING INFORMATION ABOUT THE DATA 
C                       STORED (L=1,12) (J=1,LITEMS).  (INPUT/OUTPUT)
C                 ND9 = MAXIMUM NUMBER OF FIELDS STORED IN LSTORE( , ).
C                       SECOND DIMENSION OF LSTORE( , ).  (INPUT)
C              LITEMS = THE NUMBER OF ITEMS J IN LSTORE( ,L).  
C                       (INPUT/OUTPUT)
C               NDATE = THE DATE/TIME OF THE RUN.  (INPUT)
C              IS0(J) = MOS-2000 GRIB SECTION 0 ID'S (J=1,4).
C              IS1(J) = MOS-2000 GRIB SECTION 1 ID'S (J=1,21+).
C              IS2(J) = MOS-2000 GRIB SECTION 2 ID'S (J=1,12).
C              IS4(J) = MOS-2000 GRIB SECTION 4 ID'S (J=1,4).
C                 ND7 = DIMENSION OF IS0( ), IS1( ), IS2( ), AND IS4( ).
C                       (INPUT)
C            IPACK(J) = WORK ARRAY FOR GFETCH (J=1,ND5).  (INTERNAL)
C            IWORK(J) = WORK ARRAY FOR GFETCH (J=1,ND5).  (INTERNAL)
C             DATA(J) = WORK ARRAY FOR GFETCH (J=1,ND5).  (INTERNAL)
C                 ND5 = DIMENSION OF IPACK( ), WORK( ), AND DATA( ).
C                       (INPUT)
C             CORE(J) = SPACE ALLOCATED FOR SAVING PACKED GRIDPOINT 
C                       FIELDS (J=1,ND10).  WHEN THIS SPACE IS 
C                       EXHAUSTED, SCRATCH DISK WILL BE USED.  THIS IS 
C                       THE SPACE USED FOR THE MOS-2000 INTERNAL RANDOM 
C                       ACCESS SYSTEM.  (INPUT)
C                ND10 = THE MEMORY IN WORDS ALLOCATED TO THE SAVING OF 
C                       DATA CORE( ).  WHEN THIS SPACE IS EXHAUSTED,
C                       SCRATCH DISK WILL BE USED.  (INPUT)
C              NBLOCK = BLOCK SIZE IN WORDS OF INTERNAL MOS-2000 DISK
C                       STORAGE.  (INPUT)
C              NFETCH = INCREMENTED EACH TIME DATA ARE FETCHED BY
C                       GFETCH.  IT IS A RUNNING COUNT FROM THE
C                       BEGINNING OF THE PROGRAM.  THIS COUNT 
C                       IS MAINTAINED IN CASE THE USER NEEDS IT
C                       (DIAGNOSTICS, ETC.).  (OUTPUT)
C              MISTOT = RUNNING TOTAL OF RETRIEVED GRIDS WITH ONE OR
C                       MORE MISSING VALUES.  (INPUT/OUTPUT)
C               NSLAB = SLAB OF THE GRID CHARACTERISTICS.  RETURNED
C                       BY GFETCH.  USED FOR CHECKING FOR EQUAL
C                       CHARACTERISTICS OF GRIDS READ.  (OUTPUT)
C               NPROJ = NUMBER OF MAP PROJECTION TO WHICH THIS GRID
C                       APPLIES.
C                       3 = LAMBERT.
C                       5 = POLAR STEREOGRAPHIC.
C                       7 = MERCATOR.
C                       (INPUT)
C              ORIENT = ORIENTATION OF GRID IN WEST LONGITUDE.  (INPUT)
C                XLAT = NORTH LATITUDE AT WHICH GRIDLENGTH IS SPECIFIED
C                       IN DEGREES.  (INPUT)
C              L3264B = INTEGER WORD LENGTH IN BITS OF MACHINE BEING
C                       USED (EITHER 32 OR 64).  (INPUT)
C            ISTOP(J) = ISTOP(1)--IS INCREMENTED BY 1 EACH TIME AN ERROR 
C                                 OCCURS.
C                       ISTOP(3)--IS INCREMENTED WHEN A DATA RECORD 
C                                 COULD NOT BE FOUND.
C                       (INPUT/OUTPUT)
C                 IER = STATUS RETURN.
C                         0 = GOOD RETURN.
C                       103 = VARIABLE NOT ACCOMMODATED.
C                       777 = FATAL ERROR.
C              NRESET = THE NUMBER OF COMPUTED LAPSE RATES DEEMED OUT
C                       OF REASONABLE RANGE AND SET TO ZERO.
C                       (INTERNAL)
C              XAXLAP = THE MAXIMUM COMPUTED LAPSE RATE.  (INTERNAL)
C              XINLAP = THE MINIMUM COMPUTED LAPSE RATE.  (INTERNAL)
C              KMINUS = NUMBER OF MINUS LAPSE RATES. (INTERNAL)
C               KZERO = NUMBER OF ZERO LAPSE RATES. (INTERNAL)
C               KPLUS = NUMBER OF PLUS LAPSE RATES. (INTERNAL)
C              HMINUS = THE LARGEST MINUS LAPSE RATE TOLERATED.
C                       IF EXCEEDED, XLAPSE( ) SET TO 0.  (INTERNAL)
C               HPLUS = THE LARGEST PLUS LAPSE RATE TOLERATED.
C                       IF EXCEEDED, XLAPSE( ) SET TO 0.  (INTERNAL)
C         ITABLE(J,M) = DATA ACCESS;
C                       J=1--CCCFFFB00 OF THE VARIABLE BEING ANALYZED
C                       J=2--2ND ID WORD OF THE VARIABLE BEING ANALYZED
C                       J=3--CCCFFF000 OF THE UPPER FIELD TO ACCESS FOR
C                            THE VARIABLE BEING ANALYZED.
C                       (M=1,NDIM)  (INTERNAL)
C                NDIM = THE NUMBER OF VARIABLES FOR WHICH THE LAPSE
C                       CAN BE CALCULATED.  SET BY PARAMETER.
C                       (INTERNAL)
C           JTABLE(M) = THE LEVELS OF UPPER AIR DATA THAT CAN
C                       BE ACCESSED FOR COMPUTING THE LAPSE RATE
C                       (M=1,JDIM).  (INTERNAL)
C           AVXDAT(K) = THE AVERAGE OF THE CYCLES IN XDATA(K,M,1), 
C                       (K=1,NSTA), M=2,LEVELS+1).  (AUTOMATIC)
C                       (INTERNAL)
C        1         2         3         4         5         6         7 X
C        NONSYSTEM SUBROUTINES USED 
C            NONE
C
      PARAMETER (NDIM=4)
      PARAMETER (JDIM=12)
C
      CHARACTER*8 CCALL(ND1)
      CHARACTER*20 NAME(ND1)
C
      DIMENSION ID(4),IDPARS(15)
      DIMENSION LNDSEA(NSTA),ELEV(NSTA),
     1          XLAPSE(NSTA),XPL(NSTA),YPL(NSTA),
     2          ELEVHI(NSTA),ELEVLO(NSTA)
      DIMENSION AVXDAT(NSTA)
C        AVXDAT( ) IS AN AUTOMATIC ARRAY.
      DIMENSION XDATA(ND1,NORUNS+1,LEVELS)
      DIMENSION IPACK(ND5),IWORK(ND5),DATA(ND5)
      DIMENSION IS0(ND7),IS1(ND7),IS2(ND7),IS4(ND7)
      DIMENSION LSTORE(12,ND9)
      DIMENSION CORE(ND10)
      DIMENSION ISTOP(6),LD(4)
      DIMENSION ITABLE(3,NDIM),JTABLE(JDIM)
C
      ALLOCATABLE VDATA(:,:),HDATA(:,:)
C
      DATA IFIRST/0/
      DATA HMINUS/-.1/,
     1     HPLUS/+.1/
      DATA ITABLE/222020000,000000000,002000000,
     1            223020000,000000000,002000000,
     2            222120000,000000000,002000000,   
     3            222220000,000000000,002000000/
C        THE ABOVE ARE IN ORDER:
C           HOURLY TEMPERATURE,
C           HOURLY DEW POINT,     TEMPERATURE IS USED FOR DEW POINT
C           MAX TEMPERATURE,      TEMPERATURE HERE YET FOR FG   
C           MIN TEMPERATURE.
C        FOR EACH,THE UPPER GRADIENT OF TEMPERATURE IS USED.
C*********************************************************************
C        NOTE THAT THE UNITS CONVERSIONS ARE KEYED TO THE ORDER ABOVE
C        AT DO 135.
C*********************************************************************
      DATA JTABLE/   2,
     1            1000,
     2             975,
     3             950,
     4             925,
     5             900,
     6             850,
     7             800,
     8             750,
     9             700,
     A             600,
     B             500/
C
D     CALL TIMPR(KFILDO,KFILDO,'START LAPSEU        ')
      IER=0
C
D     WRITE(KFILDO,101)NDATE,ND5,ND7,ND10,ND9,ND1,NSTA,
D    1                 NPROJ,ORIENT,XLAT,BMESH,L3264B
D101  FORMAT(/,' AT 101 IN LAPSEU--',
D    1         'NDATE,ND5,ND7,ND10,ND9,ND1,NSTA,',
D    2         'NPROJ,ORIENT,XLAT,L3264B',/,
D    3         I12,7I8,2F10.4,F10.6,I4)
C
CCC      WRITE(KFILDO,1520)(K,CCALL(K),NAME(K),ELEV(K),
CCC     1                  ELEVHI(K),ELEVLO(K),XPL(K),YPL(K),LNDSEA(K),
CCC     2                  K=1,NSTA)
CCC 1520 FORMAT(/' AT 1520--K,CCALL(K),NAME(K),ELEV(K),',
CCC     1        'ELEVHI(K),ELEVLO(K),XPL(K),YPL(K),LNDSEA(K)',/,
CCC     2        (I6,2X,A8,2X,A20,5F8.2,I5))
C
C        DETERMINE WHETHER THIS VARIABLE IS ACCOMMODATED.
C
      DO 102 L=1,NDIM
C
      IF(ID(1)/100.EQ.ITABLE(1,L)/100.AND.
     1   ID(2).EQ.ITABLE(2,L))GO TO 104
C        THIS DEFINES L.  THE DD IS NOT CHECKED.
C
 102  CONTINUE
C
C        DROP THROUGH HERE MEANS THE ID WAS NOT FOUND.
C
      ISTOP(1)=ISTOP(1)+1
      IER=103
      WRITE(KFILDO,103)(ID(J),J=1,4),IER
 103  FORMAT(/' ****VARIABLE ',I9.9,I10.9,I10.9,I4.3,' NOT',
     1        ' ACCOMMODATED IN SUBROUTINE LAPSEU.  IER =',I3)
      GO TO 250
C      
 104  KZERO=0
      KMINUS=0
      KPLUS=0
C
      NRESET=0
C        NRESET COUNTS THE NUMBER OF COMPUTED LAPSE RATES
C        DEEMED OUT OF REASONABLE RANGE AND SET TO ZERO.
      XAXLAP=0.
C        XAXLAP IS THE MAXIMUM POSITIVE COMPUTED LAPSE RATE.
      XINLAP=0.
C        XINLAP IS THE MINIMUM NEGATIVE COMPUTED LAPSE RATE.
C
      ALLOCATE (VDATA(NSTA,JDIM),HDATA(NSTA,JDIM),STAT=IOS)
C
      IF(IOS.EQ.1)THEN
         WRITE(KFILDO,120)
 120     FORMAT(/' ****ALLOCATION OF VDATA( ) OR HDATA( )',
     1           ' FAILED IN LAPSEU AT 2865.',
     2           '  ARRAY ALREADY ALLOCATED.')
         CALL W3TAGE('LAPSEU')
         STOP 120
      ELSEIF(IOS.EQ.2)THEN
         WRITE(KFILDO,121)
 121     FORMAT(/' ****ALLOCATION OF VDATA( ) OR HDATA( )',
     1           ' FAILED IN LAPSEU AT 121.',
     2           '  ARRAY NOT ALLOCATED.')
         CALL W3TAGE('LAPSEU')
         STOP 121
      ENDIF
C
C        READ UPPER AIR DATA AND COMPUTE VALUE OF ELEMENT AND
C        ITS HEIGHT AT EACH STATION.  THE ELEVATIONS FOR
C        WHICH DATA ARE AVAILABLE ARE IN JTABLE
C
      DO 150 J=1,JDIM
C
C        READ THE ELEMENT VALUES.
C        FORM THE ELEMET ID IN LD( ).
C
      LD(1)=ITABLE(3,L)+IDPARS(4)
C
      IF(J.EQ.1)THEN
         LD(1)=LD(1)+1000
C           THE 2-M TEMPERATURE HAS A FFF = 001.
      ENDIF
C
      LD(2)=JTABLE(J)
      LD(3)=ID(3)
      LD(4)=ID(4)
      CALL GFETCH(KFILDO,KFIL10,LD,7777,LSTORE,ND9,LITEMS,
     1            IS0,IS1,IS2,IS4,ND7,IPACK,IWORK,DATA,ND5,
     2            NWORDS,NPACK,NDATE,NTIMES,CORE,ND10,
     3            NBLOCK,NFETCH,NSLAB,MISSP,MISSS,L3264B,1,IER)
      IF(MISSP.NE.0)MISTOT=MISTOT+1
C
      IF(IER.NE.0)THEN
         LD(4)=ID(4)+200
C           THE 200 IS AN ARTIFACT OF THE DATA BEING INTERPOLATED
C           IN U201 TO GET THESE STATION VALUES.  SOME TEST
C           DATA HAS THE 200, SOME DOES NOT.
         CALL GFETCH(KFILDO,KFIL10,LD,7777,LSTORE,ND9,LITEMS,
     1               IS0,IS1,IS2,IS4,ND7,IPACK,IWORK,DATA,ND5,
     2               NWORDS,NPACK,NDATE,NTIMES,CORE,ND10,
     3               NBLOCK,NFETCH,NSLAB,MISSP,MISSS,L3264B,1,IER)
         IF(MISSP.NE.0)MISTOT=MISTOT+1
C
C           IF THIS GRID COULD NOT BE OBTAINED OR THE GRID
C           CHARACTERISTICS WERE NOT WHAT WAS EXPECTED, COUNT
C           IT AS A GRID THAT COULD NOT BE OBTAINED BY
C           INCREMENTING ISTOP(3).
C
         IF(IER.NE.0)THEN
            GO TO 900
         ENDIF
C
      ENDIF
C
C        CHECK GRID PARAMETERS.
C
      CALL CKGRID(KFILDO,LD,NPROJ,ORIENT,XLAT,IS2,ND7,IER)
C
      IF(IER.NE.0)THEN
         GO TO 900
      ENDIF
C
      IF(IS2(3).NE.NXL.OR.IS2(4).NE.NYL.OR.
     1   IS2(5).NE.NINT(ALATL*10000).OR.IS2(6).NE.NINT(ALONL*10000).OR.
     2   ABS(IS2(8)-BMESH*1000000.).GT.1)THEN
C           THE LATITUDE AND LONGITUDE SHOULD BE CORRECT TO 4 PLACES;
C           THE MESH LENGTH COULD BE OFF BY A DIGIT.
          WRITE(KFILDO,130)(LD(N),N=1,4),IS2(3),NXL,IS2(4),NYL,
     1                     IS2(5),ALATL,IS2(6),ALONL,IS2(8),BMESH
 130      FORMAT(/,' GRID CHARACTERISTICS FOR VARIABLE ',4I11,
     1             ' DO NOT MATCH IN LAPSEU AT 130.',/,
     2             ' IS2(3) =',I8,'    NXL   = ',I10,/,
     3             ' IS2(4) =',I8,'    NYL   = ',I10,/,
     4             ' IS2(5) =',I8,'    ALATL = ',F10.4,/,
     5             ' IS2(6) =',I8,'    ALONL = ',F10.4,/,
     6             ' IS2(8) =',I8,'   BMESH  = ',F10.6)
         GO TO 900
      ENDIF
C
C        INTERPOLATE TO EACH STATION.
C
      CALL INTRPL(KFILDO,DATA,NXL,NYL,XPL,YPL,NSTA,VDATA(1,J))
C        NOTE THAT INTERPOLATION IS TO ALL STATIONS, NOT JUST THE
C        ONES WITH DATA TO ANALYZE.
C     
C        CONVERT UNITS AS APPROPRIATE.
C
      IF(L.LE.4)THEN
C           NOTE THAT L DEPENDS ON THE ORDER OF VARIABLES IN
C           ITABLE( , ).  THE FIRST 4 ARE TEMPERATURE.
C
C           BELOW FOR KELVIN TO FAHRENHEIT.
C
         DO 135 K=1,NSTA
            IF(NINT(VDATA(K,J)).EQ.9999)GO TO 135
            VDATA(K,J) =(VDATA(K,J)-273.15)*1.8+32.  
 135     CONTINUE
C
      ENDIF
C
C        READ THE HEIGHTS.
C
      IF(J.EQ.1)THEN
C
C        THE FIRST LEVEL IS A CONSTANT 2 M.
C
         DO 137 K=1,NSTA
         HDATA(K,J)=2.
 137     CONTINUE
C
         GO TO 150
C
      ENDIF
C
      LD(1)=001000000+IDPARS(4)
      CALL GFETCH(KFILDO,KFIL10,LD,7777,LSTORE,ND9,LITEMS,
     1            IS0,IS1,IS2,IS4,ND7,IPACK,IWORK,DATA,ND5,
     2            NWORDS,NPACK,NDATE,NTIMES,CORE,ND10,
     3            NBLOCK,NFETCH,NSLAB,MISSP,MISSS,L3264B,1,IER)
      IF(MISSP.NE.0)MISTOT=MISTOT+1
C
C        IF THIS GRID COULD NOT BE OBTAINED OR THE GRID CHARACTERISTICS
C        WERE NOT WHAT WAS EXPECTED, COUNT IT AS A GRID THAT COULD 
C        NOT BE OBTAINED BY INCREMENTING ISTOP(3).
C
      IF(IER.NE.0)THEN
         GO TO 900
      ENDIF
C
C        CHECK GRID PARAMETERS.
C
      CALL CKGRID(KFILDO,LD,NPROJ,ORIENT,XLAT,IS2,ND7,IER)
C
      IF(IER.NE.0)THEN
         GO TO 900
      ENDIF
C
      IF(IS2(3).NE.NXL.OR.IS2(4).NE.NYL.OR.
     1   IS2(5).NE.NINT(ALATL*10000).OR.IS2(6).NE.NINT(ALONL*10000).OR.
     2   ABS(IS2(8)-BMESH*1000000.).GT.1)THEN
C           THE LATITUDE AND LONGITUDE SHOULD BE CORRECT TO 4 PLACES;
C           THE MESH LENGTH COULD BE OFF BY A DIGIT.
          WRITE(KFILDO,140)(LD(N),N=1,4),IS2(3),NXL,IS2(4),NYL,
     1                     IS2(5),ALATL,IS2(6),ALONL,IS2(8),BMESH
 140      FORMAT(/,' GRID CHARACTERISTICS FOR VARIABLE ',4I11,
     1             ' DO NOT MATCH IN LAPSEU AT 130.',/,
     2             ' IS2(3) =',I8,'    NXL   = ',I10,/,
     3             ' IS2(4) =',I8,'    NYL   = ',I10,/,
     4             ' IS2(5) =',I8,'    ALATL = ',F10.4,/,
     5             ' IS2(6) =',I8,'    ALONL = ',F10.4,/,
     6             ' IS2(8) =',I8,'   BMESH  = ',F10.6)
         GO TO 900
      ENDIF
C
C        INTERPOLATE TO EACH STATION.
C
      CALL INTRPL(KFILDO,DATA,NXL,NYL,XPL,YPL,NSTA,HDATA(1,J))
C        NOTE THAT INTERPOLATION IS TO ALL STATIONS, NOT JUST THE
C        ONES WITH DATA TO ANALYZE.
C
D     WRITE(KFILDO,143)(LD(N),N=1,4),
D    1                 (N,CCALL(N),VDATA(N,J),HDATA(N,J),N=1,NSTA)
D143  FORMAT(/,' DATA AND HEIGHTS FOR STATIONS FOR VARIABLE ',
D    1        I12.9,I10.9,I9.8,I4.3,/,('  ',I4,2X,A8,2F8.1))

 150  CONTINUE
C
C        AT THIS POINT, WE HAVE THE HEIGHTS AND VARIABLE VALUES
C        IN VDATA( , ) AND HDATA( , ) FOR EACH STATION.  NOW
C        NEED TO TAKE A VALUE AT THE HIGHEST OR LOWEST ELEVATION
C        IN ELEVHI( ) AND ELEVLO( ), WHICH ONE DEPENDING ON THE
C        LARGEST ABSOLUTE VALUE OF ELEV(K)-ELEVLO(K) AND
C        ELEV(K)-ELEVHI( ).  ALL HEIGHTS ARE IN METERS.
C
      DO 200 K=1,NSTA
D     WRITE(KFILDO,1521)K,CCALL(K),NAME(K),ELEV(K),
D    1                  ELEVHI(K),ELEVLO(K),XPL(K),YPL(K),LNDSEA(K)
D1521 FORMAT(/' AT 1521 IN LAPSEU--K,CCALL(K),NAME(K),ELEV(K),',
D    1        'ELEVHI(K),ELEVLO(K),XPL(K),YPL(K),LNDSEA(K)',/,
D    2        I6,2X,A8,2X,A20,5F8.2,I5)
C
C        FIND SUM OF DATA IN XDATA(K,M,1).
C
      AVXDAT(K)=0.
      NC=0
C
      DO 1525 M=1,NORUNS
C
      IF(XDATA(K,M+1,1).LT.9998.9)THEN
         AVXDAT(K)=AVXDAT(K)+XDATA(K,M+1,1)
         NC=NC+1
      ENDIF
C
 1525 CONTINUE
C
C        FIND AVERAGE.  WHEN NC = 1, AVXDAT IS THE VALUE.
C
      IF(NC.GT.1)THEN
         AVXDAT(K)=AVXDAT(K)/NC
      ELSEIF(NC.EQ.0)THEN
         AVXDAT(K)=9999.
      ENDIF
C
C        SET LAPSE FOR WATER POINTS = 9999. FOR NOW.
C
      IF(LNDSEA(K).LT.9)THEN
D        WRITE(KFILDO,153)K,CCALL(K)
D153     FORMAT(/' AT 153, WATER STATION--K,CCALL',I4,2X,A8)
         XLAPSE(K)=9999.
C           THIS WILL LATER BE SET TO 0.
         GO TO 200
      ENDIF
C
C        CHECK FOR MISSING DATA.  WHEN FOUND SET LAPSE = 9999. FOR NOW.
C
      IF(ELEVHI(K).GT.9998..OR.
     1     ELEV(K).GT.9998..OR.
     2     VDATA(K,1).GT.9998.OR.
     3     AVXDAT(K).GT.9998.)THEN
         XLAPSE(K)=9999.
C           THIS WILL LATER BE SET TO 0.
D        WRITE(KFILDO,154)ELEVHI(K),ELEV(K),VDATA(K,1),HDATA(K,1),
D    1            AVXDAT(K)
D154     FORMAT(/' AT 154 IN LAPSEU--ELEVHI(K),ELEV(K),VDATA(K,1),',
D    1           'HDATA(K,1),AVXDAT(K)',5F10.2)
         GO TO 200
      ENDIF 
C
C        THE LAPSE CAN BE COMPUTED ABOVE THE STATION (THE USUAL)
C        OR BELOW THE STATION, DEPENDING ON THE STATION'S ELEVATION.
C        (ONLY THE ONE ABOVE IS IMPLEMENTED.)
C
      HIDIF=ELEVHI(K)-ELEV(K)
      LODIF=ELEVLO(K)-ELEV(K)
C
      HLOW=9999.
      HHIGH=9999.
C
      DO 156 J=1,JDIM
C
D     IF(CCALL(K).EQ.'PAKP   ')THEN
D        WRITE(KFILDO,155)K,CCALL(K),NAME(K),J,HDATA(K,J),ELEV(K),
D    1                    VDATA(K,J),AVXDAT(K)
D155     FORMAT(/' AT 155 IN LAPSEU--K,CCALL(K),NAME(K),J,HDATA(K,J),'
D    1           'ELEV(K),VDATA(K,J),AVXDAT(K)',/,
D    2           I5,2X,A8,2X,A20,I3,4F8.1)
D     ENDIF
C        IF THIS IS THE WAY TO CALCULATE LAPSE (ALL FROM UPPER
C        AIR DATA), THEN AVXDAT IS NOT NEEDED.
C
      IF(HDATA(K,J).GT.ELEV(K))THEN
         HLOW=HDATA(K,J)
         VLOW=VDATA(K,J)
         JLOW=J
         GO TO 157
      ENDIF
C
 156  CONTINUE
C
      WRITE(KFILDO,1565)
 1565 FORMAT(/,' ****ERROR IN LAPSEU AT 1565.',
     1         '  XLAPSE( ) SET TO ZERO.')
      XLAPSE(K)=9999.
C           THIS WILL LATER BE SET TO ZERO.
      ISTOP(1)=ISTOP(1)+1
      GO TO 200
C
C        NOW FIND THE UPPER LEVEL TO CALCULATE THE LAPSE RATE.
C        START ONE LEVEL ABOVE THE LOWEST LEVEL J.
C
 157  DO 158 J=JLOW+1,JDIM
C        IF BY CHANCE JLOW+1 EXCEEDS JDIM, LOOP WILL NOT EXECUTE.
C
D     IF(CCALL(K).EQ.'PAKP   ')THEN
D        WRITE(KFILDO,1575)K,CCALL(K),NAME(K),J,HDATA(K,J),ELEV(K),
D    1                    VDATA(K,J),AVXDAT(K),ELEVHI(K),HHIGH,VHIGH
D1575    FORMAT(/' AT 1575 IN LAPSEU--K,CCALL(K),NAME(K),J,HDATA(K,J),'
D    1           'ELEV(K),VDATA(K,J),AVXDAT(K),ELEVHI(K),HHIGH,VHIGH',/,
D    1           I5,2X,A8,2X,A20,I3,7F8.1)
D     ENDIF
C
      IF(HDATA(K,J).GT.ELEVHI(K))THEN
         HHIGH=HDATA(K,J)
         VHIGH=VDATA(K,J)
         GO TO 162
      ELSEIF(J.EQ.JDIM)THEN
C           THE TOP LEVEL (500 MB) HAS BEEN REACHED AND ELEVHI(K)
C           HAS NOT BEEN EXCEEDED.  USE THE 500 MB LEVEL.
         HHIGH=HDATA(K,J)
         VHIGH=VDATA(K,J)
         GO TO 162
      ENDIF
C
 158  CONTINUE
C
      IF(HLOW.EQ.9999..OR.HHIGH.EQ.9999.)THEN
C           THIS SHOULD BE RARE AND PROBABLY MEANS AN ERROR.
C           IF HLOW AND HHIGH ARE GOOD, THEN VLOW AND VHIGH WILL BE.
         WRITE(KFILDO,161)CCALL(K),NAME(K)
 161     FORMAT(/,' ****LAPSE COULD NOT BE COMPUTED FOR STATION  ',
     1             A8,2X,A20,' AT 161 IN LAPSEU.  SET IT TO ZERO.')
         XLAPSE(K)=9999.
C           THIS WILL LATER BE SET TO ZERO.
            ISTOP(1)=ISTOP(1)+1
         GO TO 200
      ENDIF       
C
C        COMPUTE LAPSE.
C
 162  XLAPSE(K)=(VHIGH-VLOW)/(HHIGH-HLOW)
D     WRITE(KFILDO,1625)VHIGH,VLOW,HHIGH,HLOW,XLAPSE(K)
D1625 FORMAT(' AT 1625--VHIGH,VLOW,HHIGH,HLOW,XLAPSE(K)',
D    1       4F8.1,F8.4)
C
 200  CONTINUE
C
C        CHECK FOR REASONABLENESS OF LAPSE RATES AND COUNT NEGATIVES,
C        POSITIVES, AND ZEROS.
C
      DO 204 K=1,NSTA
C
      IF(XLAPSE(K).NE.9999.)THEN
C
         IF(XLAPSE(K).LT.0.)THEN
C              TEST IS MADE ON MINUS FIRST BECAUSE THAT IS THE USUAL CASE.
            KMINUS=KMINUS+1
C
            IF(XLAPSE(K).LT.HMINUS)THEN
               NRESET=NRESET+1
               XLAPSE(K)=0.      
            ELSEIF(XLAPSE(K).LT.XINLAP)THEN
               XINLAP=XLAPSE(K)
            ENDIF
C
         ELSEIF(XLAPSE(K).GT.0.)THEN
            KPLUS=KPLUS+1
C
            IF(XLAPSE(K).GT.HPLUS)THEN
               NRESET=NRESET+1
            ELSEIF(XLAPSE(K).GT.XAXLAP)THEN
               XAXLAP=XLAPSE(K)
            ENDIF
C
         ELSE
            KZERO=KZERO+1
         ENDIF
C
      ELSE
         XLAPSE(K)=0.
C           THE 9999'S ARE SET TO ZERO.
      ENDIF
C
 204  CONTINUE
C
      WRITE(KFILDO,205)NRESET,HMINUS,HPLUS,
     1                 XAXLAP,XINLAP,
     2                 KMINUS,KZERO,KPLUS
 205  FORMAT(/,    I7,' = NUMBER OF COMPUTED LAPSE RATES OUTSIDE',
     1                ' RANGE',F6.3,' AND,',F5.3,' AND SET TO ZERO',/,
     2           F7.4,' = MAXIMUM POSITIVE LAPSE RATE COMPUTED',/,
     3           F7.4,' = MINIMUM NEGATIVE LAPSE RATE COMPUTED',/,
     4             I7,' = NUMBER OF MINUS LAPSE RATES',/,
     5             I7,' = NUMBER OF ZERO  LAPSE RATES (COMPUTED)',/,
     6             I7,' = NUMBER OF PLUS  LAPSE RATES')
C
      IF(IP14.NE.0.AND.IFIRST.EQ.0)THEN
         IFIRST=1
C           FOR TESTING, WRITE THESE ONLY ONCE.  THIS WILL BE FOR
C           THE FIRST VARIABLE.
         WRITE(IP14,207)
 207     FORMAT(/,' LISTING OF COMPUTED LAPSE RATE.',
     1            '  MISSING STATIONS ARE NOT LISTED'/,/,
     2            ' STATION NO.  CALL LETTERS AND NAME',
     3            '            DATA VALUE  LAPSE (PER METER)',/)
         DO 210 K=1,NSTA
C
         IF(AVXDAT(K).NE.9999.)THEN
            WRITE(IP14,209)K,CCALL(K),NAME(K),AVXDAT(K),XLAPSE(K)
 209        FORMAT(' ',I6,8X,A8,2X,A20,F10.2,F8.3)
         ENDIF
C
 210     CONTINUE
C
      ENDIF
C        
 250  RETURN
C
 900  IF(IER.NE.0)THEN
         ISTOP(3)=ISTOP(3)+1
         ISTOP(1)=ISTOP(1)+1
         WRITE(KFILDO,901)(LD(M1),M1=1,4)
 901     FORMAT(/' ****COULD NOT FIND UPPER AIR RECORD',
     1           3I10.9,I10,' IN LAPSEU.  FATAL ERROR.')
         IER=777
      ENDIF
C
      GO TO 250
C
      END



