      SUBROUTINE AUGMT2(KFILDO,KFIL10,KFILAU,FLAUG,
     1                  NDATE,ID,IDPARS,JD,IBACK,
     2                  CCALL,XDATA,LNDSEA,NSTA,ND1,
     3                  LSTORE,ND9,LITEMS,
     4                  IS0,IS1,IS2,IS4,ND7,
     5                  IPACK,IWORK,DATA,ND5,
     6                  CORE,ND10,NBLOCK,NFETCH,
     7                  L3264B,ISTOP,IER)
C
C        JULY      2008   GLAHN   TDL   MOS-2000
C                                 MODIFIED FROM AUGMT1
C        OCTOBER   2008   RLC     ADDED COMMA FOR IBM
C
C        PURPOSE
C            TO PROVIDE A VALUE TO ANALYZE FOR U405A WHEN ONE DOES
C            NOT EXIST.  THIS IS FABRICATED FROM SURROUNDING 
C            LOCATONS.  ONE SPECIFIC USE IS TO AUGMENT MOS TEMPERATURE
C            FORECASTS AT MAXMIN SITES WITH  WITH MOS FORECASTS
C            AT CLOSEBY STATIONS.  UP TO MAXSTA NEIGHBORS ARE FOUND
C            IN PREPROCESSOR U179 THAT HAVE BOTH MOS MAXMIN AND MOS
C            TEMPERATURE FORECASTS.  THESE ARE USED TO AVERAGE TO
C            OBTA A VALUE OF TEMPERATURE AT ALL MAXMIN SITES.
C
C            AN OCEAN OR INLAND WATER STATION WILL NOT HAVE A PAIRS
C            LIST.
C
C            BOTH THE FILE NAME AND THE ID (FIRST) RECORD ON THE 
C            FILE ARE SAVED.  BOTH HAVE TO MATCH FOR THE FILE TO
C            NOT BE READ, BUT RATHER THE DATA USED FROM THE LAST 
C            READ.
C
C        DATA SET USE
C            KFILDO   - UNIT NUMBER FOR OUTPUT (PRINT) FILE.  (OUTPUT)
C            KFIL10   - UNIT NUMBER FOR INTERNAL RANDOM ACCESS STORAGE.
C                       (INPUT)
C            KFILAU   - THE UNIT NUMBER FOR THE FILE HOLDING THE
C                       AUXILIARY DATA.  (INPUT)
C
C        VARIABLES
C              KFILDO = UNIT NUMBER FOR OUTPUT (PRINT) FILE.  (INPUT)
C              KFIL10 = UNIT NUMBER FOR INTERNAL RANDOM ACCESS STORAGE.
C                       (INPUT/OUTPUT)
C              KFILAU = THE UNIT NUMBER FOR THE FILE HOLDING THE
C                       AUXILIARY DATA.  (INPUT)
C               FLAUG = THE FILE NAME OF THE AUXILIARY DATA.  
C                       (CHARACTER*60)  (INPUT)
C               NDATE = DATE/TIME, YYYYMMDDHH, OF ANALYSIS RUN.
C                       (INPUT)
C               ID(J) = 4-WORD ID OF VARIABLE TO PROVIDE FIRST GUESS FOR
C                       (J=1,4).  (INPUT)
C           IDPARS(J) = THE PARSED, INDIVIDUAL COMPONENTS OF THE
C                       VARIABLE ID'S CORRESPONDING TO ID( ,N)
C                       (J=1,15), (N=1,ND4).
C                       J=1--CCC (CLASS OF VARIABLE),
C                       J=2--FFF (SUBCLASS OF VARIABLE),
C                       J=3--B (BINARY INDICATOR),
C                       J=4--DD (DATA SOURCE, MODEL NUMBER),
C                       J=5--V (VERTICAL APPLICATION),
C                       J=6--LBLBLBLB (BOTTOM OF LAYER, 0 IF ONLY 
C                            1 LAYER),
C                       J=7--LTLTLTLT (TOP OF LAYER),
C                       J=8--T (TRANSFORMATION),
C                       J=9--RR (RUN TIME OFFSET, ALWAYS + AND BACK 
C                            IN TIME),
C                       J=10--OT (TIME APPLICATION),
C                       J=11--OH (TIME PERIOD IN HOURS),
C                       J=12--TAU (PROJECTION IN HOURS),
C                       J=13--I (INTERPOLATION TYPE),
C                       J=14--S (SMOOTHING INDICATOR), AND
C                       J=15--G (GRID INDICATOR).
C                       (INPUT)
C               JD(J) = THE BASIC INTEGER VARIABLE ID'S (J=1,4) 
C                       (N=1,ND4).
C                       THIS IS THE SAME AS ID(J,N), EXCEPT THAT THE
C                       PORTIONS PERTAINING TO PROCESSING ARE OMITTED:
C                       B = IDPARS(3, ),
C                       T = IDPARS(8,),
C                       I = IDPARS(13, ),
C                       S = IDPARS(14, ),
C                       G = IDPARS(15, ), AND
C                       THRESH( ).
C                       NOT ACTUALLY USED.  (INPUT)
C               IBACK = THE NUMBER OF CYCLES TO GO BACK FOR MOS
C                       FORECASTS AS NECESSARY.  (INPUT)
C            CCALL(K) = CALL LETTERS OF STATIONS BEING DEALT WITH.
C                       (CHARACTER*8)  (INPUT)
C            XDATA(K) = DATA VALUES ON INPUT; AUGMENTED VALUES
C                       ON OUTPUT (K=1,NSTA). (INPUT/OUTPUT)
C           LNDSEA(K) = LAND/SEA INFLUENCE FLAG FOR EACH STATION
C                       (K=1,NSTA).
C                       0 = WILL BE USED FOR ONLY OCEAN WATER (=0)
C                           GRIDPOINTS.
C                       3 = WILL BE USED FOR ONLY INLAND WATER (=3)
C                           GRIDPOINTS.
C                       6 = WILL BE USED FOR BOTH INLAND WATER (=3)
C                           AND LAND (=9) GRIDPOINTS.
C                       9 = WILL BE USED FOR ONLY LAND (=9) GRIDPOINTS.
C                       (INPUT)
C                 ND1 = FIRST DIMENSION OF XDATA( ) AND DIMENSION
C                       OF FD1( ).  (INPUT)
C                NSTA = NUMBER OF STATIONS BEING USED; THE NUMBER
C                       OF VALUES IN XDATA( ).  (INPUT)
C         LSTORE(L,J) = THE ARRAY HOLDING INFORMATION ABOUT THE DATA 
C                       STORED (L=1,12) (J=1,LITEMS).  (INPUT/OUTPUT)
C                 ND9 = MAXIMUM NUMBER OF FIELDS STORED IN LSTORE( , ).
C                       SECOND DIMENSION OF LSTORE( , ).  (INPUT)
C              LITEMS = THE NUMBER OF ITEMS J IN LSTORE( ,L).  
C                       (INPUT/OUTPUT)
C              NTIMES = THE NUMBER OF TIMES GFETCH HAS BEEN ACCESSED.
C                       (INPUT/OUTPUT)
C              IS0(J) = MOS-2000 GRIB SECTION 0 ID'S (J=1,4).
C              IS1(J) = MOS-2000 GRIB SECTION 1 ID'S (J=1,21+).
C              IS2(J) = MOS-2000 GRIB SECTION 2 ID'S (J=1,12).
C              IS4(J) = MOS-2000 GRIB SECTION 4 ID'S (J=1,4).
C                 ND7 = DIMENSION OF IS0( ), IS1( ), IS2( ), AND IS4( ).
C                       (INPUT)
C            IPACK(J) = WORK ARRAY FOR GFETCH (J=1,ND5).  (INTERNAL)
C            IWORK(J) = WORK ARRAY FOR GFETCH (J=1,ND5).  (INTERNAL)
C             DATA(J) = WORK ARRAY FOR GFETCH (J=1,ND5) AND COMPUTATIONS.
C                       (INTERNAL)
C                 ND5 = DIMENSION OF IPACK( ), WORK( ), AND DATA( ).
C                       (INPUT)
C             CORE(J) = SPACE ALLOCATED FOR SAVING PACKED GRIDPOINT 
C                       FIELDS (J=1,ND10).  WHEN THIS SPACE IS 
C                       EXHAUSTED, SCRATCH DISK WILL BE USED.  THIS IS 
C                       THE SPACE USED FOR THE MOS-2000 INTERNAL RANDOM 
C                       ACCESS SYSTEM.  (INPUT)
C                ND10 = THE MEMORY IN WORDS ALLOCATED TO THE SAVING OF 
C                       DATA CORE( ).  WHEN THIS SPACE IS EXHAUSTED,
C                       SCRATCH DISK WILL BE USED.  (INPUT)
C              NBLOCK = BLOCK SIZE IN WORDS OF INTERNAL MOS-2000 DISK
C                       STORAGE.  (INPUT)
C              NFETCH = INCREMENTED EACH TIME DATA ARE FETCHED BY
C                       GFETCH.  IT IS A RUNNING COUNT FROM THE
C                       BEGINNING OF THE PROGRAM.  THIS COUNT 
C                       IS MAINTAINED IN CASE THE USER NEEDS IT
C                       (DIAGNOSTICS, ETC.).  (OUTPUT)
C              L3264B = INTEGER WORD LENGTH IN BITS OF MACHINE BEING
C                       USED (EITHER 32 OR 64).  (INPUT)
C            ISTOP(J) = ISTOP(1) IS INCREMENTED BY 1 WHENEVER AN ERROR 
C                       OCCURS AND THE PROGRAM PROCEEDS.  ISTOP IS
C                       INCREMENTED WHEN THE FIRST CHOICE OF FIRST
C                       GUESS IS NOT AVAILABLE (I.E., MGUESS NE 
C                       IGUESS(1)).  ISTOP(3) IS INCREMENTED BY 1
C                       WHEN A DATA RECORD COULD NOT BE FOUND.
C                       (INPUT/OUTPUT)
C            ISTOP(J) = ISTOP(1) IS INCREMENTED BY 1 EACH TIME AN ERROR
C                                OCCURS.
C                       ISTOP(2) IS INCREMENTED WHEN LESS THAN
C                                200 STATIONS ARE AVAILABLE FOR AN
C                                ANALYSIS.
C                       ISTOP(3) IS INCREMENTED WHEN A DATA RECORD 
C                                CANNOT BE FOUND.
C                       (INPUT/OUTPUT)
C                 IER = ERROR CODE. 
C                         0 = GOOD RETURN.
C                       103 = COULD NOT IDENTIFY ID IN INTERNAL TABLE.
C                       777 = NO FIRST GUESS AVAILABLE.  FATAL ERROR.
C                        OTHER VALUES FROM CALLED ROUTNES.  EVERY
C                        ERROR IS FATAL FOR THIS ELEMENT.
C                       (OUTPUT)
C               NSLAB = SLAB OF THE GRID CHARACTERISTICS.  RETURNED
C                       BY GFETCH.  USED FOR CHECKING FOR EQUAL
C                       CHARACTERISTICS OF GRIDS READ.  (INTERNAL)
C       ITABLE(I,J,L) = HOLDS THE 4-WORD IDS OF THE NCAT PROBABILITIES
C                       (I=1,4) (J=1,NCAT) (L=1,2).  THE THIRD
C                       DIMENSION IS TO ACCOMMODATE BOTH THE DATA TO
C                       ANALYZE (L=1) AND THE FIRST GUESS (L=2).
C                       THE IDCAT ENTRY IS THE 4-WORD ID OF THE 
C                       VARIABLE BEING PROCESSED SANS THE DD AND TAU
C                       (E.G., THE CATEGORICAL VARIABLE).  THE FIRST
C                       ENTRY IN THE TABLE IS A DUMMY BECAUSE THE FIRST
C                       CATEGORY REPRESENTING 0 AMOUNT DOES NOT HAVE
C                       A PROBABILITY.  (INTERNAL)     
C          TABLE(I,J) = HOLDS THE LOWER AND UPPER CATEGORY VALUES OF
C                       THE VARIABLES WHOSE IDS ARE IN ITABLE( , , )
C                       (I=1,2), (J=1,NCAT-1).  (SEE ITABLE( , , )) FOR
C                       MORE EXPLANATION.  (INTERNAL)     
C              TRATIO = THE FRACTION OF THE WAY BETWEEN 3-HOURLY GRIDS
C                       TO GET THE PROJECTION NEEDED, WHEN TIME 
C                       INTERPOLATION IS NEEDED.  WILL BE 0, 1/3, OR
C                       2/3.  (INTERNAL)
C               JDATE = THE DATE TIME TO LOOK FOR MOS DATA.  (INTERNAL)
C               JTAU1 = THE FIRST PROJECTION AUXILIARY DATA ARE NEEDED.
C                       (INTERNAL)
C               JTAU2 = THE SECOND PROJECTION AUXILIARY DATA ARE NEEDED.
C                       (INTERNAL)
C               KDATE = SET TO NDATE, POSSIBLY MODIFIED.  (INTERNAL)
C            DATA1(J) = WORK ARRAY FOR GFETCH (J=1,ND5) AND COMPUTATIONS.
C                       (AUTOMATIC)  (INTERNAL)
C        1         2         3         4         5         6         7 X
C
C        NONSYSTEM SUBROUTINES USED 
C            GFETCH, TIMPR
C
      PARAMETER (IDCAT=2)
C
      CHARACTER*4 STATE
      CHARACTER*8 CCALL(ND1),CCALLD,TRASH
      CHARACTER*60 FLAUG,FILEID,SAVFL,SAVID
C
      DIMENSION ID(4),IDPARS(15),JD(4)
      DIMENSION XDATA(ND1),LNDSEA(ND1)
      DIMENSION DATA1(ND5)
C        DATA1( ) IS AN AUTOMATIC ARRAY.
      DIMENSION IPACK(ND5),IWORK(ND5),DATA(ND5)
      DIMENSION IS0(ND7),IS1(ND7),IS2(ND7),IS4(ND7)
      DIMENSION LSTORE(12,ND9)
      DIMENSION CORE(ND10)
      DIMENSION ISTOP(3),ITABLE(4,IDCAT*2),LD(4)
C
      ALLOCATABLE CCALLD(:),NOALOC(:),IALOC(:,:),RDIST(:,:),LIST(:)
C
      DATA SAVFL/' '/,
     1     SAVID/' '/
      DATA ITABLE/222020008,0,0,0,202020008,0,0,0,
     1            223020008,0,0,0,203020008,0,0,0/  
C
      SAVE SAVFL,SAVID
      SAVE CCALLD,NOALOC,IALOC,RDIST,LIST
C
      IER=0
      CALL TIMPR(KFILDO,KFILDO,'START AUGMT2        ')
C
C        DETERMINE WHETHER VARIABLE IS IN THE LIST.
C        THE TAU IS NOT IN THE TABLE TO MAKE IT GENERIC, BUT
C        IS IN ID(3).
C
      DO 105 L=1,IDCAT
C
      WRITE(KFILDO,103)(ITABLE(J,L),J=1,4)
 103  FORMAT(/' AT 103 IN AUGMT2--(ITABLE(J,L),J=1,4)',4I11)
      IF(ID(1).EQ.ITABLE(1,L).AND.
     1   ID(2).EQ.ITABLE(2,L).AND.
     2   (ID(3)/1000).EQ.(ITABLE(3,L)/1000).AND.
     3   ID(4).EQ.ITABLE(4,L))THEN
         GO TO 112
C           THIS DEFINES L.
      ENDIF
C
 105  CONTINUE
C
C        DROP THROUGH HERE MEANS THE ID WAS NOT FOUND.
C
      ISTOP(1)=ISTOP(1)+1
      IER=103
      WRITE(KFILDO,110)(ID(J),J=1,4),IER
 110  FORMAT(/,' ****VARIABLE ',I9.9,I10.9,I10.9,I4.3,' NOT',
     1         ' ACCOMMODATED IN SUBROUTINE AUGMT2.  IER =',I3,/,
     2         '     AUGMENTATION CANNOT BE DONE.  PROCEEDING.')
      GO TO 900
C
C        LOOK FOR UP TO IBACK RUN CYCLES OF FORECASTS AT 6-H 
C        INTERVALS.  FOR IBACK = 3, THIS WILL GO BACK 18 HOURS
C        WHETHER 6-H RUNS ARE THERE OR NOT.  (IF THIS IS USED
C        FOR LAMP, A MOD WILL LIKELY NEED TO BE MADE.)
C
 112  KDATE=NDATE
C 
      DO 120 KCYCLE=0,IBACK
         NHR=KDATE-(KDATE/100)*100
C           NHR IS THE HOUR OF THE RUN.  IT IS EXPECTED THIS WILL BE
C           0, 6, 12, OR 18 FOR MOS, BUT CAN BE ANY HOUR FOR LAMP.
         JDATE=KDATE-MOD(NHR,6)
C           JDATE IS THE DATE OF THE DATA NEEDED.
C
C           IT IS ASSUMED THE MOS FORECASTS RUN TIMES ARE
C           ARE AVAILABLE AT 6-H INTERVALS AND THE PROJECTIONS
C           ARE AVAILABLE AT 3-H INTERVALS.  USE THE CORRECT
C           PROJECTION IF IT IS AVAILABLE; IF NOT, USE LINEAR
C           INTERPOLATION IN TIME.
C
         IFGTAU=IDPARS(12)+MOD(NHR,6)+KCYCLE*6
C           IFGTAU IS THE PROJECTION OF THE MOS FORECASTS.
C
         IF(MOD(IDPARS(12),3).EQ.0)THEN
            JTAU1=IFGTAU
            JTAU2=999
            TRATIO=0
         ELSE
            JTAU1=IFGTAU-MOD(IFGTAU,3)
            JTAU2=JTAU1+3
            TRATIO=MOD(IFGTAU,3)/3.
         ENDIF
C
C           GET THE MOS FORECASTS.
C
         LD(1)=ITABLE(1,L+1)
         LD(2)=ITABLE(2,L+1)
         LD(3)=ITABLE(3,L+1)+JTAU1
         LD(4)=ITABLE(4,L+1)
C            
         CALL GFETCH(KFILDO,KFIL10,LD,7777,LSTORE,ND9,LITEMS,
     1               IS0,IS1,IS2,IS4,ND7,IPACK,IWORK,DATA,ND5,
     2               NWORDS,NPACK,JDATE,NTIMES,CORE,ND10,
     3               NBLOCK,NFETCH,NSLAB,MISSP,MISSS,L3264B,1,IER)
C
         IF(IER.NE.0)THEN
            ISTOP(3)=ISTOP(3)+1
            GO TO 116
C              IF THE GRID IS NOT AVAILABLE, TRY ANOTHER RUN CYCLE. 
         ENDIF
C
C           AT THIS POINT, THE MOS FORECASTS FOR THE 1ST PROJECTION
C           NEEDED FOR (POSSIBLE) TIME INTERPOLATION HAS BEEN READ 
C           INTO DATA( ).  TRY FOR THE SECOND RECORD IF NEEDED
C           FOR INTERPOLATION.
C
         IF(JTAU2.EQ.999)GO TO 125
C           TRANSFER WHEN NO SECOND FIELD NECESSARY.
c
         LD(3)=ITABLE(3,L+1)+JTAU2        
C
         CALL GFETCH(KFILDO,KFIL10,LD,7777,LSTORE,ND9,LITEMS,
     1               IS0,IS1,IS2,IS4,ND7,IPACK,IWORK,DATA1,ND5,
     2               NWORDS1,NPACK,JDATE,NTIMES,CORE,ND10,
     3               NBLOCK,NFETCH,LSLAB,MISSP,MISSS,L3264B,1,IER)
C
         IF(IER.NE.0)THEN
            ISTOP(3)=ISTOP(3)+1
            GO TO 116
C              IF THE GRID IS NOT AVAILABLE, TRY ANOTHER RUN CYCLE. 
         ENDIF
C
         IF(NWORDS.NE.NWORDS1)THEN
            ISTOP(1)=ISTOP(1)+1
            WRITE(KFILDO,113)
 113        FORMAT(/' ****NUMBER OF WORDS RETURNED FROM GFETCH NOT',
     1              ' CONSISTENT IN AUGMT2 AT 113.  TRY ANOTHER',
     2              ' RUN CYCLE.')
            GO TO116
         ENDIF
C
C           INTERPOLATE.
C     
 114     DO 115 K=1,NWORDS 
C
         IF(DATA(K).LT.9998..AND.DATA1(K).LT.9998.)THEN    
            DATA(K)=(DATA1(K)-DATA(K))*TRATIO+DATA(K)
         ELSEIF(DATA1(K).LT.9998.)THEN
            DATA(K)=DATA1(K)
C              IF DATA(K) IS MISSING, IT IS LEFT SO.
         ENDIF
C
 115     CONTINUE      
C
         GO TO 125      
C
C           AT THIS POINT, THE AUXILIARY FORECASTS HAVE HAS NOT BEEN
C           OBTAINED.  TRY ANOTHER RUN CYCLE UNLESS KCYCLE.EQ.IBACK.
C
 116     IF(KCYCLE.LT.IBACK)THEN
            WRITE(KFILDO,117)(LD(J),J=1,4),JDATE
 117        FORMAT('     AUXILIARY FORECASTS ',3I10.9,I10.3,
     1             '  UNAVAILABLE FOR DATE',I11,
     2             '  TRY ANOTHER CYCLE.')
C              PREPARE DATE/TIME.
            CALL UPDAT(KDATE,-6,KDATE) 
         ELSE
            WRITE(KFILDO,118)(LD(J),J=1,4),JDATE
 118        FORMAT('     AUXILIARY FORECASTS ',3I10.9,I10.3,
     1             '  UNAVAILABLE FOR DATE',I11,
     2             '  TRY ANOTHER OPTION.')
         ENDIF
C
 120  CONTINUE

C        OPEN THE FILE AND READ THE PAIRS LIST.  THE FIRST RECORD
C        IS AN IDENTIFICATION.  READ IT IN ASCII AND RETAIN IT.
C        IF THE FILE NAME AND THE ID MATCH, THE DATA DO NOT
C        HAVE TO BE READ AND MATCHED WITH THE CURRENT LIST.
C
 125  STATE='130 '
      OPEN(UNIT=KFILAU,FILE=FLAUG,STATUS='OLD',
     1     IOSTAT=IOS,ERR=900)
      WRITE(KFILDO,130)KFILAU,FLAUG
 130  FORMAT(/,' OPENING OLD PAIRS FILE ON UNIT NO.',I3,
     1         ' FILE = ',A60)
      STATE='132 '
      READ(KFILAU,132,ERR=900)FILEID
 132  FORMAT(A60)
C
      IF(FILEID.EQ.SAVID.AND.FLAUG.EQ.SAVFL)THEN
C           THE FILE FOR AUXILIARY FORECASTS IS THE SAME AS USED
C           PREVIOUSLY.
         WRITE(KFILDO,135)
 135     FORMAT(' THE FILE FOR AUXILIARY FORECASTS IN AUGMT2',
     1          ' IS THE SAME AS USED BEFORE.',
     2          '  IT DOES NOT HAVE TO BE READ.')
         GO TO 201
      ELSE
         SAVID(1:60)=FILEID(1:60)
         SAVFL(1:60)=FLAUG(1:60)
         WRITE(KFILDO,137)FILEID
 137     FORMAT(' IDENTIFICATION ON THIS FILE IS:  ',A60)
C
C           READ THE NUMBER OF STATIONS AND MAXIMUM PAIRS.
C
         STATE='138 '
         READ(KFILAU,138,ERR=900)MSTA,MAXSTA
 138     FORMAT(2I6)
C
C           IF THIS IS A DIFFERENT FILE, LIKELY MSTA OR MAXSTA
C           WILL BE DIFFERENT.  DEALLOCATE AND REALLOCATE.
C           IT WON'T HURT IF THEY HAVE HAVEN'T BEEN ALLOCATED.
C
         DEALLOCATE(CCALLD,NOALOC,IALOC,RDIST,LIST,STAT=IOS)
         
         ALLOCATE(CCALLD(MSTA),NOALOC(MSTA),IALOC(MSTA,MAXSTA),
     1            RDIST(MSTA,MAXSTA),LIST(MSTA),STAT=IOS)
C
         IF(IOS.EQ.1)THEN
            WRITE(KFILDO,140)
 140        FORMAT(/' ****ALLOCATION OF ARRAYS FAILED IN AUGMT2 AT',
     1              ' 120.  ARRAY ALREADY ALLOCATED.')
            IER=777
            GO TO 900
C
         ELSEIF(IOS.EQ.2)THEN
            WRITE(KFILDO,141)
 141        FORMAT(/' ****ALLOCATION OF ARRAYS FAILED IN AUGMT2 AT',
     1              ' 121.  ARRAY NOT ALLOCATED.')
            IER=777
            GO TO 900
         ENDIF
C
C        READ THE PAIRS.
C  
         DO 160 KK=1,MSTA
         STATE='150 '
         READ(KFILAU,150,IOSTAT=IOS,ERR=910)CCALLD(KK),NOALOC(KK)
 150     FORMAT(A8,I8)
CCC         WRITE(KFILDO,151)KK,MSTA,CCALLD(KK),NOALOC(KK)
CCC 151     FORMAT(' AT 151--KK,MSTA,CCALLD(KK),NOALOC(KK)',2I6,2X,A8,I6)
C
         IF(NOALOC(KK).EQ.9999)GO TO 160
C           NOALOC( ) = 9999 SIGNIFIES THERE IS NO LIST TO READ.
C           IALOC( , ) AND RDIST( ,) WILL BE UNDEFINED.
C
         IF(NOALOC(KK).GT.MAXSTA)THEN
            WRITE(KFILDO,152)KK,NOALOC(KK),MAXSTA
 152        FORMAT(/' ****NALOC(KK) =',I8,' GT MAXSTA =',I4,
     1              ' FOR STATION NO. KK =',I6,' IN AUGMT2 AT 152.',/,
     2              '     FATAL ERROR.')
            IER=777
            GO TO 900
         ENDIF
C
         STATE='155 '
         READ(KFILAU,155,IOSTAT=IOS,ERR=910)(IALOC(KK,J),RDIST(KK,J),
     1                            J=1,NOALOC(KK)) 
 155     FORMAT(10(I6,F10.2))

CCC         WRITE(KFILDO,156)KK,(IALOC(KK,J),RDIST(KK,J),J=1,NOALOC(KK))
CCC 156     FORMAT(' AT 156 IN AUGMT2--KK,(IALOC(KK,J),RDIST(KK,J),',
CCC     1          'J=1,NOALOC(KK))',I6,/,(I6,F10.2))
 160     CONTINUE
C
C           READ THE TERMINATOR.
C
         STATE='162 '
         READ(KFILAU,150,IOSTAT=IOS,ERR=910)TRASH
C
         IF(TRASH.NE.'999999  ')THEN
            WRITE(KFILDO,165)TRASH
 165        FORMAT(' ****DID NOT FIND TERMINATOR ON FILE IN AUGMT2.',
     1             '  FOUND INSTEAD ',A8,/,
     2             '     COUNT AS FATAL ERROR.')
            IER=777
            GO TO 900
         ENDIF
C
      ENDIF
C
C        FIND THE LINKS FROM THE AUXILIARY MSTA LIST TO THE
C        PRIMARY NSTA LIST.
C
      ISTART=1
      IEND=MSTA
C
      DO 200 K=1,NSTA
C
C        FIND THE STATION IN CCALL(K) IN THE CCALLD(KK) LIST.
C        THEY OUGHT TO BOTH BE AT LEAST APPROXIMATELY IN ORDER, 
C        AND STORE THE ORDER IN LIST( ).
C
 170  DO 190 KK=ISTART,IEND
C
      IF(CCALLD(KK).EQ.CCALL(K))THEN
         LIST(K)=KK
         ISTART=KK
C           ISTART SET TO KK RATHER THAN KK+1 TO KEEP FROM INDEXING
C           PAST END OF ARRAY WHEN ISTART = IEND.
         IEND=MSTA
CCCD        WRITE(KFILDO,175)K,KK,CCALL(K),LIST(K),ISTART,IEND
CCCD175     FORMAT(' AT 175--K,KK,CCALL(K),LIST(K),ISTART,IEND',
CCCD    1          2I6,2X,A8,3I6)
         GO TO 200
      ENDIF
C
 190  CONTINUE
C
      IF(ISTART.NE.1)THEN
         IEND=ISTART
         ISTART=1
         GO TO 170
      ENDIF
C
      WRITE(KFILDO,195)CCALL(K)
 195  FORMAT(/' ****STATION ',A8,' NOT FOUND IN AUXILIARY LIST.',
     1        '  PROCEEDING.')
      LIST(K)=999999
      ISTART=1
      IEND=MSTA
C        IF STATION NOT FOUND, RESTART THE PROCESS FROM THE TOP.
C        THIS SHOULD BE UNUSUAL.
C
 200  CONTINUE
C
CCC      DO 2005 K=1,NSTA
CCC      WRITE(KFILDO,2000)K,CCALL(K),LIST(K),XDATA(K),DATA(K)
CCC 2000 FORMAT(' AT 2000--K,CCALL(K),LIST(K),XDATA(K),DATA(K)',
CCC     1       I6,2X,A8,I8,2F8.1)
CCC 2005 CONTINUE
C
C        AUGMENT THE LIST OF DATA IN XDATA( ).
C
 201  DO 220 K=1,NSTA
C
      IF(LNDSEA(K).LE.3)THEN
         XDATA(K)=DATA(K)
C           IF THIS IS AN OCEAN OR INLAND WATER LOCATION. RETAIN
C           THE VALUE FROM THE AUGMENTATION LIST VALUE.  IT WILL
C           HAVE NO PAIRS LIST WHEN LAMP STATIONS ARE BEING DEALT
C           WITH.
C
CCC         WRITE(KFILDO,2015)K,CCALL(K),XDATA(K)
CCC 2015    FORMAT(/,' AT 2015--K,CCALL(K),XDATA(K)',I6,2X,A8,F8.1)
C
      ELSEIF(LIST(K).NE.999999.AND.NOALOC(LIST(K)).NE.9999)THEN
C
CCC         WRITE(KFILDO,202)K,CCALL(K),LIST(K),NOALOC(LIST(K)),
CCC     1                    XDATA(K),DATA(K)
CCC 202     FORMAT(/,' AT 202--K,CCALL(K),LIST(K),NOALOC(LIST(K)),',
CCC     1            'XDATA(K),DATA(K)',I8,2X,A8,2I8,2F8.1)
C
         IF(XDATA(K).LT.9998.)GO TO 220
C           THIS MEANS THE DATA ARE THERE AND DON'T NEED TO BE
C           FABRICATED.
         IF(DATA(K).GT.9998.)GO TO 220
C           THIS MEANS THE MOS VALUE (THE VALUE TO ADD TO)
C           IS MISSING, SO CAN'T DO IT.
C
         SUM=0.
         KOUNT=0
C
         DO 205 M=1,NOALOC(LIST(K))
C
         IF(XDATA(IALOC(LIST(K),M)).LT.9998..AND.
     1      DATA(IALOC(LIST(K),M)).LT.9998.)THEN
C
CCC            IF(CCALL(K).EQ.'LSNM8   ')THEN
CCC               WRITE(KFILDO,203)K,LIST(K),IALOC(LIST(K),M),
CCC     1               CCALL(K),CCALL(IALOC(LIST(K),M)),
CCC     2               XDATA(IALOC(LIST(K),M)),DATA(IALOC(LIST(K),M))
CCC 203           FORMAT(/,'K,LIST(K),IALOC(LIST(K),M),',
CCC     1                'CCALL(K),CCALL(IALOC(LIST(K),M)),',
CCC     2                'XDATA(IALOC(LIST(K),M)),DATA(IALOC(LIST(K),M))',
CCC     3                /,'   ',3I6,2X,A8,A8,2F7.1)
CCC            ENDIF
C
            SUM=SUM+DATA(IALOC(LIST(K),M))
C
CCC            WRITE(KFILDO,204)XDATA(IALOC(LIST(K),M)),
CCC     1                        DATA(IALOC(LIST(K),M)),SUM,LIST(K)
CCC 204        FORMAT(' AT 204-XDATA(IALOC(LIST(K),M)),',
CCC     1             'DATA(IALOC(LIST(K),M)),SUM,LIST(K)',3F10.1,I6)
C
            KOUNT=KOUNT+1
         ENDIF
C
 205     CONTINUE
C
         IF(KOUNT.NE.0.AND.DATA(K).LT.9998.)THEN
C              XDATA(K) CAN BE MISSING.  CHECK ABOVE SHOULD DO IT.
            XDATA(K)=SUM/KOUNT
C
CCC            WRITE(KFILDO,206)DATA(K),XDATA(K)
CCC 206        FORMAT(,' AT 206--DATA(K),XDATA(K)',2F8.1)
         ENDIF      
C 
      ENDIF
C
 220  CONTINUE
C
D     WRITE(KFILDO,225)(K,XDATA(K),K=1,NSTA)
C        NOTE THAT THESE VALUES ARE NOT SCALED--JUST WHAT IS
C        BEING ANALYZED.  SCALING COULD BE DONE HERE OR IN A
C        FOLLOWING ROUTINE.
D225  FORMAT(/,' IN AUGMT2 AT 225',/,(I6,F8.2))
C
      CALL TIMPR(KFILDO,KFILDO,'END   AUGMT2        ')
C
 900  RETURN
C        ERROR STOP BELOW IS FOR ERRORS OF CONTROL INFORMATION INPUT.
 910  CALL IERX(KFILDO,KFILDO,IOS,'AUGMT2',STATE)
      STOP 9999
      END
