C$$$  MAIN PROGRAM DOCUMENTATION BLOCK  ***                             
C                                                                       
C MAIN PROGRAM: MDL_GFSMMGTX
C   PRGMMR: COSGROVE          ORG: OST22       DATE: 2005-08-18
C                                                                       
C ABSTRACT:  GENERATES THE NEW GFS TX BULLETIN "MMG" CONTAINING
C            GFS BASED OBJECTIVE MARINE GUIDANCE FOR STATIONS IN THE
C            US, AK, AND HI.
C            THE FORECAST ELEMENTS IN THE MESSAGE ARE 3HR TEMP, 3HR
C            DEWPOINT TEMP, 3HR WIND DIR & SPEED, 3HR ADJUSTED WIND                       
C            SPEED.
C            FORECASTS ARE GIVEN EVERY 3 HOURS FROM 6 TO 84 HOURS.     
C            THIS CODE WAS ADAPTED FROM THE AVN MESSAGE CODE. SEE
C            GFSMAVTX.F FOR ADDITIONAL DOCUMENTATION.
C            THIS BULLETIN IS SENT OUT UNDER 8 SEPERATE WMO HEADERS 
C            AND PILS FOR DIFFERENT GROUPS OF STATIONS. 
C                                                                       
C PROGRAM HISTORY LOG:                                                  
C   03-03-24  CMM     - STARTED WITH AVNMAV BULLETIN CODE.
C   03-03-27  CMM     - MADE CHANGES TO ACCOMODATE THE MARINE MOS MESSAGE
C                       WHICH CLOSELY RESEMBLES THE AVN MESSAGE. PULLED
C                       REFERENCES TO ALL PARAMETERS NOT WIND RELATED.
C                       ADDED ADJUSTED WIND PARAMETERS. AUGMENTED CODE TO 
C                       WRITE FORECAST PROJECTIONS TO 84 HOURS. SEE 
C                       SAMPLE BELOW. NUMBERS ON TOP AND LEFT ARE FOR
C                       LOCATION AND ARE NOT PART OF MESSAGE. 
C   03-05-13  CMM     - MADE CHANGE TO IDA IN SECTION WHERE THE DATE LINE 
C                       IS WRITTEN FOR 18Z CYCLE. DONE TO CORRECT ERROR
C                       IN WRITING DATE AT THE END OF THE MONTH
C   03-06-25  CMM     - MADE ALL 4 CHARACTER MONTHS INTO 3 CHARACTER MONTHS.
C                       THIS CHANGE WAS MADE TO MAINTAIN THE SPACE BETWEEN
C                       THE MONTH AND DAY IN THE "DT" LINE OF THE MESSAGE.
C   04-0324   CMM     - ADAPTING TO INCLUDE THE TEMPERATURE AND DEWPOINT 
C                       GUIDANCE.
C   05-08-18  RLC     - MODIFIED CODE TO SEND TRANSMISSION FILE VIA NTC
C                       RATHER THAN VIA THE STATFILE.  MOSTLY INVOLVED
C                       CHANGES TO CHARACTER REPRESENTATIONS OF CERTAIN
C                       THINGS.  A NEW VERSION OF PUTQ IS USED, AND THERE
C                       HAVE BEEN SIGNIFICANT CHANGES TO WRMSGA.
C   06-04-27  JCM     - INCREASED MAXSTA TO 25000
C                                                                       
C           1         2         3         4         5         6
C1 1234567890123456789012345678901234567890123456789012345678901234567890
C2  44001  AVN MOS GUIDANCE    1/02/2003  0000 UTC
C3  DT  /JAN   2           /JAN   3                /JAN   4
C4  HR   06 09 12 15 18 21 00 03 06 09 12 15 18 21 00 03 06 09 12 15 18
C5  TMP  40 45 43 37 32 30 29 36 46 51 48 43 37 32 28 35 46 51 46 38 42  
C6  DPT  30 32 32 30 29 27 27 31 36 37 36 35 32 27 25 26 26 26 25 29 35  
C7  WD   36 01 03 06 07 07 06 06 05 07 04 01 34 33 32 32 32 32 31 31 32
C8  WS   09 08 05 04 06 06 09 10 09 06 04 07 04 06 08 09 12 15 17 16 15
C9  WS10 11 10 07 06 08 08 11 12 11 08 06 09 06 08 10 11 14 17 19 18 17
C10
C11 DT      /JAN   5
C12 HR   21 00 03 06 09 12
C13 TMP  37 32 28 35 46 51 
C14 DPT  32 27 25 26 26 26  
C15 WD   30 32 03 10 09 11
C16 WS   11 08 03 02 02 03
C17 WS10 13 10 05 04 04 05
C
C USAGE:                                                                
C                                                                       
C   SEE BELOW FOR TDL STANDARDS                                         
C                                                                       
C     PROGRAM GFSMMGTX                                                  
C                                                                       
C        DATA SET USE
C        READ(5...      - STANDARD INPUT /nwprod/parm/tdl_gfsmmgtx.dat
C        WRITE(6...     - STANDARD OUTPUT
C       *FORT.48(FTN48) - TDL MOS 2000 FCST FILE (INPUT)
C       *FORT.27(FTN27) - STATION DICTIONARY (INPUT)
C       *FORT.10(FTN10) - NMC STANDARD DATE FILE (INPUT)
C       *FORT.60(FTN60) - TELETYPE MESSAGE (OUTPUT)
C       *FORT.65(FTN65) - TRANSMISSION FILE (OUTPUT)
C
C       * CRAY (HOBBS) - ASSIGNMENT FILE NAMES
C                                                                       
C        VARIABLES
C
C        SUBROUTINE RDWMO CALLING ARGUMENTS:
C                 JUNIT=FILE NUMBER(5) USED TO ACCESS MRF STATION
C                       DIRECTORY FILE
C                  LIST=LIST OF NMOSTA CALL LETTERS OF STATIONS,
C                       LEFT JUSTIFIED (8 CHARACTERS)
C                MAXSTA=MAXIMUM NUMBER OF STATIONS (ACTUALLY NEEDS TO
C                       BE # OF STATIONS X 2 FOR READ_MOSDA)
C                 NHEAD=NUMBER OF WMO STATION CALL LEADER HEADERS
C                       (EX. MRFFOX42AZ)
C                  NWMO=NUMBER OF STATIONS IN WMO CALL LETTER ARRAY,
C                       WMO(I)
C                   WMO=LIST OF WMO HEADERS(CHARACTER *8)
C
C            SUBROUTINE RDLSTA CALLING ARGUMENTS:
C                      CFMT=CONTAINS FORMAT OF DATA
C                     DTEMP=TEMPORARY ARRAY USED TO READ ONE RECORD
C                DATA(LIST)=LIST OF NMOSTA CALL LETTERS OF STATIONS 
C                    IVALEN=LENGTH OF EACH CHARACTER STRING WHICH
C                           IS READ (8 IN THIS CASE)
C                     JUNIT=FILE NUMBER(5) SEE RDWMO:
C                  LEFT(ND)=SIZE OF ARRRAY NAME
C                        NT=CHARACTER STRINGS READ PER RECORD(9)
C                      NVAL=COUNT OF ELEMENTS IN ARRAY RETURNED
C                      TERM=CHARACTER STRING TO INDICATE THE 
C                           TERMINATOR OF A LIST OF STATION CALL
C                           LETTERS FOR A PARTICULAR WMO HEADER
C
C
C        ADDITIONAL VARIABLES:
C
C**             CBULHD=BULLETIN HEADER  (CHAR*18)
C**                 IC=TIME CYCLE IDENTIFIER (IC=1 00Z, IC=2 12Z)
C**                ICY=CYCLE INDICATOR (1-00, 2-06, 3-12, 4-18)
C**             IDA(3)=ARRAY USED TO HELP CALCULATE CALENDER DAY (CDAY)
C**              IDYWK=INTEGER DAY OF THE WEEK (1 - 7)
C**             IMO(3)=ARRAY USED TO HELP CALCULATE CALENDER DAY 
C**                INC=TIME INCREMENT
C**                 IS=COUNTER VARIABLE (DEPENDENT ON IC)
C**             IYR(3)=ARRAY USED TO HELP CALCULATE CALENDER DAY (CDAY)
C**              JDATE=DATE CHECK FOR SNOW (CPOS)
C**                JDY=JULIAN DATE USED TO HELP CALCULATE CDAY
C**         KOUNT( , )=INITIALLY SET TO ZERO, INCREASED BY 1            
C**                    WHERE A FORECAST IS ENTERED IN THAT LINE.        
C**                    1ST DIMENSION = LINE                             
C**                    2ND DIMENSION = GREATER THAN OR EQUAL TO NMOSTA
C**             LBULHD=NUMBER OF CHARACTERS IN BULLETIN HEADER
C**           LOC(5,4)=POSITION OF "/" IN DATE LINE
C**          LOCD(6,4)=MSG POSITION ARRAY (HR,CYC)
C**               LINE=NUMBER OF LINES REQUIRED PER STATION
C**              MM( )=ARRAY USED TO HOLD THE TDL IDENTIFIERS FOR THE
C**                    MAX/MIN TEMPERATURE FORECAST-FOR ALL CYCLES.
C**              MO( )=ARRAY OF MONTH NUMBER(1-12) USED WITH W3SF13 FOR
C**                    CALCULATION OF THE JULIAN DAY.  
C**          MSG(80, )=AREA INTO WHICH TELETYPE MESSAGE IS BUILT        
C**                    LAST DIMENSION=NOLINE SHOULD BE GE LINE*NMOSTA+5
C**               MYGA=LAST TWO DIGITS OF CURRENT YEAR
C**              NBLAK=BLANK CHARACTER
C**              NBSTA=BEGINNING STATION NUMBER (USED TO DELINEATE
C**                    BULLETIN IN WRMSG)
C**               NCAT=CHARACTER*5 CATELOG NUMBER
C**              NESTA=ENDING STATION NUMBER (USED TO DELINEATE
C**                    BULLETIN IN WRMSG)
C**              NFILL=CHARACTER USED AS FILL IN THE FOUS14--IS TRANS-
C**                    PARENT TO THE AFOS OR TTY SYSTEM.
C**             NMOSTA=NUMBER OF STATIONS FOR WHICH BULLETIN IS PREPARED
C**                    RETURNED FROM RDLSTA
C**             NOCHAR=1ST DIMENSION OF MSG( , )-MAX NUMBER OF CHARACTER
C**             NOHEAD=NUMBER OF LINES IN THE HEADER, INCLUDING BLANK
C**                    LINES.
C**             NOLINE=2ND DIMENSION OF MSG( , )-MAX NUMBER OF LINES
C**               NOUT=OUTPUT TRANSMISSION FILE UNIT NUMBER (=65)
C**              NTEMP=NUMBER OF STATIONS RUN (USUALLY EQUAL TO NMOSTA)
C**              NUNIT=OUTPUT PRINT (READABLE) FILE UNIT NUMBER (=60)
C**               VBAR=ASCII CHARACTER "BAR" (SEPARATOR LINE)
C**                    NECESSARY FOR TRANSMISSION
C
C                                                                       
C   SUBPROGRAMS CALLED:
C      UNIQUE: RDWMO(CALLS RDLSTA)
C
C     LIBRARY:                                                          
C       W3LIB: W3AG15,W3DOXDAT                     
C       TDLLIB: CHKMOS,GETDATE,CHNGDATE,GTMOS,PUTMOS,PUTCHAR,
C              PRMSG,WRMSG,MISSNG,OPMIOS,RDLSTA,PUTQ
C
C       CHNGDATE: SEE DOCUMENTATION WRITEUPS
C
C       GETDATE,GTMOS AND OPMOS: SEE DOCUMENTATION WRITEUPS
C
C       CHKMOS=CHECKS LDATE(OPERATIONAL DATE) VS
C              IDATE(DATE THE MOS DATA IN THE MOS DATA FILE
C              WERE GENERATED)
C
C      PUTCHAR=SUBROUTINE WHICH COPIES CHARACTER STRINGS FROM
C              STRING TO ANOTHER; AVOIDS HAVEING TO US DO LOOPS.
C
C       PUTMOS=SUBROUTINE WHICH CONVERTS A NUMBER (INTEGER OR
C              REAL), CONVERTS THE NUMBER TO A CHARACTER STRING
C              WHICH CAN THEN BE COPIED TO THE BULLETIN MESSAGE.
C
C         PUTQ=SUBROUTINE WHICH ATTACHES CONTROL CHARACTERS AT
C              THE END OF EACH RECORD FOR AFOS TRANSMISSION
C              (CALLED BY WRMSG)
C
C       RDLSTA=TO READ CHARACTER DATA WITH A GIVEN FORMAT.
C              ASSUME A MAX RECORD LENGTH OF 80 BYTES.
C
C        PRMSG=PRINTS AN ASCII(SEQUENTIAL FILE) OUTPUT OF MRF
C              STATION BULLETINS
C
C        WRMSG=GENERATES AN ASCII(DIRECT ACCESS "FORMATTED") FILE
C              WITH EBSCDIC CONTROL CHARACTERS (TRANSMISSION 
C              COMPONENTS) OF MRF STATION BULLETINS
C
C                                                                       
C   EXIT STATES:   (STOPS OCCUR IN MAIN UNLESS OTHERWISE STATED)
C     COND =   0 - SUCCESSFUL RUN
C          =  30 - NUMBER OF STATIONS IN LIST ARE EXCEEDED
C          = 100 - PROBLEM READING AVN MOS 2000 FORECAST FILE
C          = 115 - UNABLE TO READ THE STANDARD NMC DATE FILE       
C          = 270 - NO MOS FORECASTS WERE AVAILABLE          
C COMMENTED= 475 - CAN NOT POST MESSAGE WITH W3AG15        
C    OUT                                           
C                                                                       
C REMARKS:                                                              
C     3500 STATIONS MAX                                                 
C                                                                       
C                                                                       
C ATTRIBUTES:                                                           
C   LANGUAGE: XLF90                                                
C   MACHINE:  IBM SP
C
C$$$
      PROGRAM GFSMMGTX

      PARAMETER(NOCHAR=69,MAXSTA=25000,LINE=18,NUMDAY=5)
      PARAMETER(NOHEAD=1,ND7=54)

      INTEGER KOUNT(LINE,MAXSTA),IDA(5),MO(NUMDAY),IYR(NUMDAY),
     * MM(5,4),LOC(5,4),LOCD(6,4),NWMO(MAXSTA),IOPT,JBLOCK(MAXSTA),
     * JNERR,KUNIT,JUNIT,IUNIT,NUNIT,NDATE,NSTA,ID(4),ISW,NERR,
     * NMOSTA,LDATE,IDATE,KUT,IFLAG,IERR,MDG,MHG,MOG,MYG,NHEAD,
     * JDY,INC,JWBAN(MAXSTA),JDATE,MYGA,IDYWK,IDAT(8),JDAY,IMO(5),
     * ND5,ICY,INDEX(MAXSTA,5),IPTST,KPOS,KD(4),IS0(ND7),
     * IS1(ND7),IS2(ND7),IS4(ND7)

      REAL FCST(MAXSTA),FCST1(MAXSTA)

      CHARACTER*1 MSG(NOCHAR,MAXSTA*LINE+NOHEAD),NBLAK,NFILL,VBAR
      CHARACTER*1 POPT(4),MREC
      CHARACTER*2 CLD(5),OBV(6)
      CHARACTER*4 CMNTH(12)
      CHARACTER*5 CTYPE,NCAT
      CHARACTER*6 CDESC
      CHARACTER*8 LIST(MAXSTA)
      CHARACTER*8 CCALL(MAXSTA,6)
      CHARACTER*18 CBULHD,WMO(MAXSTA)
      CHARACTER*20 CNAME(MAXSTA)
      CHARACTER*80 BFILE

      DATA KUNIT/12/,JUNIT/5/,IUNIT/10/,NOUT/65/,NUNIT/60/
      DATA NBLAK/' '/,NFILL/' '/,LBULHD/11/,KFILD/27/,KFILDO/6/
      DATA KFILX/48/,IPTST/0/
      DATA CMNTH/'JAN ','FEB ','MAR ','APR ','MAY ','JUN ','JUL ',
     *           'AUG ','SEP ','OCT ','NOV ','DEC '/ 

      DATA LOC/24,36,48,60,66,18,30,42,54,63,
     *         24,36,48,60,66,18,30,42,54,63/
C        
C        LOCD REPRESENTS THE POSITION OF THE "/" IN THE DATE LINE.
C        THE FIRST 6 VALUES HERE ARE POSITIONS FOR 00Z, THE NEXT
C        6 ARE FOR 06Z, ETC.  THE POSITION INDICATOR OF 79 MEANS
C        THAT CYCLE DOES NOT HAVE A "/" IN THAT POSITION.
C
      DATA LOCD/6,25,49,10,79,79,6,19,43,67,6,79,           
     *          6,13,37,61,6,22,6,31,55,6,16,79/
C
C
      DATA NEW/0/
      DATA NCAT/'00000'/
      DATA IOPT/0/,NMOSTA/0/,ISW/1/,NDATE/0/,IDATE/0/,LDATE/0/
      DATA MDATE/0/,JDATE/0/,NHEAD/0/,IDYWK/0/,NESTA/0/
      DATA IDAT/0,0,0,-0500,0,0,0,0/  

      CALL W3TAGB('TDL_GFSMMGTX',2002,0011,0066,'OST22')
      ND5=MAXSTA
C        8/2005 - CHANGED VBAR FROM CHAR(203) FOR NTC
C                 ADDED MREC FOR RECORD SEPARATOR TO REPLACE $
      VBAR=CHAR(124)
      MREC=CHAR(30)


C        INITIALIZE ARRAYS
      DO 102 M=1,MAXSTA
	FCST(M)=0.
        NWMO(M)=0
      DO 102 K=1,LINE
        KOUNT(K,M)=0
  102 CONTINUE
C
C        READ IN THE TRANSMISSION BULLETIN FILE "BFILE" (OUTPUT)
C
      READ(JUNIT,103) BFILE
 103  FORMAT(A80)
      WRITE(KFILDO,104) BFILE
 104  FORMAT(' ',A80)

C        READ BULLETIN HEADERS AND STATIONS                             
      CALL RDWMO(JUNIT,NMOSTA,LIST,WMO,NWMO,NHEAD,MAXSTA)
      WRITE(6,108) NMOSTA
  108 FORMAT(1X,'NMOSTA=',I10)
      NOLINE=(NMOSTA*LINE)+NOHEAD
      WRITE(6,109)NHEAD
  109 FORMAT(1X,'NHEAD=',I10)
      KUT=0
C
C        CALL RDLNK TO RETURN THE NEWEST CALL LETTER LINKS FOR THE
C        STATIONS IN LIST.  THE STATION LIST WILL BE RETAINED IN
C        IN CCALL(J,1) 
C
      CALL RDLNK(KFILD,KFILDO,NEW,LIST,CCALL,NMOSTA,MAXSTA)  

C        FILL THE MESSAGE ARRAY WITH BLANKS EXCEPT FOR THE 1ST CHARACTER
      DO 110 M=1,NOLINE
      DO 110 K=1,NOCHAR
        MSG(K,M)=NBLAK
        IF(K.EQ.1)MSG(K,M)=NFILL
  110 CONTINUE
C
C        READ NMC STANDARD DATE FILE
C        PUT DATE IN TDL FORMAT
C
      CALL GET_NCEPDATE(IUNIT,MYG,MOG,MDG,MHG,LDATE,IERR)
      IF(IERR.NE.0) THEN
      CALL W3TAGE('TDL_GFSMMGTX')
        STOP 115
      ENDIF
C
C        FIND VALID DATES FOR HEADINGS.
C
      ICY=(MHG/6) + 1
      MDATE=LDATE
C        FIRST GET MONTH AND DAY FOR SECOND LINE
C        CHANGED THIS LOOP TO 4 ITERATIONS TO GET
C        72 HOUR DATE FOR 1200 UTC
      DO 115 K=1,5
        IF ((K.NE.1).OR.(ICY.EQ.4)) CALL CHNGDATE(-MDATE,24,MDATE)
        IMO(K)=MOD((MDATE/10000),100)
        IDA(K)=MOD((MDATE/100),100)
 115  CONTINUE
C        CONVERT 1995 TO 95 (FOR DISPLAY PURPOSES)
      MYGA=MOD(MYG,100)
      MYGC=MYG/100

C*****
C*****   START CONSTRUCTION OF THE
C*****   BULLETIN
C*****
C        PLACE HEADER INFO FOR EACH STATION
C
      DO 140 K=1,NMOSTA
C
C        BUILD 1ST LINE
      CALL PUTCHAR(MREC,MSG(1,(K-1)*LINE+2),1)
      CALL PUTCHAR(CCALL(K,1),MSG(2,(K-1)*LINE+2),5)
      CALL PUTCHAR('GFS MOS GUIDANCE',MSG(9,(K-1)*LINE+2),16)
      CALL PUTCHAR('/  /',MSG(30,(K-1)*LINE+2),4)
      CALL PUTMOS('MOG',FLOAT(MOG),0.,1.,1,12,MSG(28,(K-1)*LINE+2),
     *       2,0,'99',KX)
      CALL PUTMOS('MDG',FLOAT(MDG),0.,1.,1,31,MSG(31,(K-1)*LINE+2),
     *       2,2,'99',KX)
      CALL PUTMOS('MYG',FLOAT(MYGC),0.,1.,19,99,MSG(34,(K-1)*LINE+2),
     *       2,2,'99',KX)
      CALL PUTMOS('MYG',FLOAT(MYGA),0.,1.,0,99,MSG(36,(K-1)*LINE+2),
     *       2,2,'99',KX)
      CALL PUTCHAR('00 UTC',MSG(42,(K-1)*LINE+2),6)
      CALL PUTMOS('MHG',FLOAT(MHG),0.,1.,0,18,MSG(40,(K-1)*LINE+2),
     *       2,2,'99',KX)
      KOUNT(1,K)=1     
C
C        PLACE DATE HEADER (SECOND LINE AND NINTH LINE)
C        MUST BUILD IN TWO PARTS, DATES FOR FIRST 21 PROJECTIONS
C        AND THE WRAPPED PART OF THE MESSAGE FOR PROJECTIONS 22-27.
C        
      CALL PUTCHAR('DT',MSG(2,(K-1)*LINE+3),2)
      CALL PUTCHAR('DT',MSG(2,(K-1)*LINE+11),2)
      DO 119 J=1,3
        CALL PUTCHAR('/',MSG(LOCD(J,ICY),(K-1)*LINE+3),1)
        CALL PUTCHAR(CMNTH(IMO(J)),MSG(LOCD(J,ICY)+1,(K-1)*LINE+3),4)
        CALL PUTMOS('DAY',FLOAT(IDA(J)),0.,1.,0,31,MSG(LOCD(J,ICY)+5,
     *       (K-1)*LINE+3),2,0,'99',KX)
 119  CONTINUE
      J=4
      IF(MHG.EQ.00) THEN
        CALL PUTCHAR('/',MSG(LOCD(4,ICY),(K-1)*LINE+11),1)
        CALL PUTCHAR(CMNTH(IMO(J)),MSG(LOCD(4,ICY)+1,(K-1)*LINE+11),4)
        CALL PUTMOS('DAY',FLOAT(IDA(J)),0.,1.,0,31,MSG(LOCD(4,ICY)+5,
     *       (K-1)*LINE+11),2,0,'99',KX)
      ELSE IF(MHG.EQ.06) THEN
        CALL PUTCHAR('/',MSG(LOCD(4,ICY),(K-1)*LINE+3),1)
        CALL PUTCHAR('/',MSG(LOCD(5,ICY),(K-1)*LINE+11),1)
        CALL PUTCHAR(CMNTH(IMO(J)),MSG(LOCD(5,ICY)+1,(K-1)*LINE+11),4)
        CALL PUTMOS('DAY',FLOAT(IDA(J)),0.,1.,0,31,MSG(LOCD(5,ICY)+5,
     *       (K-1)*LINE+11),2,0,'99',KX)
      ELSE IF(MHG.EQ.12) THEN
        CALL PUTCHAR('/',MSG(LOCD(4,ICY),(K-1)*LINE+3),1)
        CALL PUTCHAR(CMNTH(IMO(J)),MSG(LOCD(4,ICY)+1,(K-1)*LINE+3),4)
        CALL PUTMOS('DAY',FLOAT(IDA(J)),0.,1.,0,31,MSG(LOCD(4,ICY)+5,
     *       (K-1)*LINE+3),2,0,'99',KX)
        CALL PUTCHAR('/',MSG(LOCD(5,ICY),(K-1)*LINE+11),1)
        CALL PUTCHAR(CMNTH(IMO(J)),MSG(LOCD(5,ICY)+1,(K-1)*LINE+11),4)
        CALL PUTMOS('DAY',FLOAT(IDA(J)),0.,1.,0,31,MSG(LOCD(5,ICY)+5,
     *       (K-1)*LINE+11),2,0,'99',KX)
        CALL PUTCHAR('/',MSG(LOCD(6,ICY),(K-1)*LINE+11),1)
      ELSE IF(MHG.EQ.18) THEN
        CALL PUTCHAR('/',MSG(LOCD(4,ICY),(K-1)*LINE+11),1)
        CALL PUTCHAR(CMNTH(IMO(J-1)),MSG(LOCD(4,ICY)+1,(K-1)*LINE+11),4)
        CALL PUTMOS('DAY',FLOAT(IDA(J-1)),0.,1.,0,31,MSG(LOCD(4,ICY)+5,
     *       (K-1)*LINE+11),2,0,'99',KX)
        CALL PUTCHAR('/',MSG(LOCD(5,ICY),(K-1)*LINE+11),1)
        CALL PUTCHAR(CMNTH(IMO(J)),MSG(LOCD(5,ICY)+1,(K-1)*LINE+11),4)
        CALL PUTMOS('DAY',FLOAT(IDA(J)),0.,1.,0,31,MSG(LOCD(5,ICY)+5,
     *       (K-1)*LINE+11),2,0,'99',KX)
      ENDIF
      KOUNT(2,K)=1
      KOUNT(9,K)=1
      KOUNT(10,K)=1
C 
C        PLACE HOUR HEADERS (THIRD LINE AND TWELFTH LINE)
C        LIKE THE DATE LINE THIS IS DONE IS 2 PARTS, PROJECTIONS 1-21
C        AND PROJECTIONS 22-27.
C
      CALL PUTCHAR('HR',MSG(2,(K-1)*LINE+4),2)
      CALL PUTCHAR('HR',MSG(2,(K-1)*LINE+12),2)
      IHR=MHG+3
      IPOS=4
      DO 136 J=1,27
        IF(J.EQ.22) THEN
          IPOS=4     
        ENDIF
        IHR=IHR+3
        IPOS=IPOS+3
        IF(IHR.EQ.24) IHR=0
        IF(J.LE.21) THEN
          CALL PUTMOS('HOUR',FLOAT(IHR),0.,1.,0,24,MSG(IPOS,
     *    (K-1)*LINE+4),2,2,'99',KX)
        ELSE
          CALL PUTMOS('HOUR',FLOAT(IHR),0.,1.,0,24,MSG(IPOS,
     *    (K-1)*LINE+12),2,2,'99',KX)
        ENDIF
 136  CONTINUE   
      KOUNT(3,K)=1
      KOUNT(11,K)=1
C
C        PLACE FORECAST ELEMENT NAMES                                   
C        ALSO DONE IT TWO PARTS.
C
        CALL PUTCHAR('TMP ',MSG(2,(K-1)*LINE+5),4)
        CALL PUTCHAR('DPT ',MSG(2,(K-1)*LINE+6),4)
        CALL PUTCHAR('WD  ',MSG(2,(K-1)*LINE+7),4)
        CALL PUTCHAR('WS  ',MSG(2,(K-1)*LINE+8),4)
        CALL PUTCHAR('WS10',MSG(2,(K-1)*LINE+9),4)
        CALL PUTCHAR('TMP ',MSG(2,(K-1)*LINE+13),4)
        CALL PUTCHAR('DPT ',MSG(2,(K-1)*LINE+14),4)
        CALL PUTCHAR('WD  ',MSG(2,(K-1)*LINE+15),4)
        CALL PUTCHAR('WS  ',MSG(2,(K-1)*LINE+16),4)
        CALL PUTCHAR('WS10',MSG(2,(K-1)*LINE+17),4)
        KOUNT(LINE,K)=-1
C        ABOVE STATEMENT PROVIDES FOR BLANK LINE.                       
 140  CONTINUE
C
CCCCCCCCCC
CCCCCCCCCC
C
C        PLACE TEMP FORECASTS
C
      ID(1)=202020008
      ID(2)=0
      ID(3)=3
      ID(4)=0
      INC=3
      IPOS=3
      DO 180 K=1,27
        IF(K.EQ.22)IPOS=3
        IPOS=IPOS+INC
        ID(3)=ID(3)+INC
        CALL READ_MOSDA(KFILDO,KFILX,IPTST,ID,LDATE,CCALL,
     *       NMOSTA,FCST,MAXSTA,ND5,ND7,IS0,IS1,IS2,IS4,
     *       INDEX,IER)
        IF(IER.LT.2) KUT=KUT+1
        DO 170 J=1,NMOSTA
          IF(K.LE.21) THEN
            CALL PUTMOS(LIST(J),FCST(J),0.,1.,-99,999,MSG(IPOS,
     *      (J-1)*LINE+5),3,0,'999',KOUNT(4,J))
          ELSE
            CALL PUTMOS(LIST(J),FCST(J),0.,1.,-99,999,MSG(IPOS,
     *      (J-1)*LINE+13),3,0,'999',KOUNT(12,J))
          ENDIF
 170    CONTINUE
 180  CONTINUE
C
C        PLACE DEW POINT FORECASTS
C
      ID(1)=203020008
      ID(2)=0
      ID(3)=3
      ID(4)=0
      INC=3
      IPOS=3
      DO 200 K=1,27
        IF(K.EQ.22) IPOS=3
        IPOS=IPOS+INC
        ID(3)=ID(3)+INC
        CALL READ_MOSDA(KFILDO,KFILX,IPTST,ID,LDATE,CCALL,
     *       NMOSTA,FCST,MAXSTA,ND5,ND7,IS0,IS1,IS2,IS4,
     *       INDEX,IER)
        IF(IER.LT.2) KUT=KUT+1
        DO 190 J=1,NMOSTA
          IF(K.LE.21) THEN
            CALL PUTMOS(LIST(J),FCST(J),0.,1.,-99,999,MSG(IPOS,
     *      (J-1)*LINE+6),3,0,'999',KOUNT(5,J))
          ELSE
            CALL PUTMOS(LIST(J),FCST(J),0.,1.,-99,999,MSG(IPOS,
     *      (J-1)*LINE+14),3,0,'999',KOUNT(13,J))
          ENDIF
 190    CONTINUE
 200  CONTINUE
C
C        PLACE WIND DIRECTION FORECASTS
C
      ID(1)=204225008
      ID(2)=0
      ID(3)=3
      ID(4)=0
      INC=3
      IPOS=4
      DO 220 K=1,27
        IF(K.EQ.22) IPOS=4
        IPOS=IPOS+INC
        ID(3)=ID(3)+INC
        CALL READ_MOSDA(KFILDO,KFILX,IPTST,ID,LDATE,CCALL,
     *       NMOSTA,FCST,MAXSTA,ND5,ND7,IS0,IS1,IS2,IS4,
     *       INDEX,IER)
        IF(IER.LT.2) KUT=KUT+1
        DO 210 J=1,NMOSTA
          IF(FCST(J).LT.9999.) THEN
C
C        ROUND THE WIND DIRECTION TO THE NEAREST 10 DEGREES.  IF
C        THE WIND DIRECTION IS BETWEEN 0 AND 5 KNOTS, IT WILL BE
C        ROUNDED TO 0 DEGREES, WHICH IS CALM.  CHANGE ALL CASES
C        WHERE THE VALUE IS 0 OR WOULD ROUND TO 0 TO 36 (360) DEGREES
C
            X=IFIX(FCST(J)/10.+.5) 
            IF(X.LT.0.5) X=36.
          ELSE
            X=9999.
          ENDIF
          IF(K.LE.21) THEN 
            CALL PUTMOS(LIST(J),X,0.,1.,0,36,MSG(IPOS,
     *      (J-1)*LINE+7),2,2,'99',KOUNT(6,J))
          ELSE
            CALL PUTMOS(LIST(J),X,0.,1.,0,36,MSG(IPOS,
     *      (J-1)*LINE+15),2,2,'99',KOUNT(14,J))
          ENDIF
 210    CONTINUE
 220  CONTINUE      
C
C        PLACE WIND SPEED FORECASTS
C
      ID(1)=204325008
      ID(2)=0
      ID(3)=3
      ID(4)=0
      INC=3
      IPOS=4
      DO 240 K=1,27
        IF(K.EQ.22) IPOS=4
        IPOS=IPOS+INC
        ID(3)=ID(3)+INC
        CALL READ_MOSDA(KFILDO,KFILX,IPTST,ID,LDATE,CCALL,
     *       NMOSTA,FCST,MAXSTA,ND5,ND7,IS0,IS1,IS2,IS4,
     *       INDEX,IER)
        IF(IER.LT.2) KUT=KUT+1
        DO 230 J=1,NMOSTA
C
C        SET DIRECTION TO 00 IF SPEED IS CALM.  THIS IS NECESSARY
C        BECAUSE IN THE WIND DIRECTION SECTION, WE CHANGED ALL THE
C        0'S TO 36'S.  NOW WE HAVE TO CHANGE THE LEGITIMATE 0'S (CALM)
C        BACK TO 0'S.
C 
          IF(FCST(J).LT.0.5) THEN
	    IF(K.LE.21) THEN	
              CALL PUTCHAR('00',MSG(IPOS,(J-1)*LINE+7),2)
            ELSE
              CALL PUTCHAR('00',MSG(IPOS,(J-1)*LINE+15),2)
            ENDIF
          ENDIF
          IF(K.LE.21) THEN
            CALL PUTMOS(LIST(J),FCST(J),0.,1.,0,98,MSG(IPOS,
     *      (J-1)*LINE+8),2,2,'99',KOUNT(7,J))
          ELSE
            CALL PUTMOS(LIST(J),FCST(J),0.,1.,0,98,MSG(IPOS,
     *      (J-1)*LINE+16),2,2,'99',KOUNT(15,J))
          ENDIF
 230    CONTINUE
 240  CONTINUE      
C
C        PLACE ADJUSTED WIND SPEED FORECASTS
C
      ID(1)=204335008
      ID(2)=0
      ID(3)=3
      ID(4)=0
      INC=3
      IPOS=4
      DO 280 K=1,27
        IF(K.EQ.22) IPOS=4
        IPOS=IPOS+INC
        ID(3)=ID(3)+INC
        CALL READ_MOSDA(KFILDO,KFILX,IPTST,ID,LDATE,CCALL,
     *       NMOSTA,FCST,MAXSTA,ND5,ND7,IS0,IS1,IS2,IS4,
     *       INDEX,IER)
        IF(IER.LT.2) KUT=KUT+1
        DO 270 J=1,NMOSTA
          IF(K.LE.21) THEN
            CALL PUTMOS(LIST(J),FCST(J),0.,1.,0,98,MSG(IPOS,
     *      (J-1)*LINE+9),2,2,'99',KOUNT(8,J))
          ELSE
            CALL PUTMOS(LIST(J),FCST(J),0.,1.,0,98,MSG(IPOS,
     *      (J-1)*LINE+17),2,2,'99',KOUNT(16,J))
          ENDIF
 270    CONTINUE
 280  CONTINUE      
C
C
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C        COMMENTED OUT PRIOR TO 11/95 REVISION:
C        PATCH TO FORCE MISSING ELEMENTS TO BE IN MESSAGE.              
C     DO 333 M=1,NMOSTA                                                 
C     DO 333 K=1,LINE                                                   
C       IF (K.NE.LINE) KOUNT(K,M)=1                                     
C333  CONTINUE
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC

      IF (KUT.LE.0) THEN
        WRITE(6,390)
 390    FORMAT(//'0NO GFS MOS FORECASTS FOUND.')
      CALL W3TAGE('TDL_GFSMMGTX')
        STOP 70
      ENDIF
C
C        FOR EACH WMO HEADER, WRITE THE MESSAGE TO THE TRAN FILE.       
      DO 400 N=1,NHEAD
        NBSTA=NESTA+1
        NESTA=NESTA+NWMO(N)
          CBULHD=WMO(N)
          CALL WRMSGA(MSG,NOCHAR,NOLINE,NBSTA,NESTA,LINE,NCAT,KOUNT,
     *    LINE,NMOSTA,CBULHD,LBULHD,MDG,MHG,NOHEAD,NOUT,BFILE,NHEAD)
 400  CONTINUE
C
C        PRINT MESSAGE                                                  
C
      CALL PRMSG(MSG,NOCHAR,NOLINE,KOUNT,LINE,NMOSTA,NUNIT,NOHEAD)
C
      CALL W3TAGE('MDL_GFSMMGTX')
      STOP
      END
