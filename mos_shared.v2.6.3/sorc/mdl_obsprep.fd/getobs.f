      SUBROUTINE GETOBS(NUNIT,IDATE,ICAO,NSTA,IOPT,NUMSTA,
     *           TYPE,LAT,LON,
     *           TIME,TMP,DEW,PRWX1,PRWX2,PRWX3,VIS,WDR,WSP,
     *           GST,MSL,ALT,CA1,CH1,CA2,CH2,CA3,CH3,CA4,CH4,
     *           CA5,CH5,CA6,CH6,PCP1,PCP3,PCP6,PP24,SUN,
     *           MX6,MN6,X24,N24,SND,SNF,SAE,SEE,SAW,SEW,
     *           NERR)
C$$$  SUBPROGRAM DOCUMENTATION BLOCK
C
C SUBPROGRAM:    GETOBS      OUTPUTS OBS FOR MOS
C   PRGMMR: GILBERT          ORG: OSD211    DATE: 96-11-15
C
C ABSTRACT: THIS CODE READS A DATASET CONTAINING BUFR FORMATTED METAR SU
C           OBSERVATIONS, AND RETURNS THE OBSERVATIONS FOR A LIST OF
C           REQUESTED STAIONS.
C
C PROGRAM HISTORY LOG:
C   96-11-07  GILBERT
C   96-11-15  ERICKSON    ADDED REWINDS BEFORE RETURNS 
C   00-01-21  ALLEN	  CONVERTED TO RUN ON THE IBM SP.
C                         FIXES WERE MADE TO THE SELECTION ROUTINE
C                         FOR MULTIPLE OBSERVATIONS.  THESE SAME
C                         FIXES WERE FIRST MADE IN GETOBSNR FOR U520 IN 98
C                         AND THE INDENTICAL CHANGES WERE MADE HERE.
C
C USAGE:    
C
C  SEE BELOW FOR MDL STANDARDS
C
C    PROGRAM GETOBS
C
C        NOVEMBER 1996    GILBERT    MDL    CRAY
C
C        PURPOSE
C           THIS CODE READS A DATASET CONTAINING BUFR FORMATTED METAR SU
C           OBSERVATIONS, AND RETURNS THE OBSERVATIONS FOR A LIST OF
C           REQUESTED STAIONS.
C
C        DATA SET USE
C           WRITE(6... - STANDARD OUTPUT   
C           FORT.NUNIT - READS A RECORD OF OBS PER STATION 
C
C   VARIABLES: 
C              NUNIT=FILE NUMBER USED FOR READING METAR(BUFFER) 
C                    OBS FILE (INPUT)
C              NDATE=DATE OF OBSERVATION DATA (READ FROM OBS FILE)
C              IDATE=DATE OF OBSERVATION DATA RERQUESTED (INPUT)
C            ICAO( )=METAR STATION ID TO 74-14 STATION ID CONVERSION 
C                    TABLE (INPUT)
C               NSTA=NO. OF STATIONS FOR WHICH OBS ARE REQUESTED (INPUT)
C               JOPT=OPTION TO READ IN DATA FOR ALL STATIONS (0) OR A
C                    SELECTED NUMBER OF STATION (INPUT)
C             NUMSTA=NUMBER OF STATIONS FOR WHICH OBS ARE RETURNED.
C             NCOUNT=COUNTER FOR THE NUMBER OF STATIONS READ IN FROM 
C                    OBS FILE AND SAVED IN INTERNAL ARRAYS.
C             MAXSTA=MAXIMUM NUMBER OF STATIONS THIS ROUTINE CAN HANDLE.
C             TYPE()=STATION TYPE (OUTPUT)
C        LAT(),LON()=STATION LATITUDE AND LONGITUDE (OUTPUT)
C             TIME()=LIST OF REPORTING TIMES (OUTPUT)
C              TMP()=LIST OF TEMPERATURES (OUTPUT)
C              DEW()=LIST OF DEW POINT TEMPERATURES (OUTPUT)
C    PRWX1(),PRWX2()=LIST OF PRESENT WEATHER WORDS 1 TO 3 (OUTPUT)
C           ,PRWX3()
C              VIS()=LIST OF VISIBILITY
C              WDR()=LIST OF WIND DIRECTION
C              WSP()=LIST OF WIND SPEED
C              GST()=LIST OF WIND GUSTS
C              MSL()=LIST OF MEAN SEA LEVEL PRESSURES
C              ALT()=LIST OF ALTIMETER
C        CA1()-CA6()=LIST OF CLOUD AMOUNTS FOR LAYERS 1-6 
C        CH1()-CH6()=LIST OF CLOUD HEIGHTS FOR LAYERS 1-6
C      PCP1(),PCP3()=LIST OF 1-HOUR, 3-HOUR, 6-HOUR AND
C    ,PCP6(),PCP24() 24-HOUR PRECIP AMOUNTS
C              SUN()=LIST OF SUNSHINE AMOUNTS
C        MX6(),MN6()=LIST OF 6-HOUR MAX AND MIN TEMPERATURES
C        X24(),N24()=LIST OF 24-HOUR MAX AND MIN TEMPERATURES 
C              SND()=LIST OF SNOW DEPTH
C              SNF()=LIST OF SNOW FALL FOR PAST HOUR
C        SAE(),SEE()=LIST OF CLOUD CLASSIFICATION AND CLOUD AMOUNT FROM
C                    GOES EAST SATELLITE (NOT YET AVAILABLE NOV. 1996)  
C        SAW(),SEW()=LIST OF CLOUD CLASSIFICATION AND CLOUD AMOUNT FROM
C                    GOES WEST SATELLITE (NOT YET AVAILABLE NOV. 1996)
C               KERR=GETOBS ERROR RETURN CODE
C             IOBTIM=STANDARD SFC OB TIME IN MINUTES.  (10 MIN. BEFORE
C                    HOUR)
C             MINOLD=TIME OF OLD REPORT IN MINUTES
C             MINNEW=TIME OF NEW REPORT IN MINUTES
C             DECODE=FLAG USED TO DECIDE WHETHER TO DECODE OB OR NOT.
C                    (LOGICAL)
C               CFLD=HOLDS ONE OBSERVATION REPORT.
C
C REMARKS:  THIS ROUTINE RETURNS ALL AVAILABLE OBSERVATIONS FOR A GIVEN
C           HOUR AND LIST OF STATIONS.  IT IS ONLY NECESSARY TO CALL
C           THIS ROUTINE WHEN A NEW STATION LIST IS REQUESTED OR A NEW
C           HOUR IS REQUESTED.  THIS ROUTINE HOLDS ONLY ONE HOUR OF DATA
C           IN CORE, SO IT IS MOST EFFICIENT TO PROCESS ALL OBS FOR ONE
C           HOUR AND THEN MOVE ON TO ANOTHER HOUR, WHEN CALLING THIS 
C           ROUTINE.
C
C ATTRIBUTES:
C   LANGUAGE: FORTRAN 77
C   MACHINE:  CRAY
C
C$$$
      PARAMETER (MAXSTA=5000)
      CHARACTER*256 CFLD
      CHARACTER*8 ICAO(NSTA),ICAOS(MAXSTA),CBLANK,CTERM,OLDSTA
      CHARACTER*7 PRWX1(NSTA),PRWX2(NSTA),PRWX3(NSTA)
      CHARACTER*7 PRWX1S(MAXSTA),PRWX2S(MAXSTA),PRWX3S(MAXSTA)
      CHARACTER*4 TYPE(NSTA),TYPES(MAXSTA),MANU
      CHARACTER*3 CA1(NSTA),CA2(NSTA),CA3(NSTA)
      CHARACTER*3 CA4(NSTA),CA5(NSTA),CA6(NSTA)
      CHARACTER*3 CA1S(MAXSTA),CA2S(MAXSTA),CA3S(MAXSTA)
      CHARACTER*3 CA4S(MAXSTA),CA5S(MAXSTA),CA6S(MAXSTA)
      CHARACTER*3 SAE(NSTA),SAW(NSTA)
      CHARACTER*3 SAES(MAXSTA),SAWS(MAXSTA)
      REAL LAT(NSTA),LON(NSTA),VIS(NSTA),MSL(NSTA),ALT(NSTA)
      REAL LATS(MAXSTA),LONS(MAXSTA),VISS(MAXSTA),MSLS(MAXSTA),
     *     ALTS(MAXSTA)
      INTEGER TIME(NSTA),TMP(NSTA),DEW(NSTA)
      INTEGER TIMES(MAXSTA),TMPS(MAXSTA),DEWS(MAXSTA)
      INTEGER WDR(NSTA),WSP(NSTA),GST(NSTA)
      INTEGER WDRS(MAXSTA),WSPS(MAXSTA),GSTS(MAXSTA)
      INTEGER CH1(NSTA),CH2(NSTA),CH3(NSTA)
      INTEGER CH4(NSTA),CH5(NSTA),CH6(NSTA)
      INTEGER CH1S(MAXSTA),CH2S(MAXSTA),CH3S(MAXSTA)
      INTEGER CH4S(MAXSTA),CH5S(MAXSTA),CH6S(MAXSTA)
      INTEGER PCP1(NSTA),PCP3(NSTA),PCP6(NSTA),PP24(NSTA)
      INTEGER PCP1S(MAXSTA),PCP3S(MAXSTA),PCP6S(MAXSTA),
     *        PP24S(MAXSTA)
      INTEGER SUN(NSTA),SUNS(MAXSTA)
      INTEGER MX6(NSTA),MN6(NSTA),X24(NSTA),N24(NSTA)
      INTEGER MX6S(MAXSTA),MN6S(MAXSTA),X24S(MAXSTA),N24S(MAXSTA)
      INTEGER SND(NSTA),SNF(NSTA),SNDS(MAXSTA),SNFS(MAXSTA)
      INTEGER SEE(NSTA),SEW(NSTA)
      INTEGER SEES(MAXSTA),SEWS(MAXSTA)
      LOGICAL DECODE
      DATA IOUT/6/,NDATE/0/,IMISS/9999/,RMISS/9999./
      DATA CBLANK/'        '/,CTERM/'ZZZZZZZZ'/,MANU/'MANU'/
      SAVE IOUT,IMISS,RMISS,CBLANK,NDATE,ICAOS,TYPES,LATS,LONS,
     *     TIMES,TMPS,DEWS,PRWX1S,PRWX2S,PRWX3S,VISS,WDRS,WSPS,
     *     GSTS,MSLS,ALTS,CA1S,CH1S,CA2S,CH2S,CA3S,CH3S,CA4S,CH4S,
     *     CA5S,CH5S,CA6S,CH6S,PCP1S,PCP3S,PCP6S,PP24S,SUNS,
     *     MX6S,MN6S,X24S,N24S,SNDS,SNFS,SAES,SEES,SAWS,SEWS
C
      NERR=0
C
C        INITIALIZE ARGUMENT ARRAYS WITH MISSING VALUES.
C
      DO 100 N=1,NSTA
        TYPE(N)=CBLANK(1:4)
        LAT(N)=RMISS
        LON(N)=RMISS
        TIME(N)=IMISS
        TMP(N)=IMISS
        DEW(N)=IMISS
        PRWX1(N)=CBLANK(1:7) 
        PRWX2(N)=CBLANK(1:7) 
        PRWX3(N)=CBLANK(1:7) 
        VIS(N)=RMISS
        WDR(N)=IMISS
        WSP(N)=IMISS
        GST(N)=IMISS
        MSL(N)=RMISS
        ALT(N)=RMISS
        CA1(N)=CBLANK(1:3) 
        CH1(N)=IMISS
        CA2(N)=CBLANK(1:3) 
        CH2(N)=IMISS
        CA3(N)=CBLANK(1:3) 
        CH3(N)=IMISS
        CA4(N)=CBLANK(1:3) 
        CH4(N)=IMISS
        CA5(N)=CBLANK(1:3) 
        CH5(N)=IMISS
        CA6(N)=CBLANK(1:3) 
        CH6(N)=IMISS
        PCP1(N)=IMISS
        PCP3(N)=IMISS
        PCP6(N)=IMISS
        PP24(N)=IMISS
        SUN(N)=IMISS
        MX6(N)=IMISS
        MN6(N)=IMISS
        X24(N)=IMISS
        N24(N)=IMISS
        SND(N)=IMISS
        SNF(N)=IMISS
        SAE(N)=CBLANK(1:3) 
        SEE(N)=IMISS
        SAW(N)=CBLANK(1:3) 
        SEW(N)=IMISS
 100  CONTINUE
C
C        IF A NEW HOUR OF OBSERVATIONS IS REQUESTED, READ THE NEW
C        OBSERVATION TABLE INTO LOCAL VARIABLES.
C
      IF ( IDATE.NE.NDATE) THEN
C
C        READ IN DATE FROM HEADER OF OBSERVATION FILE
C
        READ(NUNIT,200,END=900) NDATE
 200    FORMAT(30X,I10)
C
C        MAKE SURE THAT THE DATE IN THE OBSERVATION FILE MATCHES THE 
C        REQUESTED DATE.
C
        IF (IDATE.NE.NDATE) THEN
C        DATES DON'T MATCH.  RETURN WITH NERR=2
          WRITE(IOUT,220) NDATE,NUNIT,IDATE
 220      FORMAT(' DATE OF OBSERVATIONS ',I10,' IN UNIT ',I2,
     *    ' DOES NOT MATCH REQUESTED DATE ',I10)
          NDATE=0
          NUMSTA=0
          NERR=2
          REWIND NUNIT
          RETURN
        ELSE
C        DATES MATCH. GO AHEAD AND READ IN REST OF OBSERVATION TABLE.
          READ(NUNIT,*)
          NCOUNT=0
C
C        CALCULATE THE STANDARD OB TIME ( 10 MIN. BEFORE THE HOUR )
C        IN MINUTES OF THE DAY.
C
          IHOUR=MOD(NDATE,100)
           IF(IHOUR.EQ.0)THEN
            IOBTIM=1430
           ELSE
            IOBTIM=(IHOUR*60)-10
           ENDIF
C
C        READ IN A RECORD OF OBS FOR A STATION
C
 300      READ(NUNIT,FMT='(A256)',END=400) CFLD
C
C        CHECK TO SEE IF THE TERMINATOR RECORD WAS READ.
C
          IF (CFLD(1:8).EQ.CTERM) GOTO 400
C
C        GET PREVIOUS STATION'S IDENTIFIERS
C
          IF (NCOUNT.EQ.0) THEN
            OLDSTA=CBLANK
          ELSE
            OLDSTA=ICAOS(NCOUNT)
          ENDIF
C
C        SELECTION PROCESS FOR MULTIPLE REPORTS FOR ONE STATION:
C        IT IS ASSUMED THAT ALL REPORTS FOR A STATION ARE 
C        STORED CONSECUTIVELY IN THE FILE.
C
C        1) MANUAL REPORTS ARE SELECTED OVER AUTOMATED REPORTS.
C        2) IF MORE THAN ONE REPORT OF THE SAME TYPE, CHOOSE THE REPORT
C           CLOSEST TO 10 MIN. BEFORE THE HOUR.  IF BOTH REPORTS ARE
C           EQUALLY OFFSET FROM 10 MIN. BEFORE THE HOUR, THEN
C           SELECT THE SECOND REPORT.
C
          DECODE=.FALSE.
C        CHECK TO SEE IF STATION IN NEW REPORT IS SAME AS PREVIOUS REPOR
          IF (CFLD(1:8).EQ.OLDSTA) THEN
C        DECODE NEW REPORT IF IT IS MANUAL AND PREVIOUS ONE IS NOT
            IF ((CFLD(10:13).EQ.MANU).AND.(TYPES(NCOUNT).NE.
     &           MANU)) THEN
              DECODE=.TRUE.
              NCOUNT=NCOUNT-1
C        DO NOT DECODE NEW REPORT IF IT IS NOT MANUAL AND PREVIOUS ONE I
            ELSEIF ((CFLD(10:13).NE.MANU).AND.
     *              (TYPES(NCOUNT).EQ.MANU)) THEN
              DECODE=.FALSE.
            ELSE
C        OTHERWISE, DECODE REPORT IF IT IS CLOSER TO STANDARD OB TIME
C        THAN THE PREVIOUS REPORT.
              DECODE=.FALSE.
C        CALCULATE THE TIME OF PREVIOUS REPORT IN MINUTES
              ITIME=TIMES(NCOUNT)
              IF ((IHOUR.EQ.0).AND.((ITIME/100).EQ.0)) THEN
                MINOLD=MOD(ITIME,100)+1440
              ELSE
                MINOLD=((ITIME/100)*60)+MOD(ITIME,100)
              ENDIF
              IDIFF=IABS(MINOLD-IOBTIM)
C        CALCULATE THE TIME OF CURRENT REPORT IN MINUTES
              READ(CFLD,FMT='(29X,I4)') NTIME
              IF ((IHOUR.EQ.0).AND.((NTIME/100).EQ.0)) THEN
                MINNEW=MOD(NTIME,100)+1440
              ELSE
                MINNEW=((NTIME/100)*60)+MOD(NTIME,100)
              ENDIF
              NDIFF=IABS(MINNEW-IOBTIM)
C        DECODE NEW REPORT IF IT IS CLOSER TO STANDARD OB. TIME
C        THAN PREVIOUS REPORT.
              IF (NDIFF.LT.IDIFF) THEN
                DECODE=.TRUE.
                NCOUNT=NCOUNT-1       
              ENDIF
C        DECODE NEW REPORT IF IT IS JUST AS CLOSE TO STANDARD OB
C        TIME, BUT WAS SENT AFTER THE PREVIOUS ONE.
              IF ((NDIFF.EQ.IDIFF).AND.(MINNEW.GT.MINOLD))THEN
                 DECODE=.TRUE.
                 NCOUNT=NCOUNT-1
              ENDIF
            ENDIF
          ELSE
C        NEW STATION...GO AHEAD AND DECODE.
            DECODE=.TRUE.
          ENDIF
C
C        IF THIS REPORT IS SELECTED, DECODE THE RECORD AND STORE
C        THE APPROPRIATE VALUES IN THE INTERNAL STORING ARRAYS.
C        
          IF (DECODE) THEN
            NCOUNT=NCOUNT+1
            READ(CFLD,340) ICAOS(NCOUNT),TYPES(NCOUNT),LATS(NCOUNT),
     *                     LONS(NCOUNT),TIMES(NCOUNT),TMPS(NCOUNT),
     *                     DEWS(NCOUNT),PRWX1S(NCOUNT),PRWX2S(NCOUNT),
     *                     PRWX3S(NCOUNT),VISS(NCOUNT),WDRS(NCOUNT),
     *                     WSPS(NCOUNT),GSTS(NCOUNT),MSLS(NCOUNT),
     *                     ALTS(NCOUNT),CA1S(NCOUNT),CH1S(NCOUNT),
     *                     CA2S(NCOUNT),CH2S(NCOUNT),CA3S(NCOUNT),
     *                     CH3S(NCOUNT),CA4S(NCOUNT),CH4S(NCOUNT),
     *                     CA5S(NCOUNT),CH5S(NCOUNT),CA6S(NCOUNT),
     *                     CH6S(NCOUNT),PCP1S(NCOUNT),PCP3S(NCOUNT),
     *                     PCP6S(NCOUNT),PP24S(NCOUNT),SUNS(NCOUNT),
     *                     MX6S(NCOUNT),MN6S(NCOUNT),X24S(NCOUNT),
     *                     N24S(NCOUNT),SNDS(NCOUNT),SNFS(NCOUNT),
     *                     SAES(NCOUNT),SEES(NCOUNT),SAWS(NCOUNT),
     *                     SEWS(NCOUNT)
 340        FORMAT(A8,1X,A4,1X,F6.2,1X,F7.2,1X,I4,1X,2(I3,1X),
     *             3(A7,1X),
     *             F5.2,1X,3(I3,1X),F6.1,1X,F5.2,1X,
     *             6(A3,1X,I3,1X),4(I4,1X),7(I3,1X),
     *             2(A3,1X,I3,1X))
            IF (CFLD(15:20).EQ.CBLANK(1:6)) LATS(NCOUNT)=RMISS
            IF (CFLD(22:28).EQ.CBLANK(1:7)) LONS(NCOUNT)=RMISS
            IF (CFLD(30:33).EQ.CBLANK(1:4)) TIMES(NCOUNT)=IMISS
            IF (CFLD(35:37).EQ.CBLANK(1:3)) TMPS(NCOUNT)=IMISS
            IF (CFLD(39:41).EQ.CBLANK(1:3)) DEWS(NCOUNT)=IMISS
            IF (CFLD(67:71).EQ.CBLANK(1:5)) VISS(NCOUNT)=RMISS
            IF (CFLD(73:75).EQ.CBLANK(1:3)) WDRS(NCOUNT)=IMISS
            IF (CFLD(77:79).EQ.CBLANK(1:3)) WSPS(NCOUNT)=IMISS
            IF (CFLD(81:83).EQ.CBLANK(1:3)) GSTS(NCOUNT)=IMISS
            IF (CFLD(85:90).EQ.CBLANK(1:6)) MSLS(NCOUNT)=RMISS
            IF (CFLD(92:96).EQ.CBLANK(1:5)) ALTS(NCOUNT)=RMISS
            IF (CFLD(102:104).EQ.CBLANK(1:3)) CH1S(NCOUNT)=IMISS
            IF (CFLD(110:112).EQ.CBLANK(1:3)) CH2S(NCOUNT)=IMISS
            IF (CFLD(118:120).EQ.CBLANK(1:3)) CH3S(NCOUNT)=IMISS
            IF (CFLD(126:128).EQ.CBLANK(1:3)) CH4S(NCOUNT)=IMISS
            IF (CFLD(134:136).EQ.CBLANK(1:3)) CH5S(NCOUNT)=IMISS
            IF (CFLD(142:144).EQ.CBLANK(1:3)) CH6S(NCOUNT)=IMISS
            IF (CFLD(146:149).EQ.CBLANK(1:4)) PCP1S(NCOUNT)=IMISS
            IF (CFLD(151:154).EQ.CBLANK(1:4)) PCP3S(NCOUNT)=IMISS
            IF (CFLD(156:159).EQ.CBLANK(1:4)) PCP6S(NCOUNT)=IMISS
            IF (CFLD(161:164).EQ.CBLANK(1:4)) PP24S(NCOUNT)=IMISS
            IF (CFLD(166:168).EQ.CBLANK(1:3)) SUNS(NCOUNT)=IMISS
            IF (CFLD(170:172).EQ.CBLANK(1:3)) MX6S(NCOUNT)=IMISS
            IF (CFLD(174:176).EQ.CBLANK(1:3)) MN6S(NCOUNT)=IMISS
            IF (CFLD(178:180).EQ.CBLANK(1:3)) X24S(NCOUNT)=IMISS
            IF (CFLD(182:184).EQ.CBLANK(1:3)) N24S(NCOUNT)=IMISS
            IF (CFLD(186:188).EQ.CBLANK(1:3)) SNDS(NCOUNT)=IMISS
            IF (CFLD(190:192).EQ.CBLANK(1:3)) SNFS(NCOUNT)=IMISS
            IF (CFLD(198:200).EQ.CBLANK(1:3)) SEES(NCOUNT)=IMISS
            IF (CFLD(206:208).EQ.CBLANK(1:3)) SEWS(NCOUNT)=IMISS
          ENDIF
C
C        CHECK TO SEE IF THE MAX NUMBER OF STATIONS HAS BEEN
C        PROCESSED
C
            IF (NCOUNT.EQ.MAXSTA) THEN
              WRITE(IOUT,350) MAXSTA,NUNIT,MAXSTA
 350          FORMAT('THE MAX NUMBER OF STATION REPORTS ',I5,
     *        ' HAVE BEEN PROCESSED FROM THE OBS FILE ON UNIT ',I2/,
     *        ' PROCESSING WILL CONTINUE USING ONLY THE FIRST ',I5,
     *        ' REPORTS.'/' INCREASE PARAMETER MAXSTA ',
     *        ' IN SUBROUTINE GETOBS TO HANDLE MORE REPORTS.')
                NERR=3
              GOTO 400
            ENDIF
C
C        GO BACK AND READ ANOTHER REPORT FROM THE OBS FILE
C
          GOTO 300
        ENDIF
      ENDIF
C
C        CHECK PROCESSING OPTION, IOPT.
C        IOPT = 0 INDICATES THAT DATA FOR ALL STATIONS IS
C                 REQUESTED.
C        IOPT .NE. 0 INDICATES THAT OBS ARE REQUESTED FOR THE
C                    STATIONS GIVEN IN ICAO().
C
 400	IF (IOPT.EQ.0) THEN
C        RETURN DATA FOR ALL AVAILABLE STATIONS.
C
C        CALCULATE NUMBER OF STATIONS TO RETURN.  CANNOT
C        PASS BACK MORE THAN THE CALLING ROUTINE IS
C        EXPECTING.
C
        IF (NCOUNT.GT.NSTA) THEN
          WRITE(IOUT,460) NCOUNT,NDATE,NUNIT,NSTA,NSTA
 460      FORMAT(I5,' STATIONS WERE READ FROM THE ',I10,
     *    ' OBS FILE ON UNIT ',I2,'. HOWEVER ',I5,
     *    ' WERE REQUESTED.'/' DATA FOR THE FIRST ',I5,' STATIONS ',
     *    ' WILL BE RETURNED.')
          NUMSTA=NSTA
          NERR=4
        ELSE
          NUMSTA=NCOUNT
        ENDIF
C
C        COPY OBS VALUES FOR NUMSTA STATIONS
C        TO THE RETURNED ARGUMENT ARRAYS.
C
        DO 600 N=1,NUMSTA
          ICAO(N)=ICAOS(N)
          TYPE(N)=TYPES(N)
          LAT(N)=LATS(N)
          LON(N)=LONS(N)
          TIME(N)=TIMES(N)
          TMP(N)=TMPS(N)
          DEW(N)=DEWS(N)
          PRWX1(N)=PRWX1S(N) 
          PRWX2(N)=PRWX2S(N) 
          PRWX3(N)=PRWX3S(N) 
          VIS(N)=VISS(N)
          WDR(N)=WDRS(N)
          WSP(N)=WSPS(N)
          GST(N)=GSTS(N)
          MSL(N)=MSLS(N)
          ALT(N)=ALTS(N)
          CA1(N)=CA1S(N) 
          CH1(N)=CH1S(N)
          CA2(N)=CA2S(N) 
          CH2(N)=CH2S(N)
          CA3(N)=CA3S(N) 
          CH3(N)=CH3S(N)
          CA4(N)=CA4S(N) 
          CH4(N)=CH4S(N)
          CA5(N)=CA5S(N) 
          CH5(N)=CH5S(N)
          CA6(N)=CA6S(N) 
          CH6(N)=CH6S(N)
          PCP1(N)=PCP1S(N)
          PCP3(N)=PCP3S(N)
          PCP6(N)=PCP6S(N)
          PP24(N)=PP24S(N)
          SUN(N)=SUNS(N)
          MX6(N)=MX6S(N)
          MN6(N)=MN6S(N)
          X24(N)=X24S(N)
          N24(N)=N24S(N)
          SND(N)=SNDS(N) 
          SNF(N)=SNFS(N) 
          SAE(N)=SAES(N) 
          SEE(N)=SEES(N)
          SAW(N)=SAWS(N) 
          SEW(N)=SEWS(N)
 600    CONTINUE
      ELSE
C        RETURN DATA FOR REQUESTED STATIONS.
C
C        FOR EACH REQUESTED STATION, LOCATE IT'S POSITION
C        IN THE INTERNAL STORING ARRAYS.
C
        NUMSTA=NSTA
        DO 800 N=1,NSTA
          DO 750 J=1,NCOUNT
            IF (ICAO(N).EQ.ICAOS(J)) THEN
              JPOS=J
              GOTO 780
            ENDIF
 750      CONTINUE
C
C        IF FALL THROUGH 750 LOOP, REQUESTED STATION WAS NOT FOUND
C        PRINT MESSAGE, SET ERROR RETURN TO 5, AND GO ON TO
C        PROCESS NEXT STATION.  NOTE THAT THE RETURNED ARRAYS HAVE 
C        ALREADY BEEN INITIALIZED WITH MISSING VALUES.
C
          WRITE(IOUT,760) ICAO(N),NDATE,NUNIT
 760      FORMAT(' STATION ',A8,' NOT FOUND IN ',I10,
     *    ' OBSERVATION FILE ON UNIT ',I2)
          NERR=5
          GOTO 800
C
C        ASSIGN OBS VALUES FOR CURRENT STATION TO THE APPROPRIATE
C        LOCATION IN THE RETURNED ARGUMENT ARRAYS.
C
 780      TYPE(N)=TYPES(JPOS)
          LAT(N)=LATS(JPOS)
          LON(N)=LONS(JPOS)
          TIME(N)=TIMES(JPOS)
          TMP(N)=TMPS(JPOS)
          DEW(N)=DEWS(JPOS)
          PRWX1(N)=PRWX1S(JPOS) 
          PRWX2(N)=PRWX2S(JPOS) 
          PRWX3(N)=PRWX3S(JPOS) 
          VIS(N)=VISS(JPOS)
          WDR(N)=WDRS(JPOS)
          WSP(N)=WSPS(JPOS)
          GST(N)=GSTS(JPOS)
          MSL(N)=MSLS(JPOS)
          ALT(N)=ALTS(JPOS)
          CA1(N)=CA1S(JPOS) 
          CH1(N)=CH1S(JPOS)
          CA2(N)=CA2S(JPOS) 
          CH2(N)=CH2S(JPOS)
          CA3(N)=CA3S(JPOS) 
          CH3(N)=CH3S(JPOS)
          CA4(N)=CA4S(JPOS) 
          CH4(N)=CH4S(JPOS)
          CA5(N)=CA5S(JPOS) 
          CH5(N)=CH5S(JPOS)
          CA6(N)=CA6S(JPOS) 
          CH6(N)=CH6S(JPOS)
          PCP1(N)=PCP1S(JPOS)
          PCP3(N)=PCP3S(JPOS)
          PCP6(N)=PCP6S(JPOS)
          PP24(N)=PP24S(JPOS)
          SUN(N)=SUNS(JPOS)
          MX6(N)=MX6S(JPOS)
          MN6(N)=MN6S(JPOS)
          X24(N)=X24S(JPOS)
          N24(N)=N24S(JPOS)
          SND(N)=SNDS(JPOS) 
          SNF(N)=SNFS(JPOS) 
          SAE(N)=SAES(JPOS) 
          SEE(N)=SEES(JPOS)
          SAW(N)=SAWS(JPOS) 
          SEW(N)=SEWS(JPOS)
 800    CONTINUE
      ENDIF
      REWIND NUNIT
      RETURN
C
C        COMES HERE IF HOURLY OBS FILE IS EMPTY
C        (I.E.  NOT AVAILABLE YET.)
C
 900  WRITE(IOUT,920) NUNIT
 920  FORMAT(' HOURLY OBSERVATION FILE ON UNIT ',I2,
     *  ' IS EMPTY.  NO PROCESSING DONE. ')
      NDATE=0
      NUMSTA=0
      NERR=6
      REWIND NUNIT
      RETURN
      END
