      PROGRAM RACREATE
C$$$  MAIN PROGRAM DOCUMENTATION BLOCK  ***                             
C                                                                       
C MAIN PROGRAM: MDL_RACREATE
C   PRGMMR: ALLEN            ORG: OSD211      DATE: 2000-05-25
C                                                                       
C ABSTRACT: TO ESTABLISH ONE OR MORE MOS-2000 DIRECT ACCESS FILES.
C   EACH RECORD READ FROM CONTROL FILE U350.CN BEFORE THE
C   TERMINATOR WILL CAUSE ONE FILE TO BE CREATED.
C   AN EXISTING FILE WITH THE SAME NAME AS THE ONE TO
C   BE CREATED WILL BE DELETED.  U350 WILL RUN ON EITHER THE
C   64-BIT CRAY OR THE 32-BIT WORKSTATION, EXCEPT THAT IT
C   MUST BE COMPILED WITH THE APPROPRIATE PARAMETER 
C   STATEMENT FOR L3264B (THE NUMBER OF BITS PER 'WORD').
C
C PROGRAM HISTORY LOG:                                                  
C   96-11-01  GLAHN                          
C   00-04-18  DREWRY  MODIFIED FORMAT STATEMENTS TO CONFORM TO FORTRAN 90
C                     STANDARDS ON THE IBM SP. ADDED NCEP DOC-BLOCK. 
C                     ADDED CALLS TO W3TAGB AND GET_NCEPDATE. CHANGED THE 
C                     VALUE OF KFILDO FROM 12 TO 6. 
C   00-05-09  DREWRY  REMOVED THE 'FILE= ' PORTION OF AN OPEN STATEMENT SO THAT
C                     THIS PROGRAM CAN BE RUN IN OPERATIONS WHERE ALL FILES WILL
C                     BE ASSIGNED NAMES IN THE SCRIPT WHICH RUNS THE PROGRAM.
C   06-06-29  RLC     INCREASED NW FROM 70000 TO 140000 TO MATCH HRG CHANGE FROM
C                     6/2006. 
C   12-10-31  ENGLE   ADDED CONVERT='BIG_ENDIAN' TO OPEN STATEMENT.
C
C USAGE:                                                                
C                                                                       
C        DATA SET USE                                                   
C        INPUT FILES:
C         FORT.KFILDI - UNIT NUMBER FOR CONTROL FILE 'U350.CN'.
C
C        OUTPUT FILES:  (INCLUDING WORK FILES)
C          FORT.KFILX - UNIT NUMBER FOR MOS-2000.
C         FORT.KFILDO - UNIT NUMBER FOR OUTPUT (PRINT) FILE.
C                                                                       
C        VARIABLES
C               CFILX = FILE NAME TO CREATE.  (CHARACTER*60)
C             KEYR(J) = AN ARRAY THAT HOLDS THE KEYS PORTION OF A KEY
C                       RECORD, ZEROED FOR WRITING.  A KEY RECORD IS 
C                       ALWAYS WRITTEN TO AVOID DIFFICULTIES LATER.
C              KFILDI = UNIT NUMBER FOR CONTROL FILE 'U350.CN'. 
C               KFILX = UNIT NUMBER FOR MOS-2000 FILE. 
C              KFILDO = UNIT NUMBER FOR OUTPUT (PRINT) FILE.
C              L3264B = 32 FOR A 32-BIT WORKSTATION;
C                       64 FOR THE 64-BIT CRAY.  SET BY PARAMETER.
C            MASTR(J) = 6 WORDS (J=1,6) TO WRITE AS MASTER KEY RECORD 
C                       TO EACH FILE CREATED.  THE WORDS ARE: 
C                       1 = RESERVED.  SET TO ZERO.
C                       2 = NUMBER OF INTEGER WORDS IN ID FOR EACH
C                           RECORD.  INITIALIZED TO NIDS.  THIS IS
C                           4 UNLESS CHANGES ARE MADE TO THE SOFTWARE.
C                       3 = NUMBER OF WORDS IN A PHYSICAL RECORD =
C                           NBYTES/(L3264B/8).
C                       4 = NUMBER OF KEY RECORDS STORED IN THE FILE.
C                           INITIALLY = 1.
C                       5 = MAXIMUM NUMBER OF KEYS IN A KEY RECORD.
C                           INITIALIZED TO MAXENT READ FROM CONTROL FILE.
C                       6 = LOCATION OF WHERE THE FIRST PHYSICAL RECORD
C                           OF THE LAST LOGICAL KEY RECORD OF THE FILE
C                           IS LOCATED.
C              MAXENT = MAXIMUM NUMBER OF ENTRIES IN EACH KEY RECORD 
C                       OF THE FILE TO BE ESTABLISHED.  THIS MAY BE 
C                       ADJUSTED UPWARD SO THAT THE MAXIMUM NUMBER
C                       OF ENTRIES WILL NOT BE LESS THAN THE SIZE
C                       OF A KEY RECORD.
C                       TERMINATOR = 9999 STOPS THE PROGRAM.
C              NBYTES = SIZE IN BYTES OF PHYSICAL KEY AND DATA RECORDS.
C                       THIS IS MODIFIED, IF NECESSARY, TO MAKE IT 
C                       EVENLY DIVISIBLE BY 8.  THIS IS SPECIFIED AS
C                       BYTES BECAUSE IT SHOULD BE MORE CONSTANT FROM
C                       THE CRAY TO THE WORKSTATIONS RATHER THAN NUMBER
C                       OF WORDS; MOST OF THE DATA WILL BE PACKED AND 
C                       THE BYTES OF AN INDIVIDUAL RECORD WILL BE
C                       CONSTANT.  THE VALUE SHOULD ALWAYS BE CONSIDERABLY
C                       LARGER THAN THE MINIMUM OF 48 BYTES FOR THE 
C                       CRAY OR 24 FOR THE HP.
C                NIDS = NUMBER OF INTEGER WORDS IN EACH ID IN EACH
C                       RECORD.  SET BY DATA STATEMENT TO 5.
C           NOPREC(J) = 6 WORDS (J=1,6) USED BY THE FILE SYSTEM.  WORDS
C                       3, 5, AND 6 ARE WRITTEN AS PART OF THE KEY
C                       RECORD.  THE WORDS ARE:
C                       1 = LOCATION IN KEYREC( , , ) OF THE KEY RECORD.
C                           ZERO INITIALLY.
C                       2 = LOCATION OF THIS KEY RECORD IN THE FILE.
C                           SET TO 2.
C                       3 = NUMBER OF SLOTS FILLED IN THIS KEY.
C                           ZERO INITIALLY.
C                       4 = INDICATES WHETHER (1) OR NOT (0) THE KEY
C                           RECORD HAS BEEN MODIFIED AND NEEDS TO BE
C                           WRITTEN.  ZERO INITIALLY.
C                       5 = NUMBER OF PHYSICAL RECORDS IT TAKES TO HOLD
C                           THIS LOGICAL KEY RECORD.  THIS IS FILLED BY
C                           WRKEYM.
C                       6 = INITIALLY 9999 TO INDICATE THIS IS THE LAST
C                           KEY RECORD IN THE FILE.
C                  NW = SET TO SOME NUMBER SUCH THAT NW GE NBYTES*6.
C                       IS IS USED AS THE DIMENSION FOR KEYR( ) FOR
C                       WRITING A BLANK KEY RECORD.  (SET BY PARAMETER)
C               STATE = SET TO A STATEMENT NUMBER TO INDICATE IN
C                       SUBROUTINE IERX ABOUT WHERE AN ERROR OCCURRED.
C                       (CHARACTER*4)
C                                                                       
C        SUBPROGRAMS CALLED:  IERX, TIMPR, W3TAGB, W3TAGE, WRKEY 
C          UNIQUE: - NONE
C          LIBRARY:
C           MOSLIB - IERX, TIMPR, WRKEY
C            W3LIB - W3TAGB, W3TAGE 
C                                                                       
C        EXIT STATES:
C          COND =    0 - SUCCESSFUL RUN
C                  154 - ERROR OPENING FILE
C                  155 - ATTEMPT TO CREATE A NEW FILE WITH THE SAME
C                        NAME AS AS AN EXISTING FILE.  
C                  900 - ERROR OPENING OR READING A FILE
C                                                                       
C REMARKS:  NONE 
C                                                                       
C ATTRIBUTES:                                                           
C   LANGUAGE:  FORTRAN 90 (xlf90 compiler) 
C   MACHINE:  IBM SP
C
C$$$                                                                    
      PARAMETER (L3264B=32)
      PARAMETER (NW=140000)
C
      CHARACTER*4 STATE 
      CHARACTER*60 CFILX,BLANK/' '/
C
      DIMENSION MASTR(6)
      DIMENSION KEYR(7*NW),NOPREC(6)
C
      DATA KFILDI/5/, 
     1     KFILDO/6/
      DATA NIDS/4/
C
C        PRINT IDENTIFYING INFORMATION 
C
      CALL W3TAGB('MDL_RACREATE',2000,0146,0073,'OSD211')
C 
C        TIME STAMP U350 START. 
C 
      CALL TIMPR(KFILDO,KFILDO,'START U350          ') 
C 
C        READ FILE NAME, PHYSICAL RECORD SIZE, KEY RECORD SIZE
C        FOR THE MASTER KEY RECORD FROM THE FILE 'U350.CN' 
C 
      STATE='105 '
c      OPEN(UNIT=KFILDI,FILE='U350.CN',STATUS='OLD',
c     1     IOSTAT=IOS,ERR=900)
 105  CFILX(1:60)=BLANK(1:60)
C        BLANK OUT CFILX FOR SAFETY.  IF NOT ALL 60 CHARACTERS ARE
C        PRESENT TO BE READ, THEY MAY NOT GET MODIFIED IN CFILX.
      STATE='108 ' 
      READ(KFILDI,108,IOSTAT=IOS,ERR=900,END=900)MAXENT,NBYTES,KFILX
 108  FORMAT(2I8,1X,I3)
      IF(MAXENT.EQ.9999)GO TO 200
C
C        FILL ARRAY TO WRITE TO MASTER KEY RECORD. 
C 
      MASTR(1)=0
C        THE FIRST WORD IS RESERVED.
      MASTR(2)=NIDS 
C        SECOND WORD INDICATES THE NUMBER OF WORDS IN A KEY.
C        IT CONSISTS OF 4 MOS IDS.
      NBYTES=((NBYTES+7)/8)*8
C        MAKE NBYTES EVENLY DIVISIBLE BY 8 SO THAT IT WILL BE AN
C        EVEN NUMBER OF WORDS ON EITHER A 32- OR 64-BIT MACHINE.
C        ROUNDED UP IN CASE SOMEONE HAS COUNTED ON AN EXACT VALUE.
      MASTR(3)=NBYTES/(L3264B/8)
C        THE THIRD WORD INDICATES THE MAXIMUM NUMBER OF WORDS 
C        OF DATA IN A DATA RECORD.
      MASTR(4)=1      
C        THE FOURTH WORD INDICATES THE NUMBER OF KEY RECORDS STORED.
C        THIS IS INITIALLY ONE.
      MASTR(5)=MAX(MAXENT,((NBYTES*8/L3264B)-3)/6)
C        FIRST WORD CONTAINS THE MAXIMUM NUMBER OF KEYS IN A KEY RECORD.
      MASTR(6)=2
C        THE SIXTH WORD CONTAINS THE LOCATION WHERE THE LAST PHYSICAL
C        KEY RECORD STARTS.  INITIALLY THIS IS 2 FOR THE ONLY KEY
C        RECORD THERE.
C
      IF(NBYTES*6.LE.NW)GO TO 150
      NSIZE=7*NBYTES
      WRITE(KFILDO,149)NW,NSIZE
 149  FORMAT(/,' ****SIZE OF ARRAY KEYR( ) =',I8,
     1        ' TOO SMALL.  INCREASE TO GE',I8,/,
     2        '     FILE NOT CREATED...CONTINUING')
      GO TO 105
C
C        ZERO KEY RECORD.
C
 150  DO 152 J=1,7*NBYTES
      KEYR(J)=0
 152  CONTINUE
C 
C        SET NOPREC( ) AS NECESSARY.
      NOPREC(1)=0
C        LOCATION IN KEYREC( , , ) OF THE KEY RECORD.
      NOPREC(2)=2
C        LOCATION OF THIS KEY RECORD IN THE FILE.
      NOPREC(3)=0
C        NUMBER OF SLOTS (KEYS) FILLED IN THIS KEY RECORD.
      NOPREC(4)=0
C        INITIALLY SET TO ZERO TO INDICATE THE KEY RECORD IN
C        STORAGE HAS NOT BEEN CHANGED.
      NOPREC(5)=0
C        NUMBER OF PHYSICAL RECORDS IT TAKES TO HOLD THIS
C        LOGICAL KEY RECORD.  IT WILL BE FILLED IN BY
C        WRKEYM.
      NOPREC(6)=9999
C        THIS IS THE LAST KEY RECORD.
C
C        REMOVE AN EXISTING FILE OF NAME CFILX IF IT EXISTS. 
C 
C***      CALL SYSTEM('rm -f '//CFILX)
C
C        OPEN FILE AND WRITE MASTER KEY RECORD. 
C
      STATE='154 '
      OPEN(UNIT=KFILX,STATUS='NEW',CONVERT='BIG_ENDIAN',
     1     ACCESS='DIRECT',RECL=NBYTES,IOSTAT=IOS,ERR=154)
C
C         THIS OPEN STATEMENT WAS COMMENTED OUT AND REPLACED BY THE ONE
C         ABOVE IN ORDER TO REMOVE THE 'FILE=CFILX' PORTION WHICH IS 
C         INCOMPATIBLE WITH OPERATION GUIDELINES IN WHICH ALL FILES ARE
C         ASSIGNED NAMES IN THE SCRIPT WHICH RUNS THE PROGRAM
C      OPEN(UNIT=KFILX,FILE=CFILX,STATUS='NEW',
C     1     ACCESS='DIRECT',RECL=NBYTES,IOSTAT=IOS,ERR=154)
      GO TO 156
C
 154  IF(IOS.NE.918)THEN
         WRITE(KFILDO,1540)CFILX,IOS
 1540    FORMAT(/,' ****ERROR OPENING FILE IN U350 ',A60,/,
     1           '     IOS =',I5,'.  STOP AT 154.')
         CALL W3TAGE('MDL_RACREATE')
         STOP 154
      ENDIF
C
C        FILE ALREADY EXISTS.
      WRITE(KFILDO,155)CFILX,IOS
 155  FORMAT(/,' ****AN ATTEMPT IS MADE TO CREATE A NEW FILE ',A60,/,
     1        '     WITH THE SAME NAME AS AN EXISTING ONE.',/,
     2        '     IOS =',I5,'.  STOP IN U350 AT 155')
      CALL W3TAGE('MDL_RACREATE')
      STOP 155  
C 
 156  STATE='155 ' 
      WRITE(KFILX,REC=1,IOSTAT=IOS,ERR=900)MASTR 
C
C        WRITE KEY RECORD WITH SUBROUTINE WRKEYM EVEN
C        THOUGH IT CONTIANS NO KEYS.
C
      STATE='156 '
      CALL WRKEYM(KFILDO,KFILX,NOPREC,KEYR,MASTR(5)*6+3,
     1              MASTR(3),'U350  ',IER)
C        MASTR(5)*6 IS THE SIZE IN WORDS OF THE KEY RECORD
C        SANS THE THREE LEADING WORDS.
C        MASTR(3) IS THE PHYSICAL RECORD SIZE IN WORDS.
C
C        CLOSE FILE.
C
      STATE='160 '
      CLOSE(UNIT=KFILX,IOSTAT=IOS,ERR=900) 
      WRITE(KFILDO,160)CFILX,NBYTES,MASTR(5)
 160  FORMAT(/,' FILE CREATED',/,
     1        '    NAME                      =',2X,A60,/,
     2        '    BYTES PER PHYSICAL RECORD =',I8,/,
     3        '    ENTRIES PER KEY RECORD    =',I8) 
C
C        REPEAT UNTIL TERMINATOR IS FOUND.
C
      GO TO 105 
C 
C        TIME STAMP U350 END. 
C 
 200  CALL TIMPR(KFILDO,KFILDO,'END U350            ') 
C
C        PRINT IDENTIFYING INFORMATION
C
      CALL W3TAGE('MDL_RACREATE')
      STOP  
C 
C        THIS SECTION FOR SYSTEM ERROR DIAGNOSTICS. 
C 
 900  CALL IERX(KFILDO,KFILDO,IOS,'U350  ',STATE) 
C        SUBROUTINE IERX WILL WRITE DIAGNOSTIC INFORMATION ON UNIT KFILDO 
C        AND WILL HALT PROGRAM.
      CALL W3TAGE('MDL_RACREATE') 
      STOP 900 
      END 
