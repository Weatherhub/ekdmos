      SUBROUTINE U405A(KFILDI,KFILDO,KFIL10,KFILOG,KFILOV,KFILQC,KFILIO,
     1                 KFILVO,KFILLP,KFILCP,KFILRA,RACESS,NUMRA,
     2                 IP12,IP14,IP16,IP17,IP18,IP19,IP20,IP21,IP22,
     3                 IP24,IP25,OUTVEC,OUTQCV,
     4                 IALOC,ADIST,AELEV,ND13,ELEVLO,ELEVHI,
     5                 CCALL,NAME,XP,YP,XPL,YPL,TOSS,QUEST,ISDATA,
     6                 WDIR,WSPD,LTAG,IQUAL,LNDSEA,ELEV,STALAT,STALON,
     7                 NOPAR,LOCPAR,QUALST,XLAPSE,VRAD,NSTA,ND1,
     8                 P,FD2,FD3,FD4,FD5,FD6,U,V,FDSINS,ND2X3,
     9                 ID,IDPARS,JD,JP,ICOMPT,ISCALD,
     A                 THRESH,ANLTAB,INLTAB,IWRITS,IWRITA,DIR,NGRIDC,
     B                 ND11,IPLAIN,PLAIN,ND4,PLAINT,IPLANT,NPRED,N,
     C                 ICALLD,CCALLD,IPACK,DATA,IWORK,ND5,
     D                 MODNO,NDATE,MODNUM,ND6,
     E                 NAREA,ALATL,ALONL,NPROJ,ORIENT,XLAT,
     F                 NXL,NYL,MESHB,BMESH,MESHL,IOPTB,NCLIPY,
     G                 TELEV,SEALND,CPNDFD,NXE,NYE,XPE,YPE,MESHE,EMESH,
     H                 IS0,IS1,IS2,IS4,ND7,
     I                 LSTORE,LITEMS,ND9,
     J                 CORE,ND10,NBLOCK,NSTORE,NFETCH,
     K                 JTOTBY,JTOTRC,MTOTBY,MTOTRC,ITOTBY,ITOTRC,
     L                 NTOTBY,NTOTRC,NOTOSS,NTOTGR,NTOTVO,
     M                 L3264B,L3264W,MISTOT,MINPK,
     N                 ISTA,ISMPL,ISTOP,IER)
C
C        JUNE      2004   GLAHN   TDL   MOS-2000
C                                 ADAPTED FROM U400A
C        AUGUST    2004   GLAHN   ADDED QUALCL, QUALWT( )
C        SEPTEMBER 2004   GLAHN   DIMENSIONED LIMIT( ); ADDED ISAVDT;
C                                 CHANGED SAVDAT( ) TO NSAVDT( )
C        SEPTEMBER 2004   GLAHN   ADDED IQUAL( , ) TO CALL, ETC.
C        OCTOBER   2004   GLAHN   ADDED NELEV( ) TO CALL AND TO BCD5
C        OCTOBER   2004   GLAHN   CHANGED TO SET OPT( ) ONLY ONCE AND
C                                 TO WRITE DIAGNOSTIC
C        OCTOBER   2004   GLAHN   CHANGED NELEV( ) TO ELEV( ) 
C        OCTOBER   2004   GLAHN   MODIFIED FOR LAT/LON VICE POLE 
C        OCTOBER   2004   GLAHN   ADDED LNDSEA( ), LNDWAT( , ), ISETP,
C                                 ILS; MODIFIED WRITING ARCHIVE GRID
C                                 TO MESH LENGTH MESHB
C        OCTOBER   2004   GLAHN   INSERTED LAMBERT AND MERCATOR
C        NOVEMBER  2004   GLAHN   ADDED KFILVO CAPABILITY
C        NOVEMBER  2004   GLAHN   CHANGED ITABLE( , , ) FOR TEMP 
C        NOVEMBER  2004   GLAHN   ADDED ELCORR( , ), CALL TO RDSTRT
C        DECEMBER  2004   GLAHN   ADDED IDST( , , , ), IDPARST( , , , ),
C                                 TRSTL( , , ), TRSTU( , , ), XLAPSE( ),
C                                 AA( , , , ), IDIMTB( , ), ND13, ND14,
C                                 ND15, IBASE( ); REMOVED IDIM; ADDED
C                                 IDENT( )
C        DECEMBER  2004   GLAHN   INCREMENTED ISTOP(1) AT 501; MINOR
C                                 COMMENTS; ADDED TEST AND FORMAT 288
C        DECEMBER  2004   GLAHN   PUT (1) ON CINT, ORIGIN, SMULT, AND
C                                 SADD IN CALL TO FSTGS5; REMOVED THRESH
C                                 FROM DIMENSION STATEMENT; CHANGED
C                                 CALLD TO CCALLD IN CALL
C        DECEMBER  2004   GLAHN   CHANGED QUALWT(3) TO QUALWT(4)
C        JANUARY   2005   GLAHN   CHANGED STATEMENT 501 TO 115
C        FEBRUARY  2005   GLAHN   COMPUTED HOUR OF FORECAST IHR AND
C                                 ADDED IHR AND JDATE( ) TO CALL TO 
C                                 RDSTRT
C        FEBRUARY  2005   GLAHN   PUT CALL TO FLTAG ABOVE CALL TO FSTGS5
C                                 AND INCLUDED LTAG( ) IN CALL TO FSTGS5
C        FEBRUARY  2005   GLAHN   INCREASED JVAL TO 6 AND ADDED MAX AND 
C                                 MIN CLIMO IDS TO ITABLE( , , ); ADDED
C                                 READING OF NORM; REMOVED COMMENT FOR
C                                 UNUSED DOTCN; ADDED SEALND, NXE, NYE,
C                                 MESHE, NORM TO CALL TO FSTGS5
C        FEBRUARY  2005   GLAHN   REMOVED IVRBL FROM CALL TO FSTGS5;
C                                 ADDED JFIRST( ) AND ADDED IT TO CALL
C                                 TO BCD5; INSERTED SATURATION DEFICIT
C                                 INTO ITABLE( , , ) AND INCREASED NVAL
C        MARCH     2005   GLAHN   INITIALIZED IBASE( ); ADDED NOSTM TO
C                                 CALLS TO RDSTRT AND BCD; REMOVED
C                                 IDENT( ) FROM CALL TO RDSTRT
C        APRIL     2005   GLAHN   REMOVED NORM OPTION AND ADDED NBLEND
C                                 OPTION
C        MAY       2005   GLAHN   ELIMINATED STRATIFICATION FEATURE;
C                                 ADDED LAPSE CALCULATION ON THE FLC
C        MAY       2005   GLAHN   CHANGED NOALOC( ) TO NOPAR( ),
C                                 KEY( ) TO LOCPAR( ); ADDED LOCSTA( )
C        MAY       2005   GLAHN   ADDED NAME( ) TO CALL.
C        MAY       2005   GLAHN   REMOVED LOCSTA( )
C        MAY       2005   GLAHN   ADDED IP14 FOR COMPUTED LAPSE RATES;
C                                 ADDED ELEV( ) TO CALL TO LAPSE
C        JUNE      2005   GLAHN   MODIFIED COMMENT
C        JUNE      2005   GLAHN   ADDED CAPABILITY OF WITHHOLDING DATA
C                                 AND VERIFYING FIT ON THOSE DATA;
C                                 MODIFIED COMMENTS; CHECKED SPELLING
C        JULY      2005   GLAHN   MODIFIED LD(1) FOR DATA TO ANALYZE
C                                 TO RETRIEVE IN RETVEC; ADDED CCALL TO
C                                 CALL TO WITHOL
C        JULY      2005   GLAHN   ADDED NAME( ) TO CALL TO BCD5
C        JULY      2005   GLAHN   ADDED NOTOSS TO CALL AND CALL TO BCD5
C        AUGUST    2005   GLAHN   INCREASED NVAL TO 16 AND ITABLE( , , )
C        AUGUST    2005   GLAHN   INCREASED SIZE OF ANLTAB TO 14
C        AUGUST    2005   GLAHN   ADDED PRE AND POST PROCESSING
C                                 CAPABILITY; CHANGED ITABLE IN CALL
C                                 TO BCD5
C        AUGUST    2005   GLAHN   ADDED PREPRO( ) TO CALL TO FSTGS5
C        AUGUST    2005   GLAHN   ADDED SNOWFALL TO ITABLE( , , )
C        SEPTEMBER 2005   GLAHN   READ PRE- AND POSTPROCESSING NAMES
C                                 FROM VARIABLE CONTROL FILE; ADDED
C                                 POSTPROCESSING
C        SEPTEMBER 2005   GLAHN   CHANGED NSCALE FOR SCLSNO FROM 1 TO 0
C                                 AND TRUNC FROM 0 TO .1
C        SEPTEMBER 2005   GLAHN   CHANGED 228461 TO 228462 PER
C                                 DALLAVALLE
C        SEPTEMBER 2005   GLAHN   ADDED READING TRUNC( ) FROM .CN FILE
C        SEPTEMBER 2005   GLAHN   ADDED RH TO ITABLE PER IBM
C        OCTOBER   2005   GLAHN   ADDED ISTA AND ISMPL; SAMPLING OF
C                                 FIRST GUESS FOR ANALYSIS POINTS;
C                                 IPOINT( , )
C        OCTOBER   2005   GLAHN   CHANGED FORMAT 140 TO 130 FOR
C                                 IPOINT( , )
C        OCTOBER   2005   GLAHN   ACCOMMODATED KFILLP = 0; ADDED KFILLP
C                                 TO CALL TO LAPSE.
C        OCTOBER   2005   GLAHN   ADDED ELCORR( , ) AND NPASS TO CALL
C                                 TO LAPSE
C        OCTOBER   2005   GLAHN   ADDED IBKPN AND BK( , )
C        NOVEMBER  2005   GLAHN   ADDED LIMITX
C        DECEMBER  2005   GLAHN   ADDED DATA TO IS1( ) FOR CALL TO
C                                 PAWRAG
C        JANUARY   2006   GLAHN   SUBSTITUTED PACKGR FOR PAWRAG SO THAT
C                                 IT MATCHES THE IBM VERSION IN THAT
C                                 RESPECT; COMMENT FOR JER
C        JANUARY   2006   GLAHN   REMOVED LIMITX
C        JANUARY   2006   GLAHN   ADDED IP24 FOR WRITING FIT TO STATIONS
C                                 OVER WHOLE AREA VICE IP14
C        JANUARY   2006   GLAHN   ADDED ELCORU( , )
C        JANUARY   2006   GLAHN   ADDED IALGOR( , )
C        MARCH     2006   GLAHN   MODIFIED TO REDUCE STATION LIST FOR
C                                 BCD5; ADDED CALLS TO TRAIL; ADDED
C                                 NREDUC, ADDED OUTVEC AND OUTQCV TO CALL
C        MARCH     2006   GLAHN   BYPASSED WITHOL, RESTRD, AND FITWTH WHEN
C                                 NWITH=0
C        MARCH     2006   GLAHN   UPDATED ITABLE( , , ) FOR WIND U,V,S
C        MARCH     2006   GLAHN   INCREASED ISTOP(3) TO ISTOP(5); ADDED
C                                 IP14 AND ISTOP( ) TO CALL TO ITRPSL
C        MARCH     2006   GLAHN   ADDED KFILSL, CSTSM, N4P
C        MARCH     2006   GLAHN   ADDED CCALLR FOR WRITING FOR GEMPAK
C        APRIL     2006   GLAHN   ADDED MULTIPLE PROJECTIONS IN ONE
C                                 ANALYSIS; ADDED NORUNS, NHRRUN( ),
C                                 WTRUNA( ) WTRUNL; INCREASED XDATA(ND1)
C                                 TO XDATA(ND1,6)
C        APRIL     2006   GLAHN   CHANGED ITABLE(1,1,IVRBL) TO
C                                 ITABLE(1,2,IVRBL) IN CALL TO BCD5
C        APRIL     2006   GLAHN   ARRANGED TO STOP WITH MISSING DATA
C                                 ONLY WHEN THE FIRST CYCLE IS MISSING;
C                                 CHANGED FLTAG TO FLTAGM
C        APRIL     2006   GLAHN   INCREASED ANLTAB CHARACTER*14 TO *17
C        APRIL     2006   GLAHN   CHANGED IP14 TO IP24 IN CALL TO 
C                                 FITWTH; ADDED IP24 TO CALL TO WITHOL
C        MAY       2006   GLAHN   REMOVED FD2 IN CALL TO SCLSNO
C        MAY       2006   GLAHN   CHANGED XP( ) ETC. TO XPL( ) IN
C                                 CHECKING WITH OPT( ) BELOW 3439
C        MAY       2006   GLAHN   CHANGED CALL TO SKIPWR TO SKPWR2
C        JUNE      2006   GLAHN   ADDED IBKPN = 99 CAPABILITY;
C                                 ADDED IBKPN TO CALL TO LAPSE
C        JUNE      2006   GLAHN   CHANGED CALL TO SZGRID TO SZGRDM
C        JUNE      2006   GLAHN   CHANGED CHECK ON MISSING DATA BELOW
C                                 3434
C        JUNE      2006   GLAHN   ADDED CPNDFD( ) AND NCLIPY TO CALL
C                                 AND NCLIP
C        JULY      2006   GLAHN   INSERTED /D DIAGNOSTIC 3432
C        JULY      2006   GLAHN   SET MESH = 99 BEFORE CALL TO SCLSNO;
C                                 INCLUDED CALL TO CLIP
C        JULY      2006   GLAHN   NSMTYP, B( , ), NPASS, AND NCLIPO
C                                 ADDED TO CALL TO FSTGS5; CLIPPED FINAL
C                                 ANALYSIS IF NEEDED
C        AUGUST    2006   GLAHN   ADDED TO NCLIPO CAPABILITY
C        SEPTEMBER 2006   GLAHN   SET NVAL TO 19, ADDED LAMP CAPABILITY
C        SEPTEMBER 2006   GLAHN   ADDED LPNO; ADDED WRITING LAPSE
C                                 RATES TO KFILVO
C        OCTOBER   2006   GLAHN   CHANGED FORMAT 321
C        OCTOBER   2006   GLAHN   ADDED VARIABLES TO CALLS TO WITHOL AND
C                                 FITWTH
C        NOVEMBER  2006   GLAHN   SET NVAL TO 25; ADDED LAMP CAPABILITY
C        NOVEMBER  2006   GLAHN   MODIFIED TO CHECK FOR SPECIFIC MODEL NO
C                                 IN ITABLE( , , )
C        NOVEMBER  2006   GLAHN   PUT CALL LAPSE AFTER CALL FSTGS5; ADDED
C                                 LAPFG
C        DECEMBER  2006   GLAHN   MINOR PRINT FORMATS AND COMMENTS;
C                                 ADDED MGUESS TO CALL TO BCD5; ADDED
C                                 DIAGNOSTIC AT 2865
C        JANUARY   2007   GLAHN   ADDED NSHLN( ); COMBINED WIND GUST IDS
C        JANUARY   2007   GLAHN   CALLED PAWLPM RATHER THAN PAWING
C        JANUARY   2007   GLAHN   MODIFIED CALL TO WITHOL
C        FEBRUARY  2007   GLAHN   ADDED 6- AND 12-H QPF TO TABLE; PULLED
C                                 2 LAMP VARIABLES TO KEEP WITHIN 99
C                                 CONTINUATION LINES
C        FEBRUARY  2007   GLAHN   ELIMINATED WRITING PACKED XLAPSE( )
C                                 WHEN IBKPN = 99
C        MARCH     2007   GLAHN   REVISED FOR NCLIP TO PERTAIN TO OUTPUT;
C                                 REMOVED NCLIP, NCLIPO, NCLIPY FROM CALL
C                                 TO FSTGS5; ADDED WRITING FULL VECTOR
C                                 DATA RECORD TO KFILVO
C        MARCH     2007   GLAHN   CHANGED SCALING BEFORE SCLSNO 0 TO 1
C        MARCH     2007   GLAHN   INSERTED CALL TO SCLSKY
C        MARCH     2007   GLAHN   REMOVED NORUNS IN CALL TO SCLSNO
C        MARCH     2007   GLAHN   CHANGED STATEMENT NO. 3430 TO 3426;
C                                 CHANGED STATION LIST REDUCTION TO
C                                 NOT DEPEND ON KFILSL
C        MARCH     2007   GLAHN   REMOVED IQUAL( ) AND QUALWT( ) FROM
C                                 CALL TO BCD5; REMOVED IQUALA( , )
C        APRIL     2007   GLAHN   INSERTED MGUESS IN 2ND CALL TO BCD5
C        MAY       2007   GLAHN   MOVED JER=1 FROM BELOW 287 TO ABOVE
C                                 IT; INSERTED ERROR HANDLING CODE AFTER
C                                 CALLS TO SCLSNO AND SCLSKY; CHANGED
C                                 NDATE TO MDATE IN CALLS TO SCLSKY
C                                 AND SCLSNO
C        MAY       2007   GLAHN   INCREASED IQUAL( ,2) TO IQUAL( ,5)
C        MAY       2007   GLAHN   ADDED SCLQ06 AND SCLQ12
C        MAY       2007   GLAHN   CHANGED CCALL TO CCALLA IN 2 CALLS
C                                 TO PACKV
C        JUNE      2007   GLAHN   CHANGED NVAL FROM 24 TO 22
C        JUNE      2007   GLAHN   CHANGED NVAL FROM 22 TO 24, 
C                                 REINSERTED POP6 AND POP12
C        JUNE      2007   GLAHN   OMITTED ITABLE( , , ) IN DATA
C                                 STATEMENT, READ IN THE INFORMATION.
C                                 OTHER CHANGES TO ACCOMMODATE; TOOK
C                                 NREDUC OUT OF DATA STATEMENT AND PUT
C                                 IT IN THE .CN FILE; ADDED NGRIDT( );
C                                 ADDED ISAVDT TO DATA STATEMENT;
C                                 ADDED ERROR STOP AFTER 1303; ADDED
C                                 RWATO( ) AND RWATI( )
C        JUNE      2007   GLAHN   INCORPORATED TRUNCATION IN .CN FILE;
C                                 ELIMINATED TRUNC( ); ADDED TLOD,
C                                 SETLOD,THID,SETHID,EX1D,EX2D; CALL
C                                 TO BCD5 AND OTHER POSTPROCESSING
C        JUNE      2007   GLAHN   MODS TO ANALYZE PROBABILITY LEVELS;
C                                 OMITTED CAPABILITY TO REDUCE STATION
C                                 LIST; ELIMINATED CLOSING RA FILE;
C                                 ELIMINATED NREDUC
C        JULY      2007   GLAHN   ADDED NPRED TO CALL; ADDED BACK 
C                                 WRITING TO KFILOV MISTAKENLY REMOVED
C        JULY      2007   GLAHN   ADDED CHECK ON CORRECT MSHPAS( , )
C        JULY      2007   GLAHN   XDATA( ) REMOVED FROM CALL AND MADE
C                                 ALLOCATABLE.
C        JULY      2007   GLAHN   MODIFIED TEST NUMBER OF STATIONS AT
C                                 311; ADDED NPRED TO CALL
C        AUGUST    2007   GLAHN   ADDED VRAD(ND1), IVRAD
C        AUGUST    2007   GLAHN   OMITTED CHECK ON KFILIO ABOVE D347
C        SEPTEMBER 2007   GLAHN   REPLACED NEWXY WITH NEWXY1
C        OCTOBER   2007   GLAHN   INCREASED DIMENSION VRAD(ND1,6)
C        OCTOBER   2007   GLAHN   ADDED ND1 TO CALL TO BCD5
C        NOVEMBER  2007   GLAHN   ADDED POSTPROCESSING ROUTINE OSMTH
C        NOVEMBER  2007   GLAHN   EXPANDED PRE- AND POST-PROCESSING
C                                 CAPABILITY; ADDED OSMTH
C        NOVEMBER  2007   GLAHN   REMOVED IWLOOP; ADDED IWSEED, ITYPR
C        NOVEMBER  2007   GLAHN   REPLACED R(1,1)*RSTAR(1,1) IN CALL
C                                 TO LAPSE WITH
C                                 RLAP=R(1,MGUESS)*RSTAR(1,MGUESS) AND
C                                 ELCORR(1,IGUESS(1)) WITH
C                                 ELCORR(1,MGUESS)
C        NOVEMBER  2007   GLAHN   MOVED BOGUS TO AFTER FSTGS5
C        NOVEMBER  2007   GLAHN   ADDED IF(MFIRST.EQ.0)THEN
C                                 ISEED=ISEEDT(IWSEED)
C        NOVEMBER  2007   GLAHN   ADDED EREST ROUTINE AND WRITING
C        DECEMBER  2007   GLAHN   ADDED IP(25) AND ISTOP(6) CAPABILITY
C        DECEMBER  2007   GLAHN   ADDED ELEV( ) TO CALL TO WTHOL2;
C                                 INCREASED 2ND DIMENSION OF ERRANL( , )
C        DECEMBER  2007   GLAHN   ADDED IDIM AND ID2( )
C        DECEMBER  2007   GLAHN   ADDED NROUGH, RCLOS2, RVARI, RDENS,
C                                 RELVAR TO DATA STATEMENT AND TO
C                                 CALL TO WTHOL2; ADDED EREST
C        JANUARY   2008   GLAHN   ADDED RWATO(1) AND RWATI( ) TO CALL
C                                 TO EREST
C        JANUARY   2008   GLAHN   ADDED XLAPSE TO CALL TO WTHOL2
C        FEBRUARY  2008   GLAHN   ADDED IP14, P, N4P TO CALL TO EREST
C        FEBRUARY  2008   GLAHN   REMOVED RDENS, ADDED RELVAR TO CALL
C                                 TO EREST
C        FEBRUARY  2008   GLAHN   CHANGED RCLOS2 FROM 45 TO 55; REMOVED
C                                 R(1,MGUESS) FROM CALL TO EREST
C        FEBRUARY  2008   GLAHN   SET IEXTRA = 0 VICE 5
C        FEBRUARY  2008   GLAHN   ADDED EX1A AND EX2A TO CALL TO EREST
C        FEBRUARY  2008   GLAHN   ADDED DIMENSION FOR ANLTAB
C        FEBRUARY  2008   GLAHN   ADDED FILE NAME WITH PREPROCESSOR
C                                 SUBROUTINE NAME; KFILBO DEFINED
C        FEBRUARY  2008   GLAHN   CORRECTED FORMAT 272
C        FEBRUARY  2008   GLAHN   CHANGED NS TO NE IN 2 PLACES IN 2863;
C                                 CHECKED ID( ) = ITABLE( , ) AT 2862
C                                 REMOVED KFILSL FROM CALL
C        FEBRUARY  2008   GLAHN   ADDED NAREA TO CALL
C        FEBRUARY  2008   GLAHN   ADDED CDTDP
C        FEBRUARY  2008   GLAHN   ADDED WRITING TO IP16 WHEN ANALYSIS
C                                 IS WRITTEN TO KFIL10 
C        FEBRUARY  2008   GLAHN   CHANGED USE OF KFILVO; ADDED IWRITA
C        MARCH     2008   GLAHN   XLAPSE( ) SET = 0 WHEN IBKPN = 99
C        MARCH     2008   GLAHN   ELIMINATED HARDWIRING BEFORE CALLS
C                                 TO SUBROUTINES IN PREPRO
C        MARCH     2008   GLAHN   CHECKED IDS READ WITH ID(1) AND ID(4)
C                                 AT 1300; REMOVED CHECK AT 2862 
C        MARCH     2008   GLAHN   ADDED CALL TO SKYAMT
C        MARCH     2008   GLAHN   ELIMINATED KFILBO; ADDED KFILPR(3)
C        MARCH     2008   GLAHN   ADDED KFILCP
C        APRIL     2008   GLAHN   ADDED ICOMPT( )
C        APRIL     2008   GLAHN   REVISED CALL TO DIRSPD TO INCLUDE
C                                 ITABLE, JVAL, AND MODNO
C        MAY       2008   GLAHN   ADDED LNDWAT = 2,3 CAPABILITY
C        MAY       2008   GLAHN   MODIFIED CALL TO LAPSEU
C        MAY       2008   GLAHN   REMOVED IGUESS IN CALL TO LAPSEU
C        MAY       2008   GLAHN   INCREASED PREPROCESSORS TO 6 VICE 3
C        JUNE      2008   GLAHN   ADDED CKPOP
C        JUNE      2008   GLAHN   ADDED NTOTGB TO CALL TO DIRSPD;
C                                 .AND.ICOMPT(M).EQ.0 MOVED BELOW 375
C        JUNE      2008   GLAHN   ADDED WRITING DIRECTION/SPEED TO ASCII
C        JUNE      2008   GLAHN   WIND ID FOR ASCII CORRECTED
C        JUNE      2008   GLAHN   CHANGED ID, IDPARS INPUT TO FSTGS5
C        JULY      2008   GLAHN   INSERTED ID(1,M) VICE LD INTO CALL TO
C                                 FSTGS5 AND IP16 MOVED IN CALL
C        JULY      2008   GLAHN   ADDED LNDSEA( ) TO CALL TO AUGMT1
C        JULY      2008   GLAHN   ADDED IWRITS = 2 AND 3 CAPABILITY
C        JULY      2008   GLAHN   ADDED ASCII SCALING FOR SNOW RF
C        JULY      2008   GLAHN   MODIFIED DIRECTION PLOTTING
C        AUGUST    2008   GLAHN   REMOVED USE OF PREQPF; ADDED CKQPF
C        AUGUST    2008   GLAHN   ADDED QPF6P6; ADDED LOOP DO 3468
C        AUGUST    2008   GLAHN   INTERNAL STORAGE DATA NOT PACKED
C        AUGUST    2008   GLAHN   ADDED CALL TO CONEKD
C        AUGUST    2008   GLAHN   IDPARS(1,M) VICE IDPARS CALL TO FSTGS5
C        AUGUST    2008   GLAHN   MODIFIED TO CALL LAPSUA VICE LAPSEU
C        AUGUST    2008   GLAHN   ADDED DIR( , , ) TO CALL; ADDED
C                                 NSLAB, DIR TO CALL TO LAPSUA
C        AUGUST    2008   GLAHN   ADDED MESHSV, NXSV, NYSV; SET LTAG( )
C                                 VALUES OF -1 TO +1 BEFORE WRITING
C        SEPTEMBER 2008   GLAHN   ADDED LAPFG = 3
C        SEPTEMBER 2008   GLAHN   NTOTVO RESET TO 0 BELOW 375
C        SEPTEMBER 2008   GLAHN   SWITCH PLOTTING DIRECTION/SPEED TO
C                                 WHEN SPEED OR GUSTS ANALYZED VICE DIR
C        SEPTEMBER 2008   GLAHN   ADDED CALL TO OSMTH1
C        SEPTEMBER 2008   GLAHN   COMMENT FOR LPNO; TWO CHANGES AT 2863
C                                 AND BELOW; ONE CHANGE BEFORE CALL TO
C                                 RETVEC LD(4)=ID(4,M) VICE ITABLE(4,2)
C        SEPTEMBER 2008   GLAHN   ADDED FD6( ) TO CALL TO CKPOP, CKQPF,
C                                 CKMAXT, CKMINT, CKTDP, CKWNDG
C        SEPTEMBER 2008   GLAHN   CHANGED CALL TO CKMAXT AND CKMINT
C        OCTOBER   2008   GLAHN   ADDED SPECIFIC ID( ,M), IDPARS( ,M),
C                                 AND JD( ,M) TO CALL TO BOGUS; ADDED
C                                 WRITE OF WIND SPEED ONLY TO ASCII WHEN
C                                 DIRECTION IS MISSING
C        OCTOBER   2008   GLAHN   ADDED WTWTL, WTLTW
C        NOVEMBER  2008   GLAHN   ADDED FL174
C        DECEMBER  2008   GLAHN   ADDED ASCII WRITING FOR WIND DIRECTION
C        JANUARY   2009   GLAHN   ADDED CHECK FOR MODNO = DD AT 2869;
C                                 SOME STATEMENT NUMBERS WERE CHANGED
C        JANUARY   2009   GLAHN   CHANGES TO ACCOMMODATE RANDOM NUMBER
C                                 GENERATOR SEED BEING REAL VICE INTEGER
C        MARCH     2009   GLAHN   ADDED VARTAB( , ), ELIMINATED
C                                 RVARI( ) AND RCLOS2; MODIFIED CALLS TO
C                                 WTHOL2 AND EREST     
C        FEBRUARY  2009   WAGNER  PASSED MODNUM AND ND6 FROM U155 AND
C                                 PASSED ON TO LAPSUA
C        MARCH     2009   GLAHN   CHANGED NDATE TO MDATE IN CALL TO
C                                 AUGMT1
C        APRIL     2009   GLAHN   ADDED TO CALL TO EREST
C        APRIL     2009   GLAHN   ADDED NHRRUN( ) TO CALL TO AUGMT1
C        APRIL     2009   GLAHN   ADDED NAME( ) TO CALL TO AUGMT1
C        MAY       2009   GLAHN   MODIFIED DATA ID FOR HOURLY DATA
C        MAY       2009   GLAHN   ADDED JDATE(4), NAREA TO CALL TO
C                                 AUGMT1
C        MAY       2009   GLAHN   ADDED NPROJ,ORIENT,BMESH,XLAT,ALATL,
C                                 AND ALONL TO CALL OT RDVRHL
C        JUNE      2009   GLAHN   ADDED PLAINT,IPLANT TO CALL; ADDED
C                                 CALL TO CAKSNO; SET XLAPSE( ) TO ZERO
C                                 WHEN ALASKA SNOW FORECAST LE 0
C        JUNE      2009   GLAHN   ADDED PREX3( ) TO CALL TO SCLSNO
C        JUNE      2009   IM      CHANGED ID TO ID(1,M) IN CALL TO EREST
C        JUNE      2009   SCALLION/GLAHN   INSERTED WRITING ERROR GRID
C                                 TO RANDOM ACCESS FILE AT 3645
C        JUNE      2009   GLAHN   ADDED CALL TO STSNOZ; STATEMENTS 3437-
C                                 3430 RENUMBERED
C        JUNE      2009   GLAHN   REMOVED CHECK OF ILS,WTWTH, WTLTW;
C                                 CORRECTED RELATED COMMENTS
C        JUNE      2009   GLAHN   ADDED IPLAIN( , ) AND L3254W TO CALL
C                                 TO CKQPF
C        JULY      2009   GLAHN   ADDED CHECK ON ILS
C        JULY      2009   GLAHN   ADDED SUBROUTINE AVGLAP
C        JULY      2009   GLAHN   REMOVED ISTOP(1)=ISTOP(1)+1 AT 2888
C        JULY      2009   GLAHN   MODS FOR CAKSNO AT 348 TO 349
C        SEPTEMBER 2009   WAGNER  ADDED INLTAB TO SUBROUTINE CAL,
C                                 FOR MULTIPLE 405A CONTROL FILES.
C                                 REQUIRED FOR OPERATIONAL USE ON IBM.
C                                 MODIFIED OPEN STATEMENT FOR U405A
C                                 CONTROL FILES.  SET KFILAN TO INLTAB
C                                 FOR THE MULTIPLE CONTROL FILES.
C        FEBRUARY  2010   WAGNER  ADDED CALL TO CCONSN, ADAPTED FROM
C                                 CAKSNO, TO CALL THE POST-PROCESSING
C                                 ROUTINE FOR CONUS SNOW ANALYSES.
C        JUNE      2012   ENGLE   ADDED PLAIN( ) TO THE CALLING SEQUENCE
C                                 FOR ALL CALLS TO PACKGR AND
C                                 PACKGR_OPER.
C
C
C        PURPOSE
C            PROGRAM U405A ANALYSES CONTINUOUS VARIABLES.  ENTRY
C            INTO U405A WILL PRODUCE AN ANALYSIS OF THE VARIABLE IN 
C            ID( ), WHICH MUST MATCH THE VARIABLE ID READ IN
C            'U450AXXXXXXXXX.CN.  SEA LEVEL PRESSURE (SLP) AND
C            SATURATION ARE HOLDOVERS FROM LAMP; SLP MAY BE IMPLEMENTED
C            AT SOME TIME.  SURFACE WINDS CAN BE USED IN SLP ANALYSIS
C            (NOT YET IMPLEMENTED).
C
C            FATAL ERRORS, IER:
C            777 FROM FSTGS5--CANNOT OBTAIN A FIRST GUESS.
C
C        DATA SET USE
C            KFILDO   - UNIT NUMBER OF OUTPUT (PRINT) FILE.  (OUTPUT)
C            KFIL10   - UNIT NUMBER FOR INTERNAL RANDOM ACCESS STORAGE.
C                       (INPUT/OUTPUT)
C            KFILOG   - UNIT NUMBER OF TDLPACK DISPOSABLE OUTPUT FILE.
C                       (OUTPUT)
C            KFILOV   - UNIT NUMBER OF OUTPUT VECTOR FILE CONTAINING
C                       ALL OBS EXCEPT THOSE TOSSED OR QUESTIONABLE
C                       OBS AS MISSING AND ALSO XLAPSE( ) WHEN
C                       IBKPN NE 99.  (OUTPUT)
C            KFILQC   - UNIT NUMBER OF OUTPUT VECTOR FILE CONTAINING
C                       QUALITY CONTROLLED OBS AFTER THE FINAL ANALYSIS
C                       PASS.  (OUTPUT)
C            KFILIO   - UNIT NUMBER FOR WRITING FINAL GRIDPOINT
C                       ANALYSES.  (OUTPUT)
C            KFILVO   - UNIT NUMBER OF VECTOR OUTPUT ASCII FILE.
C                       ZERO MEANS OUTPUT WILL NOT BE WRITTEN.
C                       (OUTPUT)
C            KFILAN   - UNIT NUMBER FOR READING INDIVIDUAL ANALYSIS
C                       CONTROL FILES.  SET TO INLTAB   (INPUT)
C            KFILCP   - UNIT NUMBER FOR VARIABLE CONSTANT FILE.
C                       (INPUT)
C            KFILRA(J)- HOLDS THE UNIT NUMBERS FOR ACCESSING THE MOS-2000
C                       EXTERNAL RANDOM ACCESS FILES (J=1,6). (INPUT)
C            IP12     - UNIT NUMBER OF LISTING STATIONS.  (OUTPUT)
C            IP14     - UNIT NUMBER FOR LISTING COMPUTED LAPSE
C                       RATES AND PROBLEMS WITH LAPSE RATES.  (OUTPUT)
C            IP16     - UNIT NUMBER FOR INDICATING WHEN A RECORD IS
C                       WRITTEN TO THE SEQUENTIAL OR RANCOM ACCESS
C                       FILE.  (OUTPUT)
C            IP17     - UNIT NUMBER FOR LISTING OF STATIONS, THEIR
C                       X/Y POSITIONS,THEIR DATA VALUES, AND LTAGS.
C                       (OUTPUT)
C            IP18     - UNIT NUMBER FOR LISTING OF STATIONS,
C                       THEIR X/Y POSITIONS, DATA VALUES, LTAGS,
C                       ANALYSIS (INTERPOLATED) VALUES, AND 
C                       DIFFERENCES BETWEEN THE DATA AND THE ANALYSIS
C                       VALUES.  (OUTPUT)
C            IP19     - SAME AS IP18 EXCEPT IT APPLIES TO THE
C                       SMOOTHED ANALYSIS.  (OUTPUT)
C            IP20     - UNIT NUMBER FOR LISTING OF STATIONS, THEIR
C                       X/Y POSITIONS, DATA VALUES, LTAGS, ANALYSIS
C                       (INTERPOLATED) VALUES, AND DIFFERENCES 
C                       BETWEEN THE DATA AND THE ANALYSIS VALUES
C                       FOR ONLY THE SUBSETTED AREA FOR GRIDPRINTING.
C                       IF IOPT( ) IS NOT USED, IP(20) IS NOT
C                       ACTIVATED.  (OUTPUT)
C            IP21     - UNIT NUMBER FOR LISTING THE AVERAGE DEGREE
C                       OF FIT BETWEEN THE UNSMOOTHED AND SMOOTHED,
C                       IF SMOOTHED, ANALYSIS AND THE DATA.  (OUTPUT)
C            IP22     - UNIT NUMBER FOR GRIDPRINTING.  (OUTPUT)
C            IP24     - FOR ITYPR = 1:
C                          UNIT NUMBER FOR WRITING FIT TO WITHHELD
C                          STATIONS, IF ANY, AND NON-WITHHELD STATIONS OVER
C                          WHOLE ANALYSIS AREA WHEN NWITH NE 0.  A LIST
C                          OF THE WITHHELD STATIONS IS ALSO PROVIDED.
C                     - FOR ITYPR = 2:
C                          UNIT NUMBER FOR WRITING PACKED DATA FOR
C                          DIAGNOSING ERRORS IN ANALYSIS.
C            IP25     - DIFFICULTIES WITH BOGUS STATIONS.
C                       (OUTPUT)
C        VARIABLES
C              KFILDI = UNIT NUMBER TO READ INPUT FILE 'U450A.CN'.
C                       (INPUT)
C              KFILDO = UNIT NUMBER OF OUTPUT (PRINT) FILE.  (INPUT)
C              KFIL10 = UNIT NUMBER FOR INTERNAL RANDOM ACCESS STORAGE.
C                       (INPUT)
C              KFILOG = UNIT NUMBER OF TDLPACK DISPOSABLE OUTPUT FILE.
C                       THIS IS FOR WRITING THE RESULTS OF THE VARIOUS
C                       PASSES IN THE ANALYSES AND THEIR SMOOTHINGS.
C                       (INPUT)
C              KFILOV = UNIT NUMBER OF OUTPUT VECTOR FILE CONTAINING
C                       ALL OBS EXCEPT THOSE TOSSED OR QUESTIONABLE
C                       OBS AS MISSING AND ALSO XLAPSE( ) WHEN
C                       IBKPN NE 99.  (INPUT)
C              KFILQC = UNIT NUMBER OF OUTPUT VECTOR FILE CONTAINING
C                       QUALITY CONTROLLED OBS AFTER THE FINAL ANALYSIS
C                       PASS.  TOSSED OBS ARE SET TO MISSING.  (INPUT)
C              KFILIO = UNIT NUMBER FOR WRITING FINAL GRIDPOINT .CN
C                       ANALYSES.  (INPUT)
C              KFILVO = UNIT NUMBER OF VECTOR OUTPUT ASCII FILE.
C                       ZERO MEANS OUTPUT WILL NOT BE WRITTEN.  (INPUT)
C              KFILAN = UNIT NUMBER FOR READING INDIVIDUAL ANALYSIS
C                       CONTROL FILES.  SET = KFILDI.  (INTERNAL)
C              KFILLP = UNIT NUMBER FOR READING STATION PAIRS.  (INPUT)
C              KFILCP = UNIT NUMBER FOR VARIABLE CONSTANT FILE.  THIS
C                       CONTAINS DEFAULT VALUES FOR CERTAIN CONSTANTS 
C                       FOR BASIC NMC VARIABLES AND OTHER VARIABLES
C                       SANS THRESHOLDS, ETC.  THESE INCLUDE PACKING 
C                       CONSTANTS, GRIDPOINT CONSTANTS, AND NAMES.
C                       (INPUT)
C           KFILRA(J) = HOLDS THE UNIT NUMBERS FOR ACCESSING THE MOS-2000
C                       EXTERNAL RANDOM ACCESS FILES (J=1,6).
C                       THE ACCESS ROUTINES ALLOW 6 RANDOM ACCESS
C                       FILES.  HOWEVER, IT UNLIKELY U155 WILL NEED
C                       MORE THAN 1 OR 2.  (INPUT)
C           RACESS(J) = THE FILE NAMES CORRESPONDING TO KFILRA(J) 
C                       (J=1,6).  (CHARACTER*60)  (INPUT)
C               NUMRA = THE NUMBER OF UNIT NUMBERS IN KFILRA( ) AND
C                       NAMES IN RACESS( ).  (INPUT)
C                IP12 = INDICATES WHETHER (>0) OR NOT (=0) 
C                       STATIONS ON INPUT FILES WILL BE OUTPUT TO IP12.
C                       (INPUT)
C                IP14 = UNIT NUMBER FOR LISTING COMPUTED LAPSE
C                       RATES AND PROBLEMS WITH LAPSE RATES.  (INPUT)
C                IP16 = INDICATES WHETHER (>0) OR NOT (=0) 
C                       A STATEMENT WILL BE OUTPUT TO IP16
C                       WHEN A SEQUENTIAL FILE IS WRITTEN THROUGH
C                       PAWGTS OR A RANDOM ACCESS FILE IS WRITTEN
C                       THROUGH PAWRAC.  (INPUT)
C                IP17 = UNIT NUMBER FOR LISTING OF STATIONS, THEIR
C                       X/Y POSITIONS,THEIR DATA VALUES, AND LTAGS.
C                       (INPUT)
C                IP18 = UNIT NUMBER FOR LISTING OF STATIONS, THEIR 
C                       X/Y POSITIONS, DATA VALUES, LTAGS,
C                       ANALYSIS (INTERPOLATED) VALUES, AND 
C                       DIFFERENCES BETWEEN THE DATA AND THE ANALYSIS
C                       VALUES.  (INPUT)
C                IP19 = SAME AS IP18 EXCEPT IT APPLIES TO THE
C                       SMOOTHED ANALYSIS.  (INPUT)
C                IP20 = UNIT NUMBER FOR LISTING OF STATIONS, THEIR
C                       X/Y POSITIONS, DATA VALUES, LTAGS, ANALYSIS
C                       (INTERPOLATED) VALUES, AND DIFFERENCES 
C                       BETWEEN THE DATA AND THE ANALYSIS VALUES
C                       FOR ONLY THE SUBSETTED AREA FOR GRIDPRINTING.
C                       IF IOPT( ) IS NOT USED, IP(20) IS NOT
C                       ACTIVATED.  (INPUT)
C                IP21 = UNIT NUMBER FOR LISTING THE AVERAGE DEGREE
C                       OF FIT BETWEEN THE UNSMOOTHED AND SMOOTHED,
C                       IF SMOOTHED, ANALYSIS AND THE DATA.  (INPUT)
C                IP22 = UNIT NUMBER FOR GRIDPRINTING OF FIRST GUESS
C                       AND ANALYSES.  (INPUT)
C                IP24 = FOR ITYPR = 1:
C                          UNIT NUMBER FOR WRITING FIT TO WITHHELD
C                          STATIONS, IF ANY, AND NON-WITHHELD STATIONS OVER
C                          WHOLE ANALYSIS AREA WHEN NWITH NE 0.  A LIST
C                          OF THE WITHHELD STATIONS IS ALSO PROVIDED.
C                       FOR ITYPR = 2:
C                          UNIT NUMBER FOR WRITING PACKED DATA FOR
C                          DIAGNOSING ERRORS IN ANALYSIS.
C                       (INPUT)
C                IP25 = UNIT NUMBER FOR WRITING PROBLEMS WITH
C                       BOGUS STATIONS.  (INPUT)
C              OUTVEC = NAME OF DATA SET FOR VECTOR DATA IN TDLPACK
C                       FORMAT.  (CHARACTER*60)   (INPUT)
C              OUTQCV = NAME OF DATA SET FOR QUALITY CONTROLLED DATA
C                       IN TDLPACK FORMAT.  (CHARACTER*60)  (INPUT)
C            IALOC(J) = LOCATIONS IN CCALL( , ) OF THE PAIRED STATIONS
C                       (J=1,ND13), NOPAR(K) VALUES FOR EACH STATION K
C                       (K=1,LSTA).  (INPUT)
C            ADIST(J) = DISTANCES OF BASE STATION OF THE PAIRED STATIONS
C                       (J=1,ND13), NOPAR(K) VALUES FOR EACH STATION K.
C                       (INPUT)
C            AELEV(J) = ELEVATION DIFFERENCES OF BASE STATION OF THE
C                       PAIRED STATIONS (J=1,ND13), NOPAR(K) VALUES
C                       FOR EACH STATION K.  (INPUT)
C                ND13 = MAXIMUM TOTAL PAIRS OF STATIONS.  DIMENSION OF
C                       IALOC( ), ADIST( ), AND AELEV( ).  (INPUT)
C           ELEVLO(K) = THE LOW ELEVATION ASSOCIATED WITH STATION
C                       CCALL(K, ) (K=1,NSTA).  SPECIFIC TO ELEMENT.
C                       (INTERNAL)
C           ELEVHI(K) = THE HIGH ELEVATION ASSOCIATED WITH STATION
C                       CCALL(K, ) (K=1,NSTA).  SPECIFIC TO ELEMENT.
C                       (INTERNAL)
C          CCALL(K,J) = 8-CHARACTER STATION CALL LETTERS (J=1) AND 
C                       5 POSSIBLE OTHER STATION CALL LETTERS (J=2,6)
C                       THAT CAN BE USED INSTEAD IF THE PRIMARY (J=1) 
C                       STATION CANNOT BE FOUND IN AN INPUT DIRECTORY
C                       (K=1,NSTA).  ALL STATION DATA ARE KEYED TO
C                       THIS LIST.  CONTAINS GRIDPOINT IDS WHEN 
C                       "DATA" TO ANALYZE ARE AT GRIDPOINTS.  (INPUT)
C             NAME(K) = NAMES OF STATIONS (K=1,NSTA).  (CHARACTER*20)
C                       (INPUT)
C               XP(K) = THE X POSITION FOR STATION K (K=1,NSTA) ON 
C                       THE ANALYSIS GRID AREA AT THE CURRENT GRID MESH 
C                       LENGTH XMESH.  (INTERNAL)
C               YP(K) = THE Y POSITION FOR STATION K (K=1,NSTA) ON 
C                       THE ANALYSIS GRID AREA AT THE CURRENT GRID MESH 
C                       LENGTH XMESH.  (INTERNAL)
C              XPL(K) = THE X POSITION FOR STATION K (K=1,NSTA) ON
C                       THE ANALYSIS GRID AREA AT THE MESH LENGTH 
C                       MESHB.  (INPUT)
C              YPL(K) = THE Y POSITION FOR STATION K (K=1,NSTA) ON
C                       THE ANALYSIS GRID AREA AT THE MESH LENGTH
C                       MESHB.  (INPUT)
C             TOSS(K) = CONTAINS TOSSED OBS (K=1,NSTA).  ALL OTHER
C                       VALUES ARE 9999.  (INTERNAL)
C            QUEST(K) = CONTAINS QUESTIONABLE OBS (K=1,NSTA).  ALL
C                       OTHER VALUES ARE 9999.  QUESTIONABLE IS DEFINED
C                       AS MEETING THE ERROR CRITERION, BUT NOT
C                       MEETING X PERCENT OF IT, WHERE X IS HARDWIRED 
C                       BY PASS.  (INTERNAL)
C           ISDATA(K) = WORK ARRAY (K=1,ND1).  (INTERNAL)
C             WDIR(K) = OBSERVED WIND DIRECTION (K=1,NSTA).  THE TOSSED
C                       REPORTS HAVE BEEN SET TO 9999. ON INPUT.  THE
C                       DIRECTION IS THEN TURNED WNDTRN DEGREES CLOCKWISE.
C                       (INPUT)
C             WSPD(K) = OBSERVED WIND SPEED (K=1,NSTA).  THE TOSSED
C                       REPORTS HAVE BEEN SET TO 9999. ON INPUT.  (INPUT)
C             LTAG(K) = DENOTES USE OF DATA IN DATA(K) FOR STATION K
C                       (K=1,NSTA).
C                       0 = USE DATA.
C                       1 = STATION OUTSIDE RADIUS OF INFLUENCE FOR
C                           AREA BEING ANALYZED OR MISSING DATUM.
C                       2 = STATION LOCATION UNKNOWN.
C                       (INTERNAL)
C          IQUAL(K,I) = THE QUALITY VALUES FROM THE STATION DICTIONARY
C                       FOR FIVE POSSIBLE DATA TYPES (K=1,ND1) (I=1,5).
C                       (INPUT)
C           LNDSEA(K) = LAND/SEA INFLUENCE FLAG FOR EACH STATION
C                       (K=1,ND1).
C                       0 = WILL BE USED FOR ONLY OCEAN WATER (=0)
C                           GRIDPOINTS.
C                       3 = WILL BE USED FOR ONLY INLAND WATER (=3)
C                           GRIDPOINTS.
C                       6 = WILL BE USED FOR BOTH INLAND WATER (=3)
C                           AND LAND (=9) GRIDPOINTS.
C                       9 = WILL BE USED FOR ONLY LAND (=9) GRIDPOINTS.
C                       (INPUT)
C             ELEV(K) = ELEVATION OF STATIONS (K=1,NSTA).  (INPUT)
C           STALAT(K) = LATITUDE OF STATIONS (K=1,NSTA).  (INPUT)
C           STALON(K) = LONGITUDE OF STATIONS (K=1,NSTA).  (INPUT)
C            NOPAR(K) = NUMBER OF PAIRS FOR STATION K (K=1,MSTA).
C                       (INPUT)
C           LOCPAR(K) = WHERE IN IALOC( ), ADIST( ), AND AELEV( ) THE
C                       DATA FOR STATION K STARTS (K=1,KSTA).  (INPUT)
C           QUALST(K) = THE QUALITY WEIGHTS TO APPLY FOR THIS VARIABLE
C                       (K=1,KSTA).  (INTERNAL)
C           XLAPSE(K) = CALCULATED LAPSE RATE IN UNITS OF THE VARIABLE
C                       BEING ANALYZED PER M. (K=1,KSTA).
C           VRAD(K,L) = RADII OF INFLUENCE USED AS OVERRIDE TO U405.CN 
C                       CONTROL FILE (K=1,NSTA) (L=1,6).  NOTE THAT
C                       THIS APPLIES TO THE INDIVIDUAL ELEMENT; ITS
C                       USE IS CONTROLLED BY IVRAD.  (INTERNAL)
C                NSTA = NUMBER OF STATIONS OR LOCATIONS BEING DEALT WITH.
C                       THIS MAY INCLUDED RANDOMLY SAMPLED POINTS FROM
C                       THE FIRST GUESS.  (INPUT)
C                 ND1 = MAXIMUM NUMBER OF STATIONS THAT CAN BE DEALT
C                       WITH.  NOTE THAT THIS DOES NOT NECESSARILY 
C                       INCLUDE THE NUMBER OF STATIONS IN A
C                       DIRECTORY.  (INPUT)
C              P(I,J) = THE FIRST GUESS FROM FSTGS5 AND THE ANALYSIS
C                       FROM BCD5 (I=1,NXL) (J=1,NYL).  (INTERNAL)
C FD2(J), FD3(J), ETC = WORK ARRAYS (J=1,ND2X3).  THESE CAN BE USED IN 
C                       ROUTINES AS 2-DIMENSIONAL ARRAYS, THE ONLY SIZE
C                       RESTRICTION BEING THE TOTAL, NOT THE INDIVIDUAL
C                       GRID DIMENSIONS.  (INTERNAL)
C                U(K) = U-WIND AT STATIONS (K=1,NSTA).  OBS TOSSED BY
C                       U405B HAVE BEEN SET TO 9999.  WHEN SPEED IS
C                       LT WNDTHR, U(K) IS SET = 9999.  LATER, THE 
C                       CHANGE IN PRESSURE IN MB PER GRID UNIT IN THE 
C                       X DIRECTION FOR GEOSTROPHIC COMPUTATIONS WHEN
C                       SLP IS BEING ANALYZED.  THIS IS FD7( ) IN THE
C                       CALLING PROGRAM, DIMENSIONED ND2X3.  (INTERNAL)
C                V(K) = V-WIND AT STATIONS (K=1,NSTA).  WHEN SPEED IS
C                       LT WNDTHR, U(K) IS SET = 9999.  OBS TOSSED BY
C                       U405B HAVE BEEN SET TO 9999.  LATER, THE 
C                       CHANGE IN PRESSURE IN MB PER GRID UNIT IN THE 
C                       Y DIRECTION FOR GEOSTROPHIC COMPUTATIONS WHEN
C                       SLP IS BEING ANALYZED.  THIS IS FD8( ) IN THE
C                       CALLING PROGRAM, DIMENSIONED ND2X3.  (INTERNAL)
C           FDSINS(J) = WORK ARRAY FOR SIN OF THE LATITUDE (J=1,ND2X3).
C                       THIS IS FD9( ) IN THE CALLING PROGRAM.
C                       (INTERNAL)
C               ND2X3 = THE DIMENSION OF SEVERAL ARRAYS =
C                       MAX(ND1,ND2*ND3) IN DRIVER.  (INPUT)
C             ID(J,N) = THE INTEGER PREDICTOR ID'S (J=1,4) (N=1,ND4).
C                       (INPUT)
C         IDPARS(J,N) = THE PARSED, INDIVIDUAL COMPONENTS OF THE
C                       PREDICTOR ID'S CORRESPONDING TO ID( ,N)
C                       (J=1,15), (N=1,ND4).  (INPUT)
C                       J=1--CCC (CLASS OF VARIABLE),
C                       J=2--FFF (SUBCLASS OF VARIABLE),
C                       J=3--B (BINARY INDICATOR),
C                       J=4--DD (DATA SOURCE, MODEL NUMBER),
C                       J=5--V (VERTICAL APPLICATION),
C                       J=6--LBLBLBLB (BOTTOM OF LAYER, 0 IF ONLY 
C                            1 LAYER),
C                       J=7--LTLTLTLT (TOP OF LAYER),
C                       J=8--T (TRANSFORMATION),
C                       J=9--RR (RUN TIME OFFSET, ALWAYS + AND BACK 
C                            IN TIME),
C                       J=10--OT (TIME APPLICATION),
C                       J=11--OH (TIME PERIOD IN HOURS),
C                       J=12--TAU (PROJECTION IN HOURS),
C                       J=13--I (INTERPOLATION TYPE),
C                       J=14--S (SMOOTHING INDICATOR), AND
C                       J=15--G (GRID INDICATOR).
C           THRESH(N) = THE BINARY THRESHOLD ASSOCIATED WITH 
C                       IDPARS( ,N), (N=1,ND4).  (INPUT)
C             JD(J,N) = THE BASIC INTEGER PREDICTOR ID'S (J=1,4) 
C                       (N=1,ND4).  (INPUT)
C                       THIS IS THE SAME AS ID(J,N), EXCEPT THAT THE
C                       PORTIONS PERTAINING TO PROCESSING ARE OMITTED:
C                       B = IDPARS(3, ),
C                       T = IDPARS(8,),
C                       I = IDPARS(13, ),
C                       S = IDPARS(14, ),
C                       G = IDPARS(15, ), AND
C                       THRESH( ).
C                       JD( , ) IS USED TO IDENTIFY THE BASIC MODEL
C                       FIELDS AS READ FROM THE ARCHIVE.  (INPUT)
C             JP(J,N) = INDICATES WHETHER A PARTICULAR VARIABLE N MAY
C                       HAVE GRIDPRINTS (J=1), INTERMEDIATE TDLPACK
C                       OUTPUT (J=2), OR PRINT OF VECTOR RECORDS IN
C                       PACKV (J=3) (N=1,ND4).  PACKV IS FOR THE 
C                       DATA SHOWING TOSSED DATA AS MISSING AND 
C                       QUESTIONABLE DATA AS MISSING.  THIS IS
C                       AN OVERRIDE FEATURE FOR THE PARAMETERS FOR 
C                       GRIDPRINTING AND TDLPACKING IN EACH VARIABLE'S 
C                       CONTROL FILE.  (INPUT)
C           ICOMPT(N) = SIGNALS WHETHER THE VARIABLE IS TO BE ANALYZED
C                       OR COMPUTED (N=1,ND4).
C                       0 WHEN THE VARIABLE IS TO BE ANALYZED; THE USUAL
C                         CASE.
C                       1 WHEN THE VARIABLE IS NOT TO BE ANALYZED BUT TO
C                         BE COMPUTED FROM OTHER ALREADY ANALYZED 
C                         VARIABLES.
C                       (INPUT)
C           ISCALD(N) = THE DECIMAL SCALING CONSTANT TO USE WHEN PACKING
C                       THE DATA (N=1,ND4).  (INPUT)
C           THRESH(N) = THE BINARY THRESHOLD ASSOCIATED WITH 
C                       IDPARS( ,N), N=1,ND4).  (INPUT)
C           ANLTAB(N) = THE CONTROL FILE NAME FOR THE VARIABLE DEFINED IN
C                       ID( ), N=1,ND4). (CHARACTER*17)  (INPUT)
C              INLTAB = THE CONTROL FILE UNIT NUMBER FOR THE VARIABLE
C                       DEFINED IN ID( ).  (INPUT)
C           IWRITS(N) = CONTROLS WRITING TO INTERNAL STORAGE (N=1,ND4).
C                       1 = WRITE GRID (ANALYSIS),
C                       2 = WRITE LTAG AFTER LAST PASS,
C                       3 = WRITE BOTH GRID AND LTAG,
C                       0 = OTHERWISE.  (INPUT)
C           IWRITA(N) = 1 WHEN ASCII DATA FOR VARIABLE N IS TO BE WRITTEN
C                       TO FILE UNIT NUMBER KFIOVO; 0 OTHERWISE (N=1,ND4).
C                       (OUTPUT)
C          DIR(K,J,M) = THE IX (J=1) AND JY (J=2) POSITIONS ON THE GRID
C                       FOR THE COMBINATION OF GRID CHARACTERISTICS M
C                       (M=1,NGRID) AND STATION K (K=1,NSTA) IN 
C                       NGRIDC( M).  (INPUT)
C         NGRIDC(L,M) = HOLDS THE GRID CHARACTERISTICS (L=1,6) FOR EACH GRID
C                       COMBINATION (M=1,NGRID).
C                       L=1--MAP PROJECTION NUMBER (3=LAMBERT, 5=POLAR
C                            STEREOGRAPHIC). 
C                       L=2--GRID LENGTH IN METERS,
C                       L=3--LATITUDE AT WHICH GRID LENGTH IS CORRECT,
C                       L=4--GRID ORIENTATION IN DEGREES, AND
C                       L=5--LATITUDE OF LL CORNER IN DEGREES,
C                       L=6--LONGITUDE OF LL CORNER IN DEGREES
C                       (INPUT)
C                ND11 = MAXIMUM NUMBER OF GRID COMBINATIONS THAT CAN BE
C                       DEALT WITH ON THIS RUN.  LAST DIMENSION OF
C                       NGRIDC( , ).  (INPUT)
C           NGRIDT(L) = HOLDS WHAT NGRIDC(L, ) HOLDS TO PROVIDE TO
C                       PACKGR.  (INTERNAL)
C       IPLAIN(L,J,N) = 32 CHARACTERS (L=1,L3264W) (J=1,4) OF PLAIN
C                       LANGUAGE DESCRIPTION OF VARIABLES (N=1,ND4).
C                       NOTE THAT THIS REQUIRES TWO 32-BIT WORDS TO HOLD
C                       THE DESCRIPTION BUT ONLY ONE 64-BIT WORD.
C                       EQUIVALENCED TO PLAIN( ) IN DRU155.  (INPUT)
C            PLAIN(N) = THE PLAIN LANGUAGE DESCRIPTION OF THE VARIABLES
C                       IN ID( ,N) (N=1,ND4).  EQUIVALENCED TO 
C                       IPLAIN( , ,N) IN DRU155.  (CHARACTER*32)  (INPUT)
C                 ND4 = DIMENSION OF SEVERAL VARIABLES.  (INPUT)
C              PLAINT = ARRAY FOR THE PLAIN LANGUAGE DESCRIPTION TO
C                       FURNISH TO CAKSNO AND CCONSN.  EQUIVALENCED TO IPLANT.
C                       (INTERNAL)
C          PLANT(L,J) = 32 CHARACTERS (L=1,L3264W) (J=1,4) OF PLAIN
C                       LANGUAGE DESCRIPTION USED IN CAKSNO AND CCONSN.
C                       EQUIVALENCED TO PLAINT.  (INTERNAL)
C               NPRED = THE NUMBER OF VARIABLES IN ID( , ), ETC.  (INPUT)
C                   N = INDEX INTO ID( , ) AND OTHER VARIABLES 
C                       INDICATING THE VARIABLE BEING DEALT WITH.
C                       (INPUT)
C         ICALLD(L,K) = 8 STATION CALL LETTERS AS CHARACTERS IN AN 
C                       INTEGER VARIABLE (L=1,L3264W) (K=1,NSTA).
C                       EQUIVALENCED TO CCALLD( ) IN DRU155.  (INTERNAL)
C           CCALLD(K) = 8 STATION CALL LETTERS (K=1,NSTA).  EQUIVALENCED
C                       TO ICALLD( , ) IN DRU155.  (CHARACTER*8)
C                       (INTERNAL)
C            IPACK(J) = WORK ARRAY (J=1,ND5).  (INTERNAL)
C             DATA(J) = WORK ARRAY FOR OBSERVED DATA (J=1,ND5). 
C                       (INTERNAL)
C            IWORK(J) = WORK ARRAY (J=1,ND5).  (INTERNAL)
C                 ND5 = DIMENSION OF IPACK( ), IWORK( ), AND DATA( ).
C                       (INPUT)
C               MODNO = DD FOR WRITING GRIDS.  (INPUT)
C               NDATE = THE DATE/TIME OF THE RUN.  (INPUT)
C           MODNUM(J) = THE "MODEL" NUMBER CORRESPONDING TO KFILIN(J),
C                       AND NAMIN(J) (J=1,ND6).  (INPUT)
C                 ND6 = MAXIMUM NUMBER OF INPUT FILES THAT CAN 
C                       BE DEALT WITH IN ONE RUN.  DIMENSION OF
C                       MODNUM( ).  (INPUT)
C               NAREA = THE AREA OVER WHICH THE ANALYSIS IS MADE:
C                       1 = CONUS,
C                       2 = ALASKA,
C                       3 = HAWAII,
C                       4 = PUERTO.
C               ALATL = NORTH LATITUDE OF LOWER LEFT CORNER POINT
C                       OF A GRID OF THE SIZE  NXL, NYL.  TRUNCATED
C                       TO TEN THOUSANDTHS OF DEGREES.  NOTE THAT THE
C                       MOS-2000 ARCHIVE IS ONLY TO THOUSANDTHS OF
C                       DEGREES.  (INPUT)
C               ALONL = WEST LONGITUDE OF LOWER LEFT CORNER POINT
C                       OF A  GRID OF THE SIZE  NXL, NYL.  TRUNCATED
C                       TO TEN THOUSANDTHS OF DEGREES.  NOTE THAT THE
C                       MOS-2000 ARCHIVE IS ONLY TO THOUSANDTHS OF
C                       DEGREES.  (INPUT)
C               NPROJ = NUMBER OF MAP PROJECTION TO WHICH THIS GRID
C                       APPLIES.
C                       3 = LAMBERT.
C                       5 = POLAR STEREOGRAPHIC.
C                       7 = MERCATOR.
C                       (INPUT)
C              ORIENT = ORIENTATION OF GRID IN WEST LONGITUDE.  (INPUT)
C                XLAT = NORTH LATITUDE AT WHICH GRIDLENGTH IS SPECIFIED
C                       IN DEGREES.  (INPUT)
C                 NXL = THE SIZE OF THE PRIMARY GRID FOR THIS RUN
C                       IN THE X DIRECTION IN MESHB UNITS.  (INPUT)
C                 NYL = THE SIZE OF THE PRIMARY GRID FOR THIS RUN
C                       IN THE Y DIRECTION IN MESHB UNITS.  (INPUT)
C               MESHB = THE NOMINAL MESH LENGTH OF THE ANALYSIS GRID
C                       SPECIFIED BY NXL, NYL AT LATITUDE XLAT.
C                       FOR INSTANCE, NOMINAL 80 CORRESPONDS
C                       TO 95.25 KM FOR POLAR STEREOGRAPHIC.  FOR
C                       ALL ROUTINES TO WORK, THIS VALUE MUST BE 
C                       1, 3, 5, 10, 20, 40, 80, 160, OR 320.
C                       THE LOWER NUMBERS ARE INTEGERS APPROXIMATING
C                       EVEN FRACTIONS OF BEDIENTS.  (INPUT)
C               BMESH = ACTUAL MESH LENGTH CORRESPONDING TO MESHB.
C                       (INPUT)
C               MESHL = NOMINAL MESH LENGTH OF QUALITY CONTROL
C                       (SUBSETTED) GRID FOR CONTINUOUS VARIABLES.
C                       (INPUT)
C            IOPTB(J) = SUBSETTING VALUES USED IN GRIDPRINTING (J=1,8)
C                       IN RELATION TO MESHB.  (INPUT)
C              NCLIPY = 1 WHEN THE NDGD MASK GRID IS AVAILABLE AND 
C                         IN CPNDFD( ).
C                       0 OTHERWISE.
C                       (INPUT)
C            TELEV(J) = THE TERRAIN ELEVATION FROM THE MOS-2000 EXTERNAL
C                       RANDOM ACCESS FILE (J=1,NXE*NYE).  (INPUT)
C           SEALND(J) = THE LAND/SEA MASK (J=1,NXE*NYE).
C                       0 = OCEAN WATER GRIDPOINTS;
C                       3 = INLAND WATER GRIDPOINTS.
C                       9 = LAND GRIDPOINTS.
C                       (INPUT)
C           CPNDFD(J) = THE NDFD MASK FROM THE MOS-2000 EXTERNAL
C                       RANDOM ACCESS FILE (J=1,NXE*NYE) AT NOMINAL
C                       MESHLENGTH MESHE.  (INPUT)
C                 NXE = X-EXTENT OF TELEV( ), SEALND( ), AND CPNDFD( )
C                       AT MESH LENGTH MESHE.  (INPUT)
C                 NYE = Y-EXTENT OF TELEV( ), SEALND( ), AND CPNDFD( )
C                       AT MESH LENGTH MESHE.  (INPUT)
C              XPE(K) = THE X POSITION FOR STATION K (K=1,NSTA) ON 
C                       THE ELEVATION GRID AT THE GRID MESH LENGTH
C                       MESHE.  (INPUT)
C              YPE(K) = THE Y POSITION FOR STATION K (K=1,NSTA) ON 
C                       THE ELEVATION GRID AT THE GRID MESH LENGTH
C                       MESHE.  (INPUT)
C               MESHE = THE NOMINAL MESH LENGTH OF THE TERRAIN GRID.
C                       IT IS MANDATORY THE GRID AVAILABLE IS OF THIS
C                       MESH SIZE AND COVER THE SAME AREA SPECIFIED
C                       BY NXL BY NYL, EVEN IF MESHE IS NOT EQUAL
C                       TO MESHB.  (INPUT)
C               EMESH = ACTUAL MESH LENGTH CORRESPONDING TO MESHE.
C                       (INPUT)
C              IS0(J) = MOS-2000 GRIB SECTION 0 ID'S (J=1,4).
C                       (INTERNAL)
C              IS1(J) = MOS-2000 GRIB SECTION 1 ID'S (J=1,21+).
C                       (INTERNAL)
C              IS2(J) = MOS-2000 GRIB SECTION 2 ID'S (J=1,12).
C                       (INTERNAL)
C              IS4(J) = MOS-2000 GRIB SECTION 4 ID'S (J=1,4).
C                       (INTERNAL)
C                 ND7 = DIMENSION OF IS0( ), IS1( ), IS2( ), AND
C                       IS4( ).  (INPUT)
C         LSTORE(L,J) = THE ARRAY HOLDING INFORMATION ABOUT THE DATA 
C                       STORED (L=1,12) (J=1,LITEMS).
C                       L=1,4--THE 4 ID'S FOR THE DATA.
C                       L=5  --LOCATION OF STORED DATA.  WHEN IN CORE,
C                              THIS IS THE LOCATION IN CORE( ) WHERE
C                              THE DATA START.  WHEN ON DISK, 
C                              THIS IS MINUS THE RECORD NUMBER WHERE 
C                              THE DATA START.
C                       L=6  --THE NUMBER OF 4-BYTE WORDS STORED.
C                       L=7  --2 FOR DATA PACKED IN TDLPACK, 1 FOR NOT.
C                       L=8  --THE DATE/TIME OF THE DATA IN FORMAT
C                              YYYYMMDDHH.
C                       L=9  --NUMBER OF TIMES DATA HAVE BEEN RETRIEVED.
C                       L=10 --NUMBER OF THE SLAB IN DIR( , ,L) AND
C                              IN NGRIDC( ,L) DEFINING THE
C                              CHARACTERISTICS OF THIS GRID.
C                       L=11 --THE NUMBER OF THE FIRST VARIABLE IN THE 
C                              LIST IN ID( ,N) (N=1,NPRED) FOR 
C                              WHICH THIS VARIABLE IS NEEDED, WHEN IT 
C                              DOES NOT NEED TO BE STORED AFTER DAY 1.
C                              WHEN THE VARIABLE MUST BE STORED (TO BE
C                              ACCESSED THROUGH OPTION) FOR ALL DAYS,
C                              ID(11,N) IS 7777 + THE NUMBER OF THE 
C                              FIRST VARIABLE IN THE LIST FOR WHICH 
C                              THIS VARIABLE IS NEEDED.
C                       L=12 --USED INITIALLY IN ESTABLISHING 
C                              MSTORE( , ).  LATER USED AS A WAY OF 
C                              DETERMINING WHETHER TO KEEP THIS VARIABLE.
C                              (INPUT)
C              LITEMS = THE NUMBER OF ITEMS IN LSTORE( , ).  (INPUT)
C                 ND9 = MAXIMUM NUMBER OF FIELDS STORED IN LSTORE( , ).
C                       SECOND DIMENSION OF LSTORE( , ).  (INPUT)
C             CORE(J) = SPACE ALLOCATED FOR SAVING PACKED GRIDPOINT 
C                       FIELDS (J=1,ND10).  WHEN THIS SPACE IS 
C                       EXHAUSTED, SCRATCH DISK WILL BE USED.  THIS
C                       IS THE SPACE USED FOR THE MOS-2000 INTERNAL
C                       RANDOM ACCESS SYSTEM.  (INPUT)
C                ND10 = THE MEMORY IN WORDS ALLOCATED TO THE SAVING OF 
C                       DATA CORE( ).  WHEN THIS SPACE IS EXHAUSTED,
C                       SCRATCH DISK WILL BE USED.  (INPUT)  
C              NBLOCK = BLOCK SIZE IN WORDS OF INTERNAL MOS-2000 DISK 
C                       STORAGE.  (INPUT)
C              NSTORE = NUMBER OF TIMES A RECORD HAS BEEN STORED TO   
C                       INTERNAL STORAGE.  (INPUT/OUTPUT)
C              NFETCH = NUMBER OF TIMES A RECORD HAS BEEN FETCHED FROM
C                       INTERNAL STORAGE.  (INPUT/OUTPUT)
C              JTOTBY = THE TOTAL NUMBER OF BYTES ON THE FILE ASSOCIATED
C                       WITH UNIT NO. KFILOG.  (INPUT/OUTPUT)
C              JTOTRC = THE TOTAL NUMBER OF RECORDS IN THE FILE ON UNIT
C                       NUMBER KFILOG.  (INPUT/OUTPUT)
C              MTOTBY = THE TOTAL NUMBER OF BYTES ON THE FILE ASSOCIATED
C                       WITH UNIT NO. KFILOV.  (INPUT/OUTPUT)
C              MTOTRC = THE TOTAL NUMBER OF RECORDS IN THE FILE ON UNIT
C                       NUMBER KFILOV.  (INPUT/OUTPUT)
C              ITOTBY = THE TOTAL NUMBER OF BYTES ON THE FILE ASSOCIATED
C                       WITH UNIT NO. KFILQC.  (INPUT/OUTPUT)
C              ITOTRC = THE TOTAL NUMBER OF RECORDS IN THE FILE ON UNIT
C                       NUMBER KFILQC.  (INPUT/OUTPUT)
C              NTOTBY = THE TOTAL NUMBER OF BYTES ON THE FILE ASSOCIATED
C                       WITH UNIT NO. KFILIO (THE OUTPUT GRIDPOINT FILE).
C                       (INPUT/OUTPUT)
C              NTOTRC = THE TOTAL NUMBER OF RECORDS IN THE FILE WITH UNIT
C                       NUMBER KFILIO.  (INPUT/OUTPUT)
C              NOTOSS = RUNNING OF COUNT OF STATIONS TOSSED ON LAST
C                       PASS.  (INPUT/OUTPUT)
C              NTOTGR = THE TOTAL NUMBER OF EXTERNAL RANDOM ACCESS
C                       RECORDS WRITTEN TO KFILRA = 42.  (INPUT/OUTPUT)
C              NTOTVO = THE TOTAL NUMBER OF ASCII RECORDS FOR SCRIPT
C                       'plot.sh' WRITTEN TO FILE KFILVO.  (INPUT/OUTPUT)
C              KTOTBY = THE TOTAL NUMBER OF BYTES ON THE FILE ASSOCIATED
C                       WITH UNIT NO. IP24.  (INPUT/OUTPUT)
C              KTOTRC = THE TOTAL NUMBER OF RECORDS IN THE FILE ON UNIT
C                       NUMBER IP24.  (INPUT/OUTPUT)
C              L3264B = INTEGER WORD LENGTH IN BITS OF MACHINE BEING
C                       USED (EITHER 32 OR 64).  (INPUT).
C              L3264W = NUMBER OF WORDS IN 64 BITS (EITHER 1 OR 2).
C                       (INPUT)
C              MISTOT = TOTAL NUMBER OF TIMES A MISSING INDICATOR
C                       HAS BEEN ENCOUNTERED IN UNPACKING GRIDS WHEN
C                       COMPUTING VARIABLES.  (INPUT/OUTPUT)
C               MINPK = MINIMUM GROUP SIZE WHEN PACKING THE DATA.
C                       (INPUT)
C                ISTA = 1 TO READ STATION DIRECTORY.  0 OTHERWISE.
C                       THE POINTS TO ANALYZE CAN COME FROM THE
C                       DIRECTORY (ISTA=1), FROM RANDOMLY SAMPLED
C                       POINTS (ISTA=0), OR BOTH (ISTA=1).
C                       (NOT CURRENTLY USED; MAY BE IMPLEMENTED WITH
C                       OTHER VARIABLES.)  (INPUT)
C               ISMPL = MAXIMUM NUMBER OF POINTS TO SAMPLE FROM THE
C                       FIRST GUESS FIELD.  0 OTHERWISE.  THE POINTS
C                       TO ANALYZE CAN COME FROM THE DIRECTORY ONLY
C                       (ISMPL=0), FROM SAMPLED POINTS (ISMPL GT 0),
C                       OR BOTH (ISMPL GT 0).  NSTA FROM THE DIRECTORY
C                       + ISMPL MUST NOT EXCEED ND1 FOR ALL POINTS
C                       TO BE USED.  THE RAMDOM POINTS ARE DETERMINED
C                       IN U155 BY CALLING POINTS, BUT THE SAMPLING 
C                       IS DONE IN U405A.
C            ISTOP(J) = ISTOP(1)--IS INCREMENTED BY 1 EACH TIME AN ERROR 
C                                 OCCURS.
C                       ISTOP(2)--IS INCREMENTED WHEN THERE ARE
C                                 FEW DATA (200) FOR AN ANALYSIS.
C                       ISTOP(3)--IS INCREMENTED WHEN A DATA RECORD 
C                                 COULD NOT BE FOUND.
C                       ISTOP(4)--IS INCREMENTED WHEN A LAPSE RATE COULD
C                                 NOT BE COMPUTED OR HAS TOO FEW CASES
C                                 TO BE USED.
C                       ISTOP(5)--IS INCREMENTED WHEN NO NON-MISSING
C                                 GRIDPOINT AROUND THE DATA POINT IS
C                                 OF THE SAME TYPE.
C                       ISTOP(6)--IS INCREMENTED WHEN THERE IS A PROBLEM
C                                 WITH MAKING BOGUS STATIONS.
C                       (INPUT/OUTPUT)
C                 IER = STATUS RETURN.
C                         0 = GOOD RETURN.
C                       777 = FATAL ERROR
C                       SEE CALLED ROUTINES FOR OTHER VALUES.
C                       ANY NON ZERO VALUE WILL CLOSE OUT THIS
C                       DATE/TIME IN U155.  (OUTPUT)
C               STATE = VARIABLE SET TO STATEMENT NUMBER TO INDICATE
C                       WHERE AN ERROR OCCURRED.  (CHARACTER*4)
C                       (INTERNAL)
C         ITABLE(I,L) = 4-WORD ID OF THE VARIABLES THAT ARE
C                       ACCOMMODATED BY U405A (I=1,4) (L=1,JVAL).
C
C                       FOR L = 1:
C                       THE ANALYSIS VARIABLE.  1ST (EXCEPT FOR DD)
C                       AND FOURTH WORD MUST MATCH U155.CN.
C                       NOTE THT DD = 0 AND WILL BE REPLACED WITH
C                       IDPARS(4) AND TAU WITH IDPARS(12)
C
C                       FOR L = 2:
C                       THE IDS OF VARIABLES NEEDED TO ANALYZE THE
C                       FIELD J.  THESE VARIABLES CAN BE WRITTEN IN
C                       BCD5.  IF THE VARIABLE IS NOT AVAILABLE, IT
C                       CAN BE COMPUTED THROUGH OPTX.  FOR WIND 
C                       DIRECTION, THIS IS THE GRIDDED U-WIND.
C
C                       FOR L = 3:
C                       THIS IS THE FIELD NORMALLY NEEDED FOR THE FIRST
C                       GUESS (WHEN IGUESS=2), AND IS USED IN FSTGS5.
C                       FOR WIND DIRECTION, THIS IS THE GRIDDED V-WIND.
C
C                       FOR L = 4:
C                       THIS IS THE FIELD NEEDED FOR THE FIRST GUESS
C                       WHEN IGUESS=3, AND IS USED IN FSTGS5.  FOR WIND 
C                       DIRECTION, THIS IS THE GRIDDED WIND SPEED.
C
C                       FOR L = 5:
C                       THIS IS ID OF THE OBS OF A VARIABLE OTHER THAN
C                       THE ONE BEING ANALYZED TO USE IN COMPUTING THE
C                       LAPSE RATE.  FOR INSTANCE, FOR TEMPERATURE
C                       (L = 2) THE DEW POINT MIGHT BE USED (L = 5).
C                       FOR WIND DIRECTION, THIS IS THE MODIFIED SPEED
C                       FOR WRITING.
C
C                       FOR L = 6:
C                       THIS IS ID OF A SECOND VARIABLE, OTHER THAN
C                       THE ONE BEING ANALYZED, TO USE IN COMPUTING THE
C                       LAPSE RATE.  FOR INSTANCE, THREE VARIABLES
C                       MIGHT BE USED.
C
C                       FOR L =  7:
C                       THESE CAN BE USED IN PREPROCESSING OR
C                       POSTPROCESSING, IF NEEDED.
C
C                       NORMALLY, THE CCCFFFB, BUT NOT DD IS INDICATED
C                       IN EACH ID.
C
C                       FOR VARIABLES THAT ARE COMPUTED (E.G., WIND 
C                       DIRECTION), ALL EXCEPT THE FIRST MAY HAVE
C                       DIFFERENT MEANINGS THAN ABOVE.
C                       (INTERNAL)
C               NPASS = THE NUMBER OF PASSES FOR THIS ANALYSIS.
C                       UP TO 6 ARE  ACCOMMODATED.  (INTERNAL)
C              IBACKN = NUMBER OF 6-H CYCLES TO LOOK BACK FOR FIRST
C                       GUESS WHEN IGUESS = 2.  IBACKN = 1 MEANS 
C                       CURRENT (MOST RECENT) CYCLE PLUS THE ONE
C                       6 HOURS BEFORE).  NORMALLY, THIS IS 0 FOR
C                       DEVELOPMENT; MAY BE OTHERWISE FOR OPERATIONS.
C                       (INTERNAL)
C              IBACKL = NUMBER OF 6-H CYCLES TO LOOK BACK FOR FIRST
C                       GUESS WHEN IGUESS = 3.  IBACKN = 1 MEANS 
C                       CURRENT (MOST RECENT) CYCLE PLUS THE ONE
C                       6 HOURS BEFORE).  NORMALLY, THIS IS 0 FOR
C                       DEVELOPMENT; MAY BE OTHERWISE FOR OPERATIONS.
C                       (NOTE THAT THIS DOES NOT PROVIDE FOR A BACKUP
C                       FIRST GUESS FROM LAMP AT 1-H INTERVALS.  A FIRST
C                       GUESS (LAMP/MOS FORECASTS AT THE HOUR EXPECTED)
C                       CAN BE USED, BUT JUST NOT A BACKUP.)
C                       (INTERNAL)
C              NORUNS = NUMBER OF RUNS OR CYCLES TO INCLUDE IN AN
C                       ANALYSIS, ALL VERIFYING AT THE SAME TIME, 
C                       MAXIMUM OF 5.  (INTERNAL)
C           NHRRUN(J) = THE HOURS PRIOR TO THE RUN TIME IN NDATE TO
C                       INCLUDE IN THE ANALYSIS (J=1,NORUNS).  (INTERNAL)
C           WTRUNA(J) = THE WEIGHTS TO USE FOR THE RUN TIMES IN
C                       NHRRUN(J) FOR THE ANALYSIS (J=1,NORUNS).
C                       (INTERNAL)
C           WTRUNL(J) = THE WEIGHTS TO USE FOR THE RUN TIMES IN
C                       NHRRUN(J) FOR THE LAPSE RATES (J=1,NORUNS).
C                       (INTERNAL)
C         MSHPAS(J,L) = THE NOMINAL MESH LENGTH FOR EACH PASS (J=1,NPASS)
C                       FOR EACH FIRST GUESS OPTION (L=1,4).
C                       (INTERNAL)
C          ER1(J,L,M) = ERROR CRITERIA FOR EACH PASS (J=1,NPASS),
C                       FOR EACH FIRST GUESS OPTION (L=1,4),
C                       AND FOR EACH MONTH (M=1,12).
C                       IF AN OBSERVATION IS DIFFERENT FROM THE CURRENT
C                       ANALYSIS BY MORE THAN ER1( , , ), IT IS
C                       PROBABLY NOT USED ON THIS PASS.  HOWEVER,
C                       BEFORE A DATUM IS DISCARDED, A BUDDY CHECK
C                       IS MADE.  ALSO IF ER1(J,L,M) = 0, IT MEANS THE
C                       CHECK IS NOT PERFORMED ON THIS PASS.  (INTERNAL)
C          NTYPE(J,L) = TYPE OF CORRECTION FOR EACH PASS J (J=1,NPASS)
C                       FOR EACH FIRST GUESS OPTION (L=1,4).
C                         0 MEANS SKIP THIS PASS
C                         1 MEANS W = 1
C                         2 MEANS W = (R**2 - D**2)/(R**2 + D**2)
C                         3 MEANS SAME AS 2 EXCEPT SUM OF WEIGHTS IN
C                           DENOMINATOR.
C                       (INTERNAL)
C              R(J,L) = RADIUS OF INFLUENCE FOR EACH PASS J (J=1,NPASS)
C                       FOR EACH FIRST GUESS OPTION (L=1,4) IN TERMS
C                       OF MESH GRID UNITS BEING USED ON THAT PASS.
C                       (INTERNAL)
C         ITRPLQ(J,L) = TYPE OF INTERPOLATION TO GO FROM ONE MESH
C                       LENGTH TO ONE OF HALF THAT FOR EACH PASS J
C                       (J=1,NPASS), FOR EACH FIRST GUESS OPTION
C                       (L=1,4).
C                       1 = BILINEAR
C                       2 = BIQUADRATIC
C                       (INTERNAL)
C              B(J,L) = SMOOTHING PARAMETER FOR EACH PASS J (J=1,NPASS)
C                       FOR EACH FIRST GUESS OPTION (L=1,4).
C                       B( ) = 0 MEANS NO SMOOTHING.  (INTERNAL)
C          RSTAR(J,L) = MULTIPLICATIVE FACTOR (J=1,NPASS) TO USE WITH
C                       R(J) IN DETERMINING HOW FAR OUTSIDE GRID TO USE 
C                       DATA (L=1,4).  FOR PASS J AND FIRST PASS GUESS
C                       OPTION L, PROGRAM WILL USE DATA R(J,L)*RSTAR(J,L)
C                       GRID UNITS OUTSIDE GRID.  (INTERNAL)
C         LNDWAT(J,L) = FLAG FOR EACH PASS (J=1,NPASS) AND FIRST 
C                       GUESS OPTION (L=1,4) TO DETERMINE HOW THE
C                       SEA/LAND CORRECTIONS WILL BE MADE
C                       0 = DON'T USE THE DIFFERENCES FEATURE; ALL DATA
C                           WILL BE USED FOR ALL POINTS.
C                       1 = USE THE DIFFERENCE FEATURE.  SEE LNDSEA( ).
C                       2 = OCEAN POINTS WILL NOT BE CHANGED.
C                       3 = NEITHER OCEAN NOR INLAND WATER POINTS WILL
C                           BE CHANGED.
C                       (INTERNAL)
C         IALGOR(J,L) = TYPE OF CORRECTION ALGORITHM TO APPLY FOR EACH
C                       PASS (J=1,NPASS) AND FIRST GUESS OPTION (L=1,4).
C                       1 = NORMAL TERRAIN
C                       2 = DISTANCE WEIGHTED TERRAIN
C                       (INTERNAL)
C         ELCORR(J,L) = FRACTION OF THE ELEVATION CORRECTION TO 
C                       APPLY FOR EACH PASS (J=1,NPASS) AND FIRST 
C                       GUESS OPTION (L=1,4) FOR THE "USUAL" LAPSE
C                       RATE SIGN.  (INTERNAL)
C             BK(J.L) = THE MAXIMUM RADII IN GRIDPOINTS FOR WHICH
C                       THE LAPSE RATES INDICATED BY IBKPN ARE USED
C                       FOR EACH PASS (J=1,NPASS) AND FIRST GUESS
C                       OPTION (L=1,4).  (INTERNAL)
C         ELCORU(J,L) = FRACTION OF THE ELEVATION CORRECTION TO 
C                       APPLY FOR EACH PASS (J=1,NPASS) AND FIRST 
C                       GUESS OPTION (L=1,4) FOR THE "UNUSUAL" LAPSE
C                       RATE (THE ONE WITH THE SIGN SPECIFIED IN 
C                       IBKPN.  (INTERNAL)
C         IPOINT(J,L) = THE NUMBER OF POINTS SAMPLED FROM THE FIRST
C                       GUESS TO USE FOR EACH PASS (J=1,NPASS) AND FIRST 
C                       GUESS OPTION (L=1,4).  (INTERNAL)
C            RWATO(J) = FACTOR BY WHICH TO INCREASE THE RADIUS FOR
C                       OCEAN WATER POINTS (J=1,NPASS).  (INTERNAL)
C            RWATI(J) = FACTOR BY WHICH TO INCREASE THE RADIUS FOR
C                       INLAND WATER POINTS (J=1,NPASS).  (INTERNAL)
C            SMULT(J) = THE MULTIPLICATIVE FACTOR WHEN CONTOURING OR
C                       GRIDPRINTING THE DATA (J=1,NPASS).
C                       NOTE SMULT( ), SADD( ), ORIGIN( ), CINT( ),
C                       AND UNITS( ), ALTHOUGH NAMED THE SAME AND
C                       PLAYING THE SAME ROLE IN GRIDPRINTING, ARE
C                       NOT THE SAME VARIABLES AS IN THE CALLING
C                       PROGRAM; THEY ARE FILLED HERE AND PERTAIN
C                       TO EACH PASS.  (INTERNAL)
C             SADD(J) = THE ADDITIVE FACTOR WHEN CONTOURING OR
C                       GRIDPRINTING THE DATA (J=1,NPASS).  (INTERNAL)
C           ORIGIN(J) = THE CONTOUR ORIGIN, APPLIES TO THE UNITS IN
C                       UNITS(J) (J=1,NPASS).  (INTERNAL)
C             CINT(J) = THE CONTOUR INTERVAL, APPLIES TO THE UNITS IN
C                       UNITS(J) (J=1,NPASS).  (INTERNAL)
C             NPRT(J) = 1 FOR GRID PRINTING OF ANALYSIS AFTER PASS J
C                       (J=1,NPASS).  ZERO FOR NO PRINTING.  (INTERNAL)
C             JPRT(J) = SAME AS ABOVE EXCEPT FOR SMOOTHED ANALYSIS.
C                       (INTERNAL)
C             NTDL(J) = 1 FOR TDLPACKING AND WRITING ANALYSIS AFTER PASS J
C                       (J=1,NPASS).  ZERO FOR NO PACKING.  (INTERNAL)
C             JTDL(J) = SAME AS ABOVE EXCEPT FOR SMOOTHED ANALYSIS.
C                       (INTERNAL)
C          WNDWT(J,L) = WEIGHT TO APPLY TO WIND OBS CORRECTIONS
C                       RELATIVE TO PRESSURE CORRECTIONS FOR EACH PASS
C                       (J=1,6) FOR EACH FIRST GUESS OPTION (L=1,4).
C                       (INTERNAL)
C              NSMTYP = TYPE OF SMOOTHING:
C                       1 = NORMAL, 5-PT
C                       2 = SAME EXCEPT NO CHANGE IS MADE UNLESS ONE
C                           OF THE POINTS TO CONTRIBUTE TO THE NEW
C                           VALUE HAS BEEN CHANGED.
C                       3 = 9-POINT SMOOTHING USED ON LAST PASS ONLY,
C                           ANY OTHER PASS DEFAULTS TO NSMTYP = 2.
C                       4 = FOR PASSES GE 4, SAME AS 2 EXCEPT
C                           A POINT IS NOT CHANGED IF IT IS LOWER THAN 
C                           BOTH POINTS ABOVE AND BELOW OR IF IT IS
C                           LOWER THAN BOTH SIDE POINTS.  DIAGONALS
C                           ARE ALSO CONSIDERED.  FOR THE OTHER
C                           PASSES, DEFAULTS TO 2.
C                       5 = SPECIAL TERRAIN-FOLLOWING SMOOTHING.
C                       6 = TWO PASSES OF 5 ABOVE.
C                       7 = THREE PASSES OF 5 ABOVE.
C                       (INPUT)
C              WNDTHR = THRESHOLD TO USE FOR WIND SPEED FOR WIND TO BE 
C                       USED IN ANALYSIS.  (INTERNAL)
C              WNDTRN = DEGREES TO TURN SURFACE WIND BEFORE APPLYING
C                       GEOSTROPHIC CORRECTION.  (INTERNAL)
C              WNDGRD = PARAMETER FOR CONVERTING WIND SPEED TO SLP
C                       GRADIENTS.  (INTERNAL)
C             I405ADG = 1 = DIAGNOSTIC PRINT TO KFILDO;
C                       0 OTHERWISE.  (INTERNAL)
C               LAPFG = 0 COMPUTE LAPSE FROM DATA
C                       1 COMPUTE LAPSE FROM FIRST GUESS.
C                       2 COMPUTE LAPSE FROM UPPER AIR DATA.
C                       3 COMPUTE LAPSE FROM SURFACE AND UPPER AIR DATA.
C                       (INTERNAL)
C              LIMITX = THE NUMBER OF TIMES THE CONTROL INFORMATION
C                       FOR THIS VARIABLE (CCCFFF) WILL BE PRINTED.
C                       MULTIPLE TAUS FOR A PARTICULAR CCCFFF WILL
C                       BE PRINTED ONLY IF LIMITX HAS NOT BEEN
C                       EXCEEDED.  (INTERNAL)
C               IVRAD = CONTROLS HOW VRAD( , ) AND THE RADII R( , )
C                       ARE USED.
C                       0 = USE R( , ) NORMALLY.
C                       1 = USE VRAD( , ).
C                       IF A STATION HAS NO VRAD( , ), USE THE GENERIC
C                       R( , ).  (INTERNAL)
C              IQUALC = THE COLUMN IN IQUAL(K, ) WHERE THE
C                       DATA QUALITY FOR THAT STATION K RESIDES.
C                       (INTERNAL)
C           QUALWT(J) = THE FRACTIONAL WEIGHTS TO APPLY TO THE THREE
C                       QUALITIES OF DATA (J=1,4).  (INTERNAL)
C               ISETP = FLAG TO INDICATE WHETHER AFTER THE LASS PASS
C                       A GRIDPOINT WILL BE SET TO THE CLOSEST
C                       STATION (=2), TO A VALUE IN THE DIRECTION
C                       OF THE STATION VALUE BUT NOT CROSS AN INTEGER
C                       BOUNDARY (=1), OR NOT (=0).  (THIS COULD BE
C                       PARTICULARIZED TO QUALITY OF DATA.)  (INPUT)
C                 ILS = FLAG FOR HOW THE SEA/LAND CORRECTIONS ARE
C                       GOING TO BE MADE:
C                       1 = LAND/WATER TREATED SEPARATELY;
C                       0 = OTHERWISE.  THIS OPERATES IN TANDOM WITH
C                       LNDWAT( , ), BUT ILS CAN OVERRIDE FOR EASY CHANGE.
C                       (INTERNAL)
C               IBKPN = FLAG TO INDICATE WHETHER TO APPLY BK( , ) TO
C                       POSITIVE OR NEGATIVE LAPSE RATES:
C                        0 = DON'T OPERATE BK( , ) (ALL LAPSES USED),
C                       +1 = APPLY TO POSITIVE LAPSES (POSITIVE IS ODD
C                            FOR TEMPERATURE),
C                       +2 = APPLY TO POSITIVE LAPSES, BUT DON'T USE
C                            LAPSE AT ALL WHEN ELEDIF LT 0 (THEY ONLY
C                            OPERATE UPWARD),
C                       -1 = APPLY TO NEGATIVE LAPSES (NEGATIVE IS ODD
C                            FOR SNOW), AND
C                       -2 = APPLY TO NEGATIVE LAPSES, BUT DON'T USE
C                            LAPSE AT ALL WHEN ELEDIF LT 0 (THEY ONLY
C                            OPERATE UPWARD).
C                       99 = DON'T COMPUTE OR USE LAPSE RATES.
C                       (LAPSE RATES WILL ALSO NOT BE USED WHEN KFILLP
C                       IS NOT PROVIDED AND WHEN ELCORR( ) FOR ALL
C                       PASSES = 0.)
C                       (INTERNAL)
C                LPNO = THE MAXIMUM NUMBER OF DATA POINTS TO USE IN
C                       COMPUTING THE LAPSE.  NOTE THAT THERE CAN BE
C                       LPNO*NORUNS ACTUAL VALUES TO SUM.  USE
C                       LPNO = 99 TO INDICATE NO LIMIT.  IBKPN
C                       NE 99 AND LPNO = 0 ARE INCOMPATIBLE.  
C                       THEREFORE, LPNO IS SET = 10000 TO INDICATE
C                       NO LIMIT.  NOT USED WHEN LAPFG = 3.
C                       (INTERNAL)
C              HGTTHA = ELEVATION DIFFERENCE IN M BETWEEN A STATION
C                       AND A GRIDPOINT WHICH MUST NOT BE EXCEEDED
C                       FOR THE STATION TO INFLUENCE THE GRIDPOINT.
C                       CONVERTED TO M.  (INTERNAL)
C              HGTTHB = ELEVATION DIFFERENCE IN M BETWEEN A STATION
C                       AND ANY (INTERPOLATED) POINT ON THE ELEVATION
C                       GRID BETWEEN THE STATION AND THE GRIDPOINT
C                       WHICH MUST NOT BE EXCEEDED FOR THE STATION 
C                       TO INFLUENCE THE GRIDPOINT.  CONVERTED TO M.
C                       (INTERNAL)
C              IFIRST = COUNTS ENTRIES INTO U405A.  THIS ALLOWS (HARD
C                       CODED) CONTROL OF OUTPUT.  SET BY DATA
C                       STATEMENT TO ZERO.  (INTERNAL)
C                       (THIS IS NOT SAVED; SHOULD IT BE?)
C            LIMIT(J) = WHEN IFIRST GT LIMIT( ), PRINT OF CONTROL 
C                       INFORMATION WILL NOT OCCUR (J=1,NVAL).  IT
C                       APPLIES TO EACH ELEMENT SEPARATELY.  (INTERNAL)
C           IGUESS(J) = TYPE OF FIRST GUESS TO USE IN PRIORITY ORDER
C                       (J=1,4)
C                       1 = CONSTANT.
C                       2 = PRIMARY GRID (E.G., A MOS FORECAST).
C                       3 = ALTERNATE GRID.
C                       4 = AVERAGE OF OBSERVATIONS.
C                       (INTERNAL)
C               GUESS = THE VALUE TO USE AS CONSTANT WHEN IGUESS(1) IS
C                       ACTIVATED.  (INTERNAL)
C              IFSTGS = CONTROLS GRIDPRINTING AND TDLPACKING AND 
C                       WRITING OF FIRST GUESS
C                       0 = FIRST GUESS IS NEITHER GRIDPRINTED OR
C                           TDLPACKED AND WRITTEN.
C                       1 = FIRST GUESS IS TO BE GRIDPRINTED.
C                       2 = FIRST GUESS IS TO BE TDLPACKED AND WRITTEN.
C                       3 = FIRST GUESS IS TO BE BOTH GRIDPRINTED AND
C                           TDLPACKED AND WRITTEN.
C                       (INTERNAL)
C              MGUESS = THE TYPE OF FIRST GUESS ACTUALLY USED (SEE
C                       (IGUESS( )).  SET IN FSTGS5.  (INTERNAL)
C               IVRBL = 1 = VARIABLE IS SLP.
C                       2 = OPEN.
C                       3 = OPEN.
C                       4 = VARIABLE SATURATION DEFICIT.
C                       5-NVAL = OPEN.
C                       VALUE DEPENDS ON ID READ.
C                       (INTERNAL)
C            JDATE(J) = NDATE PARSED INTO ITS 4 COMPONENTS:
C                       J=1 IS YYYY
C                       J=2 IS MM
C                       J=3 IS DD
C                       J=4 IS HH
C                       (INTERNAL)
C                MESH = THE NOMINAL MESH LENGTH OF THE GRID BEING DEALT
C                       WITH WHOSE DIMENSIONS ARE NX AND NY, AND 
C                       THE STATION LOCATIONS IN XP( ) AND YP( ) ARE
C                       IN REFERENCE TO.  (INTERNAL)
C                NVAL = NUMBER OF VARIABLES HANDLED IN U405A.  SET BY
C                       PARAMETER.  (INTERNAL)
C                JVAL = MAXIMUM NUMBER OF VARIABLES NEEDED IN
C                       ITABLE( , ) TO ANALYZE INDIVIDUAL VARIABLES.
C                       SECOND DIMENSION OF ITABLE( , ).  SET BY
C                       PARAMETER.  (INTERNAL)
C         JTABLE(J,L) = TABLE OF IDS (L = 1)THAT HAVE BEEN USED ON
C                       THIS RUN AND COUNT OF THE TIMES USED (L = 2).
C                       THE IVRBL DERIVED IS NEEDED IN BCD5/ESP5 IN
C                       CONTROLLING PRINT. (INTERNAL)
C               IFILL = THE MAXIMUM OF THE NUMBER OF SLOTS IN 
C                       JTABLE( , ) FILLED OR 4.  SLOT 4 HAS TO BE
C                       RESERVED FOR SATURATION DEFICIT IN BCD5.
C             IOPT(J) = SUBSETTING VALUES USED IN GRIDPRINTING (J=1,8)
C                       IN RELATION TO THE SUBSETTED AREA MESH LENGTH
C                       MESHL.  COMPUTED ONCE AND SAVED.  (INTERNAL)
C           NSAVDT(J) = DATE FROM JDATE( ) SAVED FOR USE IN NEXT ENTRY
C                       (J=1,4).  NORMALLY, THE CONTROL DATA ARE 
C                       WRITTEN ONLY ONCE OR A FEW TIMES, AND ARE
C                       THE SAME FOR EACH DATE/TIME.  HOWEVER, THE
C                       ERROR CRITERIA VARY BY MONTH, SO IF MULTIPLE
C                       DAYS ARE USED IN ONE RUN, DIFFERENT MONTHS
C                       MAY BE INVOLVED.  THE ERROR CRITERIA ARE
C                       WRITTEN OUT EACH TIME A NEW MONTH IS 
C                       ENCOUNTERED.  (INTERNAL)
C              ISAVDT = SAVED NDATE FROM ENTRY TO ENTRY.  (INTERNAL)
C            IOPTL(J) = IOPT( ) FOR THE FULL AREA.  ONLY USED FOR 
C                       CHECKOUT.  (INTERNAL)
C                RACK = FOR HOLDING PLAIN LANGUAGE FOR WRITING.
C                       (CHARACTER*32)  (INTERNAL)
C              JPP(J) = ONLY FOR USE IN PACKV.  (INTERNAL)
C              CORMSH = REAL(MESH)/REAL(MESHB).  ADJUSTS GEOSTROPHIC
C                       WIND CORRECTION FOR MESH.  (INTERNAL)
C               IPOPT = INCREMENTED BY 1 ON EACH ENTRY TO CONTROL PRINT
C                       OF IOPT( ).  (INTERNAL)
C           JFIRST(K) = USED IN ESP5 VIA BCD5 TO CONTROL PRINTING
C                       (K=1,NVAL).  (INTERNAL)
C           KFILPR(J) = UNIT NUMBER OF PREPROCESSING ROUTINES
C                       (J=1,6).  (INTERNAL)
C           PREPRO(J) = NAME OF PREPROCESSING ROUTINES (J=1,6).
C                       (CHARACTER*6)  (INTERNAL)
C           POSTAR(J) = NAME OF ARCHIVE POSTPROCESSING ROUTINES (J=1,3).
C                       (CHARACTER*6)  (INTERNAL)
C           POSTDS(J) = NAME OF DISPOSABLE POSTPROCESSING ROUTINE
C                       (J=1,3).  (CHARACTER*6)  (INTERNAL)
C           PREPFL(J) = NAME OF FILE USED WITH PROPRO(J) (J=1,6).
C                       (CHARACTER*60)  (INTERNAL)
C             TLOD(J) = LOW THRESHOLD FOR DISPOSABLE GRIDS (J=1,3).
C                       WHEN A LAST PASS GRIDPOINT IS
C                       LT TLOD, IT IS SET TO SETLOD.  (INTERNAL)
C           SETLOD(J) = SEE TLOD (J=1,3).  (INTERNAL)
C             THID(J) = HIGH THRESHOLD FOR DISPOSABLE GRIDS (J=1,3).
C                       WHEN A LAST PASS  GRIDPOINT IS
C                       GT THID, IT IS SET TO SETHID.  (INTERNAL)
C           SETHID(J) = SEE THID (J=1,3).  (INTERNAL)
C           CONSTD(J) = ADDITIVE CONSTANT TO FURNISH TO THRESHOLDING
C                       AND SCALING SUBROUTINE FOR DISPOSABLE GRIDS
C                       (J=1,3).  (INTERNAL)
C           NSCALD(J) = SCALING CONSTANT TO FURNISH TO THRESHOLDING
C                       AND SCALING SUBROUTINE FOR DISPOSABLE GRIDS
C                       (J=1,3).  (INTERNAL)
C             EX1D(J) = EXTRA PARAMETER FOR DISPOSABLE GRIDS NOT YET
C                       USED FOR THRESHOLDING (J=1,3).  (INTERNAL)
C             EX2D(J) = EXTRA PARAMETER FOR DISPOSABLE GRIDS NOT YET
C                       USED FOR THRESHOLDING (J=1,3).  (INTERNAL)
C             TLOA(J) = LOW THRESHOLD FOR ARCHIVE GRIDS (J=1,3).
C                       WHEN A LAST PASS GRIDPOINT IS
C                       LT TLOD, IT IS SET TO SETLOD.  (INTERNAL)
C           SETLOA(J) = SEE TLOD (J=1,3).  (INTERNAL)
C             THIA(J) = HIGH THRESHOLD FOR ARCHIVE GRIDS (J=1,3).
C                       WHEN A LAST PASS  GRIDPOINT IS
C                       GT THID, IT IS SET TO SETHID.  (INTERNAL)
C           SETHIA(J) = SEE THID (J=1,3).  (INTERNAL)
C           CONSTA(J) = ADDITIVE CONSTANT TO FURNISH TO THRESHOLDING
C                       AND SCALING SUBROUTINE FOR ARCHIVE GRIDS
C                       (J=1,3).  (INTERNAL)
C           NSCALA(J) = SCALING CONSTANT TO FURNISH TO THRESHOLDING
C                       AND SCALING SUBROUTINE FOR ARCHIVE GRIDS
C                       (J=1,3).  (INTERNAL)
C             EX1A(J) = EXTRA PARAMETER FOR ARCHIVE GRIDS NOT YET
C                       USED FOR THRESHOLDING (J=1,3).  (INTERNAL)
C             EX2A(J) = EXTRA PARAMETER FOR ARCHIVE GRIDS NOT YET
C                       USED FOR THRESHOLDING (J=1,3).  (INTERNAL)
C             NCAT(J) = NUMBER OF CATEGORIES FOR PREPROCESSING
C                       ROUTINES (J=1,6).  (INTERNAL)
C           NSCALE(J) = SCALE FACTOR FOR PREPROCESSING ROUTINES
C                       (J=1,6).  (INTERNAL)
C            CONST(J) = CONSTANT FOR PREPROCESSING ROUTINES
C                       (J=1,6).  (INTERNAL)
C           IPREX1(J) = PREPROCESSING PARAMETER (J=1,6).  (INTERNAL)
C           IPREX2(J) = PREPROCESSING PARAMETER (J=1,6).  (INTERNAL)
C            PREX3(J) = PREPROCESSING PARAMETER (J=1,6).  (INTERNAL)
C            PREX4(J) = PREPROCESSING PARAMETER (J=1,6).  (INTERNAL)
C            PREX5(J) = PREPROCESSING PARAMETER (J=1,6).  (INTERNAL)
C            WHOLD(K) = ARRAY TO HOLD DATA WITHHELD (K=1,NSTA).
C                       (AUTOMATIC) (INTERNAL).
C           LTAGWH(K) = SAVES LTAG(K) FOR WITHHELD DATA.
C                       (AUTOMATIC) (INTERNAL)
C            LOCWH(K) = THE LOCATIONS OF THE WITHHELD STATIONS IN
C                       THE LIST IN THE ORDER OF WITHHOLDING.
C                       (AUTOMATIC) (INTERNAL).
C               NWITH = NUMBER OF STATIONS TO WITHHOLD.  (INTERNAL)
C               ITYPR = TYPE OF WITHHOLDING.
C                       1 = USE WTHOL1--FOR USE IN VERIFYING FORECATS
C                           IP24 WILL BE USED FOR STATISTICS.
C                       2 = USE WTHOL2--FOR USE IN STUDYING ERROR
C                           OF ANALYSIS.  IP24 WILL BE USED FOR
C                           WRITING PACKED DATA.
C              IWSEED = A NUMBER FROM 1 TO 10 INDICATING WHICH VALUE
C                       OF SEEDT( ) TO USE IN THIS RUN FOR SEED.
C                       (INTERNAL) 
C            SEEDT(J) = 10 VALUES SET BY DATA STATEMENT TO USE AS
C                       THE STARTING SEED FOR THE RANDOM NUMBER 
C                       GENERATOR (SEE IWSEED). (INTERNAL) 
C                SEED = THE INITIAL SEED FOR THE RANDOM NUMBER GENERATOR
C                       IN SUBROUTINES WTHOL1 AND WTHOL2.  MODIFIED 
C                       IN SUBROUTINES WITHOL AND WTHOL2 AND SAVED.
C                       (SEE IWSEED AND SEEDT( ) ABOVE.)  (INTERNAL)
C              IWLOOP = THE NUMBER OF TIMES THE LOOP WITH THE FIXED
C                       SEED WILL BE EXECUTED BEFORE THE RANDOMIZATION
C                       STARTS.  THIS GIVES THE OPTION OF CHANGING
C                       THE RANDOM LIST OF STATIONS.  (INTERNAL)
C              NBLEND = DEFINES HOW INPUT GRID FOR IGSTGS = 2 OR 3 IS
C                       POSSIBLY BLENDED WITH A CONSTANT
C                       0 = DISABLE.
C                       1 = WHEN IGUESS = 2 OR 3, USE THAT GRID ONLY
C                           OVER WATER AS DEFINED BY THE LAND/SEA MASK
C                           SEALND( , ) = 0, AND USE THE CONSTANT GUESS
C                           OVER LAND.
C                       THIS CAUSES ER1( ,1, ) TO BE USED RATHER THAN
C                       ER1( ,2, ) OR ER1( ,3, ).
C               CSTSM = THE SMOOTHING PARAMETER IF ANY POINT HAS WATER 
C                       BUT NOT ALL ARE WATER.  USE INSTEAD OF BQ.
C                       (INTERNAL)
C                 N4P = 4 INDICATES THE SURROUNDING 4 POINTS WILL BE
C                         CHECKED WHEN TRYING TO FIND A GRIDPOINT OF
C                         THE SAME TYPE AS THE DATUM AND INTERPOLATION
C                         CAN'T BE DONE.  CURRENTLY, THIS IS ALWAYS
C                         DONE (DOES NOT REQUIRE N4P=4).
C                       12 SAME AS ABOVE, EXCEPT 12 ADDITIONAL POINTS
C                         WILL BE CHECKED WHEN NONE OF THE 4 POINTS
C                         ARE OF THE CORRECT TYPE.
C                       N4P IS OPERATIVE ONLY WHEN THE DATUM AND
C                       THE SURROUNDING 4 POINTS ARE OF MIXED TYPE.
C                       (INTERNAL)
C               NCLIP = 1 TO CLIP THE ARCHIVE OUTPUT GRID TO NDGD SIZE.
C                       0 OTHERWISE.  (INTERNAL)
C            NSHLN(J) = DETERMINES SMOOTHING AT HIGH AND LOW ELEVATIONS.
C                       A 1 INDICATES:
C                         J=1--HIGH ELEVATION, HIGH VALUE SMOOTHED.
C                         J=2--HIGH ELEVATION, LOW VALUE SMOOTHED.
C                         J=3--HIGH ELEVATION, NOT HIGH OR LOW VALUE 
C                                              SMOOTHED.
C                         J=4--LOW ELEVATION, HIGH VALUE SMOOTHED.
C                         J=5--LOW ELEVATION, LOW VALUE SMOOTHED.
C                         J=6--LOW ELEVATION, NOT HIGH OR LOW VALUE
C                                             SMOOTHED.
C                       A 0 INDICATES NO SMOOTHING FOR THE VALUES OF J.
C                       (INTERNAL)
C               WTWTL = WEIGHTING FACTOR TO USE FOR OCEAN OR INLAND WATER
C                       POINTS OVER LAND WHEN ILS = 1.  OCEAN POINTS
C                       NEVER AFFECT INLAND WATER.  (INTERNAL)
C               WTLTW = WEIGHTING FACTOR TO USE FOR LAND POINTS OVER
C                       OCEAN AND INLAND WATER WHEN ILS = 1.  (INTERNAL)
C                  BB = RETURNED VALUE.
C                       (INTERNAL)
C                 JER = 0 UNTIL AN ERROR OCCURS, THEN IT IS SET = 1.
C               MAXPT = THE MAXIMUM NUMBER OF POINTS SAMPLED FROM THE
C                       FIRST GUESS TO USE FOR THIS VARIABLE.  IT 
C                       NEVER EXCEEDS ISMPL.  (INTERNAL)
C           MPAIRS(K) = THE ACTUAL NUMBER OF PAIRS USED IN THE 
C                       CALCULATION (K=1,NSTA).  IT CAN TAKE THE
C                       FOLLOWING VALUES:
C                       1)  5555 FOR SOME PAIRS BUT LT 4,
C                       2)  7777 STATION IS OUTSIDE ANALYSIS BY R (NOTE
C                           THIS MAY BE A LARGER AREA THAN ACTUALLY 
C                           USED,
C                       3)  A LEGITIMATE NUMBER OF PAIRS USED IN THE
C                           CALCULATION, OR 
C                       4)  9999 FOR OTHER SITUATIONS (NO PAIR LIST, OB
C                           MISSING, OR NO USABLE PAIRS).  (INTERNAL)
C                       (AUTOMATIC) 
C               IBKPR = FLAG INDICATING WHETHER OR NOT BK( , ) WAS 
C                       CHANGED TO AGREE WITH R( , ) AND HOW MANY TIMES. 
C                       (INTERNAL) 
C                  NX = THE X-EXTENT OF THE CURRENT GRID.  DEFINED IN
C                       FSTGS5.  (INTERNAL)
C                  NY = THE Y-EXTENT OF THE CURRENT GRID.  DEFINED IN
C                       FSTGS5.  (INTERNAL)
C        XDATA(K,L,J) = HOLDS THE DATA TO ANALYZE (K=1,NSTA)
C                       (L=1,NORUNS+1) (J=1,LEVELS).
C                       DATA ARE READ INTO COLUMNS L=2,NORUNS.  THE
C                       DATA TO ANALYZE ARE PUT INTO COLUMN L=1.
C                       (INTERNAL) (ALLOCATABLE)
C              LEVELS = THE NUMBER OF PROBABILITY LEVELS TO ANALYZE.
C                       (INTERNAL)
C              IEXTRA = THE NUMBER OF STATIONS TO PROCESS IN WTHOL2 BUT
C                       TO NOT WITHHOLD.  PROBABLY WILL EVENTUALLY BE
C                       ZERO.  (SET BY PARAMETER)
C              MFIRST = 0 TO INDICATE ALLOCATION OF ARRAY ERRANL( , )
C                       NEED BE DONE.  ALSO TO INDICATE SEED NEEDS TO
C                       BE SET.  EQUALS 1 OTHERWISE.
C           DUMCAL(K) = DUMMY CALL LETTERS OF THE STATIONS PROCESSED
C                       (K=1,NWITH+IEXTRA).  (CHARACTER*8) (INTERNAL)
C         ERRANL(K,M) = DATA ASSOCIATED WITH WITHHELD DATA FOR 
C                       COMPUTING ERROR ANALYSIS (K=1,NWITH+IEXTRA)
C                       (M=1,IDIM).  (ALLOCATABLE)
C              ID2(M) = THE 2ND WORD ID OF THE VARIABLE M USED IN
C                       ERRANL( , ) FOR THE ERROR DATA (M=1,IDIM).
C                       IT IS COMPOSED OF 3 PARTS XXX97YYYY:
C                       (1) XXX = NUMBER IN SEQUENCE 1-20 (OR MORE),
C                       (2) CONSTANT = 97,
C                       (3) YYYY = THE VALUE USED IN COMPUTING THE
C                           VARIABLE (E.G.,35 WHEN THE VARIABILITY
C                           HAS BEEN COMPUTED OVER 35 GRIDLENGTHS
C                           FROM THE STATION OR GRIDPOINT).
C                       (ALLOCATABLE)
C                IDIM = 2ND DIMENSION OF ERRANL( , ) AND DIMENSION OF
C                       ID2( ).  SET BY PARAMETER.
C           NROUGH(J) = THE RADII OVER WHICH TO COMPUTE THE ROUGHNESS
C                       IN TERMS OF GRIDLENGTHS (J=1,4).  SET BY DATA
C                       STATEMENT.  (INTERNAL)
C           RELVAR(J) = THE RADII OVER WHICH TO COMPUTE THE VARIABILITY
C                       VARIABLES IN TERMS OF GRIDLENGTHS (J=1,4).
C                       ALSO, RELVAR(1) IS THE DISTANCE OVER WHICH TO
C                       SEARCH FOR THE CLOSEST TWO STATIONS.  SET BY
C                       DATA STATEMENT.  (INTERNAL))
C         VARTAB(J,M) = THE MULTIPLYING FACTORS FOR RELVAR( ) FOR
C                       LAND(J=1) AND WATER(2) FOR AREA M (M=1,4).
C                       (INTERNAL)
C              MESHSV = THE MESH LENGTH SAVED.  (INTERNAL)
C                NXSV = THE X EXTENT SAVED.  (INTERNAL)
C                NYSV = THE Y EXTENT SAVED.  (INTERNAL)
C                  LX = THE NUMBER OF GROUPS WHEN PACKING IN PAWGTS.
C                       (INTERNAL)
C              IOCTET = THE NUMBER OF OCTETS OR BYTES IN THE PACKED
C                       ARRAY IN PAWGTS.  (INTERNAL)
C               FL174 = FILE NAME USED IN RDVRHL AND LAPSUA.
C                       (CHARACTER*60)  (INTERNAL)
C               LASTL = THE LAST LOCATION IN CORE( ) USED.  RETURNED
C                       FROM GSTORE.  (INTERNAL)
C               LASTD = TOTAL NUMBER OF PHYSICAL RECORDS ON DISK
C                       IN INTERNAL RANDOM ACCESS STORAGE.  RETURNED
C                       FROM GSTORE.  (INTERNAL)
C        1         2         3         4         5         6         7 X
C
C        NONSYSTEM SUBROUTINES USED 
C            FSTGS5, BCD5, FLTAGM, GFETCH, IERX, NEWXY1, SIZEGR,
c            RESTRW, FITWTH, SCALX, SCALX1 TRAIL, SKPWR2, SZGRDM,
C            SCLQ06, SCLQ12, SCLSNO, SCLSKY, POST, OSMTH, WTHOL1,
C            WTHOL2, VARI, CLOS2, ROUGH, DIFWH, WRDIR, CONCPR, CONVPR,
C            DIRSPD, RDVRHL, CKPOP, QPF6P6
C
      PARAMETER (NVAL=24,
     1           NVALX2=NVAL*2,
     2           JVAL=7)
C
      PARAMETER (IEXTRA=0)
      PARAMETER (IDIM=20)
C
      CHARACTER*4 STATE
      CHARACTER*6 PREPRO(6),POSTAR(3),POSTDS(3)
      CHARACTER*8 CCALL(ND1,6)
      CHARACTER*8 CCALLD(ND5)
      CHARACTER*8 DUMCAL(ND1)
C        DUMCAL( ) IS AN AUTOMATIC ARRAY.
      CHARACTER*8 EIGHT9S
      CHARACTER*17 ANLTAB(ND4)
      CHARACTER*20 NAME(ND1)
      CHARACTER*32 PLAIN(ND4),RACK,PLAINT
      CHARACTER*40 TITLE/' '/,
     1             SIN/'SIN OF LATITUDE                         '/
      CHARACTER*60 RACESS(6),OUTVEC,OUTQCV
      CHARACTER*60 PREPFL(6),FL174
C
      DIMENSION XP(ND1),YP(ND1),XPL(ND1),YPL(ND1),XPE(ND1),YPE(ND1),
     1          LTAG(ND1),WDIR(ND1),WSPD(ND1),STALAT(ND1),STALON(ND1),
     2          TOSS(ND1),QUEST(ND1),ISDATA(ND1),
     3          IQUAL(ND1,5),LNDSEA(ND1),ELEV(ND1),
     4          NOPAR(ND1),LOCPAR(ND1),QUALST(ND1),XLAPSE(ND1),
     5          VRAD(ND1,6),ELEVHI(ND1),ELEVLO(ND1)
      DIMENSION WHOLD(ND1),LTAGWH(ND1),LOCWH(ND1),ERRWH(ND1),
     1          MPAIRS(ND1)
C        WHOLD( ), LTAGWH( ), LOCWH( ), ERRWH( ), AND MPAIRS( )
C        ARE AUTOMATIC ARRAYS.
      DIMENSION P(ND2X3)
      DIMENSION FD2(ND2X3),FD3(ND2X3),FD4(ND2X3),FD5(ND2X3),FD6(ND2X3),
     1          U(ND2X3),V(ND2X3),FDSINS(ND2X3)
      DIMENSION ID(4,ND4),IDPARS(15,ND4),THRESH(ND4),JD(4,ND4),
     1          JP(3,ND4),ISCALD(ND4),IWRITS(ND4),IWRITA(ND4),
     2          ICOMPT(ND4),INLTAB(ND4)
      DIMENSION IPLAIN(L3264W,4,ND4),IPLANT(L3264W,4)
      DIMENSION IPACK(ND5),DATA(ND5),IWORK(ND5),ICALLD(L3264W,ND5)
      DIMENSION MODNUM(ND6)
      DIMENSION IS0(ND7),IS1(ND7),IS2(ND7),IS4(ND7)
      DIMENSION LSTORE(12,ND9)
      DIMENSION CORE(ND10)
      DIMENSION DIR(ND1,2,ND11),NGRIDC(6,ND11),NGRIDT(6)
      DIMENSION IALOC(ND13),ADIST(ND13),AELEV(ND13)
      DIMENSION TELEV(NXE*NYE),SEALND(NXE*NYE),CPNDFD(NXE*NYE)
      DIMENSION MSHPAS(6,4),ER1(6,4,12),NTYPE(6,4),B(6,4),R(6,4),
     1          ITRPLQ(6,4),RSTAR(6,4),WNDWT(6,4),LNDWAT(6,4),
     2          IALGOR(6,4),ELCORR(6,4),BK(6,4),ELCORU(6,4),IPOINT(6,4),
     3          RWATO(6),RWATI(6)
      DIMENSION SMULT(6),SADD(6),ORIGIN(6),CINT(6),
     1          NPRT(6),JPRT(6),NTDL(6),JTDL(6)
      DIMENSION IGUESS(4),LD(4),LDPARS(15),KFILRA(6),ISTOP(6)
      DIMENSION IOPTB(8),IOPT(8),IOPTL(8),IRACK(8),
     1          JDATE(4),NSAVDT(4),JPP(3),QUALWT(4),
     2          NHRRUN(5),WTRUNA(5),WTRUNL(5),NSHLN(6)
      DIMENSION NCAT(6),NSCALE(6),CONST(6),IPREX1(6),IPREX2(6),
     1          PREX3(6),PREX4(6),PREX5(6),KFILPR(6)
      DIMENSION TLOA(3),SETLOA(3),THIA(3),SETHIA(3),CONSTA(3),NSCALA(3),
     1          EX1A(3),EX2A(3)
      DIMENSION TLOD(3),SETLOD(3),THID(3),SETHID(3),CONSTD(3),NSCALD(3),
     1          EX1D(3),EX2D(3),SEEDT(10)
      DIMENSION NROUGH(4),RELVAR(4),VARTAB(2,4)
      DIMENSION ITABLE(4,JVAL),LIMIT(NVAL),JFIRST(NVAL),JTABLE(NVAL,2)
C
      EQUIVALENCE (RACK,IRACK)
C
      ALLOCATABLE XDATA(:,:,:)
      ALLOCATABLE ERRANL(:,:)
      ALLOCATABLE ID2(:)

      DATA SEEDT/.1234567, .1250001, .7776661, .8887773, .9992225,
     1           .6788761, .5678911, .9876543, .3333333, .4327897/
C        SEED IS MODIFIED BY SUBROUTINES WTHOL1 AND WTHOL2 AND SAVED
C        FOR THE NEXT ITERATION.
      DATA JFIRST/NVAL*0/
      DATA IFIRST/0/,
     1     MFIRST/0/
      DATA IOPTL/8*0/
      DATA JPP/3*0/
      DATA IPOPT/0/
      DATA NTOTGB/0/
      DATA EIGHT9S/'99999999'/
      DATA JTABLE/NVALX2*0/
      DATA ISAVDT/99999999/
      DATA IFILL/4/
      DATA MTEST/0/
      DATA NROUGH/8,4,2,1/,
     1     RELVAR/55.,45.,35.,27./,
     2     VARTAB/1.,2.,
     3            1.,2.,
     4            1.,2.,
     5            1.,2./
C        THE TWO VALUES PER ROW ARE FOR LAND AND WATER, RESPECTIVELY.
C        THE 4 ROWS ARE FOR THE FOUR AREAS, CONUS, ALASKA, HAWAII, AND
C        PUERTO RICO RESPECTIVELY.
C
      SAVE NSAVDT,ISAVDT,IOPT,SEED,MTEST,ERRANL,ID2,JFIRST,MFIRST
C        EVEN THOUGH ERRANL( , ) AND ID2( ) DO NOT HAVE TO BE
C        REALLOCATED, THE CONTENTS ARE NOR RETAINED WITHOUT BEING 
C        IN A SAVE STATEMENT.
      SAVE NXSV,NYSV,MESHSV
C        NX, NY, AND MESH ARE SAVED SO THAT A COMPUTED VARIABLE
C        WILL HAVE THEM.
C
      IER=0 
      JER=0 
C        JER IS SET = 1 WHEN AN ERROR OCCURS AND IS NOT COUNTED FATAL. 
      JTABLE(1,1)=001120
C        THIS IS SEA LEVEL PRESSURE ID.  THIS LOCATION IN JTABLE( , )
C        IS NECESSARY.
      JTABLE(4,1)=003410
C        THIS IS SATURATION DEFICIT ID.  THIS LOCATION IN JTABLE( , )
C        IS NECESSARY.
      NSTASV=NSTA
C        NSTA MAY BE ALTERED IN U405A, AND IS RESET ON EXIT. 
      IPOPT=IPOPT+1
C
CD     WRITE(KFILDO,100)
CD100  FORMAT(' ')

CD     CALL TIMPR(KFILDO,KFILDO,'START U405A         ')
      
CD     WRITE(KFILDO,1045)N,ND1,NSTA,IOPT
CD1045 FORMAT(/' AT 1045 IN U405A--N,ND1,NSTA,IOPT',20I6)
C
C        INITIALIZE VARIABLE IN CASE ALL VALUES ARE NOT READ AND 
C        MAP IS PRINTED.
C
      DO 102 J=1,4
      DO 101 I=1,6
      MSHPAS(I,J)=0
      NTYPE(I,J)=0
      B(I,J)=0.
      R(I,J)=0.
      ITRPLQ(I,J)=0
      RSTAR(I,J)=0.
      WNDWT(I,J)=0.
      LNDWAT(I,J)=0
C
 101  CONTINUE
 102  CONTINUE
C 
      DO 103 J=1,6
      SMULT(J)=0.
      SADD(J)=0.
      ORIGIN(J)=0.
      CINT(J)=0.
      NPRT(J)=0
      JPRT(J)=0
      NTDL(J)=0
      JTDL(J)=0
 103  CONTINUE
C
      DO 104 L=1,12
      DO 1040 J=1,4
      DO 1041 I=1,6
      ER1(I,J,L)=0.
 1041 CONTINUE
 1040 CONTINUE
 104  CONTINUE
C
C        UPDATE ISAVDT WHEN THERE IS A NEW NDATE.  PURPOSE IS
C        TO INCREMENT IFIRST ONLY FOR A NEW DATE.
C
      IF(NDATE.NE.ISAVDT)THEN
         ISAVDT=NDATE
         IFIRST=IFIRST+1
      ENDIF
C
      KFILAN=INLTAB(N)
C        THE UNIT NUMBER FOR READING THE INDIVIDUAL .CN FILES CAN
C        BE THE SAME AS KFILDI, BECAUSE ALL OTHER USE OF KFILDI IS 
C        OVER.
C
C        PARSE THE DATE INTO ITS FOUR COMPONENTS.
C
      CALL DATPRS(KFILDO,NDATE,JDATE)
C
      IF(IFIRST.EQ.1)THEN
C           NORMALLY THIS SAVING IS DONE AT THE END, BUT MUST BE DONE
C           ON FIRST ENTRY TO KEEP FROM PRINTING TWICE.
         NSAVDT(1)=JDATE(1)
         NSAVDT(2)=JDATE(2)
         NSAVDT(3)=JDATE(3)
         NSAVDT(4)=JDATE(4)
C
C           COMPUTE IOPT( ) FROM IOPTB( ) SO IOPT( ) REFERS TO
C           THE SUBSETTED AREA MESH LENGTH MESHL.  THIS IS DONE ONLY
C           ONCE AND IOPT( ) SAVED.
C
         IF(IOPTB(1).EQ.0)THEN
C
            DO 105 J=1,8
               IOPT(J)=0
 105        CONTINUE
C
         ELSE         
            IOPT(1)=IOPTB(1)
            RATIO=REAL(MESHB)/MESHL
C
            IF(MESHB.EQ.MESHL)THEN
               IOPT(2)=IOPTB(2)
               IOPT(3)=IOPTB(3)
               IOPT(4)=IOPTB(4)
               IOPT(5)=IOPTB(5)
            ELSE
               IOPT(2)=NINT((IOPTB(2)-1)*RATIO+1)
               IOPT(3)=NINT((IOPTB(3)-1)*RATIO+1)
               IOPT(4)=NINT((IOPTB(4)-1)*RATIO+1)
               IOPT(5)=NINT((IOPTB(5)-1)*RATIO+1)
            ENDIF
C         
            IOPT(6)=IOPTB(6)
            IOPT(7)=IOPTB(7)
            IOPT(8)=IOPTB(8)
C
            IF(IPOPT.EQ.1)THEN
               WRITE(KFILDO,107)MESHL,(IOPT(J),J=2,5)
 107           FORMAT(/' SUBSETTED AREA AT NOMINAL MESH LENGTH =',I5,
     1                 ' IS NX FROM',I5,' TO',I5,' AND',
     2                    ' NY FROM',I5,' TO',I5,'.')
            ENDIF
C
         ENDIF
C
      ENDIF
C
C        READ CONTROL INFORMATION ACCORDING TO THE VARIABLE TO BE
C        ANALYZED.
C
      STATE='120 '
COPS      OPEN(UNIT=KFILAN,FILE=ANLTAB(N),STATUS='OLD',
COPS     1     IOSTAT=IOS,ERR=900)
      OPEN(UNIT=KFILAN,STATUS='OLD',IOSTAT=IOS,ERR=900)
C
C        READ AND WRITE ANALYSIS SPECIFIC CONTROL PARAMETERS.  THE
C        CONTENT OF THE FIRST RECORD IS DIFFERENT FOR SLP
C        THAN FOR OTHER VARIABLES.
C
      STATE='1245'
C
      READ(KFILAN,1245,IOSTAT=IOS,ERR=900)NPASS,IFSTGS,
     1    (IGUESS(J),J=1,4),IBACKN,IBACKL,GUESS,TITLE(1:16),
     2     NSMTYP,I405ADG,LAPFG,LIMITX,IVRAD
 1245 FORMAT(8I4,F8.0,1X,A16,5I4)
      NPASS=MIN(NPASS,6)
C        NPASS IS LIMITED TO 6 BY DIMENSION OF VARIABLES.
      WRITE(KFILDO,1246)TITLE(1:16),(JDATE(J),J=1,4)
 1246 FORMAT(/' STARTING ANALYSIS FOR ',A16,' FOR DATE/TIME ',
     1         I5,2I3,I3.2,'00.',
     2        '  $$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$')
C
      WRITE(KFILDO,123)(ID(J,N),J=1,4),TITLE(1:16)
 123  FORMAT(/' ANALYSIS SPECIFIC CONTROL PARAMETERS FOR  ',
     1        3I10.9,I10.3,3X,A16)
      WRITE(KFILDO,125)NPASS,IFSTGS,
     1        (IGUESS(J),J=1,4),IBACKN,IBACKL,GUESS,TITLE(1:16),
     2        NSMTYP,I405ADG,LAPFG,LIMITX,IVRAD
 125  FORMAT(/'    NPASS, IFSTGS, IGUESS(1-4), IBACKN,   IBACKL,',
     1        '   GUESS,   TITLE              NSMTYP   I405ADG',
     2        '  LAPFG LIMIT IVRAD'/
     3         I7,I8,I7,3I2,I8,I10,F11.2,4X,A16,I7,I10,I7,2I6)
C
C        THIS APPLIES TO BOTH SLP AND OTHER.  THIS IS THE COLUMN
C        IN THE STATION DICTIONARY WHERE THE DATA QUALITY
C        FOR THAT LOCATION RESIDES, AND THE POSSIBLE WEIGHTS.
C
      READ(KFILAN,126)IQUALC,(QUALWT(J),J=1,4),ISETP,ILS,IBKPN,LPNO,
     1                HGTTHA,HGTTHB,NWITH,IWSEED,ITYPR,NBLEND,CSTSM,
     2                N4P,NCLIP,(NSHLN(J),J=1,6),WTWTL,WTLTW
 126  FORMAT(I4,4F6.2,4I3,2F6.0,I4,2I2,I4,F4.0,2I4,2X,6I1,2F4.0)
      WRITE(KFILDO,127)IQUALC,
     1                 (QUALWT(J),J=1,4),ISETP,ILS,IBKPN,LPNO,
     2                 HGTTHA,HGTTHB,NWITH,IWSEED,ITYPR,NBLEND,CSTSM,
     3                 N4P,NCLIP,(NSHLN(J),J=1,6),WTWTL,WTLTW
 127  FORMAT(/'    QUAL COL  QWT1 QWT2 QWT3 QWT4 ISETP ILS IBKPN LPNO',
     1        ' HGTTHA HGTTHB NWITH IWSEED ITYPR NBLEND CSTSM N4P ',
     2        'NCLIP  NSHLN WTWTL WTLTW',/,
     3        I9,F9.2,3F5.2,I4,I5,I5,I6,1X,2F7.0,I5,I6,I6,I7,F7.2,I5,I4,
     4        3X,6I1,2F6.3)      
C
C        CHECK LEGITIMATE VALUES OF IQUALC.
C
      IF(IQUALC.LT.1.OR.IQUALC.GT.5)THEN
         WRITE(KFILDO,1275)IQUALC
 1275    FORMAT(/' ****IQUALC =',I4,' NOT IN RANGE TO 1 OR 5.',
     1           '  SET TO 1.  PROCEEDING.')
         IQUALC=1
         ISTOP(1)=ISTOP(1)+1
      ENDIF
C
C        CHECK LEGITIMATE VALUE OF IWSEED.
C
      IF(NWITH.GT.0.AND.(IWSEED.LT.1.OR.IWSEED.GT.10))THEN
C           WHEN NWITH = 0, IWSEED WON'T BE USED.
         WRITE(KFILDO,1276)IWSEED
 1276    FORMAT(/' ****INCORRECT VALUE OF IWSEED.  SET TO 1')
         IWSEED=1
         ISTOP(1)=ISTOP(1)+1
      ENDIF
C
C        SET SEED ONLY ON FIRST ENTRY FOR THIS RUN.
C
      IF(MFIRST.EQ.0)THEN
         SEED=SEEDT(IWSEED)
      ENDIF

C        CHECK LEGITIMATE VALUE OF ITYPR.
C
      IF(NWITH.GT.0.AND.(ITYPR.LT.1.OR.ITYPR.GT.2))THEN
C           WHEN NWITH = 0, ITYPR WON'T BE USED.
         WRITE(KFILDO,1277)ITYPR
 1277    FORMAT(/' ****INCORRECT VALUE OF ITYPR =',I4,
     1           '.  SET TO 1')
         ITYPR=1
         ISTOP(1)=ISTOP(1)+1
      ENDIF      
C
C        CHECK ILS FOR VALID VALUES OF 0 AND 1.
C
      IF(ILS.NE.0.AND.ILS.NE.1)THEN
         WRITE(KFILDO,1278)ILS
 1278    FORMAT(/' ****INCORRECT VALUE OF ILS =',I4,
     1           '.  ANALYSIS FOR THIS VARIABLE ABORTED.')
         GO TO 600
      ENDIF
C
C        READ THE RUN TIMES AND WEIGHTS FOR THEM.
C
      STATE='128 '
      READ(KFILAN,128,IOSTAT=IOS,ERR=900)NORUNS,
     1      (NHRRUN(J),J=1,5),(WTRUNA(J),J=1,5),(WTRUNL(J),J=1,5)
 128  FORMAT(I4,5I6,/,(4X,5F6.0))
C
C        ENSURE THAT NORUNS NE 0.
C
      IF(NORUNS.LE.0.OR.NORUNS.GT.5)THEN
         WRITE(KFILDO,1280)
 1280    FORMAT(/' ****INCORRECT VALUE OF NORUNS.  SET TO 1')
         ISTOP(1)=ISTOP(1)+1
         NORUNS=1
         NHRRUN(1)=0
         WTRUNA(1)=1.
         WTRUNL(1)=1.
      ENDIF
C
C        ENSURE THAT IBKPN AND LPNO ARE COMPATIBLE.
C
      IF(LPNO.EQ.0)THEN
C
         IF(IBKPN.NE.99)THEN
            WRITE(KFILDO,1285)
 1285       FORMAT(/' ****LPNO = 0 AND IBKPN NE 0 ARE INCOMPATIBLE.',
     1              '  SET LPNO = 10000.  PROCEEDING.')
            LPNO=100000
            ISTOP(1)=ISTOP(1)+1
         ENDIF
C
      ENDIF
C     
      WRITE(KFILDO,129)NORUNS
 129  FORMAT(/'    NHRRUN, WTRUNA, AND WTRUNL FOR ',I3,' RUNS')
      WRITE(KFILDO,1290)(NHRRUN(J),J=1,NORUNS)
 1290 FORMAT('     ',5I6)
      WRITE(KFILDO,1291)(WTRUNA(J),J=1,NORUNS)
 1291 FORMAT('     ',5F6.2,/)
      WRITE(KFILDO,1291)(WTRUNL(J),J=1,NORUNS)
C
C        READ THE IDS OF THE ANALYSIS ELEMENT, AND OTHER IDS.
C
      WRITE(KFILDO,1293)
 1293 FORMAT('    ANALYSIS AND DATA ELEMENTS')
C
      STATE='1296 '
C
      DO 130 L=1,JVAL
      READ(KFILAN,1294,IOSTAT=IOS,ERR=900)(ITABLE(J,L),J=1,4)
 1294 FORMAT(4I10)
C
      IF(L.EQ.1)THEN
         WRITE(KFILDO,1295)(ITABLE(J,L),J=1,4)
 1295    FORMAT('       ',4I10,'   ANALYSIS ID')
      ELSEIF(L.EQ.2)THEN
         WRITE(KFILDO,1296)(ITABLE(J,L),J=1,4)
 1296    FORMAT('       ',4I10,'   DATA TO ANALYZE')
      ELSEIF(L.EQ.3)THEN
         WRITE(KFILDO,1297)(ITABLE(J,L),J=1,4)
 1297    FORMAT('       ',4I10,'   PRIMARY  FIRST GUESS (IF USED)')
      ELSEIF(L.EQ.4)THEN
         WRITE(KFILDO,1298)(ITABLE(J,L),J=1,4)
 1298    FORMAT('       ',4I10,'   SECONDARY FIRST GUESS (IF USED)')
      ELSE
         WRITE(KFILDO,1299)(ITABLE(J,L),J=1,4)
 1299    FORMAT('       ',4I10,'   IF NEEDED')
      ENDIF
C             
 130  CONTINUE      
C   
c        CHECK CCCFFFB OF 1ST ID WORD AND THE 4TH ID WORD (THRESHOLD)
C        OF "ANALYSIS VARIABLE" READ WITH INCOMING ID( ).  NOTE THAT
C        THIS DOES NOT CHECK THE 2ND WORD, SO THE PROBABILITY LEVEL,
C        MEAN, AND STANDARD DEVIATION OF ENSEMBLES CAN USE THE SAME
C        U405 CONTROL FILE.
C
      IF(ID(1,N)/100.NE.ITABLE(1,1)/100.OR.
     1   ID(4,N).NE.ITABLE(4,1))THEN
         WRITE(KFILDO,1300)ITABLE(1,1)/100,ITABLE(4,1),
     1                    ID(1,N)/100,ID(4,N)
 1300    FORMAT(/,' ****IDS OF ANALYSIS VARIABLE READ IN U405A.CN',
     1            ' DO NOT MATCH ANALYSIS DESIRED FROM U155.CN',/,
     2            '     CCCFFFB AND 4TH ID READ HERE ARE    ',I8,I11,/,
     3            '     CCCFFFB AND 4TH ID FROM U155.CN ARE ',I8,I11,/,
     4            '     FATAL ERROR.  ABORT.')
         GO TO 600
      ENDIF
C
C        SET IVRBL.  THIS IS A HOLDOVER FROM THE LAMP ANALYSIS CODE.
C        SEA LEVEL PRESSURE CAN BE TREATED DIFFERENTLY BY USING WINDS
C        IN THE ANALYSIS.  PROBABLY SATURATION DEFICIT WILL NOT BE
C        NEEDED HERE, BUT IS LEFT IN.
C    
      IF(ITABLE(1,1)/1000.EQ.JTABLE(1,1))THEN
C           THIS IS FOR SEA LEVEL PRESSURE.  JTABLE(1,1) HAS BEEN
C           PRELOADED.  ITABLE(1,1) CONTAINS THE CCCFFF OF THE
C           VARIABLE TO ANALYZE.
         IVRBL=1
         JTABLE(1,2)=JTABLE(1,2)+1
C           JTABLE( ,2) CONTROLS PRINT IN BCD5/EPS5.
         LIMIT(IVRBL)=LIMITX
      ELSEIF(ITABLE(1,1)/1000.EQ.JTABLE(4,1))THEN
C           THIS IS FOR SATURATION DEFICIT.  JTABLE(4,1) HAS BEEN
C           PRELOADED.  ITABLE(1,1) CONTAINS THE ID OF THE
C           VARIABLE TO ANALYZE.
         IVRBL=4
         JTABLE(4,2)=JTABLE(4,2)+1
C           JTABLE( ,2) CONTROLS PRINT IN BCD5/EPS5.
         LIMIT(IVRBL)=LIMITX
      ELSE
C
         DO 1301 J=1,IFILL
C
         IF(ITABLE(1,1)/1000.EQ.JTABLE(J,1))THEN
            IVRBL=J  
C              THE ENTRY IS ALREADY IN THE TABLE.
            JTABLE(J,2)=JTABLE(J,2)+1
C              JTABLE( ,2) CONTROLS PRINT IN BCD5/EPS5.
            LIMIT(IVRBL)=LIMITX
            GO TO 1306
         ENDIF
C
 1301    CONTINUE         
C
         DO 1303 J=2,NVAL
C           JTABLE(1,1) HAS BEEN PRELOADED WITH SLP ID.
C
         IF(JTABLE(J,1).EQ.0)THEN
            JTABLE(J,1)=ITABLE(1,1)/1000
            IVRBL=J
            JTABLE(J,2)=JTABLE(J,2)+1
            LIMIT(IVRBL)=LIMITX
            IFILL=MAX(J,4) 
C              IFILL CANNOT EXCEED NVAL, THE FIRST DIMENSION OF
C              JTABLE( , ). 
            IF(J.EQ.NVAL)THEN
               WRITE(KFILDO,1302)NVAL
 1302          FORMAT(/' ****JTABLE( , ) IS FULL.  PROBABLE ERROR.',
     1                 '  INDICATES NVAL =,',I4,' CCCFFF''S USED.')
            ENDIF
C
            GO TO 1306
         ENDIF   
C
 1303    CONTINUE
C
         WRITE(KFILDO,1305)
 1305    FORMAT(/' ****JTABLE( ,NVAL) FULL.  COULD NOT DEFINE',
     1           ' IVAL.  U405A ABORTED.')
         GO TO 600
      ENDIF
C        CHECK THRESHOLD OF INPUT VARIABLE WITH THE
C     
C        READ NOMINAL MESH LENGTH TO USE FOR EACH PASS FOR EACH 
C        POSSIBILITY OF FIRST GUESS.
C
 1306 STATE='1308'
C
      DO 135 L=1,4
      READ(KFILAN,1308,IOSTAT=IOS,ERR=900)(MSHPAS(J,L),J=1,NPASS)
 1308 FORMAT(6I8)
C
      IF(JTABLE(IVRBL,2).LE.LIMIT(IVRBL))THEN
         IF(L.EQ.1)WRITE(KFILDO,131)NPASS
 131     FORMAT('    MSHPAS FOR ',I3,' PASSES')
         WRITE(KFILDO,132)L,(MSHPAS(J,L),J=1,NPASS)
 132     FORMAT('       FOR FIRST GUESS OPTION',I2,4X,6I8)
      ENDIF
C   
C        CHECK LEGITIMACY OF MSHPAS( ,L) FOR PROJECTION NPROJ.
C
      DO 134 J=1,NPASS
      CALL ACTUAL(KFILDO,MSHPAS(J,L),XDUM,XDUM,NPROJ,IER)
C
      IF(IER.NE.0)THEN
         WRITE(KFILDO,133)MSHPAS(J,L),NPROJ
 133     FORMAT('     INCORRECT VALUE OF MSHPAS( , ) =',I6,/,
     1          '     FATAL ERROR IN U405A.  STOP AT 133.')
         STOP 133
      ELSEIF(MSHPAS(J,L).NE.MESHB)THEN
         WRITE(KFILDO,1335)MSHPAS(J,L),MESHB
 1335    FORMAT(/' ****MSHPAS( , ) =',I3,' NE MESHB =',I3,
     1           '.  THIS IS UNUSUAL.',
     2           '  PROCEEDING WITH ISTOP(1) INCREMENTED.')
         ISTOP(1)=ISTOP(1)+1     
      ENDIF
C
 134  CONTINUE
C
 135  CONTINUE
C
C        READ ERROR CRITERIA TO USE FOR EACH PASS FOR EACH POSSIBILITY
C        OF FIRST GUESS.
C
      STATE='140 '
C
      DO 146 M=1,12
      DO 145 L=1,4
      READ(KFILAN,140,IOSTAT=IOS,ERR=900)(ER1(J,L,M),J=1,NPASS)
 140  FORMAT(6F8.0)
C
C        WHEN NBLEND NE 0, THEN THE ERROR CRITERIA ARE CHANGED
C        CHANGED FROM THE NORMAL FOR THE MODEL FIRST GUESS TO
C        THAT FOR THE CONSTANT.
C        
      IF(NBLEND.NE.0)THEN
C      
         IF(L.EQ.2.OR.L.EQ.3)THEN
C
            DO 1405 J=1,NPASS
            ER1(J,L,M)=ER1(J,1,M)
 1405       CONTINUE
C
         ENDIF
C
      ENDIF
C
      IF(JTABLE(IVRBL,2).LE.LIMIT(IVRBL))THEN
         IF(L.EQ.1.AND.M.EQ.JDATE(2))WRITE(KFILDO,141)NPASS,M
 141     FORMAT('    ER1    FOR ',I3,' PASSES FOR MONTH',I3)
C
C           PRINT THE CRITERIA ONLY FOR THE ANALYSIS MONTH.
C
         IF(M.EQ.JDATE(2))THEN
            WRITE(KFILDO,142)L,(ER1(J,L,M),J=1,NPASS)
 142        FORMAT('       FOR FIRST GUESS OPTION',I2,4X,6F8.2)
         ENDIF
C
      ENDIF
C
 145  CONTINUE
 146  CONTINUE
C
C        ASSURE THAT THE ERROR CRITERIA GET WRITTEN FOR THE ANALYSIS
C        MONTH.
C
      IF(JDATE(2).NE.NSAVDT(2))THEN
C
         DO 148 L=1,4
C
            IF(L.EQ.1)THEN
               WRITE(KFILDO,147)NPASS,JDATE(2)
 147           FORMAT(/'    ER1    FOR ',I3,' PASSES FOR MONTH',I3)
            ENDIF
C            
            IF(IGUESS(1).EQ.L.OR.
     1         IGUESS(2).EQ.L.OR.
     2         IGUESS(3).EQ.L.OR.
     3         IGUESS(4).EQ.L)THEN 
C                 THIS WILL WRITE FOR ONLY THE OPTIONS POSSIBLE.           
               WRITE(KFILDO,142)L,(ER1(J,L,JDATE(2)),J=1,NPASS)
            ENDIF
C
 148     CONTINUE
C
      ENDIF

C        READ TYPE OF CORRECTION TO USE FOR EACH PASS FOR EACH
C        POSSIBILITY OF FIRST GUESS.
C
      STATE='150 '
C
      DO 155 L=1,4
      READ(KFILAN,1308,IOSTAT=IOS,ERR=900)(NTYPE(J,L),J=1,NPASS)
C
      IF(JTABLE(IVRBL,2).LE.LIMIT(IVRBL))THEN
         IF(L.EQ.1)WRITE(KFILDO,151)NPASS
 151     FORMAT('    NTYPE  FOR ',I3,' PASSES')
         WRITE(KFILDO,152)L,(NTYPE(J,L),J=1,NPASS)
 152     FORMAT('       FOR FIRST GUESS OPTION',I2,4X,6I8)
      ENDIF
C
 155  CONTINUE
C
C        READ SMOOTHING PARAMETER TO USE FOR EACH PASS FOR EACH 
C        POSSIBILITY OF FIRST GUESS.
C
      STATE='160 '
C
      DO 165 L=1,4
      READ(KFILAN,140,IOSTAT=IOS,ERR=900)(B(J,L),J=1,NPASS)
C
      IF(JTABLE(IVRBL,2).LE.LIMIT(IVRBL))THEN
         IF(L.EQ.1)WRITE(KFILDO,161)NPASS
 161     FORMAT('    B      FOR ',I3,' PASSES')
         WRITE(KFILDO,162)L,(B(J,L),J=1,NPASS)
 162     FORMAT('       FOR FIRST GUESS OPTION',I2,4X,6F8.2)
      ENDIF
C
 165  CONTINUE
C
C        READ RADIUS OF INFLUENCE TO USE FOR EACH PASS FOR EACH 
C        POSSIBILITY OF FIRST GUESS.
C
      STATE='170 '
C
      DO 175 L=1,4
      READ(KFILAN,140,IOSTAT=IOS,ERR=900)(R(J,L),J=1,NPASS)
C
      IF(JTABLE(IVRBL,2).LE.LIMIT(IVRBL))THEN
         IF(L.EQ.1)WRITE(KFILDO,171)NPASS
 171     FORMAT('    R      FOR ',I3,' PASSES')
         WRITE(KFILDO,172)L,(R(J,L),J=1,NPASS)
 172     FORMAT('       FOR FIRST GUESS OPTION',I2,4X,6F8.2)
      ENDIF
C
 175  CONTINUE
C
C        READ TYPE OF INTERPOLATION TO USE IN COMPUTING
C        THE NEXT GRID FOR EACH PASS FOR EACH POSSIBILITY
C        OF FIRST GUESS.  ITRPLQ = 1 FOR BILINEAR AND 
C        ITRPLQ = 2 FOR BIQUADRATIC INTERPOLATION.  THIS
C        WILL HAVE MEANING ONLY IF THE GRID NEEDS TO BE
C        INTERPOLATED FROM A PREVIOUS GRID.
C        FOR INSTANCE, ITRPLQ(2,1) = 1 MEANS BILINEAR WILL
C        BE USED IN ARRIVING AT THE FIRST GUESS
C        (THAT IS, THE FIELD FOR THE FIRST PASS), IF
C        INTERPOLATION IS NEEDED, FOR FIRST GUESS TYPE 2.
C        ITRPLQ(2,2) = 2 MEANS THAT BIQUADRATIC WILL BE
C        USED IN ARRIVING AT THE GRID TO USE FOR PASS 2,
C        FOR FIRST GUESS TYPE 2.
C
      STATE='180 '
C
      DO 185 L=1,4
      READ(KFILAN,1308,IOSTAT=IOS,ERR=900)(ITRPLQ(J,L),J=1,NPASS)
C
      IF(JTABLE(IVRBL,2).LE.LIMIT(IVRBL))THEN
         IF(L.EQ.1)WRITE(KFILDO,181)NPASS
 181     FORMAT('    ITRPLQ FOR ',I3,' PASSES')
         WRITE(KFILDO,182)L,(ITRPLQ(J,L),J=1,NPASS)
 182     FORMAT('       FOR FIRST GUESS OPTION',I2,4X,6I8)
      ENDIF
C
 185  CONTINUE
C
C        READ RSTAR, THE FRACTION OF THE RADIUS OF INFLUENCE
C        TO USE DATA OUTSIDE THE ANALYSIS AREA FOR EACH PASS 
C        FOR EACH POSSIBILITY OF FIRST GUESS.
C
      STATE='190 '
C
      DO 193 L=1,4
      READ(KFILAN,140,IOSTAT=IOS,ERR=900)(RSTAR(J,L),J=1,NPASS)
C
      IF(JTABLE(IVRBL,2).LE.LIMIT(IVRBL))THEN
         IF(L.EQ.1)WRITE(KFILDO,191)NPASS
 191     FORMAT('    RSTAR  FOR ',I3,' PASSES')
         WRITE(KFILDO,192)L,(RSTAR(J,L),J=1,NPASS)
 192     FORMAT('       FOR FIRST GUESS OPTION',I2,4X,6F8.2)
      ENDIF
C
 193  CONTINUE
C
C        READ FLAGS TO DETERMINE HOW THE LAND/SEA CORRECTIONS
C        WILL BE MADE.
C
      STATE='197 '
C
      DO 199 L=1,4
      READ(KFILAN,1308,IOSTAT=IOS,ERR=900)(LNDWAT(J,L),J=1,NPASS)
C
      IF(JTABLE(IVRBL,2).LE.LIMIT(IVRBL))THEN
         IF(L.EQ.1)WRITE(KFILDO,197)NPASS
 197     FORMAT('    LNDWAT FOR ',I3,' PASSES')
         WRITE(KFILDO,198)L,(LNDWAT(J,L),J=1,NPASS)
 198     FORMAT('       FOR FIRST GUESS OPTION',I2,4X,6I8)
      ENDIF
C
 199  CONTINUE
C
C        READ TYPE OF CORRECTION ALGORITHM TO APPLY.
C
      STATE='1991'
C
      DO 1993 L=1,4
      READ(KFILAN,1308,IOSTAT=IOS,ERR=900)(IALGOR(J,L),J=1,NPASS)
C
      IF(JTABLE(IVRBL,2).LE.LIMIT(IVRBL))THEN
         IF(L.EQ.1)WRITE(KFILDO,1991)NPASS
 1991    FORMAT('    IALGOR FOR ',I3,' PASSES')
         WRITE(KFILDO,1992)L,(IALGOR(J,L),J=1,NPASS)
 1992    FORMAT('       FOR FIRST GUESS OPTION',I2,4X,6I8)
      ENDIF
C
 1993 CONTINUE
C
C        READ FRACTION OF ELEVATION CORRECTION TO APPLY TO
C        USUAL, OR EXPECTED, LAPSE RATES.
C
      STATE='1995'
C
      DO 200 L=1,4
      READ(KFILAN,140,IOSTAT=IOS,ERR=900)(ELCORR(J,L),J=1,NPASS)
C
      IF(JTABLE(IVRBL,2).LE.LIMIT(IVRBL))THEN
         IF(L.EQ.1)WRITE(KFILDO,1995)NPASS
 1995    FORMAT('    ELCORR FOR ',I3,' PASSES')
         WRITE(KFILDO,1996)L,(ELCORR(J,L),J=1,NPASS)
 1996    FORMAT('       FOR FIRST GUESS OPTION',I2,4X,6F8.2)
      ENDIF
C
 200  CONTINUE
C
C        READ THE MAXIMUM DISTANCE IN GRID LENGTHS TO WHICH
C        TO APPLY THE POSITIVE (IBKPN = +1) OR NEGATIVE
C        (IBKPN = -1) LAPSE RATES.
C
      STATE='2003'
      IBKPR=0
C
      DO 201 L=1,4
      READ(KFILAN,140,IOSTAT=IOS,ERR=900)(BK(J,L),J=1,NPASS)
C
C        MAKE SURE BK( , ) IS CONSISTENT WITH R( , ).  NO VALUE
C        OF BK( , ) SHOULD BE GREATER THAN THE CORRESPONDING
C        VALUE OF R( , ).
C
C        THIS WAS DISABLED.  R( , ) REFERS TO THE TOTAL RADIUS.
C        BK( , ) IS DISTANCE WEIGHTED AND IF LIMITED TO R( , )
C        CAN HAVE TOO REDUCED AN EFFECT.
C
CCC      DO 2001 J=1,NPASS
C
CCC      IF(BK(J,L).GT.R(J,L))THEN
CCC         BK(J,L)=R(J,L)
CCC         IBKPR=IBKPR+1
CCC      ENDIF
C
CCC 2001 CONTINUE
C
      IF(JTABLE(IVRBL,2).LE.LIMIT(IVRBL))THEN
         IF(L.EQ.1)WRITE(KFILDO,2003)NPASS
 2003    FORMAT('    BK     FOR ',I3,' PASSES')
         WRITE(KFILDO,2005)L,(BK(J,L),J=1,NPASS)
 2005    FORMAT('       FOR FIRST GUESS OPTION',I2,4X,6F8.2)
      ENDIF
C
 201  CONTINUE
C
C        READ FRACTION OF ELEVATION CORRECTION TO APPLY TO
C        UNUSUAL LAPSE RATES.  THIS IS THE ONE WITH THE
C        SIGN SPECIFIED IN IBKPN AND TO WHICH BK( , ) IS
C        APPLIED
C
      STATE='2015'
C
      DO 202 L=1,4
      READ(KFILAN,140,IOSTAT=IOS,ERR=900)(ELCORU(J,L),J=1,NPASS)
C
      IF(JTABLE(IVRBL,2).LE.LIMIT(IVRBL))THEN
         IF(L.EQ.1)WRITE(KFILDO,2015)NPASS
 2015    FORMAT('    ELCORU FOR ',I3,' PASSES')
         WRITE(KFILDO,2016)L,(ELCORU(J,L),J=1,NPASS)
 2016    FORMAT('       FOR FIRST GUESS OPTION',I2,4X,6F8.2)
      ENDIF
C
 202  CONTINUE
C
C        READ THE R-FACTOR FOR INCREASING THE RADIUS FOR
C        OCEAN WATER POINTS.
C
      STATE='2021'
      READ(KFILAN,140)(RWATO(J),J=1,NPASS)
      WRITE(KFILDO,2021)NPASS,(RWATO(J),J=1,NPASS)
 2021 FORMAT('    RWATO  FOR ',I3,' PASSES',10X,6F8.2)
C
C        READ THE R-FACTOR FOR INCREASING THE RADIUS FOR
C        OCEAN WATER POINTS.
C
      STATE='2022'
      READ(KFILAN,140)(RWATI(J),J=1,NPASS)
      WRITE(KFILDO,2022)NPASS,(RWATI(J),J=1,NPASS)
 2022 FORMAT('    RWATI  FOR ',I3,' PASSES',10X,6F8.2)
C
C        READ THE (MAXIMUM) NUMBER OF POINTS SAMPLED FROM THE
C        FIRST GUESS TO USE IN THE ANALYSIS.
C
      STATE='2023'
C
      DO 203 L=1,4
      READ(KFILAN,1308,IOSTAT=IOS,ERR=900)(IPOINT(J,L),J=1,NPASS)
C
      IF(JTABLE(IVRBL,2).LE.LIMIT(IVRBL))THEN
         IF(L.EQ.1)WRITE(KFILDO,2023)NPASS
 2023    FORMAT('    IPOINT FOR ',I3,' PASSES')
         WRITE(KFILDO,2025)L,(IPOINT(J,L),J=1,NPASS)
 2025    FORMAT('       FOR FIRST GUESS OPTION',I2,4X,6I8)
      ENDIF
C
 203  CONTINUE
C
C        READ MULTIPLICATIVE FACTOR FOR GRIDPRINTING.
C
      STATE='209 '
      READ(KFILAN,140,IOSTAT=IOS,ERR=900)(SMULT(J),J=1,NPASS)
      IF(JTABLE(IVRBL,2).LE.LIMIT(IVRBL))WRITE(KFILDO,209)NPASS,
     1                          (SMULT(J),J=1,NPASS)
 209  FORMAT('    SMULT  FOR ',I3,' PASSES',10X,6F8.2)
C
C        READ ADDITIVE FACTOR FOR GRIDPRINTING.
C
      STATE='210'
      READ(KFILAN,140,IOSTAT=IOS,ERR=900)(SADD(J),J=1,NPASS)
      IF(JTABLE(IVRBL,2).LE.LIMIT(IVRBL))WRITE(KFILDO,211)NPASS,
     1                          (SADD(J),J=1,NPASS)
 211  FORMAT('    SADD   FOR ',I3,' PASSES',10X,6F8.2)
C
C        READ ORIGIN FOR GRIDPRINTING.
C
      STATE='220 '
      READ(KFILAN,140,IOSTAT=IOS,ERR=900)(ORIGIN(J),J=1,NPASS)
      IF(JTABLE(IVRBL,2).LE.LIMIT(IVRBL))WRITE(KFILDO,221)NPASS,
     1                          (ORIGIN(J),J=1,NPASS)
 221  FORMAT('    ORIGIN FOR ',I3,' PASSES',10X,6F8.2)
C
C        READ CONTOURING INTERVAL FOR GRIDPRINTING.
C
      STATE='230 '
      READ(KFILAN,140,IOSTAT=IOS,ERR=900)(CINT(J),J=1,NPASS)
      IF(JTABLE(IVRBL,2).LE.LIMIT(IVRBL))WRITE(KFILDO,231)NPASS,
     1                          (CINT(J),J=1,NPASS)
 231  FORMAT('    CINT   FOR ',I3,' PASSES',10X,6F8.2)
C
C        READ GRIDPRINTING OPTION FOR UNSMOOTHED GRID GRIDPRINTING.
C
      STATE='240 '
      READ(KFILAN,1308,IOSTAT=IOS,ERR=900)(NPRT(J),J=1,NPASS)
      IF(JTABLE(IVRBL,2).LE.LIMIT(IVRBL))WRITE(KFILDO,241)NPASS,
     1                          (NPRT(J),J=1,NPASS)
 241  FORMAT('    NPRT   FOR ',I3,' PASSES',10X,6I8)
C
C        READ GRIDPRINTING OPTION FOR SMOOTHED GRID GRIDPRINTING.
C
      STATE='250 '
      READ(KFILAN,1308,IOSTAT=IOS,ERR=900)(JPRT(J),J=1,NPASS)
      IF(JTABLE(IVRBL,2).LE.LIMIT(IVRBL))WRITE(KFILDO,251)NPASS,
     1                          (JPRT(J),J=1,NPASS)
 251  FORMAT('    JPRT   FOR ',I3,' PASSES',10X,6I8)
C
C        READ TDLPACKING OPTION FOR UNSMOOTHED PACKING.
C
      STATE='260 '
      READ(KFILAN,1308,IOSTAT=IOS,ERR=900)(NTDL(J),J=1,NPASS)
      IF(JTABLE(IVRBL,2).LE.LIMIT(IVRBL))WRITE(KFILDO,261)NPASS,
     1                          (NTDL(J),J=1,NPASS)
 261  FORMAT('    NTDL   FOR ',I3,' PASSES',10X,6I8)
C
C        READ TDLPACKING OPTION FOR SMOOTHED PACKING.
C
      STATE='270 '
      READ(KFILAN,1308,IOSTAT=IOS,ERR=900)(JTDL(J),J=1,NPASS)
      IF(JTABLE(IVRBL,2).LE.LIMIT(IVRBL))WRITE(KFILDO,271)NPASS,
     1                          (JTDL(J),J=1,NPASS)
 271  FORMAT('    JTDL   FOR ',I3,' PASSES',10X,6I8)
C  
C        READ THE PRE-PROCESSING SUBROUTINE NAMES AND PARAMETERS.
C        THREE ARE PROVIDED FOR.
C
      STATE=' 275 '
C 
      DO 274 J=1,6    
      READ(KFILAN,272)PREPRO(J),KFILPR(J),PREPFL(J),
     1                NCAT(J),NSCALE(J),CONST(J),IPREX1(J),
     2                IPREX2(J),PREX3(J),PREX4(J),PREX5(J)
 272  FORMAT(A6,I3,1X,A60,/,2I8,F8.0,2I8,3F8.0)
C
      IF(JTABLE(IVRBL,2).LE.LIMIT(IVRBL))THEN
         WRITE(KFILDO,273)J,PREPRO(J),KFILPR(J),PREPFL(J),
     1                NCAT(J),NSCALE(J),CONST(J),IPREX1(J),
     2                IPREX2(J),PREX3(J),PREX4(J),PREX5(J)
 273     FORMAT('    PREPROCESSING  SUBROUTINE',I2,' AND FILE NAME:   ',
     1                              A6,I3,1X,A60,/,2I8,F8.3,3I8,3F8.3)
      ENDIF
C
 274  CONTINUE
C  
C        IF IVRAD NE 0, THEN THE PREPROCESSING ROUTINE RDVRHL MUST BE
C        SPECIFIED.
C
      IF(IVRAD.NE.0)THEN
C
         DO 2745 J=1,6
         IF(PREPRO(J).EQ.'RDVRHL')GO TO 2749
 2745    CONTINUE
C
         WRITE(KFILDO,2746)
 2746    FORMAT(/,' ****IVRAD NE 0, BUT PREPROCESSING ROUTINE RDVRHL',
     1            ' IS NOT CALLED.  COUNT AS FATAL ERROR.')
         GO TO 600
C
      ENDIF
C
C        READ THE POST-PROCESSING SUBROUTINE NAME AND PARAMETERS
C        FOR ARCHIVE GRIDS.  THREE ARE PROVIDED FOR.
C
 2749 DO 277 J=1,3
      READ(KFILAN,275)POSTAR(J),
     1                TLOA(J),SETLOA(J),THIA(J),SETHIA(J),
     2                CONSTA(J),NSCALA(J),EX1A(J),EX2A(J)
 275  FORMAT(A6,/,5F8.0,I8,2F8.0)
C
      IF(JTABLE(IVRBL,2).LE.LIMIT(IVRBL))THEN
         WRITE(KFILDO,276)J,POSTAR(J),
     1                    TLOA(J),SETLOA(J),THIA(J),SETHIA(J),
     2                    CONSTA(J),NSCALA(J),EX1A(J),EX2A(J)
 276     FORMAT('    POSTPROCESSING SUBROUTINE FOR ARCHIVE',I2,':     ',
     1                                              A6,/,5F8.0,I8,2F8.0)
      ENDIF
C
 277  CONTINUE
C  
C        READ THE POST-PROCESSING SUBROUTINE NAME AND PARAMETERS
C        FOR DISPOSABLE GRIDS.  THREE ARE PROVIDED FOR.
C
      DO 280 J=1,3
      READ(KFILAN,278)POSTDS(J),
     1                TLOD(J),SETLOD(J),THID(J),SETHID(J),
     2                CONSTD(J),NSCALD(J),EX1D(J),EX2D(J)
 278  FORMAT(A6,/,5F8.0,I8,2F8.0)
C
      IF(JTABLE(IVRBL,2).LE.LIMIT(IVRBL))THEN
         WRITE(KFILDO,279)J,POSTDS(J),
     1                    TLOD(J),SETLOD(J),THID(J),SETHID(J),
     2                    CONSTD(J),NSCALD(J),EX1D(J),EX2D(J)
 279     FORMAT('    POSTPROCESSING SUBROUTINE FOR DISPOSABLE',I2,':  ',
     1                                              A6,/,5F8.0,I8,2F8.0)
      ENDIF
C
 280  CONTINUE
C    
C        READ WEIGHTS OF WIND OBS TO APPLY RELATIVE TO HEIGHT OBS
C        FOR SLP ONLY.
C
      IF(ID(1,N)/1000.EQ.001201)THEN
         STATE='280 '
C
         DO 285 L=1,4
         READ(KFILAN,140,IOSTAT=IOS,ERR=900)(WNDWT(J,L),J=1,NPASS)
C
         IF(JTABLE(IVRBL,2).LE.LIMIT(IVRBL))THEN
            IF(L.EQ.1)WRITE(KFILDO,281)NPASS
 281        FORMAT('    WNDWT  FOR ',I3,' PASSES')
            WRITE(KFILDO,282)L,(WNDWT(J,L),J=1,NPASS)
 282        FORMAT('       FOR FIRST GUESS OPTION',I2,4X,6F8.2)
         ENDIF
C
 285     CONTINUE
C
      ELSE
C    
C           INITIALIZE WNDWT( , ) FOR OTHER THAN SLP ANALYSIS.
C
         DO 2855 J=1,NPASS
         DO 2854 L=1,4
         WNDWT(J,L)=0.
 2854    CONTINUE
 2855    CONTINUE
C         
      ENDIF
C
      CLOSE(UNIT=KFILAN)
C
C        PRINT DIAGNOSTIC WHEN BK( , ) WAS MODIFIED.  THIS IS
C        COUNTED AS AN ERROR.
C
      IF(IBKPR.NE.0)THEN
C           NOTE THAT THE DISABLEMENT AT DO 2001, IBKPR ALWAYS = 0.
         WRITE(KFILDO,286)IBKPR
 286     FORMAT(/' ****BK( , ) WAS MODIFIED.',I4,' VALUES WERE',
     1           ' CHANGED TO AGREE WTIH R( , ).')
         ISTOP(1)=ISTOP(1)+1
      ENDIF
C
c        IDENTIFY IP14 WITH DATE AND VARIABLE.
C
      IF(IP14.NE.0.AND.IP14.NE.KFILDO)THEN
         WRITE(IP14,2861)(ID(J,N),J=1,4),NDATE
 2861    FORMAT(/' STARTING ANALYSIS FOR VARIABLE',3(1X,I9.9),1X,I10.3,
     1           ' FOR DATE',I12)
      ENDIF
C
C        DETERMINE THE NUMBER OF PROBABILITY LEVELS AND
C        ALLOCATE XDATA(NSTA,NORUNS+1,LEVELS)
C
      NS=N
C        NS IS INTERNAL VALUE OF N AND THE START OF THE
C        PROBABILITY SEQUENCE IF THESE ARE PROBABILITY
C        LEVELS.
      NE=N
C        NE IS THE END OF THE SEQUENCE OF VARIABLES TO
C        DEAL WITH WITHIN U405A WITHOUT RETURNING TO U155.
C        IF THIS IS A PROBABILITY SEQUENCE, THEN IT WILL
C        BE THE END OF THE SEQUENCE.  OTHERWISE, NE WILL
C        REMAIN = NS = N.
C
      IF(IDPARS(6,N).GT.0.AND.IDPARS(6,N).LT.100)THEN
C           THIS IS A PROBABILITY LEVEL INDICATED BY LLLL IN ID.
         IF(NE.EQ.NPRED)GO TO 2863
C           THIS IS THE END OF THE LIST; ONLY ONE IN SEQUENCE.
         NE=N+1
C         
 2862    IF(IDPARS(1,NE).EQ.IDPARS(1,NS).AND.
     1      IDPARS(2,NE).EQ.IDPARS(2,NS).AND.
     2      IDPARS(12,NE).EQ.IDPARS(12,NS).AND.
     3      IDPARS(6,NE).GT.0.AND.IDPARS(6,NE).LT.100)THEN
C
            IF(NE.EQ.NPRED)THEN
C                 THE END OF THE LIST OF VARIABLES HAS BEEN REACHED.
               GO TO 2863  
            ELSE
               NE=NE+1
               GO TO 2862 
            ENDIF
C
         ELSE
            NE=NE-1
C              NE IS THE END OF THE PROBABILITY SEQUENCE. 
         ENDIF 
C
      ENDIF
C
 2863 LEVELS=NE-NS+1
C        LEVELS IS THE NUMBER OF PROBABILITY LEVELS IN THE
C        SEQUENCE.  IF IT IS NOT A PROBABILITY SEQUENCE, LEVELS = 1. 
C
      DEALLOCATE(XDATA,STAT=IOS)
C        XDATA( , , ) IS DEALLOCATED BECAUSE NORUNS AND LEVELS
C        MAY NOT BE THE SAME FROM ENTRY TO ENTRY.  AN ERROR RETURN
C        OF 1 INDICATES XDATA( , , ) HAD NOT BEEN ALLOCATED.  THIS
C        WOULD HAPPEN ON THE FIRST ENTRY, BUT SHOULD NOT CAUSE HARM.
      ALLOCATE (XDATA(ND1,NORUNS+1,LEVELS),STAT=IOS)
C
      IF(IOS.EQ.1)THEN
         WRITE(KFILDO,2864)
 2864    FORMAT(/' ****ALLOCATION OF XDATA FAILED IN U405A AT 2864.',
     1           '  ARRAY ALREADY ALLOCATED.')
         STOP 2864
      ELSEIF(IOS.EQ.2)THEN
         WRITE(KFILDO,2865)
 2865    FORMAT(/' ****ALLOCATION OF XDATA FAILED IN U405A AT 2865.',
     1           '  ARRAY NOT ALLOCATED.')
         STOP 2865
      ENDIF
C
C        SET XDATA( , , ) TO MISSING IN CASE IT IS NOT FILLED.
C        XDATA(K,L,J) = HOLDS THE DATA TO ANALYZE (K=1,NSTA)
C                       (L=1,NORUNS+1) (J=1,LEVELS).
C
      DO 2868 J=1,LEVELS
      DO 2867 L=1,NORUNS+1
      DO 2866 K=1,NSTA
      XDATA(K,L,J)=9999.
 2866 CONTINUE
 2867 CONTINUE
 2868 CONTINUE
C
C        WHEN VARIABLE IS NOT TO BE ANALYZED BUT COMPUTED, SKIP
C        DOWN TO 2885.

      IF(ICOMPT(N).NE.0)THEN
         MESH=MESHSV
         NX=NXSV
         NY=NYSV
C           MESH, NX, AND NY ARE RESTORED FROM LAST ENTRY. THIS
C           IS DONE BECAUSE THEY ARE USUALLY SET IN FSTGS5, WHICH
C           IS NOT ENTERED FOR A COMPUTED VARIABLE.
         GO TO 2885
      ENDIF
C
C        GET THE DATA TO ANALYZE IN XDATA( , , ), ASSUMES THE ITABLE
C        HAS ALL THE INFORMATION, EXCEPT ENTRIES CAN APPLY TO ANY 
C        MODEL (DD) AND PROJECTION (TAU = IDPARS(12)).
C        ACCOMMODATES UP TO 5 RUN TIMES, WITH FORECASTS VERIFYING
C        AT THE SAME TIME.
C        HOWEVER, WHEN THE DATA TO ANALYZE ARE OBSERVATIONS
C        (CCC = 7XX), DD IS NOT ADDED.
C
      DO 2877 J=1,LEVELS
C        FILL XDATA( , ,J) WITH J PROBABILITY LEVELS.  THESE ARE
C        PROBABILITY LEVELS TO ANALYZE, NOT THE PROBABILITIES
C        TO USE IN SCALING A CATEGORICAL VARIABLE.
      M=NS+J-1
C        M IS INDEX INTO VARIABLES LIKE ID( , ).
C
      DO 2875 L=1,NORUNS
C        FILL XDATA( ,L, ) WITH EACH RUN.  IF A LEVEL CANNOT
C        BE FOUND, NORUNS IS REDUCED FOR THE NEXT TIME
C        THROUGH LOOKING FOR LEVELS.  HOWEVER, A MISSING LEVEL
C        WILL BE INTERPRETED AS A REDUCTION IN NUMBER OF 
C        CYCLES BECAUSE THE ERROR RETURNS DO NOT INDICATE
C        WHY THE DATA WERE NOT FOUND.  THE PROGRAM SHOULD
C        RUN WITHOUT ALL THE RUNS (CYCLES) DESIRED, BUT
C        ALL LEVELS OUGHT TO BE THERE, OR THE NUMBER OF
C        CYCLES WILL BE REDUCED.  A LEVEL CAN BE MISSING, BUT
C        THE NUMBER OF CYCLES MAY BE REDUCED FROM THEN ON.
C
      IF(ITABLE(1,2)/100000000.EQ.7)THEN
C           FOR HOURLY ANALYSIS, USE ITABLE( , ) VALUE.
         LD(1)=ITABLE(1,2)
      ELSE    
         LD(1)=ITABLE(1,2)+IDPARS(4,M)
C           THIS USES MODEL DD FROM THE ANALYSIS TO BE PRODUCED.
C           IF THIS NEEDED TO BE DIFFERENT, ITABLE( , ) COULD
C           BE MADE SPECIFIC TO THE ANALYSIS TO BE PRODUCED.
      ENDIF
C
C        CHECK CONSISTENCY OF MODNO WITH DD TO WRITE.
C
      IF(MODNO.NE.IDPARS(4,M))THEN
         WRITE(KFILDO,2869)MODNO,IDPARS(4,M)
 2869    FORMAT(/,' ****MODNO =',I3.2,' DOES NOT EQUAL DD =',I3.2,
     1            ' IN ID(1).  PROGRAM WILL RUN, BUT IS1(15) IN',
     2            ' PACKED DATA WILL BE MODNO AND NOT AGREE WITH',
     3            ' DD.')
         ISTOP(1)=ISTOP(1)+1
      ENDIF     
C          
      LD(2)=ITABLE(2,2)+IDPARS(6,M)*10000
C        THIS ACCOMMODATES THE MEAN AND PROBABILITY LEVELS.
C
      IF(ITABLE(1,2)/100000000.EQ.7)THEN
         LD(3)=ITABLE(3,2)
C           FOR HOURLY ANALYSIS, THE PROJECTION IS ZERO AND IS
C           NOT INCREASED
      ELSE
         LD(3)=ITABLE(3,2)+IDPARS(12,M)+NHRRUN(L)
C           THE PROJECTION IS INCREASED BY NHRRUN(L) HOURS.
      ENDIF
C
      LD(4)=ID(4,M)
      CALL PRSID1(KFILDO,LD,LDPARS)
      CALL UPDAT(NDATE,-NHRRUN(L),MDATE)
C        THE DATE/TIME IS DECREASED BY NHRRUN(L) HOURS. 
      ITAU=0
      MCAT=0
C        MDATE, ITAU, AND MCAT SHOULD NOT BE NEEDED FOR 
C        U405A IN RETVEC.
C
      CALL RETVEC(KFILDO,KFIL10,IP12,KFILRA,RACESS,NUMRA,
     1            LD,LDPARS,JD(1,M),ITAU,
     2            NDATE,MDATE,CCALL,ISDATA,XDATA(1,L+1,J),ND1,NSTA,
     3            ICALLD,CCALLD,IPACK,IWORK,DATA,ND5,
     4            LSTORE,ND9,LITEMS,CORE,ND10,
     5            NBLOCK,NFETCH,
     6            IS0,IS1,IS2,IS4,ND7,
     7            L3264B,L3264W,IER)
C        THE L+1 COLUMN IS NOW FILLED IN XDATA( , , ).
C
CCC      WRITE(KFILDO,9998)(K,CCALL(K,1),XDATA(K,L+1,J),K=1,NSTA)
CCC 9998 FORMAT(/' AT 9998 IN U405A--(K,CCALL(1,K),XDATA(K,L+1,J),',
CCC     1        'K=1,NSTA)',/,('     ',I6,2X,A8,F10.3))
C
CCC      WRITE(KFILDO,9997)IER,J,L,NDATE,MDATE
CCC 9997 FORMAT(/' IN U450 OUT OF RETVEC,IER,J,L,NDATE,MDATE--',3I5,2I12)
C
      IF(IER.NE.0)THEN
C           IER NE 0 MEANS DATA TO ANALYZE WERE NOT OBTAINED.
C           TRY TO COMPUTE IN OPTX.
C
         CALL OPTX(KFILDO,KFIL10,IP12,KFILRA,RACESS,NUMRA,
     1             LD,LDPARS,THRESH(M),JD(1,M),ITAU,
     2             NDATE,MDATE,CCALL,ISDATA,XDATA(1,L+1,J),ND1,MCAT,
     3             NSTA,ICALLD,CCALLD,IPACK,IWORK,DATA,ND5,
     4             LSTORE,ND9,LITEMS,CORE,ND10,
     5             LASTL,LASTD,NBLOCK,NSTORE,NFETCH,
     6             IS0,IS1,IS2,IS4,ND7,
     7             L3264B,L3264W,ISTAB,IER)
C           THRESH WILL LIKELY NOT BE USED IN OPTX.
C           ITAU IS USED AS 0; NO LOOKAHEAD.
C           AN ERROR IN OPTX WILL GENERATE A DIAGNOSTIC.
C
C***      WRITE(KFILDO,9996)IER,J,L,NDATE,MDATE
C*** 9996 FORMAT(/' IN U450 OUT OF OPTX,IER,J,L,NDATE,MDATE--',3I5,2I12)
C
         IF(IER.EQ.120)THEN
            IER=0
C             THIS IS JUST A MISSING STATION, NOT FATAL.
         ENDIF
C
      ENDIF
C
      IF(IER.NE.0)THEN
         JER=1
         WRITE(KFILDO,287)(LD(JJ),JJ=1,4),NDATE
 287     FORMAT(/,' ****DATA FOR ANALYSIS =',3(1X,I9.9),1X,I10.3,
     1            ' COULD NOT BE OBTAINED IN U405A FOR DATE',I12,/,
     2            '     INPUT VARIABLE LIKELY DOES NOT EXIST',
     3            ' ON INPUT OR RANDOM ACCESS FILE AND COULD',
     4            ' NOT BE COMPUTED IN OPTX.') 
C
C           PROGRAM MUST NOT STOP UNLESS L = 1.
C
         IF(L.EQ.1)THEN
            ISTOP(1)=ISTOP(1)+1
C              SUBROUTINES RETVEC AND OPTX AND THEIR POSSIBLE CALLS
C              TO CONST WILL LIKELY HAVE PRODUCED MORE THAN ONE ****
C              DIAGNOSTIC, BUT ONLY HERE WILL STOP(1) BE INCREMENTED--
C              ONE PER FAILURE. 
            WRITE(KFILDO,2871)
 2871       FORMAT('     THE MISSING DATA ARE FROM THE CURRENT',
     1             ' CYCLE, AND THE ANALYSIS CANNOT BE MADE.')
            GO TO 500
         ELSE
            ISTOP(3)=ISTOP(3)+1
C              BECAUSE THIS WILL NOT STOP THE PROGRAM, AND TO
C              REDUCE THE NUMBER OF ISTOP(1) ERRORS, A MISSING
C              DATA RECORD IS TREATED HERE AS SUCH AND ISTOP(3)
C              INCREMENTED.
            NORUNS=L-1
C              FROM NOW ON, NORUNS EQUALS THE NUMBER OF DATA SETS
C              AVAILABLE.
            WRITE(KFILDO,2872)
 2872       FORMAT('     HOWEVER, THE MISSING DATA ARE FROM A',
     1             ' PRIOR CYCLE, AND THE ANALYSIS CAN STILL BE',
     2             ' MADE.',/,
     3             '     FOR PROBABILITIES IN SEQUENCE, THIS',
     4             ' CYCLE WILL NOT BE LOOKED FOR AGAIN.')
            GO TO 2877
         ENDIF
C
      ENDIF        
C
C        DO ANY PREPROCESSING ON INPUT DATA NECESSARY.  
C        PROCESSING ON A FIRST GUESS IS DONE IN FSTGS5.
C        NOTE:  IF AUGMT1 IS PUT IN THE CONTROL FILE FIRST,
C        THEN ALL FORECASTS, INCLUDING THE AUGMENTED ONES,
C        WILL HAVE ANY FOLLOWING PROCESSING DONE.  IF
C        AUGMT1 FOLLOWS ANOTHER PREPROCESSING ROUTINE, THEN
C        ONLY THE ORIGINAL DATA WILL BE PROCESSED.
C
      DO 2874 NN=1,6
C
      IF(PREPRO(NN).EQ.'AUGMT1')THEN
         CALL AUGMT1(KFILDO,KFIL10,KFILPR(NN),PREPFL(NN),NAREA,JDATE(4),
     1               MDATE,ID(1,M),IDPARS(1,M),JD(1,M),IBACKN,NHRRUN(L),
     2               CCALL,NAME,XDATA(1,L+1,J),LNDSEA,NSTA,ND1,
     3               LSTORE,ND9,LITEMS,
     4               IS0,IS1,IS2,IS4,ND7,
     5               IPACK,IWORK,DATA,ND5,
     6               CORE,ND10,NBLOCK,NFETCH,
     7               L3264B,ISTOP,IER)
C
      ELSEIF(PREPRO(NN).EQ.'SCALX ')THEN
         CALL SCALX(KFILDO,XDATA(1,L+1,J),NSTA,CONST(NN),NSCALE(NN),IER)
C           THE ABOVE CALL TO SCALX WILL MULTIPLY THE INPUT 
C           DATA IN XDATA( , , ) BY CONST*10**NSCALE
C
      ELSEIF(PREPRO(NN).EQ.'SCALXI')THEN
C           THIS IS FOR POP.  THE INCOMING IS IN THOUSANDTHS; ROUND,
C           TO WHOLE PERCENT
         CALL SCALXI(KFILDO,XDATA(1,L+1,J),NSTA,CONST(NN),NSCALE(NN),
     1               IER)
C           THE ABOVE CALL TO SCALX WILL MULTIPLY THE INPUT 
C           DATA IN XDATA( , , ) BY CONST*10**NSCALE, THEN ROUNDED
C           TO THE NEAREST WHOLE NUMBER.
C
      ELSEIF(PREPRO(NN).EQ.'SCLSNO')THEN
C           SNOW IS SCALED TO TENTHS OF INCHES.
C           THERE ARE 6 SNOW CATEGORIES.
         NZERO=0
C            NZERO USED TO SIGNAL VECTOR DATA TO SCLSNO.
         ITRPX=0
C           SEVERAL VARIABLES PERTAINING TO GRIDS, INCLUDING
C           ITRPX, ARE NOT USED IN THIS CALL TO SCLSNO.  THE
C           USE OF VECTOR DATA IS SIGNALED BY NX=NZERO=0.
         LD(1)=ITABLE(1,2)+IDPARS(4,M)
         LD(2)=ITABLE(2,2)
         LD(3)=ITABLE(3,2)+IDPARS(12,M)+NHRRUN(L)
C           THE PROJECTION IS INCREASED BY NHRRUN(L) HOURS.
         LD(4)=ITABLE(4,2)
         CALL PRSID1(KFILDO,LD,LDPARS) 
         MESHX=99  
C           MESH HAS NOT BEEN DEFINED UP TO THIS POINT, AND
C           IS NOT USED IN THIS CALL TO SCLSNO FOR VECTOR DATA.
C           MESHX IS SET TO 99 HERE AS A SAFEGUARD FOR SCLSNO.
         CALL SCLSNO(KFILDO,KFIL10,MDATE,LD,LDPARS,JD(1,M),
     1               XDATA(1,L+1,J),FD2,ND1,NSTA,NZERO,NZERO,
     2               NCAT(NN),CONST(NN),NSCALE(NN),PREX3(NN),
     3               NPROJ,ALAT,ALON,ORIENT,XLAT,MESHX,ITRPX,
     4               LSTORE,ND9,LITEMS,
     5               IS0,IS1,IS2,IS4,ND7,
     6               IPACK,IWORK,DATA,ND5,
     7               CORE,ND10,NBLOCK,NFETCH,MISTOT,
     8               L3264B,ISTOP,IER)
C           THE ABOVE CALL TO SCLSNO WILL SCALE THE 
C           VALUES IN EACH SNOWFALL CATEGORY TO THE FULL
C           RANGE OF THE CATEGORY ACCORDING TO THE LOWEST
C           AND HIGHEST PROBABILITY OCCURRING FOR THIS
C           CASE OVER THE ANALYSIS AREA.  NOTE THAT
C           THIS CALL IS FOR THE VECTOR DATA AND THE GRID
C           VARIABLES (I.E., MESH) ARE NOT USED IN SCLSNO.
C
         IF(IER.NE.0)THEN
            JER=1
C
            IF(L.EQ.1)THEN
               ISTOP(1)=ISTOP(1)+1
               GO TO 500
            ELSE
               NORUNS=L-1
               WRITE(KFILDO,2872)
               GO TO 2877
            ENDIF
C
         ENDIF
C
      ELSEIF(PREPRO(NN).EQ.'SCLQ06')THEN
C           QPF IS SCALED TO HUNDREDTHS OF INCHES.
C              THERE ARE 6 CATEGORIES FOR QPF06.
         NZERO=0
C            NZERO USED TO SIGNAL VECTOR DATA TO SCLSNO.
         ITRPX=0
C           SEVERAL VARIABLES PERTAINING TO GRIDS, INCLUDING
C           ITRPX, ARE NOT USED IN THIS CALL TO SCLSNO.  THE
C           USE OF VECTOR DATA IS SIGNALED BY NX=NZERO=0.
         LD(1)=ITABLE(1,2)+IDPARS(4,M)
         LD(2)=ITABLE(2,2)
         LD(3)=ITABLE(3,2)+IDPARS(12,M)+NHRRUN(L)
C           THE PROJECTION IS INCREASED BY NHRRUN(L) HOURS.
         LD(4)=ITABLE(4,2)
         CALL PRSID1(KFILDO,LD,LDPARS) 
         MESHX=99  
C           MESH HAS NOT BEEN DEFINED UP TO THIS POINT, AND
C           IS NOT USED IN THIS CALL TO SCLSNO FOR VECTOR DATA.
C           MESHX IS SET TO 99 HERE AS A SAFEGUARD FOR SCLSNO.
         CALL SCLQ06(KFILDO,KFIL10,MDATE,LD,LDPARS,JD(1,M),
     1               XDATA(1,L+1,J),FD2,ND1,NSTA,
     2               NZERO,NZERO,NCAT(NN),CONST(NN),NSCALE(NN),
     3               NPROJ,ALAT,ALON,ORIENT,XLAT,MESHX,ITRPX,
     4               LSTORE,ND9,LITEMS,
     5               IS0,IS1,IS2,IS4,ND7,
     6               IPACK,IWORK,DATA,ND5,
     7               CORE,ND10,NBLOCK,NFETCH,MISTOT,
     8               L3264B,ISTOP,IER)
C           THE ABOVE CALL TO SCLQ06 WILL SCALE THE 
C           VALUES IN EACH QPF CATEGORY TO THE FULL
C           RANGE OF THE CATEGORY ACCORDING TO THE LOWEST
C           AND HIGHEST PROBABILITY OCCURRING FOR THIS
C           CASE OVER THE ANALYSIS AREA.  NOTE THAT
C           THIS CALL IS FOR THE VECTOR DATA AND THE GRID
C           VARIABLES (I.E., MESH) ARE NOT USED IN SCLQ06.
C
         IF(IER.NE.0)THEN
            JER=1
C
            IF(L.EQ.1)THEN
               ISTOP(1)=ISTOP(1)+1
               GO TO 500
            ELSE
               NORUNS=L-1
               WRITE(KFILDO,2872)
               GO TO 2877
            ENDIF
C
         ENDIF
C
      ELSEIF(PREPRO(NN).EQ.'SCLQ12')THEN
C           QPF IS SCALED TO HUNDREDTHS OF INCHES.
C           THERE ARE 7 CATEGORIES FOR QPF12.
         NZERO=0
C            NZERO USED TO SIGNAL VECTOR DATA TO SCLSNO.
         ITRPX=0
C           SEVERAL VARIABLES PERTAINING TO GRIDS, INCLUDING
C           ITRPX, ARE NOT USED IN THIS CALL TO SCLSNO.  THE
C           USE OF VECTOR DATA IS SIGNALED BY NX=NZERO=0.
         LD(1)=ITABLE(1,2)+IDPARS(4,M)
         LD(2)=ITABLE(2,2)
         LD(3)=ITABLE(3,2)+IDPARS(12,M)+NHRRUN(L)
C           THE PROJECTION IS INCREASED BY NHRRUN(L) HOURS.
         LD(4)=ITABLE(4,2)
         CALL PRSID1(KFILDO,LD,LDPARS) 
         MESHX=99  
C           MESH HAS NOT BEEN DEFINED UP TO THIS POINT, AND
C           IS NOT USED IN THIS CALL TO SCLSNO FOR VECTOR DATA.
C           MESHX IS SET TO 99 HERE AS A SAFEGUARD FOR SCLSNO.
         CALL SCLQ12(KFILDO,KFIL10,MDATE,LD,LDPARS,JD(1,M),
     1               XDATA(1,L+1,J),FD2,ND1,NSTA,
     2               NZERO,NZERO,NCAT(NN),CONST(NN),NSCALE(NN),
     3               NPROJ,ALAT,ALON,ORIENT,XLAT,MESHX,ITRPX,
     4               LSTORE,ND9,LITEMS,
     5               IS0,IS1,IS2,IS4,ND7,
     6               IPACK,IWORK,DATA,ND5,
     7               CORE,ND10,NBLOCK,NFETCH,MISTOT,
     8               L3264B,ISTOP,IER)
C           THE ABOVE CALL TO SCLQ12 WILL SCALE THE 
C           VALUES IN EACH QPF CATEGORY TO THE FULL
C           RANGE OF THE CATEGORY ACCORDING TO THE LOWEST
C           AND HIGHEST PROBABILITY OCCURRING FOR THIS
C           CASE OVER THE ANALYSIS AREA.  NOTE THAT
C           THIS CALL IS FOR THE VECTOR DATA AND THE GRID
C           VARIABLES (I.E., MESH) ARE NOT USED IN SCLQ12.
C
         IF(IER.NE.0)THEN
            JER=1
C
            IF(L.EQ.1)THEN
               ISTOP(1)=ISTOP(1)+1
               GO TO 500
            ELSE
               NORUNS=L-1
               WRITE(KFILDO,2872)
               GO TO 2877
            ENDIF
C
         ENDIF
C
      ELSEIF(PREPRO(NN).EQ.'SCLSKY')THEN
C           SKY IS SCALED TO CATEGORICAL AMOUNTS * 100.
C           THERE ARE 5 SKY CATEGORIES.
         NZERO=0
C            NZERO USED TO SIGNAL VECTOR DATA TO SCLSNO.
         ITRPX=0
C           SEVERAL VARIABLES PERTAINING TO GRIDS, INCLUDING
C           ITRPX, ARE NOT USED IN THIS CALL TO SCLSKY.  THE
C           USE OF VECTOR DATA IS SIGNALED BY NX=NZERO=0.
         LD(1)=ITABLE(1,2)+IDPARS(4,M)
         LD(2)=ITABLE(2,2)
         LD(3)=ITABLE(3,2)+IDPARS(12,M)+NHRRUN(L)
C           THE PROJECTION IS INCREASED BY NHRRUN(L) HOURS.
         LD(4)=ITABLE(4,2)
         CALL PRSID1(KFILDO,LD,LDPARS) 
         MESHX=99  
C           MESH HAS NOT BEEN DEFINED UP TO THIS POINT, AND
C           IS NOT USED IN THIS CALL TO SCLSNO FOR VECTOR DATA.
C           MESHX IS SET TO 99 HERE AS A SAFEGUARD FOR SCLSNO.
C
         CALL SCLSKY(KFILDO,KFIL10,MDATE,LD,LDPARS,JD(1,M),
     1               XDATA(1,L+1,J),FD2,CCALL,ND1,NSTA,
     2               NZERO,NZERO,NCAT(NN),CONST(NN),NSCALE(NN),
     3               NPROJ,ALAT,ALON,ORIENT,XLAT,MESHX,ITRPX,
     4               LSTORE,ND9,LITEMS,
     5               IS0,IS1,IS2,IS4,ND7,
     6               IPACK,IWORK,DATA,ND5,
     7               CORE,ND10,NBLOCK,NFETCH,MISTOT,
     8               L3264B,ISTOP,IER)
C           THE ABOVE CALL TO SCLSKY WILL SCALE THE 
C           VALUES IN EACH CLOUD CATEGORY TO THE FULL
C           RANGE OF THE CATEGORY ACCORDING TO THE LOWEST
C           AND HIGHEST PROBABILITY OCCURRING FOR THIS
C           CASE OVER THE ANALYSIS AREA.  THE FIRST 2 CATEGORIES
C           ARE SCALED TOWARD THE LOW END; THE HIGHEST 2 CATEGORIES
C           ARE SCALED TOWARD THE HIGH END; THE MIDDLE CATEGORY
C           IS UNCHANGED.  ERROR CHECKING AND INCREMENTING OF
C           ISTOP( ) IS TAKEN CARE OF IN SCLSKY.  NOTE
C           THAT THIS CALL IS FOR THE VECTOR DATA AND THE GRID
C           VARIABLES (I.E., MESH) ARE NOT USED IN SCLSKY, AND
C           NX MUST = 0.
      ENDIF
C
 2874 CONTINUE
C
 2875 CONTINUE
C
 2877 CONTINUE
C        THIS PROVIDES FOR A TRANSFER OUT OF LOOP.
C
C        THE ABOVE APPLIES TO ALL CALLS TO PREPROCESSORS.
C        ALL CYCLES AND ALL LEVELS OF DATA ARE IN XDATA( , , ),
C        BUT THEY HAVE NOT BEEN COMBINED.
C
C        INITIALIZE QUALST( ).
C
      DO 2884 K=1,NSTA
C
      IF(IQUAL(K,IQUALC).EQ.0)THEN
         QUALST(K)=0.
C
         DO 2882 J=1,LEVELS
C
         DO 2881 L=2,NORUNS+1
CCCD        WRITE(KFILDO,2880)K,CCALL(K,1),XDATA(K,L,J)
CCCD2880    FORMAT(' STATION WITH IQUAL(K,IQUALC) = 0--',
CCCD    1          'K,CCALL(K,1),XDATA(K,L,J)  ',I6,2X,A8,F10.3)
         XDATA(K,L,J)=9999.
C           XDATA( ,L,J) SET TO MISSING SO VALUE WON'T BE BE CONSIDERED
C           IN ANY PHASE OF THE ANALYSIS OR WRITTEN FOR PLOTTING.
 2881    CONTINUE
C
 2882    CONTINUE
C
      ELSEIF(IQUAL(K,IQUALC).LE.4)THEN
         QUALST(K)=QUALWT(IQUAL(K,IQUALC))
      ELSE
         WRITE(KFILDO,2883)IQUAL(K,IQUALC),K,CCALL(K,1)
 2883    FORMAT(/' ****QUALITY CONTROL VARIABLE IN IQUAL( , ) =',I4,
     1           ' NOT ZERO AND NOT WITHIN RANGE 1 TO 4 FOR STATION',
     2           ' NO.',I6,2X,A8,/,
     2           '     QUALITY WEIGHT SET = 0 IN U405 AND PROCEEDING.')
         QUALST(K)=0.
         ISTOP(1)=ISTOP(1)+1
      ENDIF
C           
 2884 CONTINUE
C
C        LOOP FOR ALL LEVELS.
C
 2885 DO 400 J=1,LEVELS
C        GET THE FIRST GUESS.  ALL INFORMATION IS AVAILABLE
C        FOR INGESTING NEEDED GRIDS.  THIS FIRST GUESS
C        WILL BE USED FOR THE FIRST PASS.   EACH PASS 
C        OF THE ANALYSIS WILL USE THE GRID FROM THE PREVIOUS 
C        PASS.  ONLY THE FIRST VALUE IN CINT( ), ORIGIN( ),
C        SMULT( ), AND SADD( ) WILL BE USED IN FSTGS5.
C        THAT IS, THE VALUES READ FOR THE FIRST PASS
C        ANALYSIS WILL ALSO BE USED FOR THE FIRST GUESS.
C        ANY PROCESSING OF AN INPUT FIELD WILL BE DONE IN
C        FSTGS5.
      M=NS+J-1
C        M IS INDEX INTO VARIABLES LIKE ID( , ).
C
      IF(ICOMPT(M).EQ.1)GO TO 3465
C
C        NOTE THAT ONLY THE 2ND COLUMN OF DATA IN XDATA( , , )
C        IS FURNISHED.  THIS IS OK FOR THE AVERAGE, BUT MAY
C        NEED TO BE MODIFIED FOR SNOW AND OTHER SIMILARLY
C        TREATED VARIABLES.  FLTAG IS CALLED IN FSTGS5 TO
C        SET LTAG( ).
C
      CALL FSTGS5(KFILDO,KFIL10,KFILOG,KFILRA,RACESS,NUMRA,IP16,IP22,
     1            NDATE,ID(1,M),IDPARS(1,M),JD(1,M),JP(1,M),ISCALD(M),
     2            NGRIDC,ND11,XDATA(1,2,J),XP,YP,XPL,YPL,LTAG,
     3            ND1,NSTA,ITABLE,JVAL,PREPRO,POSTDS,
     4            NCAT,NSCALE,CONST,IPREX1,IPREX2,PREX3,PREX4,
     5            PREX5,
     6            TLOD,SETLOD,THID,SETHID,CONSTD,NSCALD,EX1D,EX2D,
     7            P,FD2,FD3,FD4,FD5,FD6,ND2X3,
     8            SEALND,CPNDFD,NXE,NYE,MESHE,
     9            MODNO,NPROJ,ORIENT,XLAT,
     A            NXL,NYL,ALATL,ALONL,MESHB,MESHL,
     B            NX,NY,MESH,MSHPAS,ITRPLQ,NSMTYP,B,NPASS,
     C            IBACKN,IBACKL,IGUESS,MGUESS,GUESS,IFSTGS,NBLEND,
     D            LSTORE,ND9,LITEMS,
     E            IS0,IS1,IS2,IS4,ND7,
     F            IPLAIN(1,1,M),PLAIN(M),
     G            IPACK,IWORK,DATA,ND5,MINPK,
     H            CORE,ND10,NBLOCK,NFETCH,MISTOT,NSLAB,
     I            CINT(1),ORIGIN(1),SMULT(1),SADD(1),TITLE,IOPT,
     J            JTOTBY,JTOTRC,L3264B,L3264W,ISTOP,IER)
C        NOTE THAT NX AND NY ARE DEFINED IN FSTGS5; THEY ARE NOT
C        DEFINED PREVIOUSLY.
C
      IF(IER.NE.0)THEN
         WRITE(KFILDO,2886)
 2886    FORMAT('     FATAL ERROR IN FSTGS5')
         JER=1
         GO TO 500
      ENDIF
C
C        CALL BOGUS IF NECESSARY.  NOTE THAT IT HAS TO BE AFTER
C        FSTGS5 BECAUSE IT MAY USE THE FIRST GUESS IN P( ).
C        IT IS DONE FOR EACH CYCLE BECAUSE SOME BOGUS STATIONS
C        MAY BE OVER LAND WHERE THERE ARE NOT DATA FOR ALL CYCLES.
C        THERE ARE SIX POSSIBLE PREPROCESSING ROUTINES.
C
CCCC      WRITE(KFILDO,9999)(CCALL(K,1),XDATA(K,2,J),XDATA(K,3,J),K=1,NSTA)
CCCC 9999 FORMAT(/' AT 9999 IN U405A--(CCALL(K,1),XDATA(K,2-3,J),K=1,NSTA)',
CCCC     1       (/,2X,A8,2F9.2))
C
      DO 2888 NN=1,6
C
      IF(PREPRO(NN).EQ.'BOGUS')THEN
C
         DO 2887 L=1,NORUNS
         CALL BOGUS(KFILDO,IP14,IP25,KFILPR(NN),PREPFL(NN),
     1              ID(1,M),IDPARS(1,M),JD(1,M),
     2              CCALL,XPL,YPL,LNDSEA,XDATA(1,L+1,J),NSTA,
     3              P,NXL,NYL,MESHB,SEALND,NXE,NYE,MESHE,N4P,      
     4              ISTOP,IER)
C           AN ERROR IN BOGUS HAS A DIAGNOSTIC.  NOT TREATED
C           AS A FATAL ERROR, BUT ISTOP(5) OR ISOPT(6) HAS BEEN 
C           INCREMENTED.
 2887    CONTINUE
C
      ELSEIF(PREPRO(NN).EQ.'RDVRHL')THEN
C
C           READ VARIABLE RADIUS LIST AND HIGH AND LOW
C           ELEVATIONS FROM UNIT KFILSL.  THIS HAS TO BE AFTER
C           FIRST GUESS SO THAT IT IS KNOWN WHICH GUESS IS USED.
C
         CALL RDVRHL(KFILDO,KFILPR(NN),PREPFL(NN),IP14,
     1               CCALL,NAME,VRAD,ELEVLO,ELEVHI,R(1,MGUESS),
     2               NPROJ,ORIENT,BMESH,XLAT,ALATL,ALONL,
     3               ND1,NSTA,ISTOP,IER)
C
         IF(IER.NE.0)THEN
            WRITE(KFILDO,9991)
 9991       FORMAT('     FATAL ERROR IN RDVRHL',
     1             ' IN U405A NEAR 2888.')
            JER=1
            GO TO 500
         ELSE
            FL174=PREPFL(NN)
C              THE NAME OF THE FILE PREPARED BY U174 IS SAVED
C              FOR LAPSUA.
         ENDIF
      ENDIF
C
 2888 CONTINUE
C        DETERMINE WHETHER OR NOT LAPSE RATES WILL BE NEEDED.
C        ASSUME THE FIRST GUESS DESIRED IS USED.  SOME VALUE
C        OF ELCORR( ,L), L=1,NPASS MUST BE GT 0 AND 
C        COMPUTE THE LAPSE RATE FOR EACH STATION INDICATED BY
C        THE DATA IN XDATA( , , ) AND THE PAIRS OF STATIONS.
C        NOTE THAT ALL CYCLES OF DATA ARE USED IN LAPSE.
C        (IF DATA IN XDATA( , , ) WERE COMBINED BEFORE THIS, THE
C        OPTION OF WEIGHTING CYCLES FOR COMPUTING THE LAPSE
C        IS NO LONGER AVAILABLE.)
C
      IF(J.EQ.1)THEN
C           THE LAPSE IS CALCULATED FOR ALL CYCLES AND LEVELS
C           COMBINED ON THE FIRST ENTRY.  SO DO IT ONLY ONCE.
C
C           IF LAPSE IS NOT NEEDED, DON'T CALCULATE IT, BUT
C           SET XLAPSE( ) = 0. FOR SAFETY AND FOR POSSIBLE
C           DIAGNOSTIC PRINT.
C
         IF(IBKPN.EQ.99)THEN
C
            DO 2889 K=1,NSTA
            XLAPSE(K)=0.
 2889       CONTINUE
C
            GO TO 2890
         ENDIF
C
         IF(LAPFG.LE.1)THEN
            RLAP=R(1,MGUESS)*RSTAR(1,MGUESS)
C              RLAP IS THE RADIUS TO USE IN LAPSE.
            CALL LAPSE(KFILDO,KFILLP,IP14,CCALL,NAME,LNDSEA,ELEV,
     1                 NOPAR,LOCPAR,XDATA(1,1,J),XLAPSE,MPAIRS,NSTA,ND1,
     2                 NXL,NYL,XPL,YPL,RLAP,XP,YP,
     3                 ELCORR(1,MGUESS),NPASS,WTRUNL,NORUNS,LEVELS,
     4                 IALOC,ADIST,AELEV,ND13,
     5                 SEALND,TELEV,NXE,NYE,MESHE,P,NX,NY,MESH,
     6                 IBKPN,LPNO,LAPFG,MGUESS,N4P,ISTOP,JER)
            IF(JER.NE.0)GO TO 500
C              A DIAGNOSTIC WILL HAVE BEEN WRITTEN IN LAPSE WHEN IT
C              IS ENTERED WITH LAPFG NE 0 OR 1.  THIS IS A SAFETY.
C
         ELSEIF(LAPFG.EQ.2.OR.LAPFG.EQ.3)THEN
C              THE INCOMING UA GRIDS MUST BE ON THE SAME MAP
C              PROJECTION, BUT THE OTHER CHARACTERISTIC CAN
C              BE DIFFERENT.
C
            CALL LAPSUA(KFILDO,KFIL10,IP14,ID(1,N),IDPARS(1,N),
     1                  CCALL,NAME,LNDSEA,
     2                  DIR,NGRIDC,ND11,LAPFG,FL174,
     3                  XDATA,XLAPSE,ELEVLO,ELEVHI,ELEV,NSTA,ND1,
     4                  ALATL,ALONL,XPL,YPL,NXL,NYL,BMESH,
     5                  NORUNS,LEVELS,MGUESS,IBACKN,IBACKL,
     6                  LSTORE,ND9,LITEMS,NDATE,MODNUM,ND6,
     7                  IS0,IS1,IS2,IS4,ND7,
     8                  IPACK,IWORK,DATA,ND5,
     9                  CORE,ND10,NBLOCK,NFETCH,MISTOT,NSLAB,
     A                  NPROJ,ORIENT,XLAT,L3264B,ISTOP,JER)
            IF(JER.NE.0)GO TO 500
C              A DIAGNOSTIC WILL HAVE BEEN WRITTEN IN LAPSUA.
         ELSE
            WRITE(KFILDO,289)
 289        FORMAT(/' ****LAPFG DOES NOT HAVE A VALUE OF 0, 1, 2,',
     1              ' OR 3.  FATAL ERROR IN U405A AT 289.')
            ISTOP(1)=ISTOP(1)+1
            GO TO 500
         ENDIF
C
CD        CALL TIMPR(KFILDO,KFILDO,'AFTER LAPSE         ')
C
         IF(IER.NE.0)THEN 
            JER=1
            GO TO 500
         ENDIF
C
      ENDIF
C
C        NOTE THAT FSTGS5 HAS FILLED TITLE( ,25:40) WITH DATE.
C        A FATAL ERROR OF IER = 777 IS RETURNED WHEN A FIRST
C        GUESS COULD NOT BE OBTAINED OR WHEN A PROBLEM
C        WITH WRITING TO KFILOG OCCURRED.  OTHERWISE, IER = 0.
C
C        MAKE SURE XP( ) AND YP( ) CONFORM THE THE CURRENT FIRST
C        GUESS GRID.  MESH WAS DEFINED IN FSTGS5; THIS IS JUST
C        A SAFETY CHECK.
C
 2890 IF(MESH.NE.MSHPAS(1,MGUESS))THEN
         CALL NEWXY1(KFILDO,MESH,XP,YP,MSHPAS(1,MGUESS),XP,YP,
     1               NPROJ,NSTA)
C           MSHPAS(1,MGUESS) IS FOR THE FIRST PASS AND GUESS
C           OPTION MGUESS.
         WRITE(KFILDO,2891)MESH,MSHPAS(1,MGUESS)
 2891    FORMAT(/' ****UNEXPECTED CALL TO NEWXY1 IN U405A AT 2891.',
     1           '  MESH =',I8,'    MSHPAS(1,MGUESS) =',I8)
         ISTOP(1)=ISTOP(1)+1
C
C           IF THIS CALL TO NEWXY1 IS MADE, THEN THE CALL TO
C           FLTAG BETTER BE MADE ALSO.  THIS IS AN ERROR.
C
         CALL FLTAGM(KFILDO,XDATA(1,1,J),ND1,NORUNS,XP,YP,LTAG,NSTA,
     1               NX,NY,0.)
      ENDIF
C
C        FLTAG WITH RMAX = 0. AND LTAG( ) WAS USED IN FSTGS.  NOW
C        COUNT THE STATIONS IN THE ANALYSIS AREA.
C
      JSTAAN=0
C
      DO 2895 K=1,NSTA
         IF(LTAG(K).EQ.0)JSTAAN=JSTAAN+1
 2895 CONTINUE
C
C        SAMPLE POINTS FROM THE FIRST GUESS IF DESIRED.  FIRST
C        DETERMINE THE MAXIMUM NUMBER THAT WILL, OR MIGHT BE,
C        USED.  NORMALLY, ONLY OPTION 2 WILL HAVE NON ZERO VALUES,
C        BUT IT IS POSSIBLE OPTION 3 COULD.  OPTION 1 (A CONSTANT)
C        AND OPTION 4 (AN AVERAGE) SHOULD NOT BE SAMPLED, AND
C        ARE NOT ALLOWED.  WHEN SAMPLING IS DONE, IN ORDER FOR
C        THE POINTS TO BE EFFECTIVE, A FIRST GUESS OTHER THAN
C        THE SAMPLED FIELD IS NEEDED, SO SET IT TO GUESS.
C
      MAXPT=0
C
      IF(ISMPL.NE.0)THEN
C
         DO 2897 JJ=1,NPASS
         DO 2896 L=1,4
C
         IF(L.EQ.1.OR.L.EQ.4)THEN
            IPOINT(JJ,L)=0
C              THIS IS A SAFETY FEATURE.
         ELSE
            MAXPT=MAX(MAXPT,IPOINT(JJ,L))
         ENDIF
C
 2896    CONTINUE
 2897    CONTINUE
C
C        ******CAREFUL--SAMPLE HAS NOT BEEN USED AFTER
C              MULTIPLE CYCLES AND LEVELS WERE INTRODUCED.*****
C
         MAXPT=MIN(MAXPT,ISMPL)
C
         IF(MAXPT.NE.0)THEN
            CALL SAMPLE(KFILDO,IP14,P,NX,NY,CCALL,XP,YP,LNDSEA,XLAPSE,
     1                  XDATA,NSTA,ISMPL,MAXPT,SEALND,NXE,NYE,
     2                  MESH,MESHE,GUESS,N4P,ISTOP,IER)
C           NOTE THAT THIS CHANGES THE FIRST GUESS IN P( ) TO GUESS.
         ENDIF
C
      ENDIF
C      
      NSTA=NSTA-ISMPL+MAXPT
C        FROM NOW ON, NSTA INCLUDES THE ORIGINAL DATA PLUS
C        THE SAMPLED POINTS FOR THIS VARIABLE, NO MATTER WHAT
C        ISMPL IS.  THIS ALLOWS U155 TO DETERMINE THE MAXIMUM
C        RANDOM POINT LOCATIONS NEEDED IN THE RUN, AND ONLY
C        THAT PORTION NEEDED FOR THIS VARIABLE IS USED.  NSTA
C        IS RESET TO NSTASV ON EXIT.
C
CD     WRITE(KFILDO,2898)NSTA,ISMPL,MAXPT,MESH,MESHE
CD2898 FORMAT(' IN U405A AT 2898--NSTA,ISMPL,MAXPT,MESH,MESHE',
CD    1        5I10)
C
C        FIRST COMPUTE THE MAXIMUM RADIUS R FOR ANY PASS FOR
C        THIS FIRST GUESS.
C
      RMAX=0.
C
      DO 290 JJ=1,NPASS
      IF(NTYPE(JJ,MGUESS).NE.0)THEN
         RMAX=MAX(RMAX,R(JJ,MGUESS)*RSTAR(JJ,MGUESS))
      ENDIF
C
 290  CONTINUE
C
C        SET LTAG( ).  WHEN LTAG( ) = 1 or 2, THAT STATION'S
C        VALUE WILL NEVER BE USED.  THEREFORE, THE MAXIMUM VALUE OF
C        R( )*RSTAR( ) FOR THE FIRST GUESS OPTION USED MUST BE 
C        USED IN FLTAG.  THIS JUST HAS THE EFFECT OF PERMANENTLY
C        DISCARDING THE STATIONS FAR OUTSIDE THE GRID.  THIS 
C        DISCARDING IS IN RELATION TO THE FIRST GUESS GRIDLENGTH
C        MESH.  THE FIRST GUESS GRIDLENGTH IS NORMALLY AT 
C        LEAST AS LARGE AS ANY OTHER GRIDLENGTH, SO STATIONS
C        NEEDED ARE NOT DISCARDED; IN ANY CASE THIS JUST AFFECTS
C        DATA OUTSIDE THE ANALYSIS GRID.  XDATA( ,1,J) HOLDS THE DATA.
C        FOR FLTAG, XP, YP, NX, AND NY REFER TO THE CURRENT
C        FIRST GUESS GRID.  AT THIS POINT, LTAG( ) HAS ONLY
C        VALUES 0, 1, OR 2.  WHEN A DATUM IN XDATA( ,1,J) IS
C        MISSING, LTAG( ) IS SET = 1.
C     
      CALL FLTAGM(KFILDO,XDATA(1,1,J),ND1,NORUNS,XP,YP,LTAG,NSTA,
     1           NX,NY,RMAX)
C
C        SEE IF PREPROCESSING NEEDED HERE.  FOR INSTANCE, LTAG( )
C        MAY BE NEEDED FROM A PREVIOUS ANALYSIS TO INDICATE WHAT
C        WAS TOSSED.
C
      DO 295 NN=1,6
C
      IF(PREPRO(NN).EQ.'LTAGRD')THEN
         CALL LTAGRD(KFILDO,KFIL10,NDATE,
     1               ID(1,M),IDPARS(1,M),JD(1,M),ITABLE(1,7),
     2               CCALL,NAME,LTAG,NSTA,ND1,
     3               LSTORE,ND9,LITEMS,
     4               IS0,IS1,IS2,IS4,ND7,
     5               IPACK,IWORK,DATA,ND5,
     6               CORE,ND10,NBLOCK,NFETCH,
     7               L3264B,ISTOP,IER)
C        THE 7TH VALUE IN ITABLE( , ) IS USED FOR THE PREVIOUS
C        LTAG( ) TO REFERENCE.  IER CAN BE 777 IF ALLOCATION
C        FAILED IN LTAGRD, BUT IS NOT CONSIDERED FATAL.
      ENDIF
C     
 295  CONTINUE
C
      JSTA=0
C
      DO 300 K=1,NSTA
         IF(LTAG(K).EQ.0)JSTA=JSTA+1
 300  CONTINUE
C
      IF(JSTAAN.EQ.0)THEN
         WRITE(KFILDO,310)
 310     FORMAT(/' ****NO STATIONS WITH DATA AVAILABLE',
     1           ' WITHIN THE ANALYSIS AREA.')
         GO TO 600
C
      ELSEIF(NAREA.EQ.1)THEN
C
         IF(JSTAAN.LT.1000)THEN
            WRITE(KFILDO,311)JSTAAN
 311        FORMAT(/' ****WARNING, ONLY ',I4,' STATIONS WITH DATA',
     1              ' WITHIN THE ANALYSIS AREA.  PROCEEDING.')
            ISTOP(2)=ISTOP(2)+1
         ENDIF
C
      ELSEIF(NAREA.EQ.2)THEN
C
         IF(JSTAAN.LT.100)THEN
            WRITE(KFILDO,311)JSTAAN
            ISTOP(2)=ISTOP(2)+1
         ENDIF
C
      ENDIF
C
      WRITE(KFILDO,321)JSTA,RMAX
 321  FORMAT(/' ',I5,' STATIONS WITH DATA',
     1               ' THAT MAY BE USED ON ONE OR MORE PASSES',
     2               ' AT MAXIMUM R =',F6.1,' OUTSIDE GRID.')
C
C        TURN THE SURFACE WINDS CLOCKWISE BY WNDTRN DEGREES
C        WHEN SLP IS BEING ANALYZED.
C
      IF(ID(1,N)/1000.NE.001201)GO TO 3426
C
C        THE SECTION BELOW IS FOR SEA LEVEL PRESSURE TO PREPARE
C        FOR USING WINDS IN THE ANALYSIS.
C
      IF(WNDGRD.EQ.0.)GO TO 3426
C        WHEN WNDGRD = 0, WIND WILL NOT BE USED.
C
C        TURN WIND DIRECTION WNDTRN DEGREES CLOCKWISE.
C
      CALL TRNWND(KFILDO,WDIR,WNDTRN,NSTA)
C
C***********************************
C        THIS SECTION FOR WRITING TURNED WIND FOR VIEWING.
C
C***      LD(1)=794200000
C***      LD(2)=88*10000
C***      LD(3)=0
C***      LD(4)=0
C***      CALL PRSID1(KFILDO,LD,LDPARS)
C***C        PRSID1 FILLS LDPARS( ) ACCORDING TO LD( ).
C***      RACK='OBSERVED WINDS TURNED WNDTRN DEG'
C***      CALL PACKV(KFILDO,KFILOV,LD,LDPARS,
C***     1           JPP,0,0,
C***     2           IRACK,RACK,NDATE,JDATE(1),JDATE(2),JDATE(3),JDATE(4),
C***     3           CCALL,FD6,WDIR,NSTA,NSTA,IPACK,ND5,MINPK,
C***     4           IS0,IS1,IS2,IS4,ND7,9999.,0.,
C***     5           IP18,NWORDS,MTOTBY,MTOTRC,
C***     6           L3264B,L3264W,ISTOP,IER)
C***C        FD6( ) IS WORK ARRAY FOR PACKV.  IP18 IS USED TO LIST VALUES.
C***C        ISCALD IS USED AS ZERO FOR WIND DIRECTION.
C***C
C***      IF(IP16.NE.0)THEN
C***         WRITE(IP16,341)(LD(JJ),JJ=1,4),RACK,NDATE
C*** 341     FORMAT(/' WRITING DATA TO UNIT KFILOV',3I10.9,I10.3,3X,
C***     1           A32,' FOR DATE',I12)
C***      ENDIF
C***C
C***C        THIS SECTION FOR WRITING TURNED WIND FOR VIEWING.
C***C
C***      LD(1)=794210000
C***      LD(2)=88*10000
C***      LD(3)=0
C***      LD(4)=0
C***      CALL PRSID1(KFILDO,LD,LDPARS)
C***C        PRSID1 FILLS LDPARS( ) ACCORDING TO LD( ).
C***      RACK='OBSERVED WIND SPEED              '
C***      CALL PACKV(KFILDO,KFILOV,LD,LDPARS,
C***     1           JPP,0,0,
C***     2           IRACK,RACK,NDATE,JDATE(1),JDATE(2),JDATE(3),JDATE(4),
C***     3           CCALL,FD6,WSPD,NSTA,NSTA,IPACK,ND5,MINPK,
C***     4           IS0,IS1,IS2,IS4,ND7,9999.,0.,
C***     5           IP18,NWORDS,MTOTBY,MTOTRC,
C***     6           L3264B,L3264W,ISTOP,IER)
C***C        FD6( ) IS WORK ARRAY FOR PACKV.  IP18 IS USED TO LIST VALUES.
C***C        ISCALD IS USED AS ZERO FOR WIND DIRECTION.
C***C
C***      IF(IP16.NE.0)THEN
C***         WRITE(IP16,342)(LD(JJ),JJ=1,4),RACK,NDATE
C*** 342     FORMAT(/' WRITING DATA TO UNIT KFILOV',3I10.9,I10.3,3X,
C***     1           A32,' FOR DATE',I12)
C***      ENDIF
C***********************************
C
C        CONVERT SPEED AND DIRECTION INTO GRID ORIENTED U 
C        AND V-COMPONENTS IN U( ) AND V( ), RESPECTIVELY. 
C        ALL ARE IN KT.  U( ) AND V( ) ARE DIMENSIONED ND2X3 IN
C        THE CALLING PROGRAM.  ND2X3 GUARANTEED TO BE GE ND1 IN DRU155.
C****************MODIFY FOR NO NXPL*******************
CCC      CALL DIRTUV(KFILDO,WDIR,WSPD,XPL,YPL,U,V,NSTA,
CCC     1                  REAL(NXPL),REAL(NYPL))
C
C        COMPUTE THE SINE OF THE LATITUDE IN FDSINS( ).
C
      CALL PSMAPF(KFILDO,BMESH*1000.,ORIENT,XLAT,ALATL,ALONL,
     1            FDSINS,FD2,NXL,NYL,IER)
C        MESH LENGTH FOR PSMAPF HAS TO BE IN M, NOT KM.
C
C        PRINT SINE OF THE LATITUDE FOR CHECKOUT.
C
C***D     CALL PRTGR(KFILDO,FDSINS,NXL,NYL,
C***D    1           CINT,ORIGIN,100.,0.,IOPTL,SIN,IER)
C
C        CALCULATE THE CHANGE IN PRESSURE IN MB PER GRID UNIT IN THE 
C        X AND Y DIRECTIONS; U( ) AND V( ) ARE USED FOR THS PURPOSE.
C        WNDGRD IS THE EMPIRICAL FACTOR TO ACCOUNT FOR NON-GEOSTROPHIC
C        SPEED EFFECTS; THE DIRECTION HAS ALREADY BEEN ACCOUNTED FOR
C        BY TURNING THE SURFACE WIND CLOCKWISE WNDTRN DEGREES.  
C        IF THE SPEED IS LT WNDTHR, SET U( ) AND V( ) TO MISSING.
C
      CORMSH=REAL(MESH)/REAL(MESHB)
C        THE CORRECTION IN MB PER GRID UNIT DEPENDS ON THE GRID
C        MESH.  THE SMALLER THE MESH, THE SMALLER THE CORRECTION
C        PER UNIT MESH.  CORMSH IS USED BELOW TO ADJUST FROM THE
C        CONSTANTS CALCULATED ON THE BASIS OF 1/4 BEDIENT = MESHB.
C******************CAREFUL, NOT ADJUSTED FOR MESHB NE 1/4 B*********
      DO 3425 K=1,NSTA
C
         IF(NINT(WSPD(K)).EQ.9999.OR.WSPD(K).LT.WNDTHR)THEN
            U(K)=9999.
            V(K)=9999.
         ELSE
            CALL ITRP(FDSINS,NXL,NYL,XPL(K),YPL(K),SINLAT)
C              SINLAT IS THE SINE OF THE LATITUDE AT STATION K
C              INTERPOLATED FROM FDSINS( , ).
            FAC=SINLAT*(1.+SINLAT)*CORMSH
C              FAC IS (SINPHI)(1+SINPHI) OF THE STATION.
            U(K)=-.16*WNDGRD*FAC*U(K)
            V(K)= .16*WNDGRD*FAC*V(K)
C***            WRITE(KFILDO,3423)K,MESH,MESHB,SINLAT,FAC,CORMSH,WNDGRD,
C***     1                       U(K),V(K)
C*** 3423       FORMAT(' IN U405A--K,MESH,MESHB,SINLAT,FAC,CORMSH,WNDGRD,',
C***     1             'U(K),V(K)',3I4,6F10.3)
C              WITH SPEED IN KT, THE GEOSTROPHIC MB CHANGE PER NOMINAL
C              80 KM GRID UNIT IS
C              1.47 M/GRID UNIT * 1 MB/9M = .16 MB/GRID UNIT 
         ENDIF
C
 3425 CONTINUE
C
C        ALL DATA ARE IN AND PROCESSED.  NOW SET COLUMN 1 IN
C        XDATA( , ,J) TO THE WEIGHTED AVERAGE OF THE NORUNS RUNS.
C        WHEN NORUNS = 1, THE FIRST COLUMN IN XDATA( , ) JUST BECOMES
C        THE SECOND COLUMN.
C
 3426 DO 3428 K=1,NSTA
C
      IF(LTAG(K).GT.0)THEN
         XDATA(K,1,J)=9999.
      ELSE
C
         IF(NORUNS.EQ.1)THEN
            XDATA(K,1,J)=XDATA(K,2,J)
C              NO AVERAGE IS NECESSARY WHEN THERE IS ONLY ONE RUN.
         ELSE
            WT=0
            XDATA(K,1,J)=0.
C
            DO 3427 L=2,NORUNS+1
C
            IF(XDATA(K,L,J).NE.9999.)THEN
               XDATA(K,1,J)=XDATA(K,1,J)+XDATA(K,L,J)*WTRUNA(L-1)
               WT=WT+WTRUNA(L-1)
            ENDIF
C    
 3427       CONTINUE
C
            IF(WT.EQ.0.)THEN
C                 XDATA(K,1,J) = 0 COULD BE LEGITIMATE, WT = 0 IS NOT.
               XDATA(K,1,J)=9999.
C                 THIS SHOULD NOT HAPPEN BUT IS A SAFETY.
            ELSE
               XDATA(K,1,J)=XDATA(K,1,J)/WT
C                 THIS DIVISION BY THE SUM OF THE WEIGHTS IS NECESSARY
C                 BECAUSE THERE MAY BE MISSING DATA.  NOTE THAT THE
C                 DATA TO ANALYZE IN XDATA( ,1,J) IS THE WEIGHTED
C                 AVERAGE OF THE NON-MISSING VALUES.
            ENDIF
C  
         ENDIF
C
      ENDIF
C
 3428 CONTINUE
C
C        SET LAPSE = 0 WHEN SNOW OR QPF FORECAST IS ZERO OR NEGATIVE.
C        IT IS PUT HERE AFTER THE CYCLES HAVE BEEN MERGED.
C
      IF(ID(1,M)/100000.EQ.2284.OR.ID(1,M)/10000.EQ.22327)THEN
C                                 CORRECTED 23227 TO 22327 7/28/09
C                              
         DO 3429 K=1,NSTA
C
         IF(XDATA(K,1,J).LE.0.)THEN
C              THE CHECK ON LE RATHER THATN EQ IS MADE BECAUSE THE
C              ZERO AMOUNTS MAY BE SET TO NEGATIVE FOR THE ANALYSIS.
            XLAPSE(K)=0.
         ENDIF
C
 3429    CONTINUE
C
      ENDIF
C
C        FOR SNOW ANALYSIS, SET ZERO VALUES TO SOME NEGATIVE
C        VALUE TO PRESERVE ZERO LINE.  ROUTINE IS PUT HERE AFTER
C        THE CYCLES HAVE BEEN MERGED.
C
      DO 3430 NN=1,6
C
      IF(PREPRO(NN).EQ.'STSNOZ')THEN
         CALL STSNOZ(KFILDO,KFILPR(NN),PREPFL(NN),NAREA,
     1               ID(1,M),IDPARS(1,M),JD(1,M),
     2               CCALL,NAME,XDATA(1,1,J),LNDSEA,NSTA,ND1,
     3               L3264B,ISTOP,IER)
C        COULD TRANSFER OUT, BUT NO NUMBER AVAILABLE IN SEQUENCE.
C
      ELSEIF(PREPRO(NN).EQ.'AVGLAP')THEN
         CALL AVGLAP(KFILDO,KFILPR(NN),PREPFL(NN),NAREA,
     1               ID(1,M),IDPARS(1,M),JD(1,M),
     2               CCALL,NAME,XDATA(1,1,J),LNDSEA,XLAPSE,NSTA,ND1,
     3               L3264B,ISTOP,IER)
C        COULD TRANSFER OUT, BUT NO NUMBER AVAILABLE IN SEQUENCE.
      ENDIF
C
 3430 CONTINUE
C
C        ARRANGE TO WITHHOLD SOME DATA IF NEEDED.
C
      IF(NWITH.NE.0.AND.ITYPR.EQ.1)THEN
C           THIS IS THE TYPE OF WITHHOLDING TO VERIFY GMOS FORECASTS.
C           THE FIRST CYCLE DATA ARE USED IN XDATA( , , ).
         CALL WTHOL1(KFILDO,IP24,ID(1,M),NDATE,CCALL,XDATA(1,1,J),ND1,
     1               LTAG,LNDSEA,WHOLD,LTAGWH,XP,YP,NSTA,NX,NY,MESH,
     2               CPNDFD,NXE,NYE,MESHE,NCLIPY,
     3               SEED,NWITH,ISTOP(1),IER)
C           THE CURRENT DATA ARE IN XDATA( ,2,J).  WITHHOLD STATIONS
C           BASED ON THIS, SO A MATCHED SET IS ASSURED, WHEN ONE OF
C           THE SETS IS TO BE THE CURRENT DATA.
C
         IF(IP24.EQ.0)THEN
            WRITE(KFILDO,3431)
 3431       FORMAT(/' ****STATIONS ARE BEING WITHHELD, BUT IP24 = 0.',
     1              '  NO STATISTICS WILL BE PROVIDED.')
            ISTOP(1)=ISTOP(1)+1
         ENDIF
C
         MFIRST=1
C           THE USE OF MFIRST ASSUMES BOTH WTHOL1 AND WTHOL2 WILL 
C           NOT BE USED IN THE SAME U155 RUN.  THIS KEEPS THE RANDOM
C           NUMBER ISEED FROM BEING RESET ON EACH ENTRY.
C
      ELSEIF(NWITH.NE.0.AND.ITYPR.EQ.2)THEN
C           THIS IS THE TYPE OF WITHHOLDING TO JUDGE QUALITY OF
C           ANALYSIS.  THE DATA TO ANALYZE ARE USED IN XDATA( , , ).
C
         IF(MFIRST.EQ.0)THEN
C              ALLOCATE THE ARRAY FOR THE DATA TO BE COMPUTED.
C              THE COLUMNS ARE:
C                1,2   -- THE DISTANCE TO THE TWO CLOSEST STATIONS
C                3,4   -- NOT USED
C                5-8   -- THE 4 TERRAIN ROUGHNESS VARIABLES,
C                9-12  -- THE 4 DATA VARIABILITY VARIABILITY VARIABLES
C                13-16 -- THE WEIGHTED DIFFERENCES BETWEEN THE STATION
C                         AND ITS NEIGHBORS, ACCOUNTING FOR XLAPSE( )
C                17    -- ABSOLUTE DIFFERENCE IN ELEVATION BETWEEN
C                         STATION AND ITS CLOSEST NEIGHBOR
C                18    -- ABSOLUTE DIFFERENCE BETWEEN STATION DATA
C                         VALUE AND VALUE OF NEIGHBOR AFTER LAPSE
C                         APPLIED
C                19    -- THE PRODUCT OF 17 AND 1
C                20    -- THE "ERROR," THE DIFFERENCE BETWEEN THE
C                         ACTUAL VALUE AND THE INTERPOLATED VALUE
C                         FROM THE ANALYSIS
            ALLOCATE (ERRANL(NWITH+IEXTRA,IDIM),ID2(IDIM),STAT=IOS)
            MFIRST=1
C              SETTING MFIRST = 1 KEEPS ALLOCATION FROM BEING DONE
C              AGAIN.  THE ARRAY IS NOT DEALLOCATED; THERE IS NO
C              REASON TO.  ALSO, THIS KEEPS THE RANDOM NUMBER ISEED
C              FROM BEING RESET ON EACH ENTRY.
C
            IF(IOS.EQ.1)THEN
               WRITE(KFILDO,3432)
 3432          FORMAT(/' ****ALLOCATION OF ERRANL( , ) AND ID2( )',
     1                 ' FAILED IN U405A AT 3432.',
     2                 '  ARRAYS ALREADY ALLOCATED.')
               STOP 3432
            ELSEIF(IOS.EQ.2)THEN
               WRITE(KFILDO,3433)
 3433          FORMAT(/' ****ALLOCATION OF ERRANL( , ) AND ID2( )',
     1                 ' FAILED IN U405A AT 3433.',
     2                 '  ARRAYS NOT ALLOCATED.')
               STOP 3433
            ENDIF
C
         ENDIF
C
C           SET THE ARRAY ERRANL( , ) TO MISSING.
C
         DO 3435 MMM=1,IDIM
         DO 3434 NNN=1,NWITH+IEXTRA
         ERRANL(NNN,MMM)=9999.
 3434    CONTINUE
 3435    CONTINUE      
C
         CALL WTHOL2(KFILDO,IP24,ID(1,M),NDATE,CCALL,NAME,XDATA,ND1,
     1               LTAG,LNDSEA,ELEV,WHOLD,LTAGWH,LOCWH,XP,YP,
     2               DUMCAL,XLAPSE,NSTA,
     3               CPNDFD,SEALND,TELEV,NXE,NYE,MESHE,NCLIPY,
     4               NX,NY,MESH,SEED,NWITH,IEXTRA,
     5               NROUGH,RELVAR,VARTAB(1,NAREA),
     6               ERRANL,ID2,IDIM,L3264B,L3264W,ISTOP,IER)
      ENDIF
C
C        AT THIS POINT, P( ) CONTAINS THE FIRST GUESS, AND XDATA( ,1,J)
C        CONTAINS THE DATA TO ANALYZE.  NOTE THAT THE TYPE OF FIRST
C        GUESS IS USED TO REDUCE THE DIMENSIONALITY OF SEVERAL VARIABLES,
C        AND THE MONTH, JDATE(2), IS FURTHER USED TO REDUCE THE 
C        DIMENSIONALITY OF ER1( , , ).
C
C        USE SKIPWR TO WRITE THE CALL LETTERS RECORD ON DISPOSABLE
C        FILES.  RECORDS ARE NOT SKIPPED ON THESE DISPOSABLE FILES.
C
      IF(KFILOV.NE.0)THEN
         KCHECK=1
         KWRITE=1
C           SINCE RECORDS ARE NOT TO BE SKIPPED, KCHECK AND KWRITE
C           DON'T MATTER.
         MSKIP=0
         WRITE(KFILDO,3446)OUTVEC
 3446    FORMAT(/' INITIALIZE FILE ',A60)
         CALL SKPWR2(KFILDO,KFILOV,MSKIP,KWRITE,KCHECK,
     1               CCALL,ND1,NSTA,
     2               CCALLD,ND5,IPACK,ND5,
     3               MTOTBY,MTOTRC,L3264B,L3264W,IER)
C
         IF(IER.NE.0)THEN
            WRITE(KFILDO,3447)
 3447       FORMAT(/,' ****FILE KFILOV COULD NOT BE INITIALIZED',
     1               ' WITH CALL LETTERS.  WRITING TO KFILOV',
     2               ' WILL NOT BE DONE.  PROCEEDING.')
            ISTOP(1)=ISTOP(1)+1
            KFILOV=0
         ENDIF
C
      ENDIF
C
      IF(KFILQC.NE.0)THEN
         KCHECK=1
         KWRITE=1
C           SINCE RECORDS ARE NOT TO BE SKIPPED, KCHECK AND KWRITE
C           DON'T MATTER.
         MSKIP=0
         WRITE(KFILDO,3456)OUTQCV
 3456    FORMAT(/' INITIALIZE FILE ',A60)
         CALL SKPWR2(KFILDO,KFILQC,MSKIP,KWRITE,KCHECK,
     1               CCALL,ND1,NSTA,
     2               CCALLD,ND5,IPACK,ND5,
     3               ITOTBY,ITOTRC,L3264B,L3264W,IER)
C
         IF(IER.NE.0)THEN
            WRITE(KFILDO,3457)
 3457       FORMAT(/,' ****FILE KFILQC COULD NOT BE INITIALIZED',
     1               ' WITH CALL LETTERS.  WRITING TO KFILQC',
     2               ' WILL NOT BE DONE.  PROCEEDING.')
            ISTOP(1)=ISTOP(1)+1
            KFILQC=0
         ENDIF
C
      ENDIF
C
C           PACK AND WRITE THE VECTOR DATA IN XLAPSE( ) CONTAINING
C           THE COMPUTED LAPSE RATES WHEN KFILOV NE 0 AND WHEN 
C           IBKPN NE 99.
C
      IF(KFILOV.NE.0.AND.IBKPN.NE.99)THEN
C           DON'T WRITE WHEN KFILOV = 0
         XMISSP=9999.0
         XMISSS=0.
C
         LD(1)=ITABLE(1,2)+IDPARS(4,M)
         LD(2)=ITABLE(2,2)+980000
C           LD(2) INDICATES THIS IS LAPSE RATES.
         LD(3)=ITABLE(3,2)+IDPARS(12,M)
         LD(4)=ITABLE(4,2)
         CALL PRSID1(KFILDO,LD,LDPARS)
C           PRSID1 FILLS LDPARS( ) ACCORDING TO LD( ).
C
         IF(IP18.NE.0.AND.JP(3,M).NE.0)THEN
            WRITE(IP18,3448)
 3448       FORMAT(/' COMPUTED LAPSE RATES WRITTEN TO FILE KFILOV.')
         ENDIF
C
C            MEANINGFUL PRECISION OF DATA ARE GENERALLY THOUSANDTHS.
C            ROUND TO THOUSANDTHS FOR PLOTTING.
C
         DO 3449 K=1,NSTA
         FD4(K)=NINT(XLAPSE(K)*1000.)
 3449    CONTINUE
C
         ISCLAP=0
         ISCALE=0
         CALL PACKV(KFILDO,KFILOV,LD,LDPARS,
     1        JP,ISCLAP,ISCALE,
     2        IPLAIN,PLAIN,NDATE,JDATE(1),JDATE(2),JDATE(3),JDATE(4),
     3        CCALL,FD5,FD4,ND2X3,NSTA,IPACK,ND5,MINPK,
     4        IS0,IS1,IS2,IS4,ND7,XMISSP,XMISSS,
     5        IP18,NWORDS,MTOTBY,MTOTRC,
     6        L3264B,L3264W,ISTOP,IER)
C           IP18 IS USED TO LIST VALUES.  IF THERE WAS AN ERROR, IT
C           IS COUNTED BY ISTOP, BUT IS NOT CONSIDERED FATAL.
C
         IF(IP16.NE.0)THEN
            WRITE(IP16,3450)(LD(JJ),JJ=1,4),
     1                     ((IPLAIN(I,JJ,M),I=1,L3264W),JJ=1,4),NDATE
 3450       FORMAT(/' WRITING DATA TO UNIT KFILOV',3I10.9,I10.3,3X,
     1               8A4,' FOR DATE',I12)
         ENDIF
C
      ENDIF
C
C        PACK AND WRITE THE VECTOR DATA IN XDATA( ,1) TO KFILOV.
C        THIS IS SO THE FULL DATA SET, INCLUDING ANY POSSIBLE
C        THROWOUTS, IS AVAILABLE FOR PLOTTING.  ON THIS FILE,
C        IT WILL HAVE THE NORMAL ID FOR THE VARIABLE WRITTEN.
C
      IF(KFILOV.NE.0)THEN
C           DON'T WRITE WHEN KFILOV = 0
         XMISSP=9999.0
         XMISSS=0.
C
         IF(IP18.NE.0.AND.JP(3,M).NE.0)THEN
            WRITE(IP18,3451)
 3451       FORMAT(/' FULL DATA SET WRITTEN TO FILE KFILOV.')
         ENDIF
C
         ISCLAP=0
         ISCALE=0
         LD(1)=ITABLE(1,2)+IDPARS(4,M)
         LD(2)=ID(2,M)
         LD(3)=ITABLE(3,2)+IDPARS(12,M)
         LD(4)=ITABLE(4,2)
C           THE DATA, A REDUCED SET TO INCOMING, HAS THE SAME ID.
         CALL PRSID1(KFILDO,LD,LDPARS)
C           PRSID1 FILLS LDPARS( ) ACCORDING TO LD( ).
C
         CALL PACKV(KFILDO,KFILOV,LD,LDPARS,
     1        JP,ISCLAP,ISCALE,
     2        IPLAIN,PLAIN,NDATE,JDATE(1),JDATE(2),JDATE(3),JDATE(4),
     3        CCALL,FD5,XDATA,ND2X3,NSTA,IPACK,ND5,MINPK,
     4        IS0,IS1,IS2,IS4,ND7,XMISSP,XMISSS,
     5        IP18,NWORDS,MTOTBY,MTOTRC,
     6        L3264B,L3264W,ISTOP,IER)
C           IP18 IS USED TO LIST VALUES.  IF THERE WAS AN ERROR,
C           IT IS COUNTED BY ISTOP, BUT IS NOT CONSIDERED FATAL.
C
         IF(IP16.NE.0)THEN
            WRITE(IP16,3452)(LD(JJ),JJ=1,4),
     1                     ((IPLAIN(I,JJ,M),I=1,L3264W),JJ=1,4),NDATE
 3452       FORMAT(/' WRITING DATA TO UNIT KFILOV',3I10.9,I10.3,
     1               3X,8A4,' FOR DATE',I12)
         ENDIF
C
      ENDIF

      CALL BCD5(KFILDO,KFILOG,KFILOV,KFILQC,
     1          IP14,IP16,IP17,IP18,IP19,IP20,IP21,IP22,I405ADG,
     2          ID(1,M),IDPARS(1,M),JP(1,M),IVRBL,MODNO,
     3          ISCALD(M),JFIRST(IVRBL),
     4          NDATE,JDATE,XDATA(1,1,J),CCALL,NAME,XP,YP,XPL,YPL,
     5          XPE,YPE,
     5          TOSS,QUEST,LTAG,LNDSEA,ELEV,QUALST,XLAPSE,
     6          VRAD,NSTA,ND1,ISETP,ILS,WTWTL,WTLTW,HGTTHA,HGTTHB,
     7          P,FD2,FD3,FD4,FD5,ND2X3,NX,NY,
     8          IPACK,IWORK,ND5,MINPK,
     9          TELEV,SEALND,NXE,NYE,MESHE,EMESH,
     A          IS0,IS1,IS2,IS4,ND7,
     B          ITABLE(1,2),IPLAIN(1,1,M),PLAIN(M),
     C          NAREA,ALATL,ALONL,NPROJ,ORIENT,
     D          MESH,MESHB,MESHL,XLAT,
     E          MSHPAS(1,MGUESS),ER1(1,MGUESS,JDATE(2)),
     R          NTYPE(1,MGUESS),B(1,MGUESS),CSTSM,R(1,MGUESS),
     T          RSTAR(1,MGUESS),LNDWAT(1,MGUESS),ITRPLQ(1,MGUESS),
     H          IALGOR(1,MGUESS),ELCORR(1,MGUESS),IBKPN,BK(1,MGUESS),
     I          ELCORU(1,MGUESS),RWATO,RWATI,IVRAD,
     J          TLOD,SETLOD,THID,SETHID,CONSTD,NSCALD,EX1D,EX2D,
     K          IALOC,ADIST,AELEV,ND13,N4P,NSHLN,
     L          NSMTYP,U,V,WNDWT(1,MGUESS),WNDGRD,WNDTHR,WNDTRN,
     M          NPRT,JPRT,NTDL,JTDL,NPASS,MGUESS,
     N          CINT,ORIGIN,SMULT,SADD,TITLE,IOPT,POSTDS,
     O          JTOTBY,JTOTRC,MTOTBY,MTOTRC,ITOTBY,ITOTRC,NOTOSS,
     P          L3264B,L3264W,ISTOP,IER)
C        IER ALWAYS EQUALS 0 ON RETURN FROM BCD5.
C
C        SAVE MESH, NX, AND NY.  THESE ARE THE 4TH PASS VALUES
C        FROM BCD5 AND SHOULD BE THE VALUES NEEDED FOR A COMPUTED
C        VARIABLE THAT DOES NOT REQUIRE ENTERING FSTGS5 (WHERE MESH,
C        NX, AND NY ARE NORMALLY SET).
C
      MESHSV=MESH
      NXSV=NX
      NYSV=NY
C
C        WHEN NWITH NE 0 AND IP24 NE 0, COMPUTE THE FIT AT THE
C        WITHHELD STATIONS, THE NON-WITHHELD STATIONS, AND THE TOTAL
C        SET.  THE OUTPUT IS TO IP24 WITHIN THE ROUTINE;
C        NO RETURN DATA ARE PROVIDED. 
C
      IF(IP24.NE.0.AND.ITYPR.EQ.1.AND.NWITH.NE.0)THEN
         CALL FITWTH(KFILDO,IP24,ID(1,M),NDATE,CCALL,XP,YP,
     1               XDATA(1,1,J),ND1,WHOLD,LNDSEA,ELEV,NSTA,NWITH,
     2               P,NX,NY,MESH,SEALND,NXE,NYE,MESHE,N4P,ISTOP,IER)
C
         IF(IER.NE.0)THEN
            ISTOP(1)=ISTOP(1)+1
            JER=1
         ENDIF
C
         CALL RESTRW(KFILDO,XDATA(1,1,J),WHOLD,LTAG,LTAGWH,NSTA,IER)
C           THERE IS NO IER NON-ZERO RETURN FROM RESTRW.
C
      ELSEIF(IP24.NE.0.AND.ITYPR.EQ.2.AND.NWITH.NE.0)THEN
C
C           COMPUTE THE DIFFERENCE BETWEEN THE DATA VALUE AND THE
C           ANALYZED VALUE.
C
         CALL DIFWH(KFILDO,CCALL,XP,YP,WHOLD,LOCWH,ERRANL(1,IDIM),
     1              LNDSEA,NWITH,IEXTRA,NSTA,
     2              P,NX,NY,MESH,SEALND,NXE,NYE,MESHE,N4P,
     3              ISTOP,IER)
C           THERE IS NO IER NON-ZERO RETURN FROM DIFWH.
C
         WRITE(KFILDO,3455)NDATE,
     1                  ((ERRANL(K,JJ),JJ=1,20),K=1,NWITH)
 3455    FORMAT(/' THE PREDICTORS AND PREDICTAND FOR DATE',I12,/,
     1         (18F6.1,2F8.1))
C
C           RESTORE THE WITHHELD DATA.
C
         CALL RESTWH(KFILDO,XDATA(1,1,J),LTAG,NSTA,
     1                WHOLD,LTAGWH,LOCWH,NWITH,IER)
C           THERE IS NO IER NON-ZERO RETURN FROM RESTRW.
C
C           PACK AND WRITE THE DATA FOR ERROR ANALYSIS THAT ARE
C           IN ERRWH( , ) TO ftn24.
C
         XMISSP=9999.0
         XMISSS=0.
C
         DO 346 JJ=1,IDIM
         ISCLAP=3
C           PACK TO 3 DECIMAL PLACES.
         ISCALE=0
         LD(1)=ITABLE(1,2)
C           NOTE THAT NO MODEL NUMBER IS USED.
         LD(2)=ID2(JJ)
C           THE 2ND WORD HAS BEEN FORMED IN WTHOL2.
C           97 IN LD(2) INDICATES THIS IS THE ERROR VARIABLES,
C           AND A SEQUENCE NUMBER PRECEDES THAT.  FOLLOWING THE 97
C           ARE FOUR DIGITS WHICH WAS THE UUUU POSTION.  THIS ASSUMES
C           THE ORIGINAL VARIABLE IN LD(2) = 0.  THREE DIGITS ARE
C           LEFT FOR SEQUENCING, SO THE NUMBER OF WITHHELD COULD
C           GO UP TO 999.
         LD(3)=ITABLE(3,2)+IDPARS(12,M)
         LD(4)=ITABLE(4,2)
         CALL PRSID1(KFILDO,LD,LDPARS)
C           PRSID1 FILLS LDPARS( ) ACCORDING TO LD( ).
C
         CALL PACKV(KFILDO,IP24,LD,LDPARS,
     1        JP,ISCLAP,ISCALE,
     2        IPLAIN,PLAIN,NDATE,JDATE(1),JDATE(2),JDATE(3),JDATE(4),
     3        DUMCAL,FD5,ERRANL(1,JJ),ND1,NWITH+IEXTRA,IPACK,ND5,MINPK,
     4        IS0,IS1,IS2,IS4,ND7,XMISSP,XMISSS,
     5        IP18,NWORDS,KTOTBY,KTOTRC,
     6        L3264B,L3264W,ISTOP,IER)
C           IP18 IS USED TO LIST VALUES.  IF THERE WAS AN ERROR,
C           IT IS COUNTED BY ISTOP, BUT IS NOT CONSIDERED FATAL.
C
         IF(IP16.NE.0)THEN
            WRITE(IP16,3459)(LD(JJJ),JJJ=1,4),
     1                     ((IPLAIN(I,JJJ,M),I=1,L3264W),JJJ=1,4),NDATE
 3459       FORMAT(/' WRITING DATA TO FL withheld',3I10.9,I10.3,
     1               3X,8A4,' FOR DATE',I12)
         ENDIF
C
 346     CONTINUE
C
      ENDIF
C
C        WRITE LTAG( ) TO INTERNAL STORAGE WHEN IWRITS = 2 OR 3.
C        THIS CAN BE USED BY A FOLLOWING ANALYSIS TO INDICATE
C        WHAT WAS TOSSED BY THIS ANALYSIS (E.G., U- AND V-WIND
C        PROBABLY SHOULDN'T USE AN OBSERVATION THAT WAS TOSSED
C        FOR SPEED.
C
      IF(IWRITS(M).EQ.2.OR.IWRITS(M).EQ.3)THEN
C
C           INTEGER ARRAY LTAG( ) MUST BE MADE REAL FOR STORING
C           IN INTERNAL STORAGE.
C
         DO 3461 K=1,NSTA
         DATA(K)=LTAG(K)
CCCC         IF(LTAG(K).EQ.-1)DATA(K)=+1.
CCCC         IF(DATA(K).NE.0.) WRITE(KFILDO,9990)CCALL(K),DATA(K)
CCCC 9990    FORMAT(' AT 3461--DATA(K)   ',A8,F10.0)
C           VALUES IN LTAG( ) THAT ARE NOT USED ON THIS PASS ARE
C           -1.  THE ONES THAT HAVE BEEN DISCARDED PREVIOUSLY,
C           EITHER BECAUSE THEY ARE OUTSIDE THE GRID, ARE MISSING,
C           OR HAVE BEEN PREVIOUSLY TOSSED.  THIS ACCUMULATES THE
C           TOSSED VALUES, PROVIDED THIS VARIABLE HAS READ THE
C           LTAG( ) RECORD.
 3461    CONTINUE
C
         LD(1)=ID(1,M)
         LD(2)=970000
         LD(3)=ID(3,M)
         LD(4)=ID(4,M)
         CALL GSTORE(KFILDO,KFIL10,LD,0,LSTORE,ND9,LITEMS,
     1               DATA,NSTA,1,0,NDATE,
     2               CORE,ND10,LASTL,NBLOCK,LASTD,NSTORE,L3264B,IER)
C           "NSLAB" IS STORED AS ZERO SIGNIFYING VECTOR DATA.
C           THE RECORD WRITTEN WILL HAVE THE SAME ID AS THE 
C           GRID EXCEP THE 2ND WORD = 970000.
C
         IF(IER.EQ.0)THEN
C
            IF(IP16.NE.0)THEN
               RACK(1:32)=PLAIN(M)(1:32)
               RACK(29:32)='LTAG'
               WRITE(IP16,3462)(LD(JJ),JJ=1,4),
     1                        RACK,NDATE
 3462          FORMAT(/' WRITING DATA TO UNIT KFIL10',3I10.9,I10.3,3X,
     1                  A32,' FOR DATE',I12)
            ENDIF
C
         ELSE 
C              A DIAGNOSTIC WILL HAVE OCCURRED IN GSTORE.
            ISTOP(1)=ISTOP(1)+1
            JER=1
            WRITE(KFILDO,3463)(LD(JJ),JJ=1,4)
 3463       FORMAT('     ERROR WRITING VARIABLE',3(1X,I9.9),1X,I10.3,
     1             ' TO INTERNAL STORAGE.',/,
     2             '  SOME COMPUTATIONS (PRE- OR POST-PROCESSING)',
     3             ' MAY NOT BE ABLE TO BE MADE.  PROCEEDING.')
         ENDIF
C
      ENDIF
C  
C        COMPUTED VARIABLES ARE PUT HERE SO THEY WILL BE CLIPPED
C        AND WRITTEN TO INTERNAL STORAGE (IF DESIRED).
C
 3465 IF(ICOMPT(M).NE.0)THEN
C        WHEN ICOMPT( ) NE 0, MESH, NX, AND NY HAVE NOT BEEN SET.
C
         DO 3468 NN=1,3
C
         IF(POSTAR(NN).EQ.'DIRSPD')THEN
            CALL DIRSPD(KFILDO,KFIL10,KFILIO,IP16,KFILRA,RACESS,NUMRA,
     1                 ID,IDPARS,JD,ISCALD,IWRITS,ITABLE,JVAL,MODNO,
     2                 IPLAIN,PLAIN,ND4,M,
     3                 P,FD3,FD4,FD2,NX,NY,
     4                 ALATL,ALONL,NPROJ,ORIENT,XLAT,
     5                 MESHB,BMESH,MESH,
     6                 CPNDFD,NXE,NYE,MESHE,NCLIP,NCLIPY,
     7                 LSTORE,ND9,LITEMS,NDATE,JDATE,
     8                 IS0,IS1,IS2,IS4,ND7,
     9                 IPACK,IWORK,DATA,ND5,
     A                 CORE,ND10,NBLOCK,NFETCH,NSLAB,
     B                 NTOTBY,NTOTRC,NTOTGB,NTOTGR,
     C                 MINPK,L3264B,L3264W,ISTOP,JER)
C              THIS IS TO POSTPROCESS U- AND V-WIND AND SPEED FOR U155.
C              PERFORMS THE FOLLOWING:
C               1)  CALCULATES DIRECTION FROM U AND V
C               2)  SETS DIRECTION AND SPEED TO ZERO WHEN BOTH
C                   U AND V LT 0.1 KT.
C               3)  SETS DIRECTION AND SPEED TO ZERO WHEN
C                   SPEED .LT 1.0 KT.
C               4)  SETS DIRECTION TO 0 WHEN SPEED = LE 1.
C
            IF(JER.NE.0)THEN
               GO TO 600
            ELSE
               GO TO 3469
            ENDIF
C
C              ONLY ONE COMPUTATION ROUTINE IS ALLOWED HERE.
C
         ELSEIF(POSTAR(NN).EQ.'QPF6P6')THEN 
            CALL QPF6P6(KFILDO,KFIL10,P,FD4,FD5,NX,NY,ND2X3,TLOA(NN),
     1                  ID(1,M),LSTORE,ND9,LITEMS,NWORDS,NDATE,
     2                  IS0,IS1,IS2,IS4,ND7,
     3                  IPACK,IWORK,ND5,
     4                  CORE,ND10,NBLOCK,NFETCH,L3264B,ISTOP,IER)
C              THE ABOVE COMPUTES THE 12-H QPF FROM THE TWO 6-H QPFS
C              COVERING THE SAME PERIOD.
            GO TO 3469
C              ONLY ONE COMPUTATION ROUTINE IS ALLOWED HERE.
         ELSE
            WRITE(KFILDO,3467)POSTAR(NN)
 3467       FORMAT(/' ****POSTPROCESSING ROUTINE SPECIFIED',
     1              ' IN U405A.CN FILE = ',A6,' FOR COMPUTING',
     2              ' GRIDS NOT AVAILABLE IN U405A',/,
     3              '     OR NONE SPECIFIED.  FATAL ERROR.')
C              A ROUTINE MUST BE AVAILABLE AND USED WHEN ICOMPT( ) NE 0.
            ISTOP(1)=ISTOP(1)+1
            JER=1
            GO TO 400
         ENDIF
C
 3468    CONTINUE
C
      ENDIF
C
C        PREPARE FOR PACKING AND WRITING GRIDS.  THERE ARE FOUR
C        POSSIBLE FORMS:
C           (1) - INTERNAL STORAGE (WHEN IWRITS(M) =1 OR 3 AND
C                 KFIL10 NE 0).  THIS IS USED ONLY IF THE VARIABLE IS
C                 NEEDED FOR COMPUTATION WITH ANOTHER VARIABLE
C                 (E.G., POSTPROCESSING).  KFIL10 IS UNIVERSAL FOR
C                 THE RUN, BUT IWRITS(M) IS READ FROM U155.CN WITH 
C                 EACH VARIABLE.
C           (2) - SEQUENTIAL (ARCHIVE)(WHEN KFILIO NE 0).
C           (3) - RANDOM ACCESS (ARCHIVE) (WHEN KFILRA( ) EQ 42).
C           (4) - ASCII FOR GMOS_PLOT (WHEN KFILVO NE 0).
C        THE FIRST THREE OF THESE INDEPENDENTLY PACK THE DATA WITH
C        PACK2D, SO WRITE ONLY WHAT IS NECESSARY.  UNDOUBTEDLY,
C        AT LEAST ONE OF THESE WILL BE WRITTEN.  USUALLY (1) WILL
C        NOT BE NECESSARY AND ONLY ONE OF (2) OR (3).
C
 3469 ITAUM=0
      NSEQ=0
      NCHAR=32
C        32 CHARACTERS OF PLAIN LANGUAGE ARE PACKED.
      XMISSP=9999.
      XMISSS=0.
C        THESE ARE ANALYSES, BUT THERE MAY BE MISSING VALUES
C        NEAR THE BORDERS, SO SET XMISSP = 9999.  NOTE THAT THE
C        ID IN ID( ,N) IS USED, WHICH WOULD NORMALLY HAVE THE 
C        SMOOTHING VARIABLE S = 0, NO MATTER WHETHER THE ANALYSIS
C        HAS BEEN SMOOTHED OR NOT.
C
C        PACK THE ANALYSIS AT THE MESH LENGTH = MESH, WHICH WILL BE
C        MSHPAS( , ) FOR THE LAST PASS, WHEN EITHER IWRITS(M) = 1 OR 3
C        OR KFILIO NE 0.  THIS WILL BE AT THE UNITS ANALYZED,
C        NOT POSTPROCESSED FOR ARCHIVAL.
C
      IF(IWRITS(M).EQ.1.OR.IWRITS(M).EQ.3)THEN
CD        WRITE(KFILDO,347)ALATL,ALONL,MESH,MESHB,NX,NY,NPROJ
CD347     FORMAT(/' AT 347 IN U405A--ALATL,ALONL,MESH,MESHB,NX,NY,NPROJ',
CD    1            2F10.5,5I6)
C
C           GSTORE WRITES TO INTERNAL STORAGE ON FILE KFIL10 WHEN 
C           IWRITS(M) =1 OR 3.  MESH LENGTH IS MESH, THAT USED FOR
C           THE LAST PASS, BUT THE DATA ARE NOT PACKED AND NOT
C           TREATED AS PACKED GRIDDED DATA.  NOTE THAT THIS IS NOT
C           CLIPPED AS IT MAY BE FOR OUTPUT TO OTHER MEDIA.
C           THIS TO ALLOW FOR THE POSSIBILITY IT IS TO BE USED FOR
C           COMPUTATION WITH ANOTHER GRID THAT MAY NOT BE TIGHTLY
C           CLIPPED.
C
         LD(1)=ID(1,M)
         LD(2)=ID(2,M)
         LD(3)=ID(3,M)
         LD(4)=ID(4,M)
         CALL GSTORE(KFILDO,KFIL10,LD,0,LSTORE,ND9,LITEMS,
     1               P,NX*NY,1,0,NDATE,
     2               CORE,ND10,LASTL,NBLOCK,LASTD,NSTORE,L3264B,IER)
C           "NSLAB" IS STORED AS ZERO SIGNIFYING THE DATA ARE NOT
C            PACKED AND CAN BE TREATED AS VECTOR DATA.
C
         IF(IER.EQ.0)THEN
C
            IF(IP16.NE.0)THEN
               WRITE(IP16,3475)(ID(JJ,M),JJ=1,4),
     1                        ((IPLAIN(I,JJ,M),I=1,L3264W),JJ=1,4),NDATE
 3475          FORMAT(/' WRITING DATA TO UNIT KFIL10',3I10.9,I10.3,3X,
     1                  8A4,' FOR DATE',I12)
            ENDIF
C
         ELSE 
C              A DIAGNOSTIC WILL HAVE OCCURRED IN PAWLPM.
            ISTOP(1)=ISTOP(1)+1
            JER=1
            WRITE(KFILDO,348)(ID(JJ,M),JJ=1,4)
 348        FORMAT('     ERROR WRITING VARIABLE',3(1X,I9.9),1X,I10.3,
     1             ' TO INTERNAL STORAGE.',/,
     2             '  SOME COMPUTATIONS (PRE- OR POST-PROCESSING)',
     3             ' MAY NOT BE ABLE TO BE MADE.  PROCEEDING.')
         ENDIF
C
      ENDIF
C
C        THE GRID TO WRITE IN P( , ) IS AT MESH LENGTH MESH, WHICH IS
C        THE MESH LENGTH OF THE LAST PASS.
C
      IF(NCLIP.EQ.1)THEN
C
         IF(NAREA.EQ.2.AND.(POSTAR(1).EQ.'CAKSNO'.OR.
     1                      POSTAR(2).EQ.'CAKSNO'.OR.
     2                      POSTAR(3).EQ.'CAKSNO'))THEN  

C                 THE ALASKA SNOW GRIDS HAVE A SPECIAL CLIPPING MASK.
C                 IT IS ACCESSED AND CLIPPING IS DONE IN CAKSNO.
C                 OTHER ALASKA GRIDS CAN USE THE SAME CLIPPING
C                 PROVIDED ROUTINE CAKSNO IS PROVIDED IN POSTAR( ).
               CALL CAKSNO(KFILDO,KFILOG,KFILRA,RACESS,NUMRA,
     1                     IP16,IP22,FD4,ND2X3,
     2                     P,NX,NY,MESH,IPACK,DATA,IWORK,ND5,
     3                     MODNO,NDATE,PLAINT,IPLANT,
     4                     ALATL,ALONL,NPROJ,ORIENT,XLAT,IOPTB,
     5                     NXE,NYE,MESHE,EMESH,MESHL,
     6                     IS0,IS1,IS2,IS4,ND7,
     7                     JTOTBY,JTOTRC,
     8                     L3264B,L3264W,MINPK,ISTOP(1),IER)
C                 IER = 0 UPON RETURN.  IF THE GRID COULD NOT BE CLIPPED,
C                 A DIAGNOSTIC IS PROVIDED AND ISTOP(1) IS INCREASED.
C            
         ELSEIF(NAREA.EQ.1.AND.(POSTAR(1).EQ.'CCONSN'.OR.
     1                      POSTAR(2).EQ.'CCONSN'.OR.
     2                      POSTAR(3).EQ.'CCONSN'))THEN  

C                 THE CONUS SNOW GRIDS HAVE A SPECIAL CLIPPING MASK.
C                 IT IS ACCESSED AND CLIPPING IS DONE IN CAKSNO.
C                 OTHER CONUS GRIDS CAN USE THE SAME CLIPPING
C                 PROVIDED ROUTINE CCONSN IS PROVIDED IN POSTAR( ).
               CALL CCONSN(KFILDO,KFILOG,KFILRA,RACESS,NUMRA,
     1                     IP16,IP22,FD4,ND2X3,
     2                     P,NX,NY,MESH,IPACK,DATA,IWORK,ND5,
     3                     MODNO,NDATE,PLAINT,IPLANT,
     4                     ALATL,ALONL,NPROJ,ORIENT,XLAT,IOPTB,
     5                     NXE,NYE,MESHE,EMESH,MESHL,
     6                     IS0,IS1,IS2,IS4,ND7,
     7                     JTOTBY,JTOTRC,
     8                     L3264B,L3264W,MINPK,ISTOP(1),IER)
C                 IER = 0 UPON RETURN.  IF THE GRID COULD NOT BE CLIPPED,
C                 A DIAGNOSTIC IS PROVIDED AND ISTOP(1) IS INCREASED.
C
         ELSEIF(NCLIPY.EQ.1)THEN
C
            IF(MESH.EQ.MESHE)THEN
C                 WHEN MESH = MESHE, NXE*NYE = NX*NY.  THIS SHOULD
C                 NORMALLY BE THE CASE.
C
               WRITE(KFILDO,349)
 349           FORMAT(/,' CLIPPING ARCHIVE GRID.')
C
               DO 350 JJ=1,NX*NY
C
               IF(CPNDFD(JJ).LT..5)THEN
                  P(JJ)=9999.
               ENDIF
C
 350           CONTINUE
C         
            ELSE
C
               CALL CLIP(KFILDO,P,NX,NY,MESH,CPNDFD,NXE,NYE,MESHE,IER)
C                 WHEN MESH NE MESHE, THE DOUBLE INDEXING HAS TO BE DONE
C                 IN A SUBROUTINE.  NOTE THAT MESHE MUST NOT BE GREATER
C                 THAN MESH.  ALSO, MESH MUST BE EQUAL TO MESHE*2**M, 
C                 WHERE M IS A LOW (POSITIVE) INTEGER.
C
               IF(IER.NE.0)THEN
C                    A DIAGNOSTIC IS PRODUCED IN CLIP.  THIS IS NOT A 
C                    FATAL ERROR, BUT THE GRID WILL NOT BE CLIPPED.
                  ISTOP(1)=ISTOP(1)+1
                  IER=0
               ENDIF
C
            ENDIF
C
         ELSE
            WRITE(KFILDO,352)
 352        FORMAT(' ****CLIPPING OF THE GRID TO NDGD AREA DESIRED',
     1             ' BUT CLIPPING GRID NOT AVAILABLE.  PROCEEDING.')
            ISTOP(1)=ISTOP(1)+1
         ENDIF
C
      ENDIF         
C
C        DO ANY POSTPROCESSING ON ARCHIVE OUTPUT NECESSARY.  
C        THIS IS DONE ON THE MESH LENGTH OF THE LAST PASS.
C
      ICKGR=0
C        ICKGR IS SET GT 0 WHEN A CHANGE GRID IS PRODUCED.  FOR
C        INSTANCE, WHEN DP > TEMP, AND DP SET = TEMP.
C        (THIS HAS NOT BEEN IMPLEMENTED IN ALL THE SUBROUTINES.)
C
 3522 DO 354 NN=1,3
C
      IF(POSTAR(NN).NE.'      ')THEN
C
         IF(POSTAR(NN).EQ.'POST  ')THEN           
            CALL POST(KFILDO,P,NX*NY,TLOA(NN),SETLOA(NN),THIA(NN),
     1               SETHIA(NN),CONSTA(NN),NSCALA(NN),EX1A(NN),EX2A(NN),
     2               IER)
C              IF A POSTPROCESSING ROUTINE OTHER THAN POST IS
C              NEEDED, PUT CHECK AND CALL HERE.
C
         ELSEIF(POSTAR(NN).EQ.'OSMTH ')THEN 
            IOCEXT=NINT(EX1A(NN))
            IOCINC=NINT(EX2A(NN))
            CALL OSMTH(KFILDO,P,NX,NY,MESH,
     1                 SEALND,NXE,NYE,MESHE,
     2                 IOCEXT,IOCINC,ISTOP,IER)
C              THE ABOVE SMOOTHS THE OCEAN (ONLY) WTIH THE PARAMETERS
C              EX1A( ) AND EX2A( ) OVER A SQUARE 2*IOCEXT ON A SIDE.
C
         ELSEIF(POSTAR(NN).EQ.'OSMTH1')THEN 
            IOCEXT=NINT(EX1A(NN))
            IOCINC=NINT(EX2A(NN))
            CALL OSMTH1(KFILDO,P,NX,NY,MESH,
     1                  SEALND,NXE,NYE,MESHE,
     2                  IOCEXT,IOCINC,ISTOP,IER)
C              THE ABOVE SMOOTHS THE OCEAN (ONLY) WTIH THE PARAMETERS
C              EX1A( ) AND EX2A( ) OVER A CIRCLE WITH RADIUS 2*IOCEXT.
C
         ELSEIF(POSTAR(NN).EQ.'ORSMTH')THEN 
            IOCEXT=NINT(EX1A(NN))
            IOCINC=NINT(EX2A(NN))
            CALL ORSMTH(KFILDO,P,NX,NY,MESH,
     1                  SEALND,NXE,NYE,MESHE,
     2                  IOCEXT,IOCINC,ISTOP,IER)
C              THE ABOVE SMOOTHS THE OCEAN (ONLY) WTIH THE PARAMETERS
C              IPREX1( ) AND IPREX2( ) AS RAYS FROM THE CENTER,
C              STOPPING WHEN A MISSING OR LAND IS ENCOUNTERED.
C
         ELSEIF(POSTAR(NN).EQ.'HSMTH ')THEN 
            IOCEXT=NINT(EX1A(NN))
            IOCINC=NINT(EX2A(NN))
            CALL HSMTH(KFILDO,P,NX,NY,
     1                 IOCEXT,IOCINC,ISTOP,IER)
C              THE ABOVE SMOOTHS ALL POINTS WTIH THE PARAMETERS
C              EX1A( ) AND EX2A( ).
C
         ELSEIF(POSTAR(NN).EQ.'CKTDP ')THEN 
            CALL CKTDP(KFILDO,KFIL10,P,FD4,FD6,NX,NY,ND2X3,
     1                 ID(1,M),LSTORE,ND9,LITEMS,NWORDS,NDATE,
     2                 IS0,IS1,IS2,IS4,ND7,
     3                 IPACK,IWORK,ND5,
     4                 CORE,ND10,NBLOCK,NFETCH,L3264B,ISTOP,IER)
C              THE ABOVE CHECKS TO MAKE ALL DEW POINTS LE
C              TEMPERATURE.
            ICKGR=ICKGR+1
C
         ELSEIF(POSTAR(NN).EQ.'CKPOP ')THEN 
            CALL CKPOP(KFILDO,KFIL10,P,FD4,FD5,FD6,NX,NY,ND2X3,
     1                 ID(1,M),LSTORE,ND9,LITEMS,NWORDS,NDATE,
     2                 IS0,IS1,IS2,IS4,ND7,
     3                 IPACK,IWORK,ND5,
     4                 CORE,ND10,NBLOCK,NFETCH,L3264B,ISTOP,IER)
C              THE ABOVE CHECKS TO MAKE THE 12-H POP CONSISTENT
C              WITH THE TWO 6-H POPS COVERING THE SAME PERIOD.
            ICKGR=ICKGR+1
C
         ELSEIF(POSTAR(NN).EQ.'CKQPF ')THEN
            CALL CKQPF(KFILDO,KFIL10,IP16,P,FD4,FD6,NX,NY,ND2X3,
     1                 TLOA(NN),ID(1,M),IPLAIN(1,1,M),PLAIN(M),
     2                 LSTORE,ND9,LITEMS,NWORDS,NDATE,
     3                 IS0,IS1,IS2,IS4,ND7,
     4                 IPACK,IWORK,ND5,
     5                 CORE,ND10,NBLOCK,NFETCH,L3264B,L3264W,
     6                 ISTOP,IER)
C              THE ABOVE CHECKS TWO QPF FIELDS, ONE ANALYZED
C              WITHOUT THE LAPSE CORRECTION TO ELIMINATE UNWANTED
C              PERIPHERAL AREAS.  VALUES GT. TLOA(NN) ARE SET TO 0.
C              FOR 6-H QPF (CCCFFF=223270), THE RESULT IS WRITTEN
C              TO INTERNAL STORAGE WITH CCCFFF = 223272.
            ICKGR=ICKGR+1
C
         ELSEIF(POSTAR(NN).EQ.'CKWNDG')THEN 
            CALL CKWNDG(KFILDO,KFIL10,P,FD4,FD6,NX,NY,ND2X3,
     1                  ID(1,M),LSTORE,ND9,LITEMS,NWORDS,NDATE,
     2                  IS0,IS1,IS2,IS4,ND7,
     3                  IPACK,IWORK,ND5,
     4                  CORE,ND10,NBLOCK,NFETCH,L3264B,ISTOP,IER)
C              THE ABOVE CHECKS TO MAKE ALL WND GUSTS GE
C              WIND SPEED.
            ICKGR=ICKGR+1
C
         ELSEIF(POSTAR(NN).EQ.'EREST ')THEN 
            IOCEXT=NINT(CONSTA(NN))
            IOCINC=NSCALA(NN)
            CALL EREST(KFILDO,ID(1,M),CCALL,
     1                 XP,YP,XDATA(1,1,J),LTAG,LNDSEA,ELEV,XLAPSE,NSTA,
     2                 P,FD4,FD5,FD3,NX,NY,MESH,
     3                 CPNDFD,SEALND,TELEV,NXE,NYE,MESHE,
     4                 RELVAR,VARTAB(1,NAREA),
     5                 EX1A(NN),NINT(EX2A(NN)),
     6                 IOCEXT,IOCINC,
     7                 L3264B,L3264W,ISTOP,IER)
C              THE RETURN FROM EREST IS AN ESTIMATED ERROR GRID
C              IN FD3( , ) PERTAINING TO THE ANALYSIS BEING DONE
C              IN THE GRID UNITS OF THE ANALYSIS.  THE ERROR GRID
C              WILL BE WRITTEN TO UNIT NO. KFILIO.  THE ASCII DATA
C              WILL BE THE DATA ANALYZED (AN ERROR ESTIMATE DOES
C              NOT EXIST AT THE ANALYSIS POINTS, ONLY AT GRIDPOINTS)
C
         ELSEIF(POSTAR(NN).EQ.'CIGFT ')THEN           
            CALL CIGFT(KFILDO,P,NX*NY,
     1                 TLOA(NN),SETLOA(NN),THIA(NN),SETHIA(NN),
     2                 CONSTA(NN),NSCALA(NN),EX1A(NN),EX2A(NN),IER)
C              THIS IS TO CHANGE LAMP CEILING HEIGHT IN CATEGORIES
C              TO HUNDREDS OF FT.
C
         ELSEIF(POSTAR(NN).EQ.'SETCFT')THEN           
            CALL SETCFT(KFILDO,P,FD4,NX,NY,
     1                  CCALL,NAME,XP,YP,XDATA,NSTA,IER)
C              THIS IS TO MAKE SURE THE CLOSEST GRIDPOINT TO A STATION
C              IN THE CEILING HEIGHT ANALYSIS MATCHES THE CATEGORICAL
C              VALUE.
C
         ELSEIF(POSTAR(NN).EQ.'VISMI ')THEN           
            CALL VISMI(KFILDO,P,NX*NY,
     1                 TLOA(NN),SETLOA(NN),THIA(NN),SETHIA(NN),
     2                 CONSTA(NN),NSCALA(NN),EX1A(NN),EX2A(NN),IER)
C              THIS IS TO CHANGE LAMP VISIBILITY IN CATEGORIES
C              TO MILES.
C
         ELSEIF(POSTAR(NN).EQ.'SETVMI')THEN           
            CALL SETVMI(KFILDO,P,FD4,NX,NY,
     1                  CCALL,NAME,XP,YP,XDATA,NSTA,IER)
C              THIS IS TO MAKE SURE THE CLOSEST GRIDPOINT TO A STATION
C              IN THE VISIBILITY ANALYSIS MATCHES THE CATEGORICAL
C              VALUE.

         ELSEIF(POSTAR(NN).EQ.'SKYAMT')THEN           
            CALL SKYAMT(KFILDO,P,NX*NY,
     1                  TLOA(NN),SETLOA(NN),THIA(NN),SETHIA(NN),
     2                  CONSTA(NN),NSCALA(NN),EX1A(NN),EX2A(NN),IER)
C              THIS IS TO CHANGE LAMP SKY COVER IN CATEGORIES
C              TO PERCENT OF COVERAGE.
C
         ELSEIF(POSTAR(NN).EQ.'SCALX ')THEN
            CALL SCALX(KFILDO,P,NX*NY,CONSTA(NN),NSCALA(NN),IER)
C              THE ABOVE CALL TO SCALX WILL MULTIPLY THE INPUT 
C              DATA IN P(,) BY CONST*10**NSCALE
C
         ELSEIF(POSTAR(NN).EQ.'CONCPR')THEN
            CALL CONCPR(KFILDO,KFIL10,ID(1,M),IDPARS(1,M),
     1                  P,NX,NY,
     2                  LSTORE,ND9,LITEMS,NDATE,
     3                  IS0,IS1,IS2,IS4,ND7,
     4                  IPACK,IWORK,DATA,ND5,
     5                  CORE,ND10,NBLOCK,NFETCH,NSLAB,
     6                  L3264B,ISTOP,IER)
C              THIS IS FOR MAKING CUMULATIVE CEILING PROBABILITY
C              GRIDS CONSISTENT (NON DECREASING FOR HIGHER THRESHOLDS).              
C
         ELSEIF(POSTAR(NN).EQ.'CONVPR')THEN
            CALL CONVPR(KFILDO,KFIL10,ID(1,M),IDPARS(1,M),
     1                  P,NX,NY,
     2                  LSTORE,ND9,LITEMS,NDATE,
     3                  IS0,IS1,IS2,IS4,ND7,
     4                  IPACK,IWORK,DATA,ND5,
     5                  CORE,ND10,NBLOCK,NFETCH,NSLAB,
     6                  L3264B,ISTOP,IER)
C              THIS IS FOR MAKING CUMULATIVE VISIBILITY PROBABILITY
C              GRIDS CONSISTENT (NON DECREASING FOR HIGHER THRESHOLDS).  
C
         ELSEIF(POSTAR(NN).EQ.'CONEKD')THEN
            CALL CONEKD(KFILDO,KFIL10,ID(1,M),IDPARS(1,M),
     1                  P,NX,NY,
     2                  LSTORE,ND9,LITEMS,NDATE,
     3                  IS0,IS1,IS2,IS4,ND7,
     4                  IPACK,IWORK,DATA,ND5,
     5                  CORE,ND10,NBLOCK,NFETCH,NSLAB,
     6                  L3264B,ISTOP,IER)
C              THIS IS FOR MAKING CUMULATIVE EKDMOS GRIDS CONSISTENT
C              (NON DECREASING FOR HIGHER PROBABILITY LEVELS).  
C
         ELSEIF(POSTAR(NN).EQ.'CKMAXT')THEN
            CALL CKMAXT(KFILDO,KFIL10,P,FD6,NX,NY,NAREA,
     1                  ID(1,M),IDPARS(1,M),LSTORE,ND9,LITEMS,
     2                  NWORDS,NDATE,JDATE,
     3                  MESH,MESHE,NCLIPY,CPNDFD,NXE,NYE,
     4                  ALATL,ALONL,ORIENT,XLAT,NPROJ,
     5                  IS0,IS1,IS2,IS4,ND7,
     6                  IPACK,IWORK,ND5,
     7                  CORE,ND10,NBLOCK,NFETCH,L3264B,ISTOP,IER)
C              THIS IS FOR MAKING THE DAYTIME MAX TEMPERATURE
C              AT LEAST AS HIGH AS THE APPROPRIATE 3-H TEMPERATURES.
            ICKGR=ICKGR+1
C
         ELSEIF(POSTAR(NN).EQ.'CKMINT')THEN
            CALL CKMINT(KFILDO,KFIL10,P,FD6,NX,NY,NAREA,
     1                  ID(1,M),IDPARS(1,M),LSTORE,ND9,LITEMS,
     2                  NWORDS,NDATE,JDATE,
     3                  MESH,MESHE,NCLIPY,CPNDFD,NXE,NYE,
     4                  ALATL,ALONL,ORIENT,XLAT,NPROJ,
     5                  IS0,IS1,IS2,IS4,ND7,
     6                  IPACK,IWORK,ND5,
     7                  CORE,ND10,NBLOCK,NFETCH,L3264B,ISTOP,IER)
C              THIS IS FOR MAKING THE NIGHTTIME MIN TEMPERATURE
C              AT LEAST AS LOW AS THE APPROPRIATE 3-H TEMPERATURES.
            ICKGR=ICKGR+1
         ELSEIF(POSTAR(NN).EQ.'CAKSNO')THEN
C           THE POSTPROCESSING SUBROUTINE CAKSNO HAS BEEN USED
C           TO CLIP THE ALASKA SNOW GRID.  THIS TEST IS HERE
C           TO KEEP DIAGNOSTIC BELOW FROM OCCURRING.
         ELSEIF(POSTAR(NN).EQ.'CCONSN')THEN
C           THE POSTPROCESSING SUBROUTINE CCONSN HAS BEEN USED
C           TO CLIP THE CONUS SNOW GRID.  THIS TEST IS HERE
C           TO KEEP DIAGNOSTIC BELOW FROM OCCURRING.
         ELSE
C
            IF(ICOMPT(M).EQ.0)THEN
C                 IF THIS IS A COMPUTED VARIABLE, THE ROUTINE IS
C                 USED ABOVE.
               WRITE(KFILDO,353)POSTAR(NN)
 353           FORMAT(/' ****POSTPROCESSING ROUTINE SPECIFIED',
     1                 ' IN U405A.CN FILE = ',A6,' FOR ARCHIVE',
     2                 ' GRID NOT AVAILABLE IN U405A.  PROCEEDING.')
               ISTOP(1)=ISTOP(1)+1
            ENDIF

         ENDIF
C
      ENDIF
C
 354  CONTINUE
C
C        ANY WRITING TO THE SEQUENTIAL OR RANDOM ACCESS FILE 
C        WILL BE AT THE MESH LENGTH MESHB.
C   
      CALL SZGRDM(KFILDO,P,NX,NY,MESH,MESHB,ITRPLQ(NPASS,MGUESS),
     1            ND2X3)
C        MGUESS IS THE NUMBER OF THE GUESS OPTION ACTUALLY USED
C        AND NPASS IS THE NUMBER OF THE LAST PASS.
C
C        IF A CHANGE GRID HAS BEEN COMPUTED, ICKGR GT 1.
C        WRITE THE GRID TO THE DISPOSABLE FILE WHEN KFILOG NE 0
C        AND JP(M,2) NE 0.
C
      IF(KFILOG.GT.0.AND.JP(M,2).NE.0.AND.ICKGR.NE.0)THEN
         LD(1)=ID(1,M)
         LD(2)=960000+IDPARS(7,M)
C           THE LLLL IN ID(2,M) IS SET TO 96 TO INDICATE THIS IS
C           A CHANGE GRID.  IDPARS(7) MAINTAINS THE LEVEL.
         LD(3)=ID(3,M)
         LD(4)=(ID(4,M)/1000)*1000
C           THE FINAL ANALYSIS HAS ISG = 0 NO MATTER HOW IT WAS DONE.  
         ITAUM=0
         NSEQ=0
         NCHAR=32
C           32 CHARACTERS OF PLAIN LANGUAGE ARE PACKED.
         XMISSP=9999.
         XMISSS=0.
C           THE CHANGE GRIDS ARE COMPUTED ON A CLIPPED GRID, SO THERE
C           WILL BE MISSING VALUES.
         RACK(1:32)=PLAIN(M)(1:32)
         RACK(29:32)='CHNG'
C
         CALL PAWGTS(KFILDO,KFILOG,'KFILOG',IP16,NDATE,
     1               LD,IDPARS(12,M),ITAUM,MODNO,NSEQ,ISCALD(M),
     2               NPROJ,ALATL,ALONL,ORIENT,MESHB,XLAT,NX,NY,
     3               FD6,DATA,IWORK,IPACK,ND5,MINPK,
     4               IS0,IS1,IS2,IS4,ND7,
     5               IRACK,RACK,NCHAR,
     6               XMISSP,XMISSS,LX,IOCTET,
     7               JTOTBY,JTOTRC,L3264B,L3264W,IER)
C           PAWGTS WRITES DIAGNOSTIC TO IP16.
         IF(IER.NE.0)THEN
            ISTOP(1)=ISTOP(1)+1
C              AN ERROR IN PAWGTS IS NOT CONSIDERED FATAL.
         ENDIF
C
      ENDIF
C
C        NOW PACK AND WRITE THE GRID TO THE ARCHIVE UNIT KFILIO AT
C        MESH LENGTH MESHB UNLESS KFILIO = 0.
C
      IF(KFILIO.NE.0)THEN
C
         CALL PAWGTS(KFILDO,KFILIO,'KFILIO',IP16,NDATE,
     1               ID(1,M),IDPARS(12,M),ITAUM,MODNO,NSEQ,ISCALD(M),
     2               NPROJ,ALATL,ALONL,ORIENT,MESH,XLAT,NX,NY,
     3               P,DATA,IWORK,IPACK,ND5,MINPK,
     4               IS0,IS1,IS2,IS4,ND7,
     5               IPLAIN(1,1,M),PLAIN(M),NCHAR,
     6               XMISSP,XMISSS,LX,IOCTET,
     7               NTOTBY,NTOTRC,L3264B,L3264W,IER)
C
         IF(IER.NE.0)THEN
            WRITE(KFILDO,355)
 355        FORMAT(/' ****FATAL ERROR IN PAWGTS IN U405A AT 355.')
C              WHEN THE FINAL ANALYSIS IS TO BE WRITTEN TO KFILIO
C              AND AN ERROR OCCURS, THIS IS CONSIDERED FATAL.
            GO TO 600
         ENDIF
C         
         WRITE(KFILDO,356)(ID(JJ,M),JJ=1,4),NDATE,PLAIN(M)
 356     FORMAT(/' WRITING GRIDPOINT RECORD FOR',3(1X,I9.9),1X,I10.3,
     1           ' TO KFILIO, DATE ',I11,1X,A32) 
C
C        IF AN ERROR ESTIMATE HAS BEEN CALCULATED IN FD3( , ) AS 
C        A POSTPROCESSING ROUTINE, PACK AND WRITE IT TO THE ARCHIVE
C        UNIT KFILIO.
C
         IF(POSTAR(1).EQ.'EREST '.OR.
     1      POSTAR(2).EQ.'EREST '.OR.
     2      POSTAR(3).EQ.'EREST ')THEN 
            XMISSP=9999.0
            XMISSS=0.
C
            ISCLAP=3
C              PACK TO 3 DECIMAL PLACES.
            ISCALE=0
            LD(1)=ITABLE(1,1)
            LD(2)=ITABLE(2,1)-((ITABLE(2,1)/10000))*10000+
     1                                      50970000
C              THE 97 IN LD(2) INDICATES THIS IS THE ERROR VARIABLES,
C              AND THE SEQUENCE JJ PRECEDES THAT.  THIS ASSUMES
C              THE ORIGINAL VARIABLE IN LD(2) HAS 'VLLLL' = 0;
C              THREE DIGITS ARE LEFT FOR SEQUENCING, SO THE NUMBER
C              OF WITHHELD COULD GO UP TO 999.  HOWEVER, 50 IS USED
C              HERE FOR THE ERROR GRID.  IF A DIFFERENT VERSION OF
C              ERROR IS PRODUCED, THE 50 COULD BE CHANGED TO REFLECT
C              THE DIFFERENCE.  NOTE THAT THIS LEAVES THE UUUU INTACT.
            LD(3)=ITABLE(3,2)+IDPARS(12,M)
            LD(4)=ITABLE(4,2)
            CALL PRSID1(KFILDO,LD,LDPARS)
C              PRSID1 FILLS LDPARS( ) ACCORDING TO LD( ).
C
            CALL PAWGTS(KFILDO,KFILIO,'KFILIO',IP16,NDATE,
     1                  LD,LDPARS,ITAUM,MODNO,NSEQ,ISCLAP,
     2                  NPROJ,ALATL,ALONL,ORIENT,MESH,XLAT,NX,NY,
     3                  FD3,DATA,IWORK,IPACK,ND5,MINPK,
     4                  IS0,IS1,IS2,IS4,ND7,
     5                  IPLAIN(1,1,M),PLAIN(M),NCHAR,
     6                  XMISSP,XMISSS,LX,IOCTET,
     7                  NTOTBY,NTOTRC,L3264B,L3264W,IER)
C              NOTE THAT THIS MAY NEED TO BE WRITTEN TO THE RANDOM
C              ACCESS FILE.
C
            IF(IER.NE.0)THEN
               WRITE(KFILDO,357)
 357           FORMAT(/' ****ERROR IN PAWGTS IN U405A AT 357',
     1                 ' WRITING THE ERROR ANALYSIS.  NOT CONSIDERED',
     2                 ' FATAL.')
C                 THIS IS THE ERROR ANALYSIS, AND AN ERROR IS NOT
C                 CONSIDERED FATAL.
               ISTOP(1)=ISTOP(1)+1
            ENDIF
C
         ENDIF
C
      ENDIF
C
C        NOW PACK AND WRITE THE GRID AND THE ERROR GRID, IF COMPUTED,
C        TO THE ARCHIVE RANDOM ACCESS FILE AT MESH LENGTH MESHB,
C        WHEN KFILRA = 42
C
      DO 370 JJ=1,6
C
      IF(KFILRA(JJ).EQ.42)THEN
C
         NGRIDT(1)=NPROJ
         NGRIDT(2)=NINT(DBLE(BMESH)*DBLE(1000000.))
C           WITHOUT CONVERTING TO DOUBLE PRECISION, THE 
C           THE MULTIPLICATION AND CONVERSION TO INTEGER
C           WAS OFF BY ONE UNIT FROM WHAT IS STORED WITH
C           INCOMING GRIDS, AND FROM WHAT WOULD BE EXPECTED
C           (FOR 5-KM CONUS GRID).
         NGRIDT(3)=NINT(XLAT*10000.)
         NGRIDT(4)=NINT(ORIENT*10000.)
         NGRIDT(5)=NINT(ALATL*10000.)
         NGRIDT(6)=NINT(ALONL*10000.)
         NYR=JDATE(1)
         NMO=JDATE(2)
         NDA=JDATE(3)
         NHR=JDATE(4)
         ISCALE=0
C
C            NOTE THAT ARRAY P( ) CONTAINS THE PACKED DATA.
C            THE IBM VERSION OF PACKGR IS PACKGR_OPER
C
         CALL PACKGR_OPER(KFILDO,KFILRA(JJ),RACESS(JJ),ID(1,M),
     1               IDPARS(1,M),ISCALD(M),ISCALE,NGRIDT,
     2               IPLAIN(1,1,M),PLAIN(M),NDATE,NYR,NMO,NDA,NHR,
     3               FD2,P,ND2X3,NX,NY,IPACK,IWORK,ND5,
     4               MINPK,IS0,IS1,IS2,IS4,ND7,
     5               XMISSP,XMISSS,NWORDS,NTOTGB,NTOTGR,
     6               L3264B,L3264W,ISTOP,IER)
C
         IF(IER.NE.0)THEN
            WRITE(KFILDO,362)(ID(MMM,M),MMM=1,4),KFILRA(JJ),IER
 362        FORMAT('     ERROR WRITING DATA FOR',
     1             1X,I9.9,2I10.9,I11.3,
     2             ' ON RANDOM ACCESS FILE UNIT NO.',I4,' IER =',I4,
     3             '.  PROCEEDING.')
            JER=1
            GO TO 3645
         ENDIF
C
         IF(IP16.NE.0)THEN
            WRITE(IP16,364)(ID(MMM,M),MMM=1,4),PLAIN(M),NDATE,
     2                     NX,NY,MESHB,ALATL,ALONL
 364        FORMAT(/' WRITING DATA TO UNIT KFILRA',3I10.9,I10.3,3X,A32,
     1              ' FOR DATE',I12,/,
     2               77X,'NX,NY,MESH,ALAT,ALON =',3I5,2F9.4)
         ENDIF
C
C           IF AN ERROR ESTIMATE HAS BEEN CALCULATED IN FD3( , ) AS 
C           A POSTPROCESSING ROUTINE, PACK AND WRITE IT TO THE RANDOM
C           ACCESS FILE.
C
 3645    IF(POSTAR(1).EQ.'EREST '.OR.
     1      POSTAR(2).EQ.'EREST '.OR.
     2      POSTAR(3).EQ.'EREST ')THEN 
            XMISSP=9999.0
            XMISSS=0.
C
            ISCLAP=3
C              PACK TO 3 DECIMAL PLACES.
            ISCALE=0
            LD(1)=ITABLE(1,1)
            LD(2)=ITABLE(2,1)-((ITABLE(2,1)/10000))*10000+
     1                                      50970000
C              THE 97 IN LD(2) INDICATES THIS IS THE ERROR VARIABLES,
C              AND THE SEQUENCE JJ PRECEDES THAT.  THIS ASSUMES
C              THE ORIGINAL VARIABLE IN LD(2) HAS 'VLLLL' = 0;
C              THREE DIGITS ARE LEFT FOR SEQUENCING, SO THE NUMBER
C              OF WITHHELD COULD GO UP TO 999.  HOWEVER, 50 IS USED
C              HERE FOR THE ERROR GRID.  IF A DIFFERENT VERSION OF
C              ERROR IS PRODUCED, THE 50 COULD BE CHANGED TO REFLECT
C              THE DIFFERENCE.  NOTE THAT THIS LEAVES THE UUUU INTACT.
            LD(3)=ITABLE(3,2)+IDPARS(12,M)
            LD(4)=ITABLE(4,2)
            CALL PRSID1(KFILDO,LD,LDPARS)
C              PRSID1 FILLS LDPARS( ) ACCORDING TO LD( ).
C
            CALL PACKGR(KFILDO,KFILRA(JJ),RACESS(JJ),LD,LDPARS,
     1                  ISCALD(M),ISCALE,NGRIDT,
     2                  IPLAIN(1,1,M),PLAIN(M),NDATE,NYR,NMO,NDA,NHR,
     3                  FD2,FD3,ND2X3,NX,NY,IPACK,IWORK,ND5,
     4                  MINPK,IS0,IS1,IS2,IS4,ND7,
     5                  XMISSP,XMISSS,NWORDS,NTOTGB,NTOTGR,
     6                  L3264B,L3264W,ISTOP,IER)
C
            IF(IER.NE.0)THEN
               WRITE(KFILDO,365)(LD(MMM),MMM=1,4),KFILRA(JJ),IER
 365           FORMAT('     ERROR WRITING DATA FOR',
     1                1X,I9.9,2I10.9,I11.3,
     2                ' ON RANDOM ACCESS FILE UNIT NO.',I4,' IER =',I4,
     3                '.  PROCEEDING.')
               JER=1
               GO TO 375
            ENDIF
C
            IF(IP16.NE.0)THEN
               WRITE(IP16,366)(LD(MMM),MMM=1,4),PLAIN(M),NDATE,
     1                        NX,NY,MESHB,ALATL,ALONL
 366           FORMAT(/' WRITING DATA TO UNIT KFILRA',
     1                  3I10.9,I10.3,3X,A32,
     2                 ' FOR DATE',I12,/,
     3                  77X,'NX,NY,MESH,ALAT,ALON =',3I5,2F9.4)
            ENDIF
C
         ENDIF
C
         GO TO 375
C
      ENDIF
C
 370  CONTINUE
C
      WRITE(KFILDO,371)
 371  FORMAT(/' RANDOM ACCESS FILE UNIT NO. 42 NOT AVAILABLE FOR',
     1        ' WRITING ANALYSES AND/OR ERROR GRID.',
     2        '  NOT COUNTED AS AN ERROR.  PROCEEDING.')
C
C        WRITE THE DATA ON WHICH THE ANALYSIS IS BASED IN ASCII FOR
C        GMOS_PLOT INPUT WHEN KFILVO NE 0 AND IWRITA(N) NE 0.
C
 375  IF(KFILVO.NE.0)THEN
C
         IF(IWRITA(N).NE.0)THEN
            REWIND KFILVO
C              THIS IS DONE IN CASE MORE THAN ONE ELEMENT HAS IWRITA( )
C              NE 0.  ONLY ONE RECORD CAN BE PROCESSED.  THIS WILL
C              MAKE AVAILABLE THE LAST ONE ANALYZED.
            NTOTVO=0
C              THE NUMBER OF RECORDS ON KFILVO IS RESET TO ZERO.
C
            IF(ITABLE(1,2)/100.EQ.2080702.AND.ICOMPT(M).EQ.0)THEN
C                 THIS IS A CEILING HEIGHT PROBABILITY.  NEEDS TO BE 
C                 SCALED TO BE PLOTTED.  THE ICOMPT( ) IS LIKELY NOT
C                 NECESSARY.
               CALL POST(KFILDO,XDATA(1,1,J),NSTA,0.,0.,1.,
     1                   1.,1.,2,DUM,DUM,IER)
C
            ELSEIF(ITABLE(1,2)/100.EQ.2081302.AND.ICOMPT(M).EQ.0)THEN
C                 THIS IS A VISIBILITY PROBABILITY.  NEEDS TO BE 
C                 SCALED TO BE PLOTTED.  THE ICOMPT( ) IS LIKELY NOT
C                 NECESSARY.
               CALL POST(KFILDO,XDATA(1,1,J),NSTA,0.,0.,1.,
     1                   1.,1.,2,DUM,DUM,IER)
C
            ELSEIF(ITABLE(1,2)/1000.EQ.438044.AND.ICOMPT(M).EQ.0)THEN
C                 THIS IS A SNOW REL FREQ.  NEEDS TO BE SCALED TO BE 
C                 PLOTTED.  THIS IS ANALYSIS FOR DEVELOPMENT, AND
C                 WON'T BE NEEDED IN OPERATIONS.  THE ICOMPT( ) IS
C                 LIKELY NOT NECESSARY.  HIGH VALUES ARE NOT TRUNCATED
C                 FOR QC.  THEY CAN BE FOR FINAL IF DESIRED.  SCALE
C                 10**2
               CALL POST(KFILDO,XDATA(1,1,J),NSTA,0.,0.,9999.,
     1                   9999.,1.,2,DUM,DUM,IER)
C
            ELSEIF(ID(1,M)/1000.EQ.224360.OR.
     1             ID(1,M)/1000.EQ.224385.OR.
     2             ID(1,M)/1000.EQ.224325)THEN
C             ****SHOULD 224325 BE 224225************
C                 THIS IS A MOS WIND SPEED OR GUST OR LAMP WIND SPEED.
C                 THE VECTOR DIRECTION MUST BE COMPUTED FROM U
C                 AND V.  JD( , ) IS USED IN DIRFUV ONLY FOR PRINT.
C                 THE DIRECTION, COMPUTED FROM THE OBSERVED U AND V,
C                 AND THE OBSERVED SPEED DO NOT INCLUDE BOGUS VALUES.
C                 THERE IS NO EASY WAY TO INCLUDE THESE.  THE BOGUS
C                 SPEED CAN BE PLOTTED WHEN WRITTEN FROM SPEED ANALYSIS.
C
               IF(ITABLE(1,6).NE.0)THEN
C                    IF DIRECTION IS TO BE PLOTTED, ITABLE( , 6) MUST
C                    CONTAIN THE ID.  IF THE ID IS ZERO, THE DATA WILL
C                    BE PLOTTED BUT WITHOUT THE DIRECTION.
                  ITAUM=0
                  LD(1)=ITABLE(1,6)+IDPARS(4,M)
C                    THE 6TH LOCATION IN ITABLE( , ) CONTAINS THE VECTOR
C                    DIRECTION ID FOR INPUT TO DIRFUV.  ADD THE DD.
                  LD(2)=ID(2,M)
                  LD(3)=ID(3,M)
                  LD(4)=ID(4,M)
                  CALL PRSID1(KFILDO,LD,LDPARS)
                  CALL DIRFUV(KFILDO,KFIL10,IP12,KFILRA,RACESS,NUMRA,
     1                        LD,LDPARS,JD(1,M),ITAUM,
     2                        NDATE,NDATE,CCALL,ISDATA,DATA,ND1,NSTA,
     3                        ICALLD,CCALLD,IPACK,IWORK,DATA,ND5,
     4                        LSTORE,ND9,LITEMS,CORE,ND10,
     5                        NBLOCK,NFETCH,
     6                        IS0,IS1,IS2,IS4,ND7,
     7                        L3264B,L3264W,IER)
C
                  IF(IER.NE.0)THEN
                     ISTOP(1)=ISTOP(1)+1
C
                     IF(IER.NE.102)THEN
                        ISTOP(3)=ISTOP(3)+1
C                          ANY IER NOT 102 MEANS A GRID COULD NOT BE 
C                          OBTAINED.
                     ENDIF
C
                     WRITE(KFILDO,376)
 376                 FORMAT('     WIND DIRECTION CANNOT BE PLOTTED.',
     1                      '  DATA WILL NOT BE WRITTEN IN ASCII TO',
     2                      ' UNIT KFILDO.')
C                       THE ABOVE WRITE FOLLOWS A DIAGNOSTIC IN DIRFUV.
                     GO TO 400
C                       IF THE DIRECTION CANNOT BE COMPUTED, ASCII IS NOT
C                       WRITTEN.
                  ENDIF
C
                  DO 377 K=1,NSTA
C
                  IF(DATA(K).LT.9998.9)THEN
                     DATA(K)=NINT(DATA(K)/10.)
C                       THIS ROUNDS DIRECTION TO TENS OF DEGREES.
C
                     IF(DATA(K).EQ.0..AND.NINT(XDATA(K,1,J)).NE.0)THEN
                        DATA(K)=36.
C                          SETS ZERO DEGREES TO 360 WHEN SPEED NE ZERO.
                     ENDIF
C    
                  ENDIF
C
 377              CONTINUE
C
               ENDIF
C
            ENDIF
C
            DO 380 K=1,NSTA
C
C              WRITE THE LONGITUDE AS NEGATIVE, LATITUDE, ASCII
C              DATA TO PLOT, AND THE CALL LETTERS AND NAME.  THE
C              LATTER TWO ARE ONLY TO IDENTIFY THE DATA FOR 
C              HUMAN READING.
C
            IF(ID(1,M)/1000.EQ.224360.OR.
     1          ID(1,M)/1000.EQ.224385.OR.
     2          ID(1,M)/1000.EQ.224325)THEN
C                 THIS IS A MOS WIND SPEED OR GUST OR A LAMP SPEED.
C                 WRITE THE STATION DIRECTION WITH 2 DIGITS, A SLASH,
C                 AND WIND SPEED WITH 2 DIGITS.
               IF(ITABLE(1,6).NE.0)THEN
C                 IF DIRECTION IS TO BE PLOTTED, ITABLE( , 6) MUST
C                 CONTAIN THE ID.
C
                  IF(XDATA(K,1,J).LT.9998.9.AND.DATA(K).LT.9998.9)THEN 
C                       WRITES DIRECTION AND SPEED WHEN NEITHER IS
C                       MISSING.          
                     WRITE(KFILVO,378)-STALON(K),STALAT(K),
     1                                NINT(DATA(K)),NINT(XDATA(K,1,J))
 378                 FORMAT(2F10.4,I6.2,'/',I2.2)

                  ELSEIF(XDATA(K,1,J).LT.9998.8)THEN
C                       WRITES SPEED WHEN NOT MISSING AND DIRECTION
C                       IS MISSING.  THIS HAPPENS ESPECIALLY FOR
C                       BOGUS POINTS.
                     WRITE(KFILVO,379)-STALON(K),STALAT(K),
     1                                NINT(XDATA(K,1,J))
                  ENDIF
C
               ELSE
C
C                    WRITE SPEED WHEN DIRECTION ID IS NOT AVAILABLE.
C
                  IF(XDATA(K,1,J).LT.9998.9)THEN           
                     WRITE(KFILVO,379)-STALON(K),STALAT(K),
     1                                NINT(XDATA(K,1,J))
 379                 FORMAT(2F10.4,I6)
                  ENDIF
C
               ENDIF
C
            ELSE
C
C                 WRITE FOR NON-VECTOR (WIND) DATA.
C
               IF(XDATA(K,1,J).LT.9998.9)THEN 
C                    DIRECTION IS NOT ANALYZED, BUT COMPUTED
C                    ON THE GRID.  XDATA( ,1,J) WILL BE MISSING,
C                    SO WRITING WILL NOT BE DONE.  KFILVO IS
C                    REWOUND BUT IS NOT OVERWRITTEN, SO THE LAST
C                    VARIABLE WRITTEN, WHICH IS PROBABLY SPEED
C                    WILL STILL BE THERE.  HOWEVER, THIS CAN
C                    BE BY PASSED BY USING IWRITA = 0.
                  WRITE(KFILVO,379)-STALON(K),STALAT(K),
     1                             NINT(XDATA(K,1,J))
               ENDIF
C
            ENDIF
C            
 380        CONTINUE
C
            NTOTVO=NTOTVO+1
C
            IF(IP16.NE.0)THEN
               LD(1)=ITABLE(1,2)+IDPARS(4,M)
C                 VECTOR BEING ANALYZED IS IN ITABLE( ,2).
               LD(2)=ITABLE(2,2)
               LD(3)=ITABLE(3,2)+IDPARS(12,M)
               LD(4)=ITABLE(4,2)
               WRITE(IP16,384)(LD(MMM),MMM=1,4),PLAIN(M),NDATE
 384           FORMAT(/' WRITING ASCI TO UNIT KFILVO',3I10.9,I10.3,
     1                  3X,A32,' FOR DATE',I12)
            ENDIF
C            
         ENDIF
C
      ENDIF
C
 400  CONTINUE
C
 500  IF(JER.EQ.0)THEN
         WRITE(KFILDO,502)(JDATE(JJ),JJ=1,4)
 502     FORMAT(/' U405A HAS SUCCESSFULLY COMPLETED FOR DATE/TIME ',
     1            I5,3I3.2,'00.')
      ELSE
         WRITE(KFILDO,503)(JDATE(JJ),JJ=1,4)
 503     FORMAT(/' U405A HAS COMPLETED WITH AN ERROR FOR DATE/TIME ',
     1            I5,3I3.2,'00.')
      ENDIF
C      
      GO TO 700
C
 600  IER=777
      ISTOP(1)=ISTOP(1)+1
C
C        SAVE JDATE( ) IN NSAVDT( ) FOR USE ON NEXT ENTRY.
C
 700  NSAVDT(1)=JDATE(1)
      NSAVDT(2)=JDATE(2)
      NSAVDT(3)=JDATE(3)
      NSAVDT(4)=JDATE(4)
      NSTA=NSTASV
C        NSTA IS RESET TO THE ENTRY VALUE.
C
C        WRITE TRAILER RECORD TO THIS VECTOR FILE UNLESS
C        KFILOV = 0.  IF THERE IS AN ERROR, TRAIL WILL PRODUCE
C        A DIAGNOSTIC.  U155 WILL WRITE AN EOF AT COMPLETION
C        OF RUN.
C
      IF(KFILOV.NE.0)THEN
         CALL TRAIL(KFILDO,KFILOV,L3264B,L3264W,MTOTBY,MTOTRC,IER)
      ENDIF
C
C        WRITE TRAILER RECORD TO THIS VECTOR FILE UNLESS
C        KFILQC = 0.  IF THERE IS AN ERROR, TRAIL WILL PRODUCE
C        A DIAGNOSTIC.  U155 WILL ALSO AT THE END WRITE A TRAILER
C        RECORD AND AN EOF.
C
      IF(KFILQC.NE.0)THEN
         CALL TRAIL(KFILDO,KFILQC,L3264B,L3264W,ITOTBY,ITOTRC,IER)
      ENDIF
C
CD     CALL TIMPR(KFILDO,KFILDO,'END   U405A         ')
      RETURN
C 
C        ERROR STOP BELOW IS FOR ERRORS OF CONTROL INFORMATION INPUT.
 900  CALL IERX(KFILDO,KFILDO,IOS,'U405A ',STATE)
      STOP 9999
      END
