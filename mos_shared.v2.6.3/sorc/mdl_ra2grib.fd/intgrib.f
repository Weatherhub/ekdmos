      SUBROUTINE INTGRIB(KFILDI,KFILDO,IPRT,LPDS,ICYL,BGRID,IOVLND,
     A                  BCUT,ID,NDATE,IYR,IMO,IDA,IHR,KFILRA,NUMRA,
     B                  KFILGD,KFILLW,KFILGB,CCALL,STALAT,STALON,
     C                  NSTA,KFILP,KFILCP,ND1,ND5,ND7,L3264B,IER)
C$$$  SUBPROGRAM DOCUMENTATION BLOCK                                  
C                .      .    .                                       .  
C SUBPROGRAM: INTGRIB
C   PRGMMR: ALLEN            ORG: OST22      DATE: 2001-05-14
C                                                                       
C ABSTRACT: THIS SUBROUTINE READS INFORMATION FROM THE INPUT FILE
C           FORT.05, GRIB.CN, INCLUDING PDS INITIALIZATION, UNIT
C           NUMBERS OF FILES, STATION LIST (OR STATIONS ON RANDOM
C           ACCESS FILE IF NO LIST IS PROVIDED), AND STATION
C           INFORMATION FROM THE STATION DICTIONARY.          
C                                                                       
C PROGRAM HISTORY LOG:                                                  
C   01-01-08  ALLEN       - WRITTEN FOR NEW GRIB CODE THAT PROCESSES
C                           MOS2000 FORECASTS
C   12-09-13  ENGLE    - CHANGED ENVVAR FROM 'XLFUNIT_  ' TO 'FORT  '
C                                                                       
C USAGE:    CALL PROGRAM-NAME(ARGS)
C   INPUT ARGUMENT LIST:
C              KFILDI = UNIT NUMBER OF INPUT FILE.  (INPUT)
C              KFILDO = UNIT NUMBER OF OUTPUT (PRINT) FILE.  (OUTPUT)
C                 ND1 = MAXIMUM NUMBER OF STATIONS THAT CAN BE DEALT
C                       WITH (I.E., INTERPOLATION DONE FOR).  NOTE THAT
C                       THIS DOES NOT INCLUDE THE NUMBER OF STATIONS IN
C                       THE DIRECTORY UNLESS, OF COURSE, THE STATION
C                       DIRECTORY IS TO BE USED AS THE STATION LIST.
C                       SET BY PARAMETER.
C                 ND5 = DIMENSION OF IPACK( ), IWORK( ), DATA( ) AND
C                       CCALLD( ); SECOND DIMENSION OF ICALLD( , ).
C                       THESE ARE GENERAL PURPOSE ARRAYS, SOMETIMES USED 
C                       FOR GRIDS.  TWO SIZES OF ARRAYS (ND5 AND ND2X3) 
C                       ARE USED IN CASE AN ARRAY NEEDS TO BE LARGER 
C                       THAN ND2X3.  ND5 CAN BE INCREASED WITHOUT 
C                       INCREASING THE SIZE OF ALL ARRAYS. SET BY 
C                       PARAMETER.
C                 ND7 = DIMENSION OF IS0( ), IS1( ), IS2( ), AND IS4( ).
C                       NOT ALL LOCATIONS ARE USED.  MAXIMUM SIZE IS FOR
C                       IS1( ) = 22 PLUS 32 CHARACTERS (ONE CHARACTER
C                       PER WORD) OF PLAIN TEXT = 54.  SET BY PARAMETER.
C              L3264B = INTEGER WORD LENGTH IN BITS OF MACHINE BEING
C                       USED (EITHER 32 OR 64).  SET BY PARAMETER.
C
C   OUTPUT ARGUMENT LIST:
C                IPRT = WHETHER OR NOT TO PRINT:
C                       0 - PRINT NONE OF THE FOLLOWING
C                       1 - PRINT LIMITED INFORMATION ABOUT VARIABLES
C                       2 - PRINT STATION DATA FOR ALL VARIABLES
C                LPDS = CURRENT NUMBER OF ID ARRAY ELEMENTS WHICH GET
C                       USED TO CREATE THE PDS SECTION OF THE GRIB 
C                       MESSAGE
C                ICYL = MODEL CYCLE
C               BGRID = GRID ON WHICH THE LAND/SEA MASK POINTS ARE      
C                       READ IN FROM VIA FT36, CURRENTLY MDR (CHAR*4)  
C              IOVLND = HOLDS THE NUMBER OF OVERLAND GRID POINTS ON THE 
C                       GRID USED TO CREATE THE BITMAP MASK. FOR THE    
C                       MDR GRID CURENTLY USED, THE VALUE IS XXXX.  
C                BCUT = CUTOFF USED IN BITMAPPING ROUTINE TO DETERMINE  
C                       WHETHER OR NOT TO TURN ON OR OFF A GRID         
C                       POINT (INPUT)     
C                ID() = ARRAY CONTAINING INPUT TO CREATE THE PDS SECTION
C                       OF THE GRIB MESSAGE      
C               NDATE = DATE IN YYYY/MM/DD/HH FORMAT
C                 IYR = 4-DIGIT YEAR
C                 IMO = 2-DIGIT MONTH
C                 IDA = 2-DIGIT DAY
C                 IHR = 2-DIGIT HOUR
C              KFILRA = UNIT NUMBER(S) OF THE RANDOM ACCESS FILE(S)
C               NUMRA = NUMBER OF RANDOM ACCESS FILES
C              KFILGD = UNIT NUMBER OF THE GRID INFORMATION FILE
C              KFILLW = UNIT NUMBER OF THE LAND/SEA MASK FILE
C              KFILGB = UNIT NUMBER OF THE GRIB OUTPUT FILE
C          CCALL(K,J) = 8-CHARACTER STATION CALL LETTERS (OR GRIDPOINT
C                       LOCATIONS FOR GRID DEVELOPMENT) TO PROVIDE
C                       OUTPUT FOR (J=1) AND 5 POSSIBLE OTHER STATION
C                       CALL LETTERS (J=2,6) THAT CAN BE USED INSTEAD
C                       IF THE PRIMARY (J=1) STATION CANNOT BE FOUND 
C                       IN AN INPUT DIRECTORY (K=1,NSTA).  ALL STATION
C                       DATA ARE KEYED TO THIS LIST, EXCEPT POSSIBLY 
C                       CCALLD( ).  (CHARACTER*8)
C           STALAT(K) = LATITUDE OF STATIONS (K=1,NSTA)
C           STALON(K) = LONGITUDE OF STATIONS (K=1,NSTA) 
C                NSTA = NUMBER OF STATIONS
C               KFILP = UNIT NUMBER OF VARIABLE LIST FILE
C              KFILCP = UNIT NUMBER OF MOS2000 ID TABLE FILE
C                                                                       
C        DATA SET USE  
C        INPUT FILES:                                                 
C             FORT.10 - NCEP STANDARD DATE FILE                  
C             FORT.29 - MDL MOS ID TABLE FILE                    
C             FORT.25 - VARIABLE LIST                    
C             FORT.26 - USER INPUT STATION LIST                  
C             FORT.27 - STATION DICTIONARY                  
C             FORT.35 - FILE CONTAINING GRID INFORMATION         
C             FORT.36 - FILE CONTAINING OVERLAND POINTS OVER THE        
C                       CONTIGUOUS U.S. ON THE MDR (113 BY 89) GRID     
C                       USED FOR BITMAP                          
C             FORT.45 - MDL MOS CONSTANT FILE                    
C             FORT.48 - MDL MOS FORECAST FILE                    
C
C        OUTPUT FILES:
C             FORT.12 - STANDARD OUTPUT                         
C             FORT.66 - FILE CONTAINING GRIB MESSAGES           
C                                                                       
C        VARIABLES                                                      
C               BGRID = GRID ON WHICH THE LAND/SEA MASK POINTS ARE      
C        SUBPROGRAMS CALLED:                                            
C            MDLLIB:    RDSNAM,RDSTAD,GET_NCEPDATE,RDTDLM,UNPACK,IERX                      
C            W3LIB:     GETENV,BAOPEN                      
C                                                                       
C        EXIT STATES:                                                   
C                COND =       0 ; SUCCESSFUL RUN                        
C                     = NONZERO ; SOMETHING WENT WRONG.  IF THERE IS AN
C                                 ERROR IN GET_NCEPDATE, RDTDLM, OR UNPACK
C                                 THE CODE WILL STOP.  OTHERWISE, IER IS 
C                                 THE NUMBER OF NON-FATAL ERRORS FROM 
C                                 RDSNAM AND RDSTAD.                  
C                                                                       
C REMARKS:  CURRENTLY LIMITED TO                   
C           A MAXIMUM GRID SIZE OF 200                           
C           BY 200 POINTS, WHICH CORRESPONDS TO A MAXIMUM        
C           GRIB BULLETIN SIZE OF 40000 BYTES,
C           AND A MAXIMUM NUMBER OF VARIABLE IDS OF 3000              
C                                                                      
C ATTRIBUTES:                                                           
C   LANGUAGE: FORTRAN 90                                                
C   MACHINE:  IBM
C                                                                       
C$$$                                                                    
      IMPLICIT NONE
      INTEGER :: I,J,L,N,KFILDI,KFILDO,IPRT,LPDS,ICYL,IOVLND
      INTEGER :: NDATE,KFILRA(15),NUMRA,KFILGD,KFILLW,KFILGB,NSTA
      INTEGER :: KFILP,KFILCP,ND1,IER,IP(25),IRET,IOSTAT,IOS
      INTEGER :: KFILD(2),NELEV(ND1),IWBAN(ND1),NGP(ND1)
      INTEGER :: IDUM,NEW,JD1(4),ND5,ND7,IYR,IDA,IMO,IHR 
      INTEGER :: KFILDT,IOUT,JD(1),L3264B,NSTA1,NSTA2,IFOUND(ND1)
      INTEGER :: ITIMEZ(ND1),ID(LPDS),NSIZE,IPACK(ND5),IWORK(ND5)
      INTEGER :: MISSP,MISSS,IS0(ND7),IS1(ND7),IS2(ND7),IS4(ND7)

      INTEGER :: IZERO=0,ISTOP=0
      INTEGER :: ITEMP(15)=(/0,0,0,0,0,0,0,0,0,0,0,0,0,0,0/) 

      REAL :: STALAT(ND1),STALON(ND1),BCUT

      CHARACTER(LEN=4) :: BGRID,STATE
      CHARACTER(LEN=8) :: CCALL(ND1,6),CCALLD(ND5)
      CHARACTER(LEN=20):: NAME(ND1)
      CHARACTER(LEN=30):: RACESS(5),DIRNAM(2),DATNAM,CONNAM
      CHARACTER(LEN=30):: PRENAM,OUTNAM
      CHARACTER(LEN=80):: ENVVAR,FILEO

C
      DO 100 J=1,ND1
       IFOUND(J)=0
 100  ENDDO

      DO 105 J=1,25
      IP(J)=0
 105  CONTINUE
C
C        READ AND PRINT CONTROL INFORMATION.
C
      STATE='125 ' 
      READ(KFILDI,125,IOSTAT=IOS,ERR=900,END=1251)
     &     IPRT,ICYL,BGRID,IOVLND,BCUT,NEW
 125  FORMAT(/,2(I10/),A10/,I10/,F10.3/,I10)
C
C        READ IN PDS INITIALIZATIONS
C
      READ(KFILDI,1250,IOSTAT=IOS,ERR=900,END=1251)
     &     ID(1),ID(2),ID(3),ID(4),ID(24)
 1250  FORMAT(/,4(I10/),I10)
      GO TO 1255
C        INCOMPLETE CONTROL INFORMATION SHOULD BE CONSIDERED AN ERROR.
C        HOWEVER, A SHORT RECORD DOES NOT CAUSE AN "END" CONDITION.
 1251  WRITE(KFILDO,1252)
 1252  FORMAT(/' ****CONTROL INFORMATION NOT COMPLETE.')
C
C        READ AND PROCESS UNIT NUMBER AND FILE NAME FOR READING
C        DATE LIST.  FILE WILL BE OPENED AS 'OLD', UNLESS THE FILE
C        IS THE DEFAULT INPUT FILE.
C
 1255 CALL RDSNAM(KFILDI,KFILDO,KFILDT,DATNAM,IZERO,IZERO,1,N,'OLD',
     1            'FORMATTED',IP,IER)
      IF(IER.NE.0)ISTOP=ISTOP+1
C
C        READ AND PRINT THE DATE TO BE PROCESSED.  THIS DATE WILL BE
C        CHECKED AGAINST THE ONE IN THE FCST FILE IN GRIB1
C
      CALL GET_NCEPDATE(KFILDT,IYR,IMO,IDA,IHR,NDATE,IER)
C
      IF(IER.NE.0)THEN
         WRITE(KFILDO,131)
 131     FORMAT(/' ****ERROR: CAN NOT READ NCEPDATE FILE - ',
     1           'CATASTROPHIC ERROR IN INTGRIB. STOP AT 131.')
         CALL W3TAGE('INTGRIB')
         STOP 131
      ENDIF
      WRITE(KFILDO,132)NDATE 
 132  FORMAT(/,' INPUT DATE AS READ: ',I12) 
C
C        MAKE SURE THE CYCLE READ IN MATCHES THE CURRENT DATE CYCLE.
C        IF NOT, STOP.
C
      IF(ICYL.NE.IHR) THEN
        WRITE(KFILDO,133)ICYL,IHR
 133    FORMAT(/' ****ERROR:  ICLY ',I3,' AND IHR ',I3,' DO NOT MATCH')
        CALL W3TAGE('MDL_RA2GRIB')
        STOP 133
      ENDIF
C
C        READ AND PROCESS THE UNIT NUMBERS AND FILE NAMES FOR THE 
C        MOS-2000 EXTERNAL RANDOM ACCESS FILERA.  FIFTEEN ARE ALLOWED.
C        FILE WILL NOT BE OPENED.
C
      CALL RDSNAM(KFILDI,KFILDO,KFILRA,RACESS,ITEMP,ITEMP,15,NUMRA,
     1            'NOT','NOTOPENED',IP,IER)
C        ITEMP( ) IS AN ARRAY AT LEAST 5 IN SIZE.
      IF(IER.NE.0)ISTOP=ISTOP+1
C
      IF(NUMRA.NE.0)THEN
         WRITE(KFILDO,143)NUMRA,(KFILRA(J),RACESS(J),J=1,NUMRA)
 143     FORMAT(/' ',I2,' MOS-2000 EXTERNAL RANDOM ACCESS DATA SETS,',
     1           ' UNITS, AND NAMES.'/(' ',I4,2X,A60))
      ELSE
         WRITE(KFILDO,1430)NUMRA
 1430    FORMAT(/' ',I2,' MOS-2000 EXTERNAL RANDOM ACCESS DATA SETS.')
C           THE ABOVE PRINT IS FOR THE EMPTY SET.
      ENDIF
C
C        READ AND PROCESS UNIT NUMBER AND FILE NAME FOR THE 
C        GRID INFORMATION FILE.  FILE WILL BE OPENED AS 'OLD'.
C
      CALL RDSNAM(KFILDI,KFILDO,KFILGD,OUTNAM,IZERO,IZERO,1,
     1            IOUT,'OLD','FORMATTED',IP,IER)
      IF(IER.NE.0)ISTOP=ISTOP+1
C
C        READ AND PROCESS UNIT NUMBER AND FILE NAME FOR THE 
C        LAND/WATER MASK FILE.  FILE WILL BE OPENED AS 'OLD'.
C
      CALL RDSNAM(KFILDI,KFILDO,KFILLW,OUTNAM,IZERO,IZERO,1,
     1            IOUT,'OLD','FORMATTED',IP,IER)
      IF(IER.NE.0)ISTOP=ISTOP+1
C
C        READ THE UNIT NUMBER FOR THE GRIB OUTPUT FILE AND THEN
C        OPEN IT USING GETENV AND BAOPEN.  NOTE THAT THIS METHOD
C        OF OPENING THE FILE IS NECESSARY ON THE IBM SP.
C
      READ(KFILDI,150)KFILGB
 150  FORMAT(I3)
C
C        NOW READ IN THE TERMINATOR THAT FOLLOWS THE LINE
C
      READ(KFILDI,FMT='(I3)')IDUM
      IF(IDUM.NE.99)THEN
        WRITE(KFILDI,151)
 151    FORMAT(/,'****  THE UNIT NUMBER FOR THE GRIB FILE MUST BE ',
     &          'FOLLOWED BY A TERMINATOR.  STOP IN INTGRIB AT 151.')
        STOP 151
      ENDIF
C
C        OPEN THE GRIB OUTPUT FILE
C
CINTEL
C     ENVVAR='XLFUNIT_  '
C     WRITE(ENVVAR(9:10),FMT='(I2)')KFILGB
      ENVVAR='FORT  '
      WRITE(ENVVAR(5:6),FMT='(I2)')KFILGB
CINTEL
      CALL GETENV(ENVVAR,FILEO)
      CALL BAOPEN(KFILGB,FILEO,IRET)
      IF(IRET.NE.0)THEN
        WRITE(KFILDO,148)
 148    FORMAT(/'****  ERROR OPENING THE GRIB OUTPUT FILE.  STOP IN',
     &          ' INTGRIB AT 148')
        STOP 148
      ENDIF
 
C
C        READ AND PROCESS UNIT NUMBERS AND FILE NAMES FOR STATION LIST
C        (CALL LETTERS) AND STATION DIRECTORY WHICH HOLDS CALL LETTERS,
C        LATITUDE, LONGITUDE, WBAN NUMBER, ELEVATION, AND NAME FOR EACH 
C        POSSIBLE STATION.  THIS CAN BE A MASTER DIRECTORY, OR BE A DIRECTORY
C        SUPPLIED BY A USER.
C
      CALL RDSNAM(KFILDI,KFILDO,KFILD,DIRNAM,ITEMP,ITEMP,2,N,'OLD',
     1            'FORMATTED',IP,IER)
      IF(IER.NE.0)ISTOP=ISTOP+1
      WRITE(KFILDO,147)(KFILD(J),DIRNAM(J),J=1,2)
 147  FORMAT(/' STATION LIST AND DIRECTORY DATA SETS, UNITS AND NAMES.'/
     1       (' ',I4,2X,A60))
C
C        READ STATION LIST AND OTHER STATION INFORMATION.  THE STATION
C        LIST CAN COME FROM THE DEFAULT INPUT FILE KFILDI, OR BE ON A 
C        SEPARATE FILE AS DETERMINED BY KFILD(1).  THE STATIONS ARE READ IN 
C        GROUPS.  FOR EACH GROUP, THE STATION LIST CAN BE USED AS READ,
C        OR ORDERED ACCORDING TO THE STATION DIRECTORY, WHICH IS 
C        ALPHABETICAL BY ICAO CALL LETTERS.
C
      NSTA=0
C
      CALL RDSTAD(KFILDO,12,12,KFILD,NEW,CCALL,CCALLD,
     1            NAME,NELEV,IWBAN,STALAT,STALON,ITIMEZ,
     2            IFOUND,ND1,NSTA,IER)
C        CCALLD( ) IS TREATED HERE AS IF IT HAD THE SAME DIMENSIONS
C        AS CCALL( , ).  THIS IS OK, BECAUSE ND5 IS GE ND1.
C
      IF(IER.NE.0)ISTOP=ISTOP+1
C        THE DIRECTORY FILE IS READ ONLY ONCE.
C
      IF(KFILD(1).NE.KFILDI)CLOSE(UNIT=KFILD(1))
      CLOSE(UNIT=KFILD(2))
C        THE FILES ARE CLOSED WHEN THEY ARE NOT THE SAME AS
C        THE DEFAULT INPUT FILE.  THE DIRECTORY IS NEVER THE DEFAULT.
C     
C                                                                       
C        IF THE NUMBER OF STATIONS READ IN IS ZERO, THAT IS, THE USER   
C        HAS NOT SPECIFIED A LIST, READ IN ALL STATIONS AND THEIR 
C        LATITUDE AND LONGITUDE FROM THE FORECAST FILE       
C                                                                       
      IF(NSTA.EQ.0) THEN
C        FIRST GET THE CALL LETTER RECORD.  NOTE THAT THIS USES A
C        VERSION OF FLOPNM IN RDTDLM THAT DOES NOT ACTUALLY USE THE 
C        NAME OF THE RANDOM ACCESS FILE
C
        JD1(1)= 400001000
        JD1(2)= 0
        JD1(3)= 0
        JD1(4)= 0
CINTEL
C        CALL RDTDLM(KFILDO,KFILRA(1),RACESS(1),JD1,CCALL,ND5,NSIZE,
C     &              L3264B,IER)
        CALL RDTDLMC(KFILDO,KFILRA(1),RACESS(1),JD1,CCALL,ND5,NSIZE,
     &              L3264B,IER)
CINTEL
        IF(IER.NE.0)THEN
         WRITE(KFILDO,130)IER
 130     FORMAT(/'****  ERROR GETTING CALL LETTER RECORD FROM ',
     &          'RDTDLM IN GRIB1.  IER = ',I3)
         STOP 130
        ENDIF
C
C        RDTDLM IS WRITTEN TO RETURN A REAL VALUE.  IF THIS CODE
C        IS COMPILED WITH A 4-BYTE REAL (DEFAULT ON THE IBM) IT
C        WILL TRY TO PUT THE 4-BYTE REAL IN AN 8-BYTE CHARACTER. 
C        SO, DIVIDE NSIZE BY 2 TO GET THE NUMBER OF STATIONS
C
        NSTA=NSIZE/2
C
C        NOW GET THE LATITUDE 
C
        JD1(1)=400006000
        JD1(2)=0
        JD1(3)=0
        JD1(4)=0
        CALL RDTDLM(KFILDO,KFILRA(1),RACESS(1),JD1,IPACK,ND5,NSTA1,
     &              L3264B,IER)
        IF(IER.NE.0)THEN
         WRITE(KFILDO,134)IER
 134     FORMAT(/'****  ERROR GETTING LATITUDE RECORD FROM ',
     &          'RDTDLM IN GRIB1.  IER = ',I3)
         STOP 134
        ENDIF
C
        CALL UNPACK(KFILDO,IPACK,IWORK,STALAT,ND5,IS0,IS1,IS2,
     &              IS4,ND7,MISSP,MISSS,3,L3264B,IER)
        NSTA1=IS4(3)
        IF(IER.NE.0)THEN
         WRITE(KFILDO,134)IER
         STOP 1344
        ENDIF
C
C        NOW GET THE LONGITUDE 
C
        JD1(1)=400007000
        CALL RDTDLM(KFILDO,KFILRA(1),RACESS(1),JD1,IPACK,ND5,NSTA2,
     &              L3264B,IER)
        IF(IER.NE.0)THEN
         WRITE(KFILDO,135)IER
 135     FORMAT(/'****  ERROR GETTING LONGITUDE RECORD FROM ',
     &          'RDTDLM IN GRIB1.  IER = ',I3)
         STOP 135
        ENDIF
C
        CALL UNPACK(KFILDO,IPACK,IWORK,STALON,ND5,IS0,IS1,IS2,
     &              IS4,ND7,MISSP,MISSS,3,L3264B,IER)
        NSTA2=IS4(3)
        IF(IER.NE.0)THEN
         WRITE(KFILDO,135)IER
         STOP 1355
        ENDIF
C
C        NOW MAKE SURE THE NUMBER OF STATIONS RETURNED FROM THE 
C        THREE FETCHES IS THE SAME
C
        IF((NSTA.NE.NSTA1).AND.(NSTA.NE.NSTA2))THEN
         WRITE(KFILDO,136)NSTA,NSTA1,NSTA2
 136     FORMAT(/'****  THE STATION COUNTS DO NOT MATCH FROM THE ',
     &           'FORECAST FILE IN GRIB1.  NSTA = ',I5,'NSTA1 = ',
     &           I5,'NSTA2 = ',I5)
        ENDIF
       ENDIF
C      
C        IF THE NUMBER OF STATIONS READ EXCEEDS THE MAXIMUM NUMBER      
C        ALLOWED, STOP.                                                 
C                                                                       
        IF(NSTA.GT.ND5) THEN
         WRITE(KFILDO,140) NSTA,ND5
 140     FORMAT(' THE NUMBER OF STATIONS READ ',I5, ' EXCEEDS ',
     1          'THE MAXIMUM NUMBER ALLOWED ',I5)
         CALL W3TAGE('TDL_RA2GRIB')
         STOP 140
        ENDIF
C                                                                       
C        ECHO BACK THE STATIONS FOUND ON THE MOSMAT                     
C                                                                       
      IF(IPRT.GE.1) WRITE(KFILDO,145) NSTA
 145   FORMAT(' YOU HAVE REQUESTED DATA FOR THE FOLLOWING ',I4,
     &         ' STATIONS.',/,' HERE ARE THEIR CALL LETTERS, ',
     &         'LATITUDE AND LONGITUDE: ')
      IF(IPRT.GE.1)WRITE(KFILDO,146)(CCALL(I,1),STALAT(I),
     &                               STALON(I),I=1,NSTA)
 146   FORMAT(/,(' ',A8,2F8.2))
C
C        READ AND PROCESS UNIT NUMBER AND FILE NAME FOR READING
C        VARIABLE LIST.
C
      CALL RDSNAM(KFILDI,KFILDO,KFILP,PRENAM,IZERO,IZERO,1,N,'OLD',
     &            'FORMATTED',IP,IER)
      IF(IER.NE.0)ISTOP=ISTOP+1
      WRITE(KFILDO,1551)KFILP,PRENAM
 1551  FORMAT(/' VARIABLE LIST DATA SET, UNIT AND NAME.'/
     1       (' ',I4,2X,A60))
C
C        READ AND PROCESS UNIT NUMBER FOR THE PREDICTOR CONSTANTS
C        DIRECTORY.
C
      CALL RDSNAM(KFILDI,KFILDO,KFILCP,CONNAM,IZERO,IZERO,1,N,'OLD',
     1            'FORMATTED',IP,IER)
      IF(IER.NE.0)ISTOP=ISTOP+1
      IF(KFILCP.NE.0)WRITE(KFILDO,155)KFILCP,CONNAM
 155  FORMAT(/' VARIABLE CONSTANT DIRECTORY, UNIT AND NAME.'/
     1       (' ',I4,2X,A60))
C         
C        CHECK POSSIBLE INCONSISTENCY OF RANDOM ACCESS UNIT
C        NUMBERS WITH OTHERS USED BY THE PROGRAM.  THIS SHOULD 
C        PROTECT THE RANDOM ACCESS DATA SETS IN RACESS( )
C        FROM BEING OVERWRITTEN.
C
 160  DO 170 J=1,NUMRA
      IF(KFILRA(J).NE.KFILDT  .AND.
     1   KFILRA(J).NE.KFILD(1).AND.
     2   KFILRA(J).NE.KFILD(2).AND.
     3   KFILRA(J).NE.KFILGD  .AND.
     4   KFILRA(J).NE.KFILLW  .AND.
     5   KFILRA(J).NE.KFILGB  .AND.
     6   KFILRA(J).NE.KFILP   .AND.
     7   KFILRA(J).NE.KFILCP  .AND.
     8   KFILRA(J).NE.KFILDO)GO TO 170
         WRITE(KFILDO,165)
 165  FORMAT(/' ****INCONSISTENCY IN INPUT UNIT NUMBERS IN KFILRA( )',
     1        ' WITH ONE OF THE OTHER UNIT NUMBERS.',
     2        '     STOP IN INTGRIB AT 165')
      CALL W3TAGE('INTGRIB')
      STOP 165
C
 170  CONTINUE
C
C        CHECK THAT THE OUTPUT KFILGP IS NOT THE SAME AS INPUT
C        UNIT NUMBERS.
C
      IF(KFILGB.NE.KFILDT  .AND.
     1   KFILGB.NE.KFILD(1).AND.
     2   KFILGB.NE.KFILD(2).AND.
     3   KFILGB.NE.KFILP   .AND.
     4   KFILGB.NE.KFILCP)GO TO 176
         WRITE(KFILDO,175)
 175  FORMAT(/' ****INCONSISTENCY OF INPUT UNIT NUMBER FOR GRIB FILE',
     1        ' WITH ONE OF THE OTHER UNIT NUMBERS.',
     2        /'     STOP IN INTGRIB AT 175')
      CALL W3TAGE('INTGRIB')
      STOP 175
 176  CONTINUE
C
C        THE ERROR RETURNED FROM THIS CODE IS THE NUMBER OF NON-FATAL
C        ERRORS FROM RDSNAM AND RDSTAD.  
      IER=ISTOP
      RETURN
C 
C        ERROR STOP BELOW IS FOR ERRORS READING CONTROL INFORMATION INPUT.
 900  CALL IERX(KFILDO,KFILDO,IOS,'INTGRIB',STATE)
      CALL W3TAGE('INTGRIB')
      STOP 9999
      RETURN
      END
