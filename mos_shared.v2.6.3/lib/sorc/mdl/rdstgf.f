      SUBROUTINE RDSTGF(KFILDO,IP4,IP5,KFILD,IDUP,CCALL,
     1                  NAME,NELEV,IWBAN,STALAT,STALON,IFOUND,
     2                  NGP,ND1,KGP,NSTA,IER)
C 
C        SEPTEMBER 2003   GLAHN   TDL   MOS-2000
C        OCTOBER   2003   GLAHN   MADE TIMPR /D OPTIONAL 
C
C        PURPOSE 
C            TO READ A GRIDPOINT LIST AND ASSOCIATED INFORMATION FROM A
C            GRIDPOINT DIRECTORY IN ONE OR MORE GROUPS AND RETURN THE
C            LIST IN THE ORDER READ BY GROUP.  THE GRIDPOINT LIST
C            IS PUT INTO CCALL( ).  THE LIST (8 CHARACTER IDS)
C            CAN BE ON THE DEFAULT INPUT FILE, OR CAN BE ON A SEPARATE
C            FILE, BUT THE LIST CANNOT BE ON THE SAME FILE AS
C            THE DIRECTORY.  THE CALL TO RDC IS SET TO READ UP TO 
C            NT = 7 VALUES PER RECORD ACCORDING TO THE FORMAT 
C            (7(A8,1X)); HOWEVER, THE RECORD NEED NOT HAVE THAT MANY 
C            VALUES.  THIS ROUTINE IS USED FOR READING A COMPLETE LIST
C            COMPOSED OF ONE OR MORE GROUPS.  READING STOPS WHEN AN
C            EMPTY SET IN ENCOUNTERED.  DUPLICATE GRIDPOINTS WILL NOT 
C            BE SEARCHED FOR.  A DIRECTORY IS READ AND THE LIST
C            MATCHED WITH THE DIRECTORY ENTRIES.  WHEN FOUND, THE
C            ENTRIES IN NAME( ), NELEV( ), IWBAN( ), STALAT( ), AND
C            STALON( ). ARE FILLED.  MANY OF THESE MAY BE BLANK
C            FOR GRIDPOINT VALUES, BUT THE DIRECTORY FORMAT IS THE
C            SAME AS FOR STATION CALL LETTERS.
C
C            NOTE:  RDSTGF IS FOR IDS OF A GRIDDED NATURE AND CCALL( )
C                   IS FILLED INSTEAD OF CCALL( ,L), (L=1,6) AS
C                   RDSTGN DOES.  CCALL( ) WILL BE CCALL(1,1) IN THE
C                   CALLING PROGRAMS TO MAINTAIN CONSISTENCY WITH 
C                   OTHER MOS-200 PROGRAMS.
C
C                   FOR EFFICIENCY, DUPLICATES ARE NOT ALLOWED, AND
C                   IT IS ASSUMED THE LIST IN CCALL( ) IS IN SOMEWHAT
C                   THE SAME ORDER AS THE DIRECTORY.
C
C        DATA SET USE 
C            KFILDO   - DEFAULT UNIT NUMBER FOR OUTPUT (PRINT) FILE.
C                       (OUTPUT) 
C            IP4      - UNIT NUMBER FOR OUTPUT OF GRIDPOINT VALUES.
C                       (OUTPUT)
C            IP5      - UNIT NUMBER FOR OUTPUT OF DIRECTORY INFORMATION
C                       (OUTPUT) 
C            KFILD(J) - UNIT NUMBER FROM WHICH TO READ GRIDPOINT LIST
C                       (J=1) AND GRIDPOINT DIRECTORY (J=2).  IT IS 
C                       ASSUMED FILES HAVE BEEN OPENED.  (INPUT) 
C 
C        VARIABLES 
C              KFILDO = DEFAULT UNIT NUMBER FOR OUTPUT (PRINT) FILE.
C                       (INPUT) 
C                 IP4 = INDICATES WHETHER (>0) OR NOT (=0) THE GRIDPOINT 
C                       LIST WILL BE WRITTEN TO UNIT IP4.  IF THERE ARE
C                       INPUT ERRORS, THE GRIDPOINT LIST WILL BE WRITTEN
C                       TO THE DEFAULT OUTPUT FILE UNIT KFILDO AS WELL 
C                       AS TO UNIT IP4.  (INPUT)
C                 IP5 = INDICATES WHETHER (>0) OR NOT (=0) THE GRIDPOINT 
C                       DIRECTORY INFORMATION WILL BE WRITTEN TO UNIT
C                       IP5.  IF THERE ARE INPUT ERRORS, THE GRIDPOINT
C                       LIST WILL BE WRITTEN TO THE DEFAULT OUTPUT FILE
C                       UNIT KFILDO AS WELL AS TO UNIT IP5.  (INPUT) 
C            KFILD(J) = UNIT NUMBER FROM WHICH TO READ GRIDPOINT LIST
C                       (J=1) AND GRIDPOINT DIRECTORY (J=2).  IT IS 
C                       ASSUMED FILES HAVE BEEN OPENED.  (INPUT) 
C                IDUP = 2 WHEN DUPES ARE ALLOWED;  RDSTGF DOES NOT
C                         ACCOMMODATE DUPLICATES.
C                       3 WHEN DUPES ARE NOT ALLOWED.  THIS SHOULD BE
C                         THE VALUE WHEN RDSTGF IS ENTERED.
C                       (INPUT)
C            CCALL(K) = 8-CHARACTER GRIDPOINTS FOR GRID DEVELOPMENT TO
C                       PROVIDE OUTPUT FOR (K=1,NSTA).  (CHARACTER*8)
C                       (OUTPUT)
C             NAME(K) = NAMES OF GRIDPOINTS (K=1,NSTA)  (CHARACTER*20)
C                       (OUTPUT)
C            NELEV(K) = ELEVATION OF GRIDPOINTS (K=1,NSTA).  (OUTPUT)
C           STALAT(K) = LATITUDE OF GRIDPOINTS (K=1,NSTA).  (OUTPUT)
C           STALON(K) = LONGITUDE OF GRIDPOINTS (K=1,NSTA).  (OUTPUT)
C            IWBAN(K) = WBAN NUMBERS OF GRIDPOINTS (K=1,NSTA).  (OUTPUT) 
C           IFOUND(K) = USED TO KEEP TRACK OF THE GRIDPOINTS FOUND IN THE
C                       DIRECTORY (K=1,NSTA).  (INTERNAL) 
C                       0 = NOT YET FOUND.
C                       OTHERWISE, THE NUMBER OF TIMES A STATION HAS
C                       BEEN FOUND IN THE DIRECTORY.  VALUES GT 1
C                       WOULD OCCUR ONLY IF THERE WERE DUPLICATE ENTRIES
C                       IN THE DIRECTORY.
C                       (INTERNAL)
C              NGP(J) = SIZE OF KGP GROUPS OF GRIDPOINTS (J=1,KGP), MAX
C                       OF ND1.  (OUTPUT)
C                 ND1 = SIZE OF ARRAYS CCALL( ), NAME( ),
C                       NELEV( ), IWBAN( ), STALAT( ), STALON( )
C                       IFOUND( ), AND NGP( ).  THIS IS THE MAXIMUM
C                       NUMBER OF GRIDPOINTS IN THE LIST TO BE RETURNED.
C                       (INPUT)
C                 KGP = THE NUMBER OF VALUES RETURNED IN NGP( ).
C                       (OUTPUT) 
C                NSTA = THE TOTAL NUMBER OF GRIDPOINTS RETURNED IN
C                       CCALL( ) AND OTHER OUTPUT ARRAYS.  (OUTPUT)
C                 IER = STATUS RETURN.  (OUTPUT)
C                        0  = GOOD RETURN.
C                        20 = ERROR OR EOF READING KFILD(1) IN RDC
C                             (ABORTS)
C                        21 = TOO MANY GRIDPOINTS FOR CCALL(ND1) IN RDC
C                             (ABORTS)
C                        33 = ERROR ON UNIT KFILD(2) WHEN READING THE
C                             DIRECTORY (ABORTS)
C                        34 = TOO MANY GROUPS IN LIST.
C                       190 = IDUP NOT EQ 3. 
C            CTEMP( ) = TEMPORARY ARRAY THAT MUST BE OF AT LEAST SIZE
C                       NT.  (CHARACTER*8)  (INTERNAL) 
C                  NT = NUMBER OF WORDS PER RECORD INDICATED IN FORMAT.
C                       SET BY PARAMETER, BECAUSE IS IS A DIMENSION.  
C                       (INTERNAL)
C              CCALLT = TO READ GRIDPOINT VALUES INTO FROM DIRECTORY.
C                       (CHARACTER*8) (INTERNAL)
C               NAMET = TO READ NAME INTO FROM DIRECTORY.
C                       (CHARACTER*20)  (INTERNAL)
C              NELEVT = TO READ ELEVATION INTO FROM DIRECTORY.
C                       (INTERNAL)
C              IWBANT = TO READ WBAN NUMBER INTO FROM DIRECTORY.
C                       (INTERNAL)
C              SIGNLA = SIGN OF THE LATITUDE AS READ FROM THE DIRECTORY.
C                       WILL BE "N" FOR NORTH LATITUDE OR "S" FOR SOUTH
C                       LATITUDE.  WHEN "S", THE LATITUDE WILL BE STORED
C                       AS NEGATIVE.  (CHARACTER*1)  (INTERNAL)
C              XLATDD = LATITUDE IN DEGREES.  (INTERNAL)
C              SIGNLO = SIGN OF THE LONGITUDE AS READ FROM THE
C                       DIRECTORY.  WILL BE "E" FOR EAST LONGITUDE OR
C                       "W" FOR WEST LONGITUDE.  WHEN "E", THE LONGITUDE
C                       IS ADJUSTED SO THAT ALL VALUES ARE WEST.
C                       (CHARACTER*1)  (INTERNAL)
C              XLONDD = LONGITUDE IN DEGREES.  (INTERNAL)
C               NSTA1 = THE NUMBER OF GRIDPOINTS READ IN A GROUP, RETURNED
C                       FROM RDC.  (INTERNAL)
C              BLANK8 = 8 BLANKS.  (CHARACTER*8)  (INTERNAL)
C               BLANK = 20 BLANKS   (CHARACTER*20)  (INTERNAL)
C              KFOUND = THE NUMBER OF GRIDPOINTS FOUND IN THE 
C                       DIRECTORY.  WHEN KFOUND = NSTA, THE READING OF
C                       THE DIRECTORY CAN STOP.  (INTERNAL)
C               JREAD = COUNTS THE NUMBER OF DIRECTORY ENTRIES READ.
C                       (INTERNAL)
C        1         2         3         4         5         6         7 X
C 
C        NONSYSTEM SUBROUTINES CALLED 
C            RDC. 
C
      PARAMETER (NT=7)
C
      CHARACTER*1 SIGNLA,SIGNLO
      CHARACTER*8 CCALL(ND1),CTEMP(NT),BLANK8,CCALLT
      CHARACTER*20 NAME(ND1),NAMET,BLANK,DUMMYNAME
C
      DIMENSION NELEV(ND1),IWBAN(ND1),STALAT(ND1),STALON(ND1),
     1          IFOUND(ND1),NGP(ND1)
      DIMENSION KFILD(2)
C
      DATA BLANK8/' '/
      DATA BLANK/' '/
      DATA NAMET/' '/
      DATA DUMMYNAME/' '/
C
D     CALL TIMPR(KFILDO,KFILDO,'START RDSTGF        ')
C
      IER=0
      KGP=1
      NSTA=0
C
C        CHECK FOR VALUE OF IDUP; IT SHOULD BE 3)
C
      IF(IDUP.NE.3)THEN
         WRITE(KFILDO,102)IDUP
 102     FORMAT(/' ****ERROR IN RDSTGF.  IDUP =', I4,'; SHOULD BE 3.')
         IER=190
         GO TO 160
      ENDIF
C 
C
C        INITIALIZE ARRAYS.
C
      DO 103 K=1,ND1
      CCALL(K)=BLANK8
      IFOUND(K)=0
      NGP(K)=0
 103  CONTINUE
C
C        KFILD(1) CANNOT EQUAL KFILD(2).
C
      IF(KFILD(1).EQ.KFILD(2))THEN
         WRITE(KFILDO,104)KFILD(1)
 104     FORMAT(/,' ****KFILD(1) AND KFILD(2) ARE BOTH =',I3,
     1           '.  CHANGE ONE OR THE OTHER.')
      ENDIF
C
C        READ GRIDPOINT LIST FROM UNIT NUMBER KFILD(1).
C     
 105  CALL RDC(KFILDO,IP4,KFILD(1),CCALL(NSTA+1),ND1-NSTA,CTEMP,NT,
     1         '(7(A8,1X))',NSTA1,'99999999',IER)
C        NT = 7 WITH FMT = '(7(A8,1X))' MEANS THAT UP TO 7 VALUES WILL
C        BE READ PER RECORD.  FEWER CAN BE PRESENT.  IF THE LAST
C        VALUE IS NOT COMPLETE, IT WILL BE BLANK FILLED ON THE RIGHT.
C        IER FROM RDC WILL BE OVERWRITTEN IF THERE ARE DUPLICATE
C        GRIDPOINTS IN THE LIST, OR IF A GRIDPOINT CANNOT BE FOUND
C        IN THE DIRECTORY. WHEN IER NE 0, A DIAGNOSTIC WILL
C        HAVE BEEN WRITTEN BY RDC.
C
      IF(IER.NE.0.AND.NSTA1.NE.0)THEN
C
         IF(KGP.EQ.1)THEN
            WRITE(KFILDO,110)NSTA1,KGP,(CCALL(K),K=NSTA+1,NSTA+NSTA1)
 110        FORMAT(/,' ',I7,' GRIDPOINTS INPUT FOR GROUP NO.',I7/
     1            (8X,13(1X,A8)))
         ELSE
            WRITE(KFILDO,111)NSTA1,KGP,(CCALL(K),K=NSTA+1,NSTA+NSTA1)
 111        FORMAT(' ',I7,' GRIDPOINTS INPUT FOR GROUP NO.',I7/
     1            (8X,13(1X,A8)))
         ENDIF
C
      ENDIF
C
      IF(NSTA1.EQ.0)GO TO 120
C        AN EMPTY SET TERMINATES READING.
      IF(IP4.EQ.0)GO TO 115
      IF(IP4.EQ.KFILDO.AND.IER.NE.0.AND.NSTA1.NE.0)GO TO 115
C        GRIDPOINT LIST MAY BE WRITTEN TWICE WHEN THERE ARE ERRORS
C        DETECTED, ONCE TO THE DEFAULT OUTPUT FILE AND ONCE TO UNIT
C        IP4.
C
      IF(KGP.EQ.1)THEN
         WRITE(IP4,110)NSTA1,KGP,(CCALL(K),K=NSTA+1,NSTA+NSTA1)
      ELSE
         WRITE(IP4,111)NSTA1,KGP,(CCALL(K),K=NSTA+1,NSTA+NSTA1)
      ENDIF
C
 115  IF(KGP.LE.ND1)GO TO 117
      WRITE(KFILDO,116)ND1
 116  FORMAT(/,' ****TOO MANY GROUPS IN RDSTGF FOR DIMENSION ND1 =',I7)
      IER=34
      KGP=KGP-1
      GO TO 160
C
 117  NGP(KGP)=NSTA1
      NSTA=NSTA+NSTA1
      IF(IER.NE.0)GO TO 160
C        WHEN IER NE 0 FROM RDC, NO USE OF ENTERING RDC AGAIN.
      KGP=KGP+1
      GO TO 105
C
C        MUST DECREASE KGP, BECAUSE IS IS THE VALUE OF THE NEXT
C        ENTRY INTO NGP( ).
C
 120  KGP=KGP-1
C
D     CALL TIMPR(KFILDO,KFILDO,'AFTER READING LIST  ')
C
C        AT THIS POINT, CCALL( ) HAS BEEN FILLED.  NOW READ
C        DIRECTORY ENTRIES AND MATCH WITH LIST IN CCALL( ).
C
      REWIND(UNIT=KFILD(2))
C        IT WOULD BE UNUSUAL FOR THE DIRECTORY TO BE READ
C        MORE THAN ONCE.  IF RDSTGF WERE ENTERED MORE
C        THAN ONCE, THE DIRECTORY FILE SHOULD BE AT ITS
C        BEGINNING.  THE FILE IS NOT CLOSED AT THE END
C        OF RDSTGF TO ALLOW FOR THAT POSSIBILITY.
      KL=1
      KSTART=KL
      KEND=NSTA
      KFOUND=0
      JREAD=0
      
 121  IF(KFOUND.GE.NSTA)THEN
         WRITE(KFILDO,1215)NSTA,JREAD
 1215    FORMAT(/' ALL ',I7,' GRIDPOINTS FOUND.  DIRECTORY READ',
     1           I7,' TIMES.')
         GO TO 1405
      ENDIF
C
      CCALLT=BLANK8
      NAMET(1:20)=BLANK(1:20)
D     WRITE(KFILDO,1217)
D1217 FORMAT(/' READING DIRECTORY')
      READ(KFILD(2),122,IOSTAT=IOS,ERR=123,END=1405)CCALLT,
     1     NAMET(1:17),NAMET(19:20),NBLOCK,
     2     NELEVT,SIGNLA,XLATDD,SIGNLO,XLONDD,ITIMEZ,ITYPE,
     3     OPEN,IDATE,IWBANT
 122  FORMAT(A8,10X,A17,4X,A2,1X,I6,1X,I5,1X,A1,F7.4,1X,A1,
     1       F8.4,1X,I3,1X,I1,1X,A1,37X,I10,1X,I5)
      JREAD=JREAD+1
      GO TO 125
C
C        ERROR READING DIRECTORY.
C
 123  WRITE(KFILDO,124)IOS
      IF(IP4.NE.0.AND.IP4.NE.KFILDO)WRITE(IP4,124)IOS
      IF(IP5.NE.0.AND.IP5.NE.KFILDO.AND.IP4.NE.IP5)WRITE(IP5,124)IOS
 124  FORMAT(/,' ****ERROR READING GRIDPOINT DIRECTORY IN RDSTGF.',
     1         '  IOSTAT =',I5)
      IER=33
      GO TO 1405
C
C        A GRIDPOINT LIST RESIDES IN CCALL( ).  DETERMINE WHETHER THIS
C        DIRECTORY ENTRY CCALLT MATCHES A VALUE IN CCALL( ).  IF SO,
C        ANY INFORMATION IN THE DIRECTORY WILL BE PUT INTO THE
C        APPROPRIATE ARRAYS.  IF NOT, GRIDPOINTS WILL RETAIN THEIR
C        PLACE IN THE LIST BUT WILL HAVE NO AUXILIARY INFORMATION
C        (E.G., LATITUDES AND LONGITUDES).  A SEARCH FOR DUPLICATE
C        GRIDPOINT VALUES WILL NOT BE MADE.
C
C        CHECK FOR MATCH OF GRIDPOINTS.
C
 125  IF(CCALLT.EQ.CCALL(KL))THEN
C
         NAME(KL)=NAMET
         IWBAN(KL)=IWBANT
         NELEV(KL)=NELEVT
         STALAT(KL)=XLATDD
         IF(SIGNLA.EQ.'S')STALAT(KL)=-STALAT(KL)
C           ABOVE STATEMENT MAKES SOUTH LATITUDE NEGATIVE.
         STALON(KL)=XLONDD
         IF(SIGNLO.EQ.'E')STALON(KL)=360.-STALON(KL)     
C           ABOVE STATEMENT MAKES ALL LONGITUDES WEST, RANGE 0-360.
         IF(IFOUND(KL).EQ.0)KFOUND=KFOUND+1
C           COUNT THIS STATION FOUND ONLY THE FIRST TIME.
         IFOUND(KL)=IFOUND(KL)+1
         KL=KL+1
         KSTART=KL
         KEND=NSTA
C         
         IF(KL.GT.KEND)THEN
            KL=1
         ENDIF
C
         GO TO 121
C 
      ELSE
D        WRITE(KFILDO,135)KL,KSTART,KEND
D135     FORMAT(' AT 135 IN RDSTGF--KL,KSTART,KEND',3I7)
         KL=KL+1
C
         IF(KL.GT.KEND)THEN
            KL=1
C
            IF(KSTART.EQ.1)THEN
C                 THE COMPLETE LIST HAS BEEN SEARCHED.
               KEND=NSTA
               GO TO 121
            ELSE
C                 THE COMPLETE LIST HAS NOT BEEN SEARCHED.
               KEND=KSTART-1            
               KSTART=KL
               GO TO 125
            ENDIF
C
         ELSE
C              THE NORMAL SEARCH LOOP.
            GO TO 125
         ENDIF
C
      ENDIF
C
C        WRITE GRIDPOINT LISTS TO KFILDO WHEN THERE HAS BEEN AN 
C        ERROR AND TO IP5 AS DESIRED.  WRITING IS BY GROUP UNLESS
C        SINGLE GRIDPOINTS ARE BEING DEALT WITH, IN
C        WHICH CASE KGP = NSTA.  NOTE THAT ONLY ONE GROUP
C        OF TWO GRIDPOINTS WILL CAUSE LISTING BY GROUP.
C
 1405 ISTART=0
D     CALL TIMPR(KFILDO,KFILDO,'SEARCH COMPLETED    ')
C
      DO 158 M=1,KGP
C
      DO 157 J=ISTART+1,ISTART+NGP(M)
C
      IF(IFOUND(J).EQ.0)THEN
C
         WRITE(KFILDO,150)CCALL(J)
 150     FORMAT(' ',15X,A8,' NOT FOUND IN DIRECTORY; MAY BE A',
     1          ' DUPLICATE.  TO ACCEPT DUPLICATES, USE',
     2          ' IDUP = NEW = 2.')
         GO TO 157
C
      ELSEIF(IFOUND(J).GT.1)THEN
         WRITE(KFILDO,151)CCALL(J),IFOUND(J)
 151     FORMAT(' ',15X,A8,' HAS',I4,' DUPLICATES IN DIRECTORY;',
     1          ' THIS SHOULD NOT OCCUR WITH IDUP = 3 IN RDSTGR.')
      ENDIF
C
      IF(IP5.NE.0)THEN
C
C           WRITE SINGLE HEADER FOR SINGLE GRIDPOINT LIST.
C
         IF(KGP.EQ.NSTA.AND.M.EQ.1.AND.J.EQ.1)THEN
            WRITE(IP5,152)NSTA
 152        FORMAT(/,' ',I7,
     1        ' GRIDPOINTS AND DIRECTORY INFORMATION (IF NOT',
     2        ' LISTED BY GROUP, IMPLIES ONE GRIDPOINT PER GROUP)'/
     3        '               GRIDPOINT     NAME           ',
     4        '     LAT     LON   ELEV')
C
C           WRITE HEADER FOR EACH GROUP OF GRIDPOINTS.
C
         ELSEIF(KGP.NE.NSTA.AND.J.EQ.ISTART+1)THEN
            WRITE(IP5,153)NGP(M)
 153        FORMAT(/,' ',I7,
     1        ' GRIDPOINTS AND DIRECTORY INFORMATION'/
     2        '               GRIDPOINT     NAME           ',
     3        '     LAT     LON   ELEV')
C
         ENDIF
C
         IF(J.EQ.ISTART+1.AND.KGP.NE.NSTA)THEN
            WRITE(IP5,154)M,CCALL(J),NAME(J),
     1        STALAT(J),STALON(J),NELEV(J)
 154        FORMAT(' GROUP',I7,3X,A8,1X,A20,2F8.2,I6)
         ELSE
            WRITE(IP5,155)CCALL(J),NAME(J),
     1           STALAT(J),STALON(J),NELEV(J)
 155        FORMAT(' ',15X,A8,1X,A20,2F8.2,I6)
         ENDIF
C
      ENDIF
C
 157  CONTINUE
C
      ISTART=ISTART+NGP(M)
 158  CONTINUE
C
D     CALL TIMPR(KFILDO,KFILDO,'END RDSTGF          ')
C
 160  RETURN
      END
