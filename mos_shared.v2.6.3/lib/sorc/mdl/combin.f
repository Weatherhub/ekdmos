      SUBROUTINE COMBIN(KFILDO,KFIL10,IP12,IP16,NFIRST,
     1                  ID,IDPARS,THRESH,JD,NDATE,
     2                  KFILRA,RACESS,NUMRA,
     3                  ICALL,CCALL,ICALLD,CCALLD,NAME,
     4                  NELEV,STALAT,STALON,
     5                  ITIMEZ,ISDATA,SDATA,SDATA1,L1DATA,DIR,ND1,NSTA,
     6                  NGRIDC,NGRID,ND11,NSLAB,IPACK,IWORK,DATA,ND5,
     7                  LSTORE,ND9,LITEMS,CORE,ND10,LASTL,
     8                  NBLOCK,LASTD,NSTORE,NFETCH,
     9                  IS0,IS1,IS2,IS4,ND7,
     A                  FD1,FD2,FD3,FD4,FD5,FD6,FD7,
     B                  FDVERT,FDTIME,FDSINS,FDMS,ND2X3,
     C                  ISTAV,L3264B,L3264W,MISTOT,IER)
C 
C        DECEMBER  1996   GLAHN   TDL   MOS-2000 
C        JUNE      1997   GLAHN   SLIGHT CHANGE TO COMMENTS, NOT CODE
C                                 D COMPILE OPTION REMOVED
C        JANUARY   1998   GLAHN   ADDED SUBSTITUTE STATIONS IN CCALL( , )
C        MAY       1998   GLAHN   ADDED ITIMEZ( ) 
C        NOVEMBER  1998   GLAHN   CHANGED DIMENSIONS OF CCALLD( )
C                                 AND ICALLD( , ) FROM ND1 TO ND5
C        AUGUST    1999   GLAHN   ADDED IP12 TO CALL AND CALL TO OPTION
C        FEBRUARY  2002   GLAHN   CHANGED ND12 TO NUMRA IN ONE COMMENT
C        MAY       2002   GLAHN   ADDED NAME( ) AND NGRID TO CALL AND
C                                 CALL TO OPTION
C        JANUARY   2003   WEISS   CHANGED ND5 TO ND2X3
C                                 NOTE: THIS CODE WAS NOT TESTED
C                                 FOR THIS CHANGE
C        APRIL     2003   GLAHN   SET DIMENSIONS OF IPACK( ), IWORK( )
C                                 AND DATA( ), CCALLD( , ), AND
C                                 ICALLD( , ) TO ND5; SPELL CHECK
C        MAY       2003   GLAHN   REARRANGED DIMENSION STATEMENTS
C        JUNE      2003   GLAHN   ADDED TEST ON IER AFTER GSITB
C        JUNE      2003   GLAHN   MOVED IP12,IP16 IN CALL
C                                
C        PURPOSE 
C            ************DEMONSTRATION PROGRAM*********************
C            TO DEMONSTRATE THE FACILITY TO USE DATA FROM TWO
C            DIFFERENT MODELS TO COMPUTE A PREDICTOR.  SWITCHING TO 
C            COMBIN IS MADE WHEN THE CCC IN IN THE 300-399 RANGE.
C            IF THIS FACILITY WERE TO ACTUALLY BE USED, COMBIN
C            COULD BECOME A SWITCHER SIMILAR TO L1D AND L2D.  THIS
C            ROUTINE COMPUTES THE AVERAGE, DIFFERENCE, MAX, OR MIN
C            FOR STATION VALUES FROM TWO FIELDS, THE FIELDS BEING
C            IDENTICAL EXCEPT THEY CAN COME FROM TWO DIFFERENT MODELS.
C            THE COMBINATION IS MADE AFTER INTERPOLATION, SO THE GRIDS
C            DO NOT HAVE TO BE DEFINED THE SAME.  IF THE COMPUTATION
C            INVOLVES GOING BACK IN TIME FOR THE MODEL RUN (IDPARS(9)
C            NE 0), THEN THE MODEL DATA FOR THAT PREVIOUS TIME MUST
C            BE AVAILABLE TO GFETCH.  TO MAKE THIS HAPPEN, MAKE SURE
C            BOTH MODELS INVOLVED HAVE SOME OTHER VARIABLE WITH THE
C            RR OF THE SAME VALUE SO THAT THE DATA WILL HAVE BEEN
C            SAVED FOR THE FIRST DAY.  COMBIN IS CALLED FROM OPTION,
C            AND CALLS OPTION.  NOTE THAT BY DEFINING THE VARIABLES
C            IN A ROUTINE SUCH AS COMBIN, ANY TWO VARIABLES FROM
C            DIFFERENT MODELS CAN BE USED, EVEN TO ONE OF THE FIELDS
C            BEING CONSTANT DATA.  THE SECOND DIGIT OF CCC IN 
C            IDPARS(1) DETERMINES WHETHER THE SUM, DIFFERENCE,
C            MAX, OR MIN IS COMPUTED.
C
C            NOTE THAT SETPLN PROBABLY DOES NOT ACCOUNT CORRECTLY
C            FOR A COMBINTION OF MODELS, AND NO SPECIAL PLAIN 
C            LANGUAGE POSITION HAS BEEN DESIGNATED.  THEREFORE,
C            SCALING WILL BE THE DEFAULT = 0 (ROUNDED TO WHOLE UNITS).
C
C        DATA SET USE 
C            KFILDO - DEFAULT UNIT NUMBER FOR OUTPUT (PRINT) FILE.  (OUTPUT) 
C            KFIL10 - UNIT NUMBER OF TDL MOS-2000 FILE SYSTEM ACCESS.
C                     (INPUT-OUTPUT) 
C 
C        VARIABLES 
C              KFILDO = DEFAULT UNIT NUMBER FOR OUTPUT (PRINT) FILE. (INPUT) 
C              KFIL10 = UNIT NUMBER OF TDL MOS-2000 FILE SYSTEM ACCESS.
C                       (INPUT)
C              NFIRST = 1 FOR THE 1ST DATE.
C               ID(J) = THE PREDICTOR ID (J=1,4).  (INPUT)
C           IDPARS(J) = THE PARSED, INDIVIDUAL COMPONENTS OF THE PREDICTOR
C                       ID CORRESPONDING TO ID( ) (J=1,15).  (INPUT)
C                       J=1--CCC (CLASS OF VARIABLE),
C                       J=2--FFF (SUBCLASS OF VARIABLE),
C                       J=3--B (BINARY INDICATOR),
C                       J=4--DD (DATA SOURCE, MODEL NUMBER),
C                       J=5--V (VERTICAL APPLICATION),
C                       J=6--LBLBLBLB (BOTTOM OF LAYER, 0 IF ONLY 1 LAYER),
C                       J=7--LTLTLTLT (TOP OF LAYER),
C                       J=8--T (TRANSFORMATION),
C                       J=9--RR (RUN TIME OFFSET, ALWAYS + AND BACK IN TIME),
C                       J=10--OT (TIME APPLICATION),
C                       J=11--OH (TIME PERIOD IN HOURS),
C                       J=12--TAU (PROJECTION IN HOURS),
C                       J=13--I (INTERPOLATION TYPE),
C                       J=14--S (SMOOTHING INDICATOR), AND
C                       J=15--G (GRID INDICATOR).
C              THRESH = THE BINARY THRESHOLD ASSOCIATED WITH IDPARS( ).
C                       (INPUT)
C               JD(J) = THE BASIC INTEGER PREDICTOR ID (J=1,4).
C                       THIS IS THE SAME AS ID(J), EXCEPT THAT THE PORTIONS
C                       PERTAINING TO PROCESSING ARE OMITTED:
C                       B = IDPARS(3),
C                       T = IDPARS(8),
C                       I = IDPARS(13),
C                       S = IDPARS(14),
C                       G = IDPARS(15), AND
C                       THRESH.
C                       JD( ) IS USED TO IDENTIFY THE BASIC MODEL FIELDS
C                       AS READ FROM THE ARCHIVE.  (INPUT)
C               NDATE = THE DATE/TIME FOR WHICH PREDICTOR IS NEEDED.  (INPUT)
C           KFILRA(J) = HOLDS THE UNIT NUMBERS FOR ACCESSING THE MOS-2000
C                       EXTERNAL RANDOM ACCESS FILES (J=1,NUMRA).  (INPUT)
C           RACESS(J) = THE FILE NAMES CORRESPONDING TO KFILRA(J) (J=1,NUMRA).
C                       (CHARACTER*60)  (INPUT)
C               NUMRA = THE NUMBER OF UNIT NUMBERS AND NAMES IN KFILRA( )
C                       AND RACESS( ).  (INPUT)
C        ICALL(L,K,J) = 8 STATION CALL LETTERS AS CHARACTERS IN AN INTEGER
C                       VARIABLE (L=1,L3264W) (K=1,NSTA) (J=1,6).
C                       EQUIVALENCED TO CCALL( , )  (INPUT)
C          CCALL(K,J) = 8-CHARACTER STATION CALL LETTERS (OR GRIDPOINT
C                       LOCATIONS FOR GRID DEVELOPMENT) TO PROVIDE
C                       OUTPUT FOR (J=1) AND 5 POSSIBLE OTHER STATION
C                       CALL LETTERS (J=2,6) THAT CAN BE USED INSTEAD
C                       IF THE PRIMARY (J=1) STATION CANNOT BE FOUND 
C                       IN AN INPUT DIRECTORY (K=1,NSTA).  ALL STATION
C                       DATA ARE KEYED TO THIS LIST, EXCEPT POSSIBLY 
C                       CCALLD( ).  EQUIVALENCED TO ICALL( , , ). 
C                       (CHARACTER*8)  (INPUT)
C         ICALLD(L,K) = 8 STATION CALL LETTERS AS CHARACTERS IN AN INTEGER
C                       VARIABLE (L=1,L3264W) (K=1,ND5).
C                       EQUIVALENCED TO CCALLD( ).  (INTERNAL)
C           CCALLD(K) = 8 STATION CALL LETTERS (K=1,ND5).  USED
C                       IN L1D1 TO READ THE REGION LISTS.  (CHARACTER*8)
C                       (INTERNAL)
C             NAME(K) = NAMES OF STATIONS (K=1,NSTA).  USED IN CALL TO
C                       OPTION.  (CHARACTER*20)  (INPUT)
C            NELEV(K) = ELEVATION OF STATIONS (K=1,NSTA).
C           STALAT(K) = LATITUDE OF STATIONS (K=1,NSTA).
C           STALON(K) = LONGITUDE OF STATIONS (K=1,NSTA).
C           ITIMEZ(K) = TIME ZONE INDICATOR.  THE NUMBER OF HOURS
C                       THE STATION IS DIFFERENT FROM UTC (K=1,NSTA).
C                       (INPUT)
C           ISDATA(K) = WORK ARRAY (K=1,ND1).  (INTERNAL)
C            SDATA(K) = INTERPOLATED DATA TO RETURN, WHEN STATION DATA ARE
C                       BEING GENERATED (K=1,NSTA).  (OUTPUT)
C           SDATA1(K) = WORK ARRAY GENERALLY RESERVED FOR USE IN L2D2
C                       BUT MAY BE USED IN THIS ROUTINE (K=1,NSTA).
C                       (INTERNAL)
C           L1DATA(K) = THE ARRAY RESERVED FOR USE BY LINEARIZATION
C                       ROUTINES (K=1,NSTA). 
C          DIR(K,J,M) = THE IX (J=1) AND JY (J=2) POSITIONS ON THE GRID
C                       FOR THE COMBINATION OF GRID CHARACTERISTICS M
C                       (M=1,NGRID) AND STATION K (K=1,NSTA) IN NGRIDC( ,M).
C                       (INPUT)
C                 ND1 = MAXIMUM NUMBER OF STATIONS THAT CAN BE DEALT WITH.
C                       FIRST DIMENSION OF DIR( , , ).  (INPUT)
C                NSTA = NUMBER OF STATIONS OR LOCATIONS BEING DEALT WITH.
C                       (INPUT)
C         NGRIDC(L,M) = HOLDS THE GRID CHARACTERISTICS (L=1,6) FOR EACH GRID
C                       COMBINATION (M=1,NGRID).
C                       L=1--MAP PROJECTION NUMBER (3=LAMBERT, 5=POLAR
C                            STEREOGRAPHIC). 
C                       L=2--GRID LENGTH IN MILLIMETERS,
C                       L=3--LATITUDE AT WHICH GRID LENGTH IS CORRECT *10000,
C                       L=4--GRID ORIENTATION IN DEGREES *10000,
C                       L=5--LATITUDE OF LL CORNER IN DEGREES *10000,
C                       L=6--LONGITUDE OF LL CORNER IN DEGREES *10000.
C               NGRID = THE NUMBER OF GRID COMBINATIONS IN DIR( , , ),
C                       MAXIMUM OF ND11.  (INPUT)
C                ND11 = MAXIMUM NUMBER OF GRID COMBINATIONS THAT CAN BE
C                       DEALT WITH ON THIS RUN.  LAST DIMENSION OF
C                       NGRIDC( , ) AND DIR( , , ).  (INPUT)
C               NSLAB = THE NUMBER OF THE SLAB IN DIR( , , ) AND
C                       IN NGRIDC( , ) DEFINING THE CHARACTERISTICS
C                       OF THIS GRID.  SEE LSTORE(10, ).  FOR THE
C                       COMPUTATION ROUTINES RETURNING A GRID, THIS
C                       VALUE MUST BE OUTPUT BY GFETCH.  (OUTPUT) 
C            IPACK(J) = WORK ARRAY (J=1,ND5).  (INTERNAL)
C            IWORK(J) = WORK ARRAY (J=1,ND5).  (INTERNAL)
C             DATA(J) = ARRAY TO HOLD RETURNED DATA WHEN THE
C                       DATA ARE AT GRIDPOINTS. (J=1,ND5).  (OUTPUT)
C                 ND5 = DIMENSION OF IPACK( ), IWORK( ), AND DATA( ).
C                       (INPUT)
C         LSTORE(L,J) = THE ARRAY HOLDING INFORMATION ABOUT THE DATA 
C                       STORED (L=1,12) (J=1,LITEMS).  (INPUT-OUTPUT)
C                       L=1,4--THE 4 ID'S FOR THE DATA.
C                       L=5  --LOCATION OF STORED DATA.  WHEN IN CORE,
C                              THIS IS THE LOCATION IN CORE( ) WHERE
C                              THE DATA START.  WHEN ON DISK, 
C                              THIS IS MINUS THE RECORD NUMBER WHERE 
C                              THE DATA START.
C                       L=6  --THE NUMBER OF 4-BYTE WORDS STORED.
C                       L=7  --2 FOR DATA PACKED IN TDL GRIB, 1 FOR NOT.
C                       L=8  --THE DATE/TIME OF THE DATA IN FORMAT
C                              YYYYMMDDHH.
C                       L=9  --NUMBER OF TIMES DATA HAVE BEEN RETRIEVED.
C                       L=10 --NUMBER OF THE SLAB IN DIR( , ,L) AND
C                              IN NGRIDC( ,L) DEFINING THE CHARACTERISTICS
C                              OF THIS GRID.
C                       L=11 --THE NUMBER OF THE PREDICTOR IN THE SORTED
C                              LIST IN ID( ,N) (N=1,NPRED) FOR WHICH THIS
C                              VARIABLE IS NEEDED, WHEN IT IS NEEDED ONLY
C                              ONCE FROM LSTORE( , ).  WHEN IT IS NEEDED
C                              MORE THAN ONCE, THE VALUE IS SET = 7777.
C                       L=12 --USED INITIALLY IN ESTABLISHING MSTORE( , ).
C                              LATER USED AS A WAY OF DETERMINING WHETHER
C                              TO KEEP THIS VARIABLE.
C                 ND9 = THE SECOND DIMENSION OF LSTORE( , ).  (INPUT)
C              LITEMS = THE NUMBER OF ITEMS (COLUMNS) IN LSTORE( , ) THAT 
C                       HAVE BEEN USED IN THIS RUN.
C             CORE(J) = THE ARRAY TO STORE OR RETRIEVE THE DATA IDENTIFIED IN
C                       LSTORE( , ) (J=1,ND10).  WHEN CORE( ) IS FULL
C                       DATA ARE STORED ON DISK.  (OUTPUT)
C                ND10 = DIMENSION OF CORE( ).  (INPUT)
C               LASTL = THE LAST LOCATION IN CORE( ) USED FOR MOS-2000 INTERNAL
C                       STORAGE.  INITIALIZED TO 0 ON FIRST ENTRY TO GSTORE.
C                       ALSO INITIALIZED IN U201 IN CASE GSTORE IS NOT ENTERED.
C                       (INPUT-OUTPUT)
C              NBLOCK = THE BLOCK SIZE IN WORDS OF THE MOS-2000 RANDOM
C                       DISK FILE.  (INPUT)
C               LASTD = TOTAL NUMBER OF PHYSICAL RECORDS ON DISK FOR MOS-2000
C                       INTERNAL STORAGE.  (INPUT)
C              NSTORE = THE NUMBER OF TIMES GSTORE HAS BEEN ENTERED.  GSTORE
C                       KEEPS TRACK OF THIS AND RETURNS THE VALUE.  (OUTPUT)
C              NFETCH = THE NUMBER OF TIMES GFETCH HAS BEEN ENTERED.  GFETCH
C                       KEEPS TRACK OF THIS AND RETURNS THE VALUE.  (OUTPUT)
C              IS0(J) = MOS-2000 GRIB SECTION 0 ID'S (J=1,3).  (INTERNAL)
C              IS1(J) = MOS-2000 GRIB SECTION 1 ID'S (J=1,22+).  (INTERNAL)
C              IS2(J) = MOS-2000 GRIB SECTION 2 ID'S (J=1,12).  (INTERNAL)
C              IS4(J) = MOS-2000 GRIB SECTION 4 ID'S (J=1,4).  (INTERNAL)
C                 ND7 = DIMENSION OF IS0( ), IS1( ), IS2( ), AND IS4( ).
C                       NOT ALL LOCATIONS ARE USED.  (INPUT)
C  FD1(J),FD2(J), ETC = WORK ARRAYS (J=1,ND2X3).  THESE MAY BE USED IN
C                       ROUTINES AS 2-DIMENSIONAL ARRAYS, WHERE THE
C                       TOTAL ARRAY SIZE IS ND2*ND3=ND2X3 AS DECLARED IN
C                       THE CALLING PROGRAM.  (INTERNAL)
C           FDVERT(J) = TEMPORARY STORAGE RESERVED FOR SUBROUTINE VERTP
C                       (J=1,ND2X3).
C           FDTIME(J) = TEMPORARY STORAGE RESERVED FOR SUBROUTINE TEMEP
C                       (J=1,ND2X3).
C       FDSINS(IX,JY) = USED TO SAVE THE SIN OF THE LATITUDE IN SUBROUTINE
C                       PSMAPF (IX=1,NX) (JY=1,NY).  THE USER MUST NOT
C                       USE THIS ARRAY EXCEPT IN CALLING PSMAPF.
C                       (INPUT/OUTPUT)
C         FDMS(IX,JY) = USED TO SAVE THE MAP FACTOR IN SUBROUTINE
C                       PSMAPF (IX=1,NX) (JY=1,NY).  THE USER MUST NOT
C                       USE THIS ARRAY EXCEPT IN CALLING PSMAPF.
C                       (INPUT/OUTPUT)
C               ND2X3 = DIMENSION OF FD1( ), FD2( ), ETC.  (INPUT)
C                IP12 = INDICATES WHETHER (>1) OR NOT (=0) THE LIST OF
C                       STATIONS ON THE INPUT VECTOR FILES WILL BE WRITTEN 
C                       TO UNIT IP12.  (INPUT)
C                IP16 = DIAGNOSTICS FOR LINEARIZATION ROUTINES
C                       (E.G., STATIONS IN THRESHOLD LISTS THAT ARE NOT
C                       BEING DEALT WITH IN THIS RUN).
C               ISTAV = 1 WHEN THE DATA RETURNED ARE STATION DATA.  
C                       0 WHEN THE DATA RETURNED ARE GRID DATA OR DATA
C                         ARE NOT AVAILABLE FOR RETURN.  (OUTPUT)
C              L3264B = INTEGER WORD LENGTH IN BITS OF MACHINE BEING USED
C                       (EITHER 32 OR 64).  (INPUT)
C              L3264W = NUMBER OF WORDS IN 64 BITS, EITHER 1 OR 2.  (INPUT)
C              MISTOT = TOTAL NUMBER OF TIMES A MISSING INDICATOR
C                       HAS BEEN ENCOUNTERED IN UNPACKING GRIDS.
C                       (INPUT-OUTPUT)
C                 IER = STATUS RETURN.
C                         0 = GOOD RETURN.
C                       159 = 2ND DIGIT OF CCC NOT IDENTIFIED.
C                       SEE CALLED ROUTINES FOR OTHER VALUES.
C                       (INTERNAL-OUTPUT)
C              NTIMES = THE NUMBER OF TIMES, INCLUDING THIS ONE, THAT THE 
C                       RECORD HAS BEEN FETCHED.  THIS IS STORED IN
C                       LSTORE(9, ).  (INTERNAL)
C               LD(J) = HOLDS THE 4 ID WORDS OF THE DATA RETRIEVED INTO
C                       DATA( ) (J=1,4).  (INTERNAL)
C               MD(J) = HOLDS THE 4 ID WORDS OF THE DATA RETRIEVED INTO
C                       FDTIME( ) (J=1,4).  (INTERNAL)
C              NWORDS = NUMBER OF WORDS RETURNED IN DATA( ) BY GFETCH.
C                       (INTERNAL)
C               MISSP = PRIMARY MISSING VALUE INDICATOR.  RETURNED AS ZERO
C                       WHEN DATA ARE NOT PACKED.  (INTERNAL)
C               MISSS = SECONDARY MISSING VALUE INDICATOR.  RETURNED AS ZERO
C                       WHEN DATA ARE NOT PACKED.  (INTERNAL)
C                 ICM = 2ND DIGIT OF CCC AND DENOTES FOR THE TWO MODELS
C                       AT EACH STATION:
C                       0 = AVG,
C                       1 = DIFFERENCE,
C                       2 = MAX, AND
C                       3 = MIN.
C        1         2         3         4         5         6         7 X
C 
C        NONSYSTEM SUBROUTINES CALLED RECURSIVELY
C            OPTION, GSITB, GFETCH, TIMPR
C
      CHARACTER*8 CCALL(ND1,6),
     1            CCALLD(ND5)
      CHARACTER*20 NAME(ND1)
      CHARACTER*60 RACESS(NUMRA)
C
      DIMENSION ID(4),IDPARS(15),JD(4)
      DIMENSION ICALL(L3264W,ND1,6),
     1          NELEV(ND1),STALAT(ND1),STALON(ND1),ITIMEZ(ND1),
     2          ISDATA(ND1),SDATA(ND1),SDATA1(ND1)
      DIMENSION IPACK(ND5),IWORK(ND5),DATA(ND5),
     1          ICALLD(L3264W,ND5)
      DIMENSION FD1(ND2X3),FD2(ND2X3),FD3(ND2X3),FD4(ND2X3),
     1          FD5(ND2X3),FD6(ND2X3),FD7(ND2X3),
     2          FDVERT(ND2X3),FDTIME(ND2X3),FDSINS(ND2X3),FDMS(ND2X3)
      DIMENSION IS0(ND7),IS1(ND7),IS2(ND7),IS4(ND7)
      DIMENSION LSTORE(12,ND9)
      DIMENSION CORE(ND10)
      DIMENSION DIR(ND1,2,ND11),NGRIDC(6,ND11)
      DIMENSION KFILRA(NUMRA)
      DIMENSION LD(4),MDPARS(15)
      DIMENSION MD(4),LDPARS(15)
C
      IER=0
      ISTAV=1
C
C        INITIALIZE LDPARS( ) AND MDPARS( ) FOR CALL TO OPTION.
C
      LDPARS(1)=IDPARS(1)-(IDPARS(1)/10)*10
      MDPARS(1)=IDPARS(1)-(IDPARS(1)/10)*10
C
      DO 100 J=2,15
      LDPARS(J)=IDPARS(J)
      MDPARS(J)=IDPARS(J)
 100  CONTINUE      
C
C        DEFINE THE TWO MODEL NUMBERS.  NOTE THAT THESE ARE HARDWIRED.
C        THERE IS NO PROVISION IN THE MOS-2000 ID SYSTEM TO CARRY
C        TWO MODEL NUMBERS.
C
      MOD1=8
      MOD2=8
C        MOD1 AND MOD2 ARE THE TWO MODEL NUMBERS.  THESE ARE
C        HARDWIRED TO THE SAME MODEL FOR DEMONSTRATION ONLY.
      LDPARS(4)=MOD1
      MDPARS(4)=MOD2
C
C        GET THE VARIABLE FOR THE FIRST MODEL.
C
      LD(1)=LDPARS(1)*1000000+LDPARS(2)*1000+LDPARS(3)*100+MOD1
      LD(2)=JD(2)
      LD(3)=JD(3)
      LD(4)=0
C        LD( ) IS IN BASIC PREDICTOR FORMAT.
C
C        TRY TO FIND PREDICTOR IN LSTORE AND RETURN IT IN DATA( ).
C
      CALL GFETCH(KFILDO,KFIL10,LD,7777,LSTORE,ND9,LITEMS,
     1            IS0,IS1,IS2,IS4,ND7,IPACK,IWORK,DATA,ND2X3,
     2            NWORDS,NPACK,NDATE,NTIMES,CORE,ND10,
     3            NBLOCK,NFETCH,NSLAB,MISSP,MISSS,L3264B,1,IER)
C
C        MOST VALUES OF IER SHOULD BE NEAR FATAL.  WHEN DATA 
C        ARE RETURNED, THEY WILL BE GRIDPOINT AND IN DATA( ).
C
      IF(MISSP.NE.0)MISTOT=MISTOT+1
C
      IF(IER.EQ.0)THEN
         GO TO 135
C
      ELSEIF(IER.EQ.47)THEN
C        JUST MISSING DATA, A NOT UNEXPECTED EVENT.  GO TO OPTION,
C        DO NOT COUNT THIS AS AN ERROR.
         GO TO 133
C
      ELSE
C        FATAL ERROR FOR THIS PREDICTOR.  IT WAS FOUND BY GFETCH, BUT
C        COULD NOT BE RETURNED.  ALL VALUES WILL BE MISSING.  DATA
C        WILL BE SET TO MISSING VALUES AND ISTOP INCREMENTED IN PRED1
C        OR PRED2.
C
         GO TO 800
C
      ENDIF
C
 133  CALL OPTION(KFILDO,KFIL10,NFIRST,
     1            LD,LDPARS,THRESH,LD,NDATE,
     2            KFILRA,RACESS,NUMRA,
     3            ICALL,CCALL,ICALLD,CCALLD,NAME,
     4            NELEV,STALAT,STALON,
     5            ITIMEZ,ISDATA,SDATA,SDATA1,L1DATA,DIR,ND1,NSTA,
     6            NGRIDC,NGRID,ND11,NSLAB,IPACK,IWORK,DATA,ND5,
     7            LSTORE,ND9,LITEMS,CORE,ND10,LASTL,
     8            NBLOCK,LASTD,NSTORE,NFETCH,
     9            IS0,IS1,IS2,IS4,ND7,
     A            FD1,FD2,FD3,FD4,FD5,FD6,FD7,
     B            FDVERT,FDTIME,FDSINS,FDMS,ND2X3,IP12,IP16,
     C            ISTAV,L3264B,L3264W,MISTOT,IER)
C 
      IF(IER.NE.0)GO TO 800
C
C        OPTION DOES NOT SET MISSING VALUES IN THE GRID WHEN THE FIELD 
C        CANNOT BE RETURNED BECAUSE GFETCH HAS JUST BEEN CALLED WHICH
C        DOES RETURN MISSING VALUES WHICH ARE CARRIED OVER.  WHEN 
C        ISTAV EQ 1, MISSING STATION VALUES SHOULD BE RETURNED.
C
C        AT THIS POINT, THE PREDICTOR HAS BEEN FOUND OR COMPUTED AND
C        EXISTS EITHER AS A GRIDPOINT FIELD IN DATA( ) OR STATION
C        DATA IN SDATA( ).  WHEN THE DATA ARE GRIDPONT, PERFORM
C        ANY OR ALL OF THE FUNCTIONS:  GRID BINARY, SMOOTHING,
C        INTERPOLATION, TRANSFORMATION, AND POINT BINARY.  NORMALLY, ONLY
C        INTERPOLATION AND POSSIBLY SMOOTHING WOULD BE REQUIRED.  DATA
C        RETURNED IN SDATA( ).
C
 135  IF(ISTAV.EQ.0)
     1   CALL GSITB(KFILDO,MD,MDPARS,THRESH,DIR(1,1,NSLAB),
     2              SDATA,NSTA,ND1,DATA,ND5,
     3              IS2,ND7,FD1,ND2X3,IER)
      IF(IER.NE.0)GO TO 800
C
C        STATION DATA NOW RESIDE IN SDATA( ).
C
C        GET THE VARIABLE FOR THE SECOND MODEL.
C
      MD(1)=MDPARS(1)*1000000+MDPARS(2)*1000+MDPARS(3)*100+MOD2
      MD(2)=JD(2)
      MD(3)=JD(3)
      MD(4)=0
C        MD( ) IS IN BASIC PREDICTOR FORMAT.
C
C        TRY TO FIND PREDICTOR IN LSTORE AND RETURN IT IN DATA( ).
C
      CALL GFETCH(KFILDO,KFIL10,LD,7777,LSTORE,ND9,LITEMS,
     1            IS0,IS1,IS2,IS4,ND7,IPACK,IWORK,DATA,ND2X3,
     2            NWORDS,NPACK,NDATE,NTIMES,CORE,ND10,
     3            NBLOCK,NFETCH,NSLAB,MISSP,MISSS,L3264B,1,IER)
C
C        MOST VALUES OF IER SHOULD BE NEAR FATAL.  WHEN DATA 
C        ARE RETURNED, THEY WILL BE GRIDPOINT AND IN DATA( ).
C
      IF(MISSP.NE.0)MISTOT=MISTOT+1
C
      IF(IER.EQ.0)THEN
         GO TO 235
C
      ELSEIF(IER.EQ.47)THEN
C        JUST MISSING DATA, A NOT UNEXPECTED EVENT.  GO TO OPTION,
C        DO NOT COUNT THIS AS AN ERROR.
         GO TO 233
C
      ELSE
C        FATAL ERROR FOR THIS PREDICTOR.  IT WAS FOUND BY GFETCH, BUT
C        COULD NOT BE RETURNED.  ALL VALUES WILL BE MISSING.  DATA
C        WILL BE SET TO MISSING VALUES AND ISTOP INCREMENTED IN PRED1
C        OR PRED2.
C
         GO TO 800
C
      ENDIF
C
 233  CALL OPTION(KFILDO,KFIL10,NFIRST,
     1            MD,MDPARS,THRESH,MD,NDATE,
     2            KFILRA,RACESS,NUMRA,
     3            ICALL,CCALL,ICALLD,CCALLD,NAME,
     4            NELEV,STALAT,STALON,
     5            ITIMEZ,ISDATA,SDATA1,SDATA1,L1DATA,DIR,ND1,NSTA,
     6            NGRIDC,NGRID,ND11,NSLAB,IPACK,IWORK,DATA,ND5,
     7            LSTORE,ND9,LITEMS,CORE,ND10,LASTL,
     8            NBLOCK,LASTD,NSTORE,NFETCH,
     9            IS0,IS1,IS2,IS4,ND7,
     A            FD1,FD2,FD3,FD4,FD5,FD6,FD7,
     B            FDVERT,FDTIME,FDSINS,FDMS,ND2X3,IP12,IP16,
     C            ISTAV,L3264B,L3264W,MISTOT,IER)
C        NOTE THAT SDATA1 IS USED TWICE IN THE CALL ABOVE.  WHILE
C        SDATA1( ) IS GENERALLY RESERVED FOR L2D2, LINEARIZATION
C        WILL NOT BE CALLED FROM OPTION ABOVE.
C
      IF(IER.NE.0)GO TO 800
C
C        AT THIS POINT, THE PREDICTOR HAS BEEN FOUND OR COMPUTED AND
C        EXISTS EITHER AS A GRIDPOINT FIELD IN DATA( ) OR STATION
C        DATA IN SDATA1( ).  WHEN THE DATA ARE GRIDPONT, PERFORM
C        ANY OR ALL OF THE FUNCTIONS:  GRID BINARY, SMOOTHING,
C        INTERPOLATION, TRANSFORMATION, AND POINT BINARY.  NORMALLY, ONLY
C        INTERPOLATION AND POSSIBLY SMOOTHING WOULD BE REQUIRED.  DATA
C        RETURNED IN SDATA1( ).
C
 235  IF(ISTAV.EQ.0)        
     1   CALL GSITB(KFILDO,MD,MDPARS,THRESH,DIR(1,1,NSLAB),
     2              SDATA1,NSTA,ND1,DATA,ND5,
     3              IS2,ND7,FD1,ND2X3,IER)
      IF(IER.NE.0)GO TO 800
C
C        COMPUTE THE AVERAGE, DIFFERENCE, MAX, OR MIN OF EACH 
C        VARIABLE.
C
      ISTAV=1
      ICM=(IDPARS(1)-(IDPARS(1)/100)*100)/10
      IF(ICM.EQ.0)THEN
C
         DO 240 J=1,NSTA
         SDATA(J)=(SDATA(J)+SDATA1(J))/2.
 240     CONTINUE
C
      ELSEIF(ICM.EQ.1)THEN
C 
         DO 250 J=1,NSTA
         SDATA(J)=SDATA(J)-SDATA1(J)
 250     CONTINUE
C
      ELSEIF(ICM.EQ.2)THEN
C 
         DO 260 J=1,NSTA
         SDATA(J)=MAX(SDATA(J),SDATA1(J))
 260     CONTINUE
C
      ELSEIF(ICM.EQ.3)THEN
C 
         DO 270 J=1,NSTA
         SDATA(J)=MIN(SDATA(J),SDATA1(J))
 270     CONTINUE
C
      ELSE
         WRITE(KFILDO,280)IDPARS(1)
 280     FORMAT(/' ****SECOND DIGIT OF CCC = ',I3.3,
     1           ' NOT IDENTIFIED IN COMBIN AT 280.')
      IER=159
      GO TO 800
C
      ENDIF
C
      GO TO 850
C
C        THIS PREDICTOR CANNOT BE COMPUTED.  SET THE ARRAY TO MISSING.
C
 800  DO 801 J=1,ND1
      SDATA(J)=9999.
 801  CONTINUE 
C
 850  RETURN
      END     
                  
