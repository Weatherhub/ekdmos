      SUBROUTINE TRANS(KFILDO,ID,IDPARS,SDATA,NSTA,FD,ND2X3,IER)
C
C        MAY     1994   GLAHN   TDL   MOS-2000 
C        APRIL   2000   DALLAVALLE   MODIFIED FORMAT STATEMENTS
C                               TO CONFORM TO FORTRAN 90
C                               STANDARDS ON THE IBM SP
C        APRIL   2004   GLAHN   ADDED IDPARS = 3 CAPABILITY
C 
C        PURPOSE 
C            TO TRANSFORM A VARIABLE VALUE FOR EACH LOCATION.  IF
C            THE VALUE IS INDICATED AS MISSING, IT IS UNCHANGED. 
C 
C        DATA SET USE
C            KFILDO - UNIT NUMBER OF OUTPUT (PRINT) FILE.  (OUTPUT)
C
C        VARIABLES
C              KFILDO = UNIT NUMBER OF OUTPUT (PRINT) FILE.  (INPUT)
C               ID(J) = 4-WORD VARIABLE ID (J=1,4).  USED ONLY FOR
C                       DIAGNOSTIC PRINT.  (INPUT)
C              IDPARS = SINGLE VALUE INDICATING THE TRANSFORMATION TO MAKE.
C                       IT SHOULD BE NONZERO WHEN TRANS IS ENTERED.  (INPUT)
C                       1 = SQUARE
C                       2 = SQUARE ROOT.  NEGATIVE VALUES ARE SET TO MISSING.
C                       3 = SQUARE ROOT OF ABSOLUTE VALUE, RESULT 
C                           GIVEN THE SIGN OF THE ORIGINAL VALUE
C            SDATA(K) = THE VALUES FOR ALL STATIONS (K=1,NSTA) TO BE
C                       TRANSFORMED.  (INPUT-OUTPUT)
C                NSTA = THE NUMBER OF STATIONS BEING DEALT WITH.  
C                       ALSO, TREATED AS DIMENSION OF SDATA( ).  (INPUT)
C               FD(K) = WORK ARRAY (K=1,ND2X3).  IF USED, MAKE SURE 
C                       IT'S LARGE ENOUGH.  (INTERNAL)
C               ND2X3 = DIMENSION OF FD( ).  (INPUT)
C                 IER = ERROR RETURN.  (OUTPUT)
C                       0  = GOOD RETURN.
C                       63 = IDPARS NOT FOUND IN THIS ROUTINE.
C                       WHEN IER NE 0, SDATA( ) IS SET TO 9999.
C        1         2         3         4         5         6         7 X
C
C        NONSYSTEM SUBROUTINES CALLED
C            NONE.
C
      DIMENSION ID(4)
      DIMENSION SDATA(NSTA)
      DIMENSION FD(ND2X3)
C
      IER=0
C
C*****************
C        FOR SAFETY, PUT THIS SEGMENT IN FRONT OF ANY TRANSFORMATION 
C        THAT NEEDS ARRAY FD( ).  NORMALLY, ND2X3 SHOULD BE GE NSTA.
C        GENERALLY, A TRANSFORMATION WILL NOT NEED FD( ), SO THE 
C        RESTRICTION NEED NOT APPLY.
C***      IF(ND2X3.GE.NSTA)GO TO XXX
C***      WRITE(KFILDO,TTT)ND2X3,NSTA
C*** TTT  FORMAT(/' DIMENSION OF FD( ) IN TRANS ='I5,' IS NOT LARGE ENOUGH',
C***     1        ' TO HOLD NSTA ='I5,' VALUES.  ALL VALUES SET TO MISSING.')
C***      GO TO 805
C******************
C
      IF(IDPARS.NE.1)GO TO 150
C
C        TRANSFORM THE VALUES BY SQUARING THEM.
C
      DO 120 K=1,NSTA
      IF(SDATA(K).NE.9999.)SDATA(K)=SDATA(K)*SDATA(K)
 120  CONTINUE
C
      GO TO 900
C
 150  IF(IDPARS.NE.2)GO TO 170
C
C        TRANSFORM THE VALUES BY TAKING THE SQUARE ROOT.
C        SET NEGATIVE VALUES TO MISSING.
C
      DO 160 K=1,NSTA
      IF(SDATA(K).EQ.9999.)GO TO 160
C
      IF(SDATA(K).GE.0.)THEN
         SDATA(K)=SQRT(SDATA(K))
      ELSE
         SDATA(K)=9999.
      END IF   
C
 160  CONTINUE
C
C        TRANSFORM THE VALUES BY TAKING THE SQUARE ROOT OF
C        THE ABSOLUTE VALUE AND GIVING THE RESULT THE
C        ORIGINAL SIGN.
C        SET NEGATIVE VALUES TO MISSING.
C
 170  IF(IDPARS.NE.3)GO TO 800
C
      DO 180 K=1,NSTA
      IF(SDATA(K).EQ.9999.)GO TO 180
C
      IF(SDATA(K).GE.0.)THEN
         SDATA(K)=SQRT(SDATA(K))
      ELSE
         SDATA(K)=-SQRT(ABS(SDATA(K)))
      END IF   
C
 180  CONTINUE
C
C*********ADD OTHER TRANSFORMATIONS HERE.
C
      GO TO 900
C
C        AT THIS POINT, THE TRANSFORMATION PARAMETER HAS NOT BEEN
C        FOUND.  PRINT DIAGNOSTIC, AND SET ALL VALUES TO MISSING.
C
 800  WRITE(KFILDO,801)IDPARS,(ID(J),J=1,4)
 801  FORMAT(/,' ****THE TRANSFORMATION PARAMETER IDPARS =',I3,
     1         ' IN PREDICTOR',1X,I9.9,1X,I9.9,1X,I9.9,1X,I10.3,/,
     2         '     WAS NOT FOUND IN SUBROUTINE TRANS.  ALL VALUES',
     2         ' SET TO MISSING.')
      IER=63
C
      DO 810 K=1,NSTA
      SDATA(K)=9999.
 810  CONTINUE
C
 900  RETURN
      END 
