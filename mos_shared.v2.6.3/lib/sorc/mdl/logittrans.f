      SUBROUTINE LOGITTRANS(CCALL,CCALLD,CORE,DIR,FD1,FD2,FD3,FD4,
     1                      FD5,FD6,FD7,FDMS,FDSINS,FDTIME,FDVERT,
     2                      ICALL,ICALLD,IDPARS,IER,IP12,IPACK,ISTAV,
     3                      IS0,IS1,IS2,IS4,ISDATA,ITIMEZ,IWORK,JD,
     4                      KFIL10,KFILDO,KFILRA,L3264B,L3264W,LITEMS,
     5                      LSTORE,MISTOT,NAME,NBLOCK,ND1,ND10,
     6                      ND11,ND2X3,ND5,ND7,ND9,NDATE,NELEV,
     7                      NFETCH,NFIRST,NGRID,NGRIDC,NSLAB,NSTA,
     8                      NUMRA,RACESS,SDATA,SDATA1,STALAT,STALON,
     9                      THRESH)      
C
C        AUGUST   2009   SHAFER   MDL  MOS-2000
C        JULY     2012   ENGLE    MDL  MODIFIED CALLS TO SMOOTHING
C                                      ROUTINES TO PASS IN A WORKING
C                                      GRID, WKGRD INSTEAD OF PASSING IN
C                                      MDGRD TWICE WHICH IS CAUSING
C                                      PROBLEMS WHEN COMPILED WITH
C                                      INTEL FORTRAN COMPILER.
C        APRIL    2013   SHAFER   MDL  MODIFIED CALLS TO INTERPOLATION
C                                      ROUTINES TO PASS IN WORKING GRID THAT 
C                                      CONTAINS THE SMOOTHED FIELD (WKGRD).
C        MAY      2013   SHAFER   MDL  ID FOR TRANSFORMED FREEZING LEVEL
C                                      IS NOW MODEL DEPENDENT - THIS WAS 
C                                      NECESSARY TO ACCOMMODATE THE ECMWF
C                                      WHICH HAS FEWER VERTICAL LEVELS
C                                      (AND THUS REQUIRES A DIFFERENT ID
C                                      TO COMPUTE THE FREEZING LEVEL);
C                                      ADDED ENTIRES FOR FREEZING LEVELS
C                                      TO ID TABLES AND INCREASED DIMENSION
C                                      OF ID TABLES ACCORDINGLY;
C                                      A CALL TO TGINTRP HAS BEEN ADDED TO
C                                      COMPUTE TIME-INTERPOLATED VALUES FOR
C                                      THE RAW PREDICTORS IF IDPARS(13) IS
C                                      8 OR 9.
C
C        PURPOSE
C          SUBROUTINE LOGITTRANS COMPUTES A 'LOGIT TRANSFORM' PREDICTOR, DEFINED 
C          AS THE DEVIATION OF A MODEL FORECAST FIELD FROM ITS CORRESPONDING 
C          LOGIT '50% VALUE'.  THE 50% VALUES, ORIGINALLY COMPUTED IN U655 FOR
C          STATIONS, RESIDE IN A GRIDDED RANDOM ACCESS FILE CREATED BY THE ANALYSIS
C          PROGRAM U155 (OR U365 IF THE DATA WAS INTERPOLATED TO ANOTHER GRID).
C          THE VARIABLE BEING 'TRANSFORMED' IS OBTAINED VIA GFETCH IF THE DATA 
C          RESIDE ON DISK, OTHERWISE OPTN2 IS CALLED WHEN THE VARIABLE MUST BE 
C          COMPUTED.  THE VARIABLE IS SMOOTHED IF DESIRED (TYPE=IDPARS(14)) AND 
C          THEN INTERPOLATED FROM THE MODEL GRID TO THE STATIONS (TYPE=IDPARS(13)).  
C          THE TRANSFORMED VALUES FOR EACH STATION ARE RETURNED TO THE CALLING 
C          PROGRAM IN ARRAY SDATA.
C
C          THE ORIGINAL USE OF LOGITTRANS WAS TO COMPUTE LOGIT TRANSFORMS FOR
C          PRECIPITATION TYPE, HOWEVER THIS ROUTINE CAN BE USED FOR OTHER
C          ELEMENTS.  THE IDS THAT ARE ACCOMMODATED, THE IDS FOR THE MODEL
C          VARIABLES TO BE TRANSFORMED, AND THE IDS FOR THE 50% VALUES ARE NOT 
C          HARD-WIRED BUT PLACED IN TABLES (TO WHICH MORE ENTRIES CAN BE ADDED 
C          LATER FOR NEW TRANSFORMS).
C
C          THE FOLLOWING IDPARS(1) AND IDPARS(2) ARE ACCOMMODATED:
C
C              081 001 - PTYPE TRANS 1000-500 HPA THICKNESS
C              081 002 - PTYPE TRANS 1000-850 HPA THICKNESS
C              082 001 - PTYPE TRANS 2M TEMPERATURE
C              082 002 - PTYPE TRANS 850 HPA TEMPERATURE
C              082 040 - PTYPE TRANS FRZG LVL - GFS
C              082 047 - PTYPE TRANS FRZG LVL - NAM
C              082 050 - PTYPE TRANS FRZG LVL - ECM
C
C        DATA SET USE
C              KFILDO = DEFAULT UNIT NUMBER FOR OUTPUT (PRINT) FILE  (INPUT)
C              KFIL10 = UNIT NUMBER OF TDL MOS-2000 FILE SYSTEM ACCESS (INPUT)
C           KFILRA(J) = UNIT NUMBERS FOR ACCESSING THE MOS-2000
C                       EXTERNAL RANDOM ACCESS FILES (J=1,NUMRA).  (INPUT)
C 
C        VARIABLES 
C                 IER = STATUS RETURN  (OUTPUT)
C                         0 = GOOD RETURN
C                       101 = VARIABLE NOT ACCOMMODATED BY LOGITTRANS
C                       102 = PREDICTOR COMPUTATION FAILED IN TGINTRP
C                       103 = ERROR IN GFETCH GETTING VARIABLE
C                       104 = PREDICTOR COMPUTATION FAILED IN OPTN2
C                       105 = INVALID SMOOTHING TYPE
C                       106 = INVALID INTERPOLATION TYPE
C                       107 = FATAL ERROR IN GRDCNST
C      IER1,IER2,IER3 = RETURN STATUS OF CALLED SUBROUTINES.  (INTERNAL)
C               ISTAV = DATA RETURN FLAG FOR LOGITTRANS.  (OUTPUT)
C                       (= 1 SINCE THE DATA RETURNED ARE STATION DATA)
C              ISTAV1 = DATA RETURN FLAG FOR SUBROUTINE OPTN2 (INTERNAL)
C                         1 = DATA RETURNED ARE STATION DATA.
C                         0 = DATA RETURNED ARE GRID DATA OR DATA
C                             ARE NOT AVAILABLE FOR RETURN.
C              ISTAV2 = DATA RETURN FLAG FOR SUBROUTINE GRDCNST (INTERNAL)
C                       (= 1 SINCE THE DATA RETURNED ARE STATION DATA)
C                IP12 = INDICATES WHETHER (>1) OR NOT (=0) THE LIST OF
C                       STATIONS ON THE INPUT VECTOR FILES WILL BE WRITTEN
C                       TO UNIT IP12.  (INPUT)
C               ND2X3 = DIMENSION OF FD1( ), FD2( ), ETC.  (INPUT)
C                 ND1 = MAXIMUM NUMBER OF STATIONS THAT CAN BE DEALT WITH.
C                       FIRST DIMENSION OF DIR( , , ).  (INPUT)
C                 ND5 = DIMENSION OF IPACK( ), IWORK( ), AND DATA( ).  (INPUT)
C                 ND7 = DIMENSION OF IS0( ), IS1( ), IS2( ), AND IS4( ).
C                       NOT ALL LOCATIONS ARE USED.  (INPUT)
C                 ND9 = THE SECOND DIMENSION OF LSTORE( , ).  (INPUT)
C                ND10 = DIMENSION OF CORE( ).  (INPUT)
C                ND11 = MAXIMUM NUMBER OF GRID COMBINATIONS THAT CAN BE
C                       DEALT WITH ON THIS RUN.  LAST DIMENSION OF
C                       NGRIDC( , ) AND DIR( , , ).  (INPUT)
C                NSTA = NUMBER OF STATIONS OR LOCATIONS BEING DEALT WITH.  (INPUT)
C              NWORDS = NUMBER OF WORDS RETURNED IN GFETCH DATA ARRAY. 
C                       SEE GFETCH SUBROUTINE FOR FULL DESCRIPTION (INTERNAL)
C               NPACK = 2 FOR TDL GRIB PACKED DATA; 1 FOR NOT PACKED.
C                       THIS IS STORED IN LSTORE(7, ) AND OUTPUT BY GFETCH. 
C                       (INTERNAL)
C              LITEMS = THE NUMBER OF ITEMS (COLUMNS) IN LSTORE( , ) THAT
C                       HAVE BEEN USED IN THIS RUN.  (INPUT/OUTPUT)
C              NFIRST = 1 FOR THE 1ST DATE.  (INPUT)
C               NUMRA = THE NUMBER OF UNIT NUMBERS AND NAMES IN KFILRA( )
C                       AND RACESS( ).  (INPUT)
C            I,J,KVRB = USED FOR ARRAY INDEXES.  (INTERNAL)
C                  NX = NUMBER OF GRID POINTS IN EAST-WEST DIRECTION.  
C                       (INTERNAL)
C                  NY = NUMBER OF GRID POINTS IN NORTH-SOUTH DIRECTION.  
C                       (INTERNAL)
C              L3264B = INTEGER WORD LENGTH IN BITS OF MACHINE BEING USED
C                       (EITHER 32 OR 64).  (INPUT)
C              L3264W = NUMBER OF WORDS IN 64 BITS, EITHER 1 OR 2.  (INPUT)
C               NGRID = THE NUMBER OF GRID COMBINATIONS IN DIR( , , ),
C                       MAXIMUM OF ND11.  (INPUT)
C              MISTOT = TOTAL NUMBER OF TIMES A MISSING INDICATOR
C                       HAS BEEN ENCOUNTERED IN UNPACKING GRIDS.
C                       (INPUT/OUTPUT)
C              KFILDO = DEFAULT UNIT NUMBER FOR OUTPUT (PRINT) FILE. (INPUT)
C              KFIL10 = UNIT NUMBER OF TDL MOS-2000 FILE SYSTEM ACCESS. (INPUT)
C               NDATE = THE DATE/TIME FOR WHICH PREDICTOR IS NEEDED.  (INPUT)
C              NTIMES = THE NUMBER OF TIMES, INCLUDING THIS ONE, THAT THE
C                       DATA HAVE BEEN FETCHED (OUTPUT BY GFETCH).  
C                       THIS IS STORED IN LSTORE(9, ).  (INPUT/OUTPUT)
C              NBLOCK = THE BLOCK SIZE IN WORDS OF THE RANDOM DISK FILE. (INPUT)
C              NFETCH = THE NUMBER OF TIMES GFETCH HAS BEEN ENTERED.  GFETCH
C                       KEEPS TRACK OF THIS AND RETURNS THE VALUE.  (INPUT/OUTPUT)
C               NSLAB = THE NUMBER OF THE SLAB IN DIR( , , ) AND
C                       IN NGRIDC( , ) DEFINING THE CHARACTERISTICS
C                       OF THIS GRID.  SEE LSTORE(10, ).  FOR THE
C                       COMPUTATION ROUTINES RETURNING A GRID, THIS
C                       VALUE MUST BE OUTPUT BY GFETCH.  (INPUT/OUTPUT)
C             NAME(K) = NAMES OF STATIONS (K=1,NSTA).  USED FOR PRINTOUT
C                       ONLY.  (CHARACTER*20)  (INPUT)
C           RACESS(J) = THE FILE NAMES CORRESPONDING TO KFILRA(J) (J=1,NUMRA).
C                       (CHARACTER*60)  (INPUT)
C          CCALL(K,J) = 8-CHARACTER STATION CALL LETTERS (OR GRIDPOINT
C                       LOCATIONS FOR GRID DEVELOPMENT) TO PROVIDE
C                       OUTPUT FOR (J=1) AND 5 POSSIBLE OTHER STATION
C                       CALL LETTERS (J=2,6) THAT CAN BE USED INSTEAD
C                       IF THE PRIMARY (J=1) STATION CANNOT BE FOUND
C                       IN AN INPUT DIRECTORY (K=1,NSTA).  ALL STATION
C                       DATA ARE KEYED TO THIS LIST, EXCEPT POSSIBLY
C                       CCALLD( ).  EQUIVALENCED TO ICALL( , ).
C                       (CHARACTER*8)  (INPUT)
C         ICALLD(L,K) = 8-CHAR STATION CALL LETTERS AS CHARACTERS IN AN INTEGER
C                       VARIABLE (L=1,L3264W) (K=1,ND5).
C                       EQUIVALENCED TO CCALLD( ).  (INPUT)
C           CCALLD(K) = 8-CHAR STATION CALL LETTERS (K=1,ND5).  THIS LIST IS USED
C                       IN L1D1 TO READ THE REGION LISTS. (CHARACTER*8) (INTERNAL)
C           IDPARS(J) = THE PARSED, INDIVIDUAL COMPONENTS OF THE PREDICTOR
C                       ID CORRESPONDING TO ID( ) (J=1,15).  (INPUT)
C                       J=1--CCC (CLASS OF VARIABLE),
C                       J=2--FFF (SUBCLASS OF VARIABLE),
C                       J=3--B (BINARY INDICATOR),
C                       J=4--DD (DATA SOURCE, MODEL NUMBER),
C                       J=5--V (VERTICAL APPLICATION),
C                       J=6--LBLBLBLB (BOTTOM OF LAYER, 0 IF ONLY 1 LAYER),
C                       J=7--LTLTLTLT (TOP OF LAYER),
C                       J=8--T (TRANSFORMATION),
C                       J=9--RR (RUN TIME OFFSET, ALWAYS + AND BACK IN TIME),
C                       J=10--OT (TIME APPLICATION),
C                       J=11--OH (TIME PERIOD IN HOURS),
C                       J=12--TAU (PROJECTION IN HOURS),
C                       J=13--I (INTERPOLATION TYPE),
C                       J=14--S (SMOOTHING INDICATOR), AND
C                       J=15--G (GRID INDICATOR).
C           MDPARS(J) = THE PARSED, INDIVIDUAL COMPONENTS OF THE PREDICTOR
C                       ID CORRESPONDING TO MD() (J=1,15) (INTERNAL)
C                       (INPUT TO OPTN2 FOR INTERNAL VARIABLES).
C               JD(J) = THE BASIC INTEGER PREDICTOR ID (J=1,4), WITH
C                       PORTIONS PERTAINING TO PROCESSING OMITTED.
C                       JD() IS USED TO HELP IDENTIFY THE BASIC MODEL
C                       FIELDS AS READ FROM THE ARCHIVE.  (INPUT)
C               MD(J) = THE BASIC INTEGER PREDICTOR ID (J=1,4), WITH
C                       PORTIONS PERTAINING TO PROCESSING OMITTED.
C                       MD() IS USED TO HELP IDENTIFY THE BASIC MODEL
C                       FIELDS AS READ FROM THE ARCHIVE.  (INTERNAL)
C              MID(J) = PREDICTOR ID (J=1,4) FOR THE VARIABLE BEING  
C                       TRANSFORMED.  (INTERNAL)    
C              CID(J) = PREDICTOR ID (J=1,4) FOR THE GRIDDED CONSTANT DATA.  
C                       (INTERNAL)
C            IDTBL(J) = ARRAY CONTAINING THE CCCFFF VALUES OF IDS THAT
C                       ARE ACCOMMODATED BY LOGITTRANS (J=1,).  (INTERNAL)
C            MWRD1(J) = ARRAY CONTAINING WORD 1 OF VARIABLE BEING
C                       TRANSFORMED (J=1,).  (INTERNAL)
C            MWRD2(J) = ARRAY CONTAINING WORD 2 OF VARIABLE BEING
C                       TRANSFORMED (J=1,).  (INTERNAL)
C            CWRD1(J) = ARRAY CONTAINING WORD 1 OF (GRIDDED) CONSTANT TO BE  
C                       SUBTRACTED FROM MODEL VARIABLE (J=1,).  (INTERNAL)
C            CWRD2(J) = ARRAY CONTAINING WORD 2 OF GRIDDED CONSTANT TO BE
C                       SUBTRACTED FROM MODEL VARIABLE (J=1,).  (INTERNAL)
C            CWRD4(J) = ARRAY CONTAINING WORD 4 OF GRIDDED CONSTANT TO BE
C                       SUBTRACTED FROM MODEL VARIABLE (J=1,).  (INTERNAL)
C            MDGRD(J) = ARRAY CONTAINING GRIDPOINT MODEL DATA RETURNED 
C                       FROM GFETCH (J=1,ND2X3).  (INTERNAL)
C            WKGRD(J) = WORK GRID TO PASS TO SMOOTHING ROUINTES. (J=1,ND2X3).  (INTERNAL)
C            MDSTN(J) = ARRAY CONTAINING MODEL DATA INTERPOLATED TO STATIONS
C                       (J=1,NSTA).  (INTERNAL)
C            CDSTN(J) = ARRAY CONTAINING CONSTANT DATA INTERPOLATED TO STATIONS
C                       (J=1,NSTA).  (INTERNAL)
C            SDATA(J) = ARRAY CONTAINING FINAL TRANSFORMED VALUES FOR EACH STATION
C                       (J=1,NSTA).  (OUTPUT) 
C               MISSP = PRIMARY MISSING VALUE INDICATOR IN GFETCH.  RETURNED
C                       AS ZERO WHEN DATA ARE NOT PACKED.  (INTERNAL)
C               MISSS = SECONDARY MISSING VALUE INDICATOR IN GFETCH.  RETURNED
C                       AS ZERO WHEN DATA ARE NOT PACKED.  (INTERNAL)
C              THRESH = THE BINARY THRESHOLD ASSOCIATED WITH IDPARS().  (INPUT)
C             THRESH1 = THE BINARY THRESHOLD ASSOCIATED WITH MDPARS()
C                       (INPUT TO OPTN2).  (INTERNAL)
C             THRESH2 = THE BINARY THRESHOLD ASSOCIATED WITH MDPARS()
C                       (OUTPUT BY PRSID2).  (INTERNAL)
C            NELEV(K) = ELEVATION OF STATIONS (K=1,NSTA).  (INPUT)
C           STALAT(K) = LATITUDE OF STATIONS (K=1,NSTA).  (INPUT)
C           STALON(K) = LONGITUDE OF STATIONS (K=1,NSTA).  (INPUT)
C         LSTORE(L,J) = THE ARRAY HOLDING INFORMATION ABOUT THE DATA
C                       STORED (L=1,12) (J=1,LITEMS).  (INPUT/OUTPUT)
C                       L=1,4--THE 4 ID'S FOR THE DATA.
C                       L=5  --LOCATION OF STORED DATA.  WHEN IN CORE,
C                              THIS IS THE LOCATION IN CORE( ) WHERE
C                              THE DATA START.  WHEN ON DISK,
C                              THIS IS MINUS THE RECORD NUMBER WHERE
C                              THE DATA START.
C                       L=6  --THE NUMBER OF 4-BYTE WORDS STORED.
C                       L=7  --2 FOR DATA PACKED IN TDL GRIB, 1 FOR NOT.
C                       L=8  --THE DATE/TIME OF THE DATA IN FORMAT
C                              YYYYMMDDHH.
C                       L=9  --NUMBER OF TIMES DATA HAVE BEEN RETRIEVED.
C                       L=10 --NUMBER OF THE SLAB IN DIR( , ,L) AND
C                              IN NGRIDC( ,L) DEFINING THE CHARACTERISTICS
C                              OF THIS GRID.
C                       L=11 --THE NUMBER OF THE PREDICTOR IN THE SORTED
C                              LIST IN ID( ,N) (N=1,NPRED) FOR WHICH THIS
C                              VARIABLE IS NEEDED, WHEN IT IS NEEDED ONLY
C                              ONCE FROM LSTORE( , ).  WHEN IT IS NEEDED
C                              MORE THAN ONCE, THE VALUE IS SET = 7777.
C                       L=12 --USED INITIALLY IN ESTABLISHING MOSTORE( , ).
C                              LATER USED AS A WAY OF DETERMINING WHETHER
C                              TO KEEP THIS VARIABLE.
C              IS0(J) = MOS-2000 GRIB SECTION 0 ID'S (J=1,3).  (INPUT)
C              IS1(J) = MOS-2000 GRIB SECTION 1 ID'S (J=1,22+).  (INPUT)
C              IS2(J) = MOS-2000 GRIB SECTION 2 ID'S (J=1,12).  (INPUT)
C              IS4(J) = MOS-2000 GRIB SECTION 4 ID'S (J=1,4).  (INPUT)
C             CORE(J) = THE ARRAY TO STORE OR RETRIEVE THE DATA IDENTIFIED IN
C                       LSTORE( , ) (J=1,ND10).  WHEN CORE( ) IS FULL
C                       DATA ARE STORED ON DISK.  (INPUT)
C           KFILRA(J) = HOLDS THE UNIT NUMBERS FOR ACCESSING THE MOS-2000
C                       EXTERNAL RANDOM ACCESS FILES (J=1,NUMRA).  (INPUT)
C        ICALL(L,K,J) = STATION CALL LETTERS AS CHARACTERS IN AN INTEGER
C                       VARIABLE (L=1,L3264W) (K=1,ND5) (J=1,6).
C                       EQUIVALENCED TO CCALL( , )  (INPUT)
C           ITIMEZ(K) = TIME ZONE INDICATOR.  THE NUMBER OF HOURS
C                       THE STATION IS DIFFERENT FROM UTC (K=1,NSTA).  (INPUT)
C           ISDATA(K) = WORK ARRAY (K=1,ND1).  (INPUT/INTERNAL)
C           SDATA1(K) = WORK ARRAY RESERVED FOR USE IN L2D2 (K=1,NSTA).  
C                       (INPUT/INTERNAL)
C          DIR(K,J,M) = THE IX (J=1) AND JY (J=2) POSITIONS ON THE GRID FOR 
C                       THE COMBINATION OF GRID CHARACTERISTICS M (M=1,NGRID) 
C                       AND STATION K (K=1,NSTA) IN NGRIDC( ,M).  (INPUT)
C         NGRIDC(L,M) = HOLDS THE GRID CHARACTERISTICS (L=1,6) FOR EACH GRID
C                       COMBINATION (M=1,NGRID).  (INPUT)
C                       L=1--MAP PROJECTION NUMBER (3=LAMBERT, 5=POLAR
C                            STEREOGRAPHIC).
C                       L=2--GRID LENGTH IN MILLIMETERS,
C                       L=3--LATITUDE AT WHICH GRID LENGTH IS CORRECT *10000,
C                       L=4--GRID ORIENTATION IN DEGREES *10000,
C                       L=5--LATITUDE OF LL CORNER IN DEGREES *10000,
C                       L=6--LONGITUDE OF LL CORNER IN DEGREES *10000.
C            IPACK(J) = WORK ARRAY (J=1,ND5).  (INPUT/INTERNAL)
C            IWORK(J) = WORK ARRAY (J=1,ND5).  (INPUT/INTERNAL)
C            IDATA(J) = WORK ARRAY FOR GRDCNST (J=1,ND5).  (INTERNAL)
C  FD1(J),FD2(J), ETC = WORK ARRAYS (J=1,ND2X3).  THESE MAY BE USED IN
C                       ROUTINES AS 2-DIMENSIONAL ARRAYS, WHERE THE
C                       TOTAL ARRAY SIZE IS ND2*ND3=ND2X3 AS DECLARED IN
C                       THE CALLING PROGRAM.  (INPUT/INTERNAL)
C           FDVERT(J) = TEMPORARY STORAGE RESERVED FOR SUBROUTINE VERTP
C                       WHEN OPTN2 IS CALLED (J=1,ND2X3).  (INPUT/INTERNAL)
C           FDTIME(J) = TEMPORARY STORAGE RESERVED FOR SUBROUTINE TEMEP
C                       WHEN OPTN2 IS CALLED (J=1,ND2X3).  (INPUT/INTERNAL)
C       FDSINS(IX,JY) = USED TO SAVE THE SIN OF THE LATITUDE IN SUBROUTINE
C                       PSMAPF (IX=1,NX) (JY=1,NY).  THE USER MUST NOT
C                       USE THIS ARRAY EXCEPT IN CALLING PSMAPF.
C                       (INPUT/INTERNAL)
C         FDMS(IX,JY) = USED TO SAVE THE MAP FACTOR IN SUBROUTINE
C                       PSMAPF (IX=1,NX) (JY=1,NY).  THE USER MUST NOT
C                       USE THIS ARRAY EXCEPT IN CALLING PSMAPF.
C                       (INPUT/INTERNAL)
C
C        NONSYSTEM SUBROUTINES USED:
C           PRSID1,PRSID2,GFETCH,OPTN2,SMTH5,SMTH9,SMTH25,
C           SMTH2X,SMTH3X,INTRPA,INTRPB,INTRPC,GRDCNST
C
C       10        20        30        40        50        60        70
C
C      IMPLICIT NONE
C
      INTEGER IER, IER1, IER2, IER3
      INTEGER ISTAV, ISTAV1, ISTAV2, IP12
      INTEGER ND2X3, ND1, ND5, ND7, ND9, ND10, ND11, NSTA
      INTEGER NWORDS, NPACK, LITEMS, NFIRST, NUMRA
      INTEGER I, J, KVRB, NVRB
      INTEGER NX, NY, L3264B, L3264W, NGRID, MISTOT
      INTEGER KFILDO, KFIL10, NDATE, NTIMES, NBLOCK, NFETCH, NSLAB
      INTEGER IDPARS(15), MDPARS(15), MID(4), CID(4), MD(4), JD(4)
C
      CHARACTER*20 NAME(ND1)
      CHARACTER*60 RACESS(NUMRA)
      CHARACTER*8 CCALL(ND1,6), ICALLD(L3264W,ND5), CCALLD(ND5)    
C      
      REAL MDGRD(ND2X3),WKGRD(ND2X3),MDSTN(ND1),CDSTN(ND1),SDATA(ND1)
      REAL MISSP, MISSS, THRESH, THRESH1, THRESH2
C
      DIMENSION NELEV(ND1),STALAT(ND1),STALON(ND1)      
      DIMENSION LSTORE(12,ND9)
      DIMENSION IS0(ND7),IS1(ND7),IS2(ND7),IS4(ND7)
      DIMENSION CORE(ND10)
      DIMENSION KFILRA(NUMRA)
      DIMENSION ICALL(L3264W,ND1,6)
      DIMENSION ITIMEZ(ND1), ISDATA(ND1), SDATA1(ND1)                               
      DIMENSION DIR(ND1,2,ND11), NGRIDC(6,ND11)
      DIMENSION IPACK(ND5),IWORK(ND5), IDATA(ND5)      
      DIMENSION FD1(ND2X3),FD2(ND2X3),FD3(ND2X3),FD4(ND2X3),
     1          FD5(ND2X3),FD6(ND2X3),FD7(ND2X3)
      DIMENSION FDVERT(ND2X3),FDTIME(ND2X3),FDSINS(ND2X3),FDMS(ND2X3)
C            
C      
C***********ADD ENTRIES TO TABLES BELOW FOR NEW TRANSFORMS***********     
C
C        INCREASE DIMENSION OF ARRAYS HERE IF NEW ENTRIES ARE ADDED
C
      INTEGER IDTBL(7), MWRD1(7), MWRD2(7), CWRD1(7), 
     1        CWRD2(7), CWRD4(7)
C
C        TABLE OF CCCFFF VALUES THAT ARE ACCOMMODATED BY THIS ROUTINE
C
      DATA IDTBL/081001, 081002, 082001, 082002, 
     1           082040, 082047, 082050/
C
C        TABLE OF WORD 1 FOR VARIABLE THAT IS TO BE TRANSFORMED.
C        NOTE: DATA SOURCE (DD) IS CONTROLLED BY IDPARS(4) WHICH
C        IS PASSED TO THIS ROUTINE, SO JUST SET DD = 0 HERE.
C        BINARIES ARE NOT SUPPORTED, SO B MUST BE ZERO HERE.
C        (FORMAT: CCCFFFBDD)
C
      DATA MWRD1/001000000, 001000000, 002001000, 002000000, 
     1           002048000, 002047000, 002050000/
C
C        TABLE OF WORD 2 FOR VARIABLE THAT IS TO BE TRANSFORMED.
C        (FORMAT: VLLLLUUUU)
C
      DATA MWRD2/110000500, 110000850, 000000002, 000000850,
     1           000000000, 000000000, 000000000/
C
C        TABLE OF WORD 1 FOR (GRIDDED) CONSTANT THAT IS TO BE SUBTRACTED
C        FROM THE VARIABLE SPECIFIED IN TABLES MWRD1 AND MWRD2 ABOVE.
C        NOTE: FOR GRIDDED CONSTANTS THE GRID PROJECTION AND SPACING
C        ARE INDICATED BY F1 AND F2, RESPECTIVELY.  
C        (FORMAT: CCCFFFBDD)
C
      DATA CWRD1/461541000, 461542000, 462541000, 462542000,
     1           462543000, 462543000, 462543000/
C
C        TABLE OF WORD 2 FOR CONSTANT THAT IS TO BE SUBTRACTED FROM 
C        THE VARIABLE SPECIFIED IN TABLES MWRD1 AND MWRD2 ABOVE.
C        (FORMAT: VLLLLUUUU)
C
      DATA CWRD2/030190000, 030190000, 030190000, 030190000,
     1           030190000, 030190000, 030190000/
C
C        TABLE OF WORD 4 FOR CONSTANT THAT IS TO BE SUBTRACTED FROM 
C        THE VARIABLE SPECIFIED IN TABLES MWRD1 AND MWRD2 ABOVE. 
C        NOTE: THE INTERPOLATION TYPE "I" WILL BE 4 FOR GRIDDED DATA
C        OR 0 FOR VECTOR, SO JUST SET I = 0 HERE.  
C        (FORMAT: WXXXXYYISG)
C
      DATA CWRD4/0000000000, 0000000000, 0000000000, 0000000000,
     1           0000000000, 0000000000, 0000000000/
C
C************************END OF ID TABLES*****************************
C
C        INITIALIZATION
C
      IER = 0
      ISTAV = 1     
      ISTAV1 = 0
      ISTAV2 = 0
      MDGRD = 9999.
      MDSTN = 9999.
      CDSTN = 9999.
      SDATA = 9999.
      WKGRD = 9999.
C
C        MAKE SURE THE VARIABLE IS ACCOMMODATED BY THIS ROUTINE -
C        IF THE CCCFFF OF THE ID IS NOT IN IDTBL, THIS IS A FATAL ERROR
C
      DO 110 I=1,7
         IF(IDPARS(1)*1000+IDPARS(2).EQ.IDTBL(I)) THEN
            KVRB = I
	    GOTO 115
	 ENDIF
  110 CONTINUE  
      WRITE(KFILDO,FMT='(/1X,''****PREDICTOR '',I9.9,I10.9,I10.9,I4.3,
     1      '' NOT ACCOMMODATED IN LOGITTRANS'')') (JD(J),J=1,4)
      IER=101
      GOTO 200
C
C        ----------------------------------------------------------------
C        STEP 1. FETCH OR COMPUTE THE VARIABLE THAT IS TO BE TRANSFORMED  
C        ----------------------------------------------------------------
C
C        SET UP THE ID FOR THE VARIABLE THAT IS TO BE TRANSFORMED
C        THRESHOLDING IS NOT SUPPORTED
C  
  115 MID(1)=MWRD1(KVRB)+IDPARS(4)
      MID(2)=MWRD2(KVRB)
      MID(3)=IDPARS(9)*1000000+IDPARS(12)
      MID(4)=IDPARS(13)*100+IDPARS(14)*10
      THRESH1=0
C  
      MD(1)=MWRD1(KVRB)+IDPARS(4)
      MD(2)=MWRD2(KVRB)
      MD(3)=IDPARS(9)*1000000+IDPARS(12)
      MD(4)=0
C      
      CALL PRSID1(KFILDO,MID,MDPARS)
C
C        FIRST TEST TO SEE IF TIME INTERPOLATION IS REQUIRED,
C        I.E. IF IDPARS(13) IS 8 OR 9.  IF YES THEN CALL TGINTRP
C        TO COMPUTE THE TIME INTERPOLATED VALUE FOR THE PREDICTOR.
C        VALUES RETURNED FROM TGINTRP ARE ALREADY INTERPOLATED
C        TO THE STATIONS.
C 
      IF(IDPARS(13).EQ.8.OR.IDPARS(13).EQ.9) THEN
C
         CALL TGINTRP(KFILDO,KFIL10,NFIRST,
     1                MID,MDPARS,THRESH1,MD,NDATE,
     2                KFILRA,RACESS,NUMRA,
     3                ICALL,CCALL,ICALLD,CCALLD,NAME,
     4                NELEV,STALAT,STALON,
     5                ITIMEZ,ISDATA,MDSTN,SDATA1,DIR,ND1,NSTA,
     6                NGRIDC,NGRID,ND11,NSLAB,IPACK,IWORK,ND5,
     7                LSTORE,ND9,LITEMS,CORE,ND10,NBLOCK,NFETCH,
     8                IS0,IS1,IS2,IS4,ND7,
     9                FD1,FD2,FD3,FD4,FD5,FD6,FD7,
     A                FDVERT,FDTIME,FDSINS,FDMS,ND2X3,
     B                ISTAV1,L3264B,L3264W,MISTOT,IER1)
C
         IF(IER1.EQ.0) GOTO 125
C
         WRITE(KFILDO,FMT='(/1X,''****PREDICTOR '',I9.9,I10.9,I10.9,I4.3,
     1         '' COMPUTATION FAILED IN TGINTRP***'')') (MD(J),J=1,4)
         IER=102
         GOTO 200
C
      ENDIF
C      
C        ATTEMPT TO FETCH THE VARIABLE FROM MOS-2000 STORAGE.
C        GFETCH WILL RETURN IER = 47 IF THE DATA CANNOT BE FOUND.
C        ANY ERROR OTHER THAN 47 MEANS WE SHOULD PROBABLY STOP
C
      CALL GFETCH(KFILDO,KFIL10,MD,7777,LSTORE,ND9,LITEMS,IS0,
     1            IS1,IS2,IS4,ND7,IPACK,IWORK,MDGRD,ND2X3,NWORDS,
     2            NPACK,NDATE,NTIMES,CORE,ND10,NBLOCK,NFETCH,
     3            NSLAB,MISSP,MISSS,L3264B,1,IER2)
      IF(MISSP.NE.0) MISTOT=MISTOT+1     
C     
      IF(IER2.EQ.0) GOTO 125
      IF(IER2.EQ.47) GOTO 120
C
      WRITE(KFILDO,FMT='(/1X,''****ERROR IN GFETCH (IER='',I3,
     1      '') WHEN ATTEMPTING TO FETCH VARIABLE '', 
     2      I9.9,I10.9,I10.9,I4.3)') IER2, (MD(J),J=1,4)
      IER=103
      GOTO 200
C
C        IF GFETCH CANNOT FIND THE DATA ON DISK THEN ATTEMPT TO
C        COMPUTE THE VARIABLE VIA A CALL TO OPTN2.  
C
  120 CALL OPTN2(KFILDO,KFIL10,NFIRST,
     1           MID,MDPARS,THRESH1,MD,NDATE,
     2           KFILRA,RACESS,NUMRA,
     3           ICALL,CCALL,ICALLD,CCALLD,NAME,
     4           NELEV,STALAT,STALON,
     5           ITIMEZ,ISDATA,MDSTN,SDATA1,DIR,ND1,NSTA,
     6           NGRIDC,NGRID,ND11,NSLAB,IPACK,IWORK,MDGRD,ND2X3,
     7           LSTORE,ND9,LITEMS,CORE,ND10,NBLOCK,NFETCH,
     8           IS0,IS1,IS2,IS4,ND7,
     9           FD1,FD2,FD3,FD4,FD5,FD6,FD7,
     A           FDVERT,FDTIME,FDSINS,FDMS,ND2X3,
     B           ISTAV1,L3264B,L3264W,MISTOT,IER3)
C
C        IF OPTN2 RETURNS AN ERROR THEN THIS IS FATAL
C     
      IF(IER3.EQ.0) GOTO 125
C
      WRITE(KFILDO,FMT='(/1X,''****PREDICTOR '',I9.9,I10.9,I10.9,I4.3,
     1      '' COMPUTATION FAILED IN OPTN2***'')') (MD(J),J=1,4)
      IER=104
      GOTO 200
C
C        IF ISTAV1=0 THEN INTERPOLATE THE DATA FROM THE MODEL GRID  
C        TO THE STATIONS. ANY SMOOTHING IS DONE BEFORE INTERPOLATION.
C
  125 IF(ISTAV1.EQ.1) GOTO 130
C  
      IF(IDPARS(14).LT.0.OR.IDPARS(14).GT.5) THEN
         WRITE(KFILDO,FMT='(/1X,''**** THE TYPE OF SMOOTHING IS NOT '',
     1         ''ACCOMMODATED BY SUBROUTINE LOGITTRANS, '',
     2         ''IDPARS(14) = '',I2)') IDPARS(14)
         IER=105
         GOTO 200
      ELSEIF(IDPARS(13).LT.1.OR.IDPARS(13).GT.3) THEN
         WRITE(KFILDO,FMT='(/1X,''**** TYPE OF INTERPOLATION IS NOT '',
     1         ''ACCOMMODATED BY SUBROUTINE LOGITTRANS, '',
     2         ''IDPARS(13) = '',I2)') IDPARS(13)
         IER=106
         GOTO 200
      ENDIF
C
C        DIMENSIONS OF MODEL GRID
C
      NX=IS2(3)
      NY=IS2(4)
C      
C        APPLY SMOOTHING - TYPE SPECIFIED BY IDPARS(14)
C     
      IF(IDPARS(14).EQ.0) WKGRD=MDGRD
      IF(IDPARS(14).EQ.1) CALL SMTH5(KFILDO,MDGRD,WKGRD,NX,NY)
      IF(IDPARS(14).EQ.2) CALL SMTH9(KFILDO,MDGRD,WKGRD,NX,NY)
      IF(IDPARS(14).EQ.3) CALL SMTH25(KFILDO,MDGRD,WKGRD,NX,NY)
      IF(IDPARS(14).EQ.4) CALL SMTH2X(KFILDO,MDGRD,WKGRD,NX,NY)
      IF(IDPARS(14).EQ.5) CALL SMTH3X(KFILDO,MDGRD,WKGRD,NX,NY)      
C
C        PERFORM INTERPOLATION TO STATIONS - TYPE SPECIFIED BY IDPARS(13)
C
      IF(IDPARS(13).EQ.1) THEN
         CALL INTRPA(KFILDO,WKGRD,NX,NY,DIR(1,1,NSLAB),
     1               ND1,NSTA,MDSTN)
      ELSEIF(IDPARS(13).EQ.2) THEN
         CALL INTRPB(KFILDO,WKGRD,NX,NY,DIR(1,1,NSLAB),
     1               ND1,NSTA,MDSTN)
      ELSEIF(IDPARS(13).EQ.3) THEN
         CALL INTRPC(KFILDO,WKGRD,NX,NY,DIR(1,1,NSLAB),
     1               ND1,NSTA,MDSTN)
      ENDIF      
C
C        ------------------------------------------------------
C        STEP 2. FETCH 50% VALUES FROM RANDOM ACCESS FILE.
C        VALUES RETURNED FROM GRDCNST ARE ALREADY AT STATIONS.
C        ------------------------------------------------------
C
C        SET UP THE ID FOR THE CONSTANT DATA
C    
  130 CID(1)=CWRD1(KVRB)
      CID(2)=CWRD2(KVRB)
      CID(3)=IDPARS(12)
      CID(4)=CWRD4(KVRB)
C      
      MD(1)=CWRD1(KVRB)	      
      MD(2)=CWRD2(KVRB)
      MD(3)=IDPARS(12)
      MD(4)=0      
C      
      CALL PRSID2(KFILDO,CID,MDPARS,THRESH2)
C
      MDPARS(13) = 4
C
      CALL GRDCNST(KFILDO,MDPARS,CID,MD,NDATE,
     1             KFILRA,RACESS,NUMRA,CCALL,
     2             NAME,STALAT,STALON,CDSTN,
     3             DIR,ND1,NSTA,NGRIDC,NGRID,ND11,NSLAB,
     4             IPACK,IWORK,IDATA,ND5,
     5             IS0,IS1,IS2,IS4,ND7,FD1,FD2,ND2X3,
     6             IP12,ISTAV2,L3264B,IER3) 
C
      IF(IER3.EQ.0) GOTO 135
C      
      WRITE(KFILDO,FMT='(/1X,''****ERROR IN GRDCNST (IER='',I3,
     1      '') WHEN ATTEMPTING TO FETCH VARIABLE '', 
     2      I9.9,I10.9,I10.9,I4.3)') IER3, (CID(J),J=1,4)
      IER=107
      GOTO 200
C
C        ---------------------------------------------------------
C        STEP 3. COMPUTE THE TRANSFORMED VALUES FOR EACH STATION.
C        VALUES ARE SET TO MISSING IF EITHER THE MODEL DATA
C        OR CONSTANT DATA ARE MISSING.  
C        ---------------------------------------------------------
C 
  135 DO 140 J=1,NSTA  
         IF(MDSTN(J).EQ.9999..OR.CDSTN(J).EQ.9999.) THEN
	    SDATA(J) = 9999.
	 ELSE
	    SDATA(J) = MDSTN(J) - CDSTN(J)
	 ENDIF
  140 CONTINUE
C
      GOTO 300
C 
C        SET OUTPUT STATION VALUES TO MISSING WHEN AN ERROR HAS OCCURRED.
C
  200 DO 210 J=1,NSTA
         SDATA(J) = 9999.
  210 CONTINUE
C
  300 RETURN
      END
