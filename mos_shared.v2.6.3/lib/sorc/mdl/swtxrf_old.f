      SUBROUTINE SWTXRF_OLD(KFILDO,KFIL10,IDPARS,JD,NDATE,NGRIDC,ND11,
     1   NSLAB,IPACK,IWORK,DATA,ND5,LSTORE,ND9,LITEMS,CORE,ND10,NBLOCK,
     2   NFETCH,IS0,IS1,IS2,IS4,ND7,ND2X3,ISTAV,L3264B,MISTOT,
     3   FD1,FD2,FD3,FD5,FD6,FD4,FD7,KFILRA,RACESS,NUMRA,ND1,
     4   CCALL,ICALLD,CCALLD,ISDATA,SDATA,NSTA,
     *   NAME,STALAT,STALON,NGRID,
     5   LASTL,LASTD,NSTORE,IP16,L3264W,DIR,IP12,IER)
C
C        JULY   2002    HUGHES  MDL  MOS-2000
C        DEC    2002    WEISS   CHANGED ND5 TO ND2X3,UPDATED CALL TO
C                               CONST, AND THE ADDITION OF ARGUMENTS
C                               NAME,STALAT,STALON,NGRID, TO CALL.
C        DEC    2003    RLC     CHANGED COMPUTATIONAL LOOP TO 1,ND1
C                               FROM 1,ND2X3 BECAUSE IT WAS CAUSING
C                               ERRORS.
C        JUNE   2005    RLC     CHANGED NAME TO _OLD BECAUSE THIS VERSION
C                               IS USED IN OPERATIONAL EQNS BUT IS WRONG
C                               AND NEEDS TO BE FIXED.
C
C        PURPOSE 
C           SUBROUTINE SWTXRF COMPUTES THE INTERACTIVE PREDICTOR SF, DEFINED
C           BY THE PRODUCT OF THE SWEAT INDEX AND THE DAILY SEVERE WX
C           FREQUENCY (F).  THE SWEAT INDEX IS CALCULATED BY SUBROUTINE SWEATI.F 
C           F IS OBTAINED BY LINEAR INTERPOLATION BETWEEN THE MONTHLY CLIMATOLOGICAL 
C           VALUES OF SEVERE THUNDERSTORM FREQUENCY STORED ON DISK.  THE SWEAT INDEX 
C           AND SEVERE THUNDERSTORM FREQUENCY INPUT FILES ARE STORED ON DISK IN TDLPACK 
C           FORMAT.  THE FREQUENCY FILES ARE IN THE FORM OF RANDOM-ACCESS (CONSTANT)
C           FILES ON DISK.  THE CONSTANT FILES ARE CREATED BY U350 AND U352.
C           SWTXRF VALUES ARE RETURNED TO THE CALLING PROGRAM (OPTION) IN ARRAY  
C           SDATA.  PRIMARY USE OF THE SWTXRF PREDICTOR IS TO PREDICT SEVERE 
C           THUNDERSTORM ACTIVITY.
C            
C        DATA SET USE
C              KFILDO = DEFAULT UNIT NUMBER FOR OUTPUT(PRINT) FILE.
C                       (OUTPUT)
C              KFIL10 = UNIT NUMBER OF TDL MOS-2000 FILE SYSTEM
C                       ACCESS.(INPUT-OUTPUT)
C
C        VARIABLES
C             CORE(J) = THE ARRAY TO STORE OR RETRIEVE THE DATA
C                       IDENTIFIED IN LSTORE(,) (J=1,ND10).
C                       WHEN CORE() IS FULL DATA ARE STORED ON DISK.
C                       (INPUT)
C             DATA( ) = CONTAINS SWEAT STABILITY INDEX FROM SUBROUTINE SWEATI 
C                       (OUTPUT)
C           DIR(K,J,) = THE IX (J=1) AND JY (J=2) POSITIONS ON THE
C                       GRID FOR STATION K (K=1,NSTA).  (INPUT)  
C              FD1(K) = WORK ARRAY (CONTAINS INTERPOLATED SWEAT INDEX VALUES  
C                       FROM SUBROUTINE INTRPB)
C              FD2(K) = WORK ARRAY  
C                       (INTERNAL)
C           IDPARS(J) = THE PARSED, INDIVIDUAL COMPONENTS OF THE 
C                       PREDICTOR ID CORRESPONDING TO ID() (J=1,15).
C                       (INPUT)
C                       J=1--CCC (CLASS OF VARIABLE),
C                       J=2--FFF (SUBCLASS OF VARIABLE),
C                       J=3--B (BINARY INDICATOR),
C                       J=4--DD (DATA SOURCE, MODEL NUMBER),
C                       J=5--V (VERTICAL APPLICATION),
C                       J=6--LBLBLBLB (BOTTOM OF LAYER, 0 IF ONLY
C                                      1 LAYER)
C                       J=7--LTLTLTLT (TOP OF LAYER)
C                       J=8--T (TRANSFORMATION)
C                       J=9--RR (RUN TIME OFFSET, ALWAYS + AND 
C                                BACK IN TIME)
C                       J=10-OT (TIME APPLICATION)
C                       J=11-OH (TIME PERIOD IN HOURS)
C                       J=12-TAU (PROJECTION IN HOURS)
C                       J=13-I (INTERPOLATION TYPE)
C                       J=14-S (SMOOTHING INDICATOR)
C                       J=15-G (GRID INDICATOR)
C                 IER = STATUS RETURN
C                         0 = GOOD RETURN
C                       103 = FAILED FETCH FOR SWEAT INDEX OR MONTHLY FREQUENCIES 
C                             (SEE GFETCH FOR OTHER VALUES)
C                             WHEN IER NE 0, DATA ARE RETURNED AS MISSING.
C                       (INTERNAL-OUTPUT)
C            IPACK(J) = WORK ARRAY (J=1,ND2X3). (INTERNAL)
C              IS0(J) = MOS-2000 GRIB SECTION 0 ID'S (J=1,3).
C                       (INTERNAL)
C              IS1(J) = MOS-2000 GRIB SECTION 1 ID'S (J=1,22+).
C                       (INTERNAL)
C              IS2(J) = MOS-2000 GRIB SECTION 2 ID'S (J=1,12).
C                       IS2(3) AND IS2(4) ARE USED BY THE CALLING
C                       PROGRAM AS THE GRID DIMENSIONS.
C                       (INTERNAL-OUTPUT)
C              IS4(J) = MOS-2000 GRIB SECTION 4 ID'S (J=1,4).
C                       (INTERNAL)
C               ISTAV = 1 SINCE THE DATA RETURNED ARE STATION DATA.
C                       (OUTPUT)
C            IWORK(J) = WORK ARRAY (J=1,ND2X3). (INTERNAL)
C                   J = LOOP CONTROL VARIABLE
C               JD(J) = THE BASIC INTEGER PREDICTOR ID (J=1,4).
C                       THIS IS THE SAME AS ID(J), EXCEPT THAT
C                       THE PORTIONS PERTAINING TO PROCESSING
C                       ARE OMITTED:
C                       B = IDPARS(3),
C                       T = IDPARS(8),
C                       I = IDPARS(13),
C                       S = IDPARS(14),
C                       G = IDPARS(15).
C                       JD() IS USED TO HELP IDENTIFY THE BASIC MODEL
C                       FIELDS AS READ FROM THE ARCHIVE. (INPUT)
C              L3264B = INTEGER WORD LENGTH IN BITS OF MACHINE BEING 
C                       USED (EITHER 32 OR 64). (INPUT)
C              L3264W = NUMBER OF WORDS IN 64 BITS, EITHER 1 OR 2.  (INPUT)
C              LITEMS = THE NUMBER OF ITEMS (COLUMNS) IN LSTORE(,)
C                       THAT HAVE BEEN USED IN THIS RUN. (INPUT)
C         LSTORE(L,J) = THE ARRAY HOLDING INFORMATION ABOUT THE
C                       DATA STORED (L=1,12) (J=1,LITEMS).
C                       (INPUT-OUTPUT)
C                       L=1,4--THE 4 ID'S FOR THE DATA.
C                       L=5  --LOCATION OF STORED DATA.  WHEN IN CORE,
C                              THIS IS THE LOCATION IN CORE() WHERE
C                              THE DATA START.  WHEN ON DISK,
C                              THIS IS MINUS THE RECORD NUMBER WHERE
C                              THE DATA START.
C                       L=6  --THE NUMBER OF 4-BYTE WORDS STORED.
C                       L=7  --2 FOR DATA PACKED IN TDL GRIB, 1 FOR NOT.
C                       L=8  --THE DATE/TIME OF THE DATA IN FORMAT
C                              YYYYMMDDHH.
C                       L=9  --NUMBER OF TIMES DATA HAVE BEEN RETRIEVED.
C                       L=10 --NUMBER OF THE SLAB IN DIR(, ,L) AND
C                              IN NGRIDC(,L) DEFINING THE
C                              CHARACTERISTICS OF THIS GRID.
C                       L=11 --THE NUMBER OF THE PREDICTOR IN THE SORTED
C                              LIST IN ID(,N) (N=1,NPRED) FOR WHICH
C                              THIS VARIABLE IS NEEDED, WHEN IT IS
C                              NEEDED ONLY ONCE FROM LSTORE(,).
C                              WHEN IT IS NEEDED MORE THAN ONCE, THE 
C                              VALUE IS SET = 7777.
C                       L=12 --USED INITIALLY IN ESTABLISHING
C                              MOSTORE(,). LATER USED AS A WAY OF
C                              DETERMINING WHETHER TO KEEP THIS
C                              VARIABLE.
C               MISSP = PRIMARY MISSING VALUE INDICATOR.  RETURNED AS
C                       0 WHEN DATA ARE NOT PACKED. (INTERNAL)
C               MISSS = SECONDARY MISSING VALUE INDICATOR.  RETURNED AS
C                       0 WHEN DATA ARE NOT PACKED.  (INTERNAL)
C              MISTOT = TOTAL NUMBER OF TIMES A MISSING INDICATOR
C                       HAS BEEN ENCOUNTERED IN UNPACKING GRIDS.
C                       (INPUT-OUTPUT)
C              NBLOCK = THE BLOCK SIZE IN WORDS OF THE MOS-2000 RANDOM
C                       DISK FILE. (INPUT)
C                 ND1 = MAXIMUM NUMBER OF STATIONS THAT CAN BE DEALT WITH.
C                       DIMENSION OF SEVERAL VARIABLES.  (INPUT)
C               ND2X3 = DIMENSION OF SEVERAL VARIABLES.  THE SIZE OF
C                       THE GRID IS NOT KNOWN BEFORE FDTK AND FDDP
C                       ARE FETCHED.  ALL WORK ARRAYS ARE DIMENSIONED
C                       ND2X3                              (INPUT)
C                 ND5 = FORMER DIMENSION OF IPACK(), AND IWORK()
C                       ALL DATA ARRAYS ARE DIMENSIONED ND2X3.(INPUT)
C                 ND7 = DIMENSION OF IS0(),IS1(),IS2(), AND IS4().
C                       NOT ALL LOCATIONS ARE USED. (INPUT)
C                 ND9 = THE SECOND DIMENSION OF LSTORE(,). (INPUT)
C                ND10 = DIMENSION OF CORE(). (INPUT)
C                ND11 = MAXIMUM NUMBER OF GRID COMBINATIONS THAT CAN
C                       BE DEALT WITH ON THIS RUN.  LAST DIMENSION 
C                       OF NGRIDC(,). (INPUT)
C               NDATE = THE DATE/TIME FOR WHICH PREDICTOR IS NEEDED.
C                       (INPUT)
C              NFETCH = INCREMENTED EACH TIME GFETCH IS ENTERED.
C                       IT IS A RUNNING COUNT FROM THE BEGINNING OF
C                       THE PROGRAM.  THIS COUNT IS MAINTAINED IN
C                       CASE THE USER NEEDS IT(DIAGNOSTICS, ETC.).
C                       (OUTPUT)
C         NGRIDC(L,M) = HOLDS THE GRID CHARACTERISTICS (L=1,6) FOR
C                       EACH GRID COMBINATION (M=1,NGRID).
C                       L=1--MAP PROJECTION NUMBER (3=LAMBERT, 5=
C                            POLAR STEREOGRAPHIC).
C                       L=2--GRID LENGTH IN METERS.
C                       L=3--LATITUDE AT WHICH THE GRID LENGTH IS
C                            CORRECT *1000.
C                       L=4--GRID ORIENTATION IN DEGREES * 1000.
C                       L=5--LATITUDE OF LL CORNER IN DEGREES *1000.
C                       L=6--LONGITUDE OF LL CORNER IN DEGREES
C                            *1000.
C               NPACK = 2 FOR TDL GRIB PACKED DATA; 1 FOR NOT PACKED
C                       THIS IS RETURNED FROM GFETCH. (INTERNAL)
C               NSLAB = THE NUMBER OF THE SLAB IN DIR(, ,) AND
C                       IN NGRIDC(,) DEFINING THE CHARACTERISTICS
C                       OF THIS GRID. (OUTPUT)
C              NTIMES = THE NUMBER OF TIMES, INCLUDING THIS ONE,
C                       THAT THE RECORD HAS BEEN FETCHED.  THIS IS 
C                       STORED IN LSTORE(9,). (INTERNAL)
C              NWORDS = NUMBER OF WORDS RETURNED IN DATA().  THIS 
C                       IS RETURNED FROM GFETCH (INTERNAL)
C          CCALL(K,J) = 8-CHARACTER STATION CALL LETTERS (OR GRIDPOINT
C                       LOCATIONS FOR GRID DEVELOPMENT) TO PROVIDE
C                       OUTPUT FOR (J=1) AND 5 POSSIBLE OTHER STATION
C                       CALL LETTERS (J=2,6) THAT CAN BE USED INSTEAD
C                       IF THE PRIMARY (J=1) STATION CANNOT BE FOUND 
C                       IN AN INPUT DIRECTORY (K=1,NSTA).  ALL STATION
C                       DATA ARE KEYED TO THIS LIST, EXCEPT POSSIBLY 
C                       CCALLD( ) AND CCALLP( ).  (CHARACTER*8)
C         ICALLD(L,K) = 8 STATION CALL LETTERS AS CHARACTERS IN AN INTEGER
C                       VARIABLE (L=1,L3264W) (K=1,NSTA).
C                       EQUIVALENCED TO CCALLD( ).  (INTERNAL)
C           CCALLD(K) = 8 STATION CALL LETTERS (K=1,NSTA).  
C           ISDATA(K) = WORK ARRAY (K=1,ND1).  (INTERNAL)
C            SDATA(K) = RELATIVE FREQUENCY (CONSTANT) DATA RETURNED (K=1,NSTA)
C                       FROM SUBROUTINE CONST (OUTPUT).
C                       ALSO CONTAINS PRODUCT OF RELATIVE FREQUENCY DATA AND
C                       K STABILITY INDEX. (OUTPUT)
C                NSTA = NUMBER OF STATIONS OR LOCATIONS BEING DEALT WITH.
C                       (INPUT)
C               LASTD = TOTAL NUMBER OF PHYSICAL RECORDS ON DISK FOR MOS-2000
C                       INTERNAL STORAGE.  MUST BE CARRIED WHENEVER GSTORE
C                       IS TO BE CALLED.  (INPUT)
C               LASTL = THE LAST LOCATION IN CORE( ) USED FOR MOS-2000 INTERNAL
C                       STORAGE.  INITIALIZED TO 0 ON FIRST ENTRY TO GSTORE.
C                       ALSO INITIALIZED IN U201 IN CASE GSTORE IS NOT ENTERED.
C                       (INPUT-OUTPUT)
C              NSTORE = THE NUMBER OF TIMES GSTORE HAS BEEN ENTERED.  GSTORE
C                       KEEPS TRACK OF THIS AND RETURNS THE VALUE.  (OUTPUT)
C                IP16 = DIAGNOSTICS FOR FINDST (STATIONS ON THE RANDOM
C                       ACCESS FILE).  (INPUT)
C     
C     IMPLICIT NONE
      CHARACTER*60 RACESS(NUMRA) 
      CHARACTER*8 CCALL(ND1,6),CCALLD(ND2X3)

CCV
      CHARACTER*20 NAME(ND1)
      REAL STALAT(ND1),STALON(ND1)
      INTEGER NGRID
CVC


      INTEGER ICALL(L3264W,ND1,6)
      INTEGER NX,NY,KK,J,JSTA,NUMRA,NSTA,LASTL,LASTD,NSTORE
      INTEGER LSTORE(12,ND9),NGRIDC(6,ND11)
      INTEGER IS0(ND7),IS1(ND7),IS2(ND7),IS4(ND7)
      INTEGER IPACK(ND2X3),IWORK(ND2X3)
      INTEGER IDPARS(15),LDPARS(15),JD(4),LD(4)
      INTEGER IER,ISTAV,KFILDO,KFIL10,L3264B,LITEMS,
     1        MISTOT,NBLOCK,ND2X3,ND1,ND5,ND7,ND9,ND10,ND11,
     2        NDATE,NFETCH,NSLAB,HOUR
C    3        MISSP,MISSS,NPACK,NTIMES,NWORDS 
      REAL CORE(ND10),DATA(ND2X3),FD4(ND2X3),DIR(ND1,2,ND11),FD7(ND2X3)
      REAL FD1(ND2X3),FD2(ND2X3),FD3(ND2X3),FD5(ND2X3),FD6(ND2X3)
      REAL IDATA(ND1),SWORK(ND2X3),GDATA(ND2X3)
      INTEGER KFILRA(NUMRA)
      INTEGER ICALLD(L3264W,ND2X3),ISDATA(ND1)
      REAL SDATA(ND1),PWORK(IS2(3),IS2(4))
C***********************************************************************
C        STEP 1. INITIALIZATION
C
      IER  =0
      ISTAV=1
      SDATA=0.0
      DATA=0.0
C
C        MAKE SURE THIS SUBROUTINE DEALS WITH THE PREDICTOR
C        007360 = SWEATI * PREVIOUS 3 HR SEVERE WX
C        007365 = SWEATI * SUBSEQUENT 3 HR SEVERE WX
C        007370 = SWEATI * PREVIOUS 6 HR SEVERE WX
C        007375 = SWEATI * SUBSEQUENT 6 HR SEVERE WX
C        007380 = SWEATI * PREVIOUS 12 HR SEVERE WX
C        007385 = SWEATI * SUBSEQUENT 12 HR SEVERE WX
C        007390 = SWEATI * PREVIOUS 24 HR SEVERE WX
C
      IF((IDPARS(1).NE.007).OR.((IDPARS(2).NE.360).AND.
     1 (IDPARS(2).NE.365).AND.(IDPARS(2).NE.370).AND.
     2 (IDPARS(2).NE.375).AND.(IDPARS(2).NE.380).AND.
     3 (IDPARS(2).NE.385).AND.(IDPARS(2).NE.390))) THEN
      WRITE(12,101)(JD(J),J=1,4)
 101  FORMAT(/,'****IDPARS(1) AND IDPARS(2) DO NOT INDICATE SWTXRF',
     1 ' PREDICTOR. ',I9.9,2I10.9,I4.3,' NOT COMPUTED IN LCL. ')
      ENDIF
C
C        STEP 2. COMPUTE THE SWEAT STABILITY INDEX
C  
      LD(1)=007220000+IDPARS(4)
      LD(2)=000000000
      LD(3)=IDPARS(9)*1000000+IDPARS(12)  
      LD(4)=0 
      CALL PRSID1(KFILDO,LD,LDPARS)
C
      CALL SWEATI(KFILDO,KFIL10,LDPARS,LD,NDATE,
     1            NGRIDC,ND11,NSLAB,IPACK,IWORK,
     2            DATA,ND5,LSTORE,ND9,LITEMS,CORE,ND10,
     3            NBLOCK,NFETCH,IS0,IS1,IS2,IS4,ND7,FD1,
     4            FD2,FD3,FD4,FD5,FD6,FD7,
     5            ND2X3,ISTAV,L3264B,MISTOT,IER)
C
      IF(IER.EQ.0) GO TO 120
C
      WRITE(KFILDO,104) 
  104 FORMAT(/' ****SWTXRF -- SWEAT INDEX COMPUTATION FAILED')
      IER=103
      GO TO 200
C
C        STEP 3. INTERPOLATE THE SWEAT INDEX VALUES FROM THE NCEP
C                MODEL GRID TO THE STATION (GRIDPOINT) LIST 
C
  120 NX=IS2(3)
      NY=IS2(4)
      JSTA=NSTA
      KK=0
C
C        SMOOTH SWEAT INDEX IF DESIRED.
C
      IF(IDPARS(14).EQ.1)CALL SMTH5 (KFILDO,DATA,SWORK,NX,NY)
      IF(IDPARS(14).EQ.2)CALL SMTH9 (KFILDO,DATA,SWORK,NX,NY)
      IF(IDPARS(14).EQ.3)CALL SMTH25(KFILDO,DATA,SWORK,NX,NY)
 
      CALL INTRPB(KFILDO,DATA,NX,NY,DIR(1,1,NSLAB),ND1,NSTA,IDATA) 
C
C        STEP 4. FETCH THE MONTHLY LIGHTNING RELATIVE
C                FREQUENCIES FROM THE RANDOM-ACCESS
C                CONSTANT FILE
C
C     LD(1)=43730X000 IF ID IS 007365000, CSVRWX FOR THE SUBSEQUENT 3 HOURS
C     LD(1)=43731X000 IF ID IS 007370000, CSVRWX FOR THE PREVIOUS 6 HOURS
C     LD(1)=43731X000 IF ID IS 007375000, CSVRWX FOR THE SUBSEQUENT 6 HOURS
C     LD(1)=43732X000 IF ID IS 007380000, CSVRWX FOR THE PREVIOUS 12 HOURS
C     LD(1)=43732X000 IF ID IS 007385000, CSVRWX FOR THE SUBSEQUENT 12 HOURS
C     LD(1)=43733X000 IF ID IS 007390000, CSVRWX FOR THE PREVIOUS 24 HOURS
C
C       IDATE6=AINT(NDATE/100)*100
        HOUR=NDATE - (NDATE/100)*100
      IF(IDPARS(2).EQ.360) THEN      
C        SET UP RELATIVE FREQUENCY ID FOR 3 HRS PREVIOUS
        IF(HOUR.EQ.00) LD(1)=437300000
        IF(HOUR.EQ.03) LD(1)=437301000
        IF(HOUR.EQ.06) LD(1)=437302000
        IF(HOUR.EQ.09) LD(1)=437303000
        IF(HOUR.EQ.12) LD(1)=437304000
        IF(HOUR.EQ.15) LD(1)=437305000
        IF(HOUR.EQ.18) LD(1)=437306000
        IF(HOUR.EQ.21) LD(1)=437307000
      ELSE IF(IDPARS(2).EQ.365) THEN
C        SET UP RELATIVE FREQUENCY ID FOR 3 HRS SUBSEQUENT
        IF(HOUR.EQ.00) LD(1)=437301000
        IF(HOUR.EQ.03) LD(1)=437302000
        IF(HOUR.EQ.06) LD(1)=437303000
        IF(HOUR.EQ.09) LD(1)=437304000
        IF(HOUR.EQ.12) LD(1)=437305000
        IF(HOUR.EQ.15) LD(1)=437306000
        IF(HOUR.EQ.18) LD(1)=437307000
        IF(HOUR.EQ.21) LD(1)=437300000
      ELSE IF(IDPARS(2).EQ.370) THEN 
C        SET UP RELATIVE FREQUENCY ID FOR 6 HRS PREVIOUS
        IF(HOUR.EQ.00) LD(1)=437310000 
        IF(HOUR.EQ.06) LD(1)=437311000 
        IF(HOUR.EQ.12) LD(1)=437312000
        IF(HOUR.EQ.18) LD(1)=437313000
      ELSE IF(IDPARS(2).EQ.375) THEN  
C        SET UP RELATIVE FREQUENCY ID FOR 6 HRS SUBSEQUENT
        IF(HOUR.EQ.00) LD(1)=437311000 
        IF(HOUR.EQ.06) LD(1)=437312000 
        IF(HOUR.EQ.12) LD(1)=437313000
        IF(HOUR.EQ.18) LD(1)=437310000
      ELSE IF(IDPARS(2).EQ.380) THEN   
C        SET UP RELATIVE FREQUENCY ID FOR 12 HRS PREVIOUS
        IF(HOUR.EQ.00) LD(1)=437320000 
        IF(HOUR.EQ.06) LD(1)=437321000 
        IF(HOUR.EQ.12) LD(1)=437322000
        IF(HOUR.EQ.18) LD(1)=437323000
      ELSE IF(IDPARS(2).EQ.385) THEN   
C        SET UP RELATIVE FREQUENCY ID FOR 12 HRS SUBSEQUENT
        IF(HOUR.EQ.00) LD(1)=437322000 
        IF(HOUR.EQ.06) LD(1)=437323000 
        IF(HOUR.EQ.12) LD(1)=437320000
        IF(HOUR.EQ.18) LD(1)=437321000
      ELSE IF(IDPARS(2).EQ.390) THEN   
C        SET UP RELATIVE FREQUENCY ID FOR 24 HRS PREVIOUS
        IF(HOUR.EQ.00) LD(1)=437330000 
        IF(HOUR.EQ.06) LD(1)=437331000 
        IF(HOUR.EQ.12) LD(1)=437332000
        IF(HOUR.EQ.18) LD(1)=437333000
      ENDIF

      LD(2)=000000000
      LD(3)=000000000+IDPARS(12)
      LD(4)=950000000  
      CALL PRSID1(KFILDO,LD,LDPARS)
C
      CALL CONST1(KFILDO,KFIL10,IP12,
     1              LD,LDPARS,JD,NDATE,
     2              KFILRA,RACESS,NUMRA,
     3              CCALL,ICALLD,CCALLD,NAME,STALAT,STALON,
     4              ISDATA,SDATA,DIR,ND1,NSTA,
     5              NGRIDC,NGRID,ND11,NSLAB,
CC   6              IPACK,IWORK,DATA,ND5,
     6              IPACK,IWORK,GDATA,ND2X3,
     7              LSTORE,ND9,LITEMS,CORE,ND10,LASTL,
     8              NBLOCK,LASTD,NSTORE,NFETCH,
     9              IS0,IS1,IS2,IS4,ND7,
     A              ISTAV,L3264B,L3264W,IER)
C
      IF(IER.EQ.0) GO TO 130
C
      WRITE(KFILDO,126) 
  126 FORMAT(/' ****SWTXRF -- RELATIVE FREQUENCY FETCH FAILED')
      IER=103
      GO TO 200
C
C        STEP 5. COMPUTE THE PRODUCT OF THE SWEAT INDEX AND THE 
C                DAILY RELATIVE FREQUENCY  
C
  130 DO 140 J=1,ND1   
      SDATA(J)=IDATA(J)*SDATA(J)
  140 CONTINUE

C     DO 150 J=1,15   
C     PRINT *,SDATA(J),IDATA(J)
C 150 CONTINUE

      GO TO 300
C 
C        SET OUTPUT FIELD TO MISSING WHEN AN ERROR HAS OCCURRED.
C
  200 DO 210 J=1,ND2X3
      SDATA(J)=9999.
  210 CONTINUE
C
  300 RETURN
      END
