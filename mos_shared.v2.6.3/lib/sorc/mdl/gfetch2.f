      SUBROUTINE GFETCH2(KFILDO,KFIL,ID,LSTORE,ND9,LITEMS,
     1                   DATA,NDX,
     2                   NWORDS,NPACK,NDATE,NTIMES,CORE,ND10,
     3                   NBLOCK,NFETCH,
     4                   ITIME,IER)
C
C        DECEMBER  2002   GLAHN   TDL   MOS-2000
C                                 ADAPTED FROM GFETCH
C 
C        PURPOSE 
C            TO FETCH DATA FROM EITHER A LINEAR ARRAY CORE( ) IN MEMORY
C            OR FROM DISK.  (THIS IS THE SO-CALLED MOS-2000 INTERNAL
C            STORAGE SYSTEM.)  THE ARRAY LSTORE( ,ND9) HOUSES THE KEYS,
C            THE FIRST 4 WORDS BEING THOSE CORRESPONDING TO ID( ).
C            WHEN LSTORE(1, ) = 0, THE DATA FOR THIS KEY HAVE BEEN
C            DEEMED NO LONGER NEEDED, AND CANNOT BE RETURNED.  THE DATA
C            ARE RETURNED IN DATA( ) AS STORED, WHETHER THEY ARE PACKED 
C            OR UNPACKED.  WHEN ITIME NE 0 AND WHEN THE TIME OFFSET RR
C            IN THE PREDICTOR ID(3) GT 0, THE DATE/TIME IS MODIFIED
C            ACCORDINGLY AND RR IS SET TO 0 FOR PURPOSES OF SEARCH.
C            A DATE/TIME OF ZERO IS USED FOR DATA THAT ARE NOT TO 
C            BE DISCARDED, AND ARE NOT FOR SPECIFIC DATES, SUCH 
C            AS CLIMATOLOGICAL VALUES AND INDICES TO THRESHOLD
C            MATRICES FOR LINEARIZATION ROUTINES.
C
C            THIS IS PRIMARILY FOR READING A RECORD THAT IS TO BE
C            TRANSFERRED TO ANOTHER FILE INTACT, AS IN U150 WHEN
C            COMPLETING A CYCLE.
C
C        DATA SET USE 
C           KFILDO - UNIT NUMBER FOR OUTPUT (PRINT) FILE.  (OUTPUT)
C           KFIL   - UNIT NUMBER FOR READING THE DATA INTO DATA( ) 
C                    FROM DISK.  (INPUT)  
C
C        VARIABLES 
C              KFILDO = UNIT NUMBER FOR OUTPUT (PRINT) FILE.  (INPUT)
C                KFIL = UNIT NUMBER FOR READING THE DATA INTO DATA( )
C                       FROM DISK.  (INPUT)
C               ID(J) = THE 4-WORD ID OF THE VARIABLE TO FETCH
C                       (J=1,4).  (INPUT)
C         LSTORE(L,J) = THE ARRAY HOLDING INFORMATION ABOUT THE DATA 
C                       STORED (L=1,12) (J=1,LITEMS).  (INPUT-OUTPUT)
C                       L=1,4--THE 4 ID'S FOR THE DATA.
C                       L=5  --LOCATION OF STORED DATA.  WHEN IN CORE,
C                              THIS IS THE LOCATION IN CORE( ) WHERE
C                              THE DATA START.  WHEN ON DISK, 
C                              THIS IS MINUS THE RECORD NUMBER WHERE 
C                              THE DATA START.
C                       L=6  --THE NUMBER OF 4-BYTE WORDS STORED.
C                       L=7  --2 FOR DATA PACKED IN TDL GRIB, 1 FOR NOT.
C                       L=8  --THE DATE/TIME OF THE DATA IN FORMAT
C                              YYYYMMDDHH.  FOR DATA LIKE CLIMATOLOGICAL
C                              VALUES THAT ARE NOT TO BE DISCARDED, THIS
C                              IS ZERO.
C                       L=9  --NUMBER OF TIMES DATA HAVE BEEN RETRIEVED.
C                              UPON RETRIEVAL BY GFETCH2.
C                       L=10 --NOT USED IN GFETCH2.
C                       L=11 --NOT USED IN GFETCH2.
C                       L=12 --USED INITIALLY IN ESTABLISHING
C                              MSTORE( , ).  LATER USED AS A WAY OF
C                              DETERMINING WHETHER TO KEEP THIS
C                              VARIABLE.
C                 ND9 = THE SECOND DIMENSION OF LSTORE( , ).  (INPUT)
C              LITEMS = THE NUMBER OF ITEMS (COLUMNS) IN LSTORE( , ).
C                       (INPUT)
C             DATA(J) = THE DATA ARE RETURNED IN DATA( ) (J=1,NWORDS).
C                       (OUTPUT)
C                 NDX = DIMENSION OF DATA( ).  MUST BE LARGE 
C                       ENOUGH TO HOLD NWORDS OF DATA FROM CORE( ) OR
C                       (NWORDS+NBLOCK-1)/NBLOCK WORDS FROM DISK.  
C                       NORMALLY, NDX WILL BE ND5 IN THE CALLING 
C                       PROGRAM, BUT IF "STATION" DATA ARE BEING
C                       RETURNED, NDX MAY BE SOME OTHER VARIABLE
C                       (E.G., ND1).  (INPUT)
C              NWORDS = NUMBER OF WORDS RETURNED IN DATA( ).  THIS IS
C                       STORED IN LSTORE(6, ).  MUST BE LE NDX.
C                       (OUTPUT)
C               NPACK = 2 FOR TDL GRIB PACKED DATA; 1 FOR NOT PACKED.
C                       THIS IS STORED IN LSTORE(7, ).  (OUTPUT)
C               NDATE = DATE/TIME OF THE DATA TO BE FETCHED IN FORMAT
C                       YYYYMMDDHH.  THIS IS MATCHED TO THE VALUE STORED
C                       IN LSTORE(8, ), AFTER POSSIBLE MODIFICATION
C                       BY THE RR IN THE ID.  WHEN THE DATA ARE NOT
C                       ATTACHED TO A SPECIFIC DATE, LIKE CLIMATOLOGICAL
C                       VALUES OR INDICES FOR LINEARIZATION ROUTINES,
C                       NDATE MUST BE INPUT AS ZERO.  (INPUT)
C              NTIMES = THE NUMBER OF TIMES, INCLUDING THIS ONE, THAT
C                       THE DATA HAVE BEEN FETCHED.  THIS IS STORED IN
C                       LSTORE(9, ).  (OUTPUT)
C             CORE(J) = THE LINEAR ARRAY WHERE THE DATA ARE STORED,
C                       WHEN SPACE IS AVAILABLE (J=1,ND10).  NORMALLY,
C                       THIS S USED ONLY WITHIN GSTORE AND GFETCH2.
C                       (INPUT)
C                ND10 = DIMENSION OF CORE( ).  (INPUT)
C              NBLOCK = THE BLOCK SIZE IN WORDS OF THE RANDOM DISK FILE.
C                       THIS MUST MATCH THE VALUE PROVIDED TO GSTORE
C                       AND MUST NOT CHANGE DURING THE RUN.  (INPUT)
C              NFETCH = INCREMENTED EACH TIME GFETCH2 IS ENTERED.  IT 
C                       IS A RUNNING COUNT FROM THE BEGINNING OF THE 
C                       PROGRAM. THIS COUNT IS MAINTAINED IN CASE THE
C                       USER NEEDS IT (DIAGNOSTICS, ETC.).  (OUTPUT)
C               ITIME = SERVES FOUR FUNCTIONS.
C                       1--WHEN EQ 0, AN ADJUSTMENT IN TIME USING RR
C                          IS NOT TO BE MADE.
C                       2--WHEN 5555, RR ADJUSTMENT IS TO BE MADE AND
C                          MAY BE GT 99.  THIS IS ACCOMMODATED BY 
C                          USING TRR AS RRR.
C                       3--GE 0 BUT NOT 5555, THE RR ADJUSTMENT IS TO 
C                          BE MADE, 2 DIGITS ONLY.  THIS RETAINS USE 
C                          OF T.
C                       4--LESS THAN ZERO, ITIME IS STORED IN
C                          LSTORE(12, ).
C                       U201 AND U855 ROUTINES REQUIRE THE TIME
C                       ADJUSTMENT, BECAUSE GRIDS FOR PREVIOUS
C                       DATE/TIMES MAY BE NEEDED. U855 ALSO REQUIRES
C                       RR BE GREATER THAN 99, HENCE THE ITIME VALUE 
C                       OF 5555.  HOWEVER, FOR MOST OTHER PROGRAMS,
C                       SUCH AS U600, THE VARIABLE IS PRESENT FOR THE
C                       TIME IN NDATE.  WHEN LT 0, THIS VALUE IS TO 
C                       BE STORED IN LSTORE(12, ).  THIS IS USED IN
C                       VRBL61 AND GTVECT AND ALLOWS A MAXIMUM TAU TO
C                       BE CALCULATED FOR PREDICTANDS IN LMSTR6.
C                       (INPUT)
C                 IER = STATUS RETURN.  (OUTPUT)
C                        0 = GOOD RETURN.
C                       47 = DATA CANNOT BE FOUND.
C                       48 = DIMENSION NDX IS NOT LARGE ENOUGH FOR
C                            DATA( ) TO HOLD THE DATA.
C                       900- = IOSTAT RETURNS FROM SYSTEM ON READING 
C                            DISK.
C               JD(J) = THE 4-WORD ID OF THE VARAIBLE TO RETRIEVE FROM
C                       THE MOS-2000 INTERNAL STORAGE SYSTEM (J=1,4).
C                       THIS MAY BE THE SAME AS ID( ), BUT MAY BE
C                       MODIFIED WITH RR (SEE NRR).  (INTERNAL)
C               LDATE = DATE/TIME OF THE DATA TO BE FETCHED IN FORMAT
C                       YYYYMMDDHH AFTER POSSIBLE MODIFICATION BY RR
C                       IN THE ID.  THIS IS MATCHED TO THE VALUE 
C                       STORED IN LSTORE(8, ).  (INTERNAL)
C              IENTER = 0 INITIALLY AND INCREMENTED BY 1 UPON EACH 
C                       ENTRY.  IT IS THE INTERNAL COUNT BY WHICH
C                       NFETCH IS RETURNED AND IS IMPERVIOUS TO ACTIONS
C                       BY THE USER.  (INTERNAL)
C              LWORDS = WHEN DATA ARE STORED ON DISK, THE NUMBER OF
C                       WORDS STORED.  (INTERNAL)
C                 NRR = RUN TIME OFFSET OF PREDICTOR BEING SEARCHED FOR.
C                       WHEN NONZERO, THE DATE/TIME IS UPDATED BY -NRR.
C                       (INTERNAL)
C        1         2         3         4         5         6         7 X
C                         
C        NON SYSTEM SUBROUTINES CALLED 
C           RDDISK
C
      DIMENSION ID(4),JD(4)
      DIMENSION LSTORE(12,ND9)
      DIMENSION DATA(NDX)
      DIMENSION CORE(ND10)
C
      DATA IENTER/0/
C
C        INCREMENT IENTER AND SET NFETCH.
C
      IER=0
C
      IENTER=IENTER+1
      NFETCH=IENTER
C
C        MUST USE TIME OFFSET RR IN ID(3) TO ADJUST NDATE, UNLESS
C        ITIME = 0, OR RR = 0.
C
      DO 105 J=1,4
      JD(J)=ID(J)
 105  CONTINUE
C
      LDATE=NDATE
      IF(NDATE.EQ.0)GO TO 106
C        WHEN THE ABOVE TEST IS MET, THE DATE IS NOT TO BE MATCHED.
C        RATHER, THE DATA ARE INDICES OR CLIMATOLOGICAL DATA THAT
C        ARE NEVER DISCARDED.
      IF(ITIME.EQ.0)GO TO 106
C        WHEN ITIME NE 0, RR IS TO BE USED.
      NR=ID(3)/1000000
C
      IF(ITIME.EQ.5555)THEN
         NRR=NR
      ELSE
         NT=NR/100
         NRR=NR-NT*100
      ENDIF
C
      IF(NRR.NE.0)THEN
         CALL UPDAT(NDATE,-NRR,LDATE)
C         
         IF(ITIME.EQ.5555)THEN
            JD(3)=ID(3)-NRR*1000000
C              THIS REMOVES RRR.
         ELSE
            JD(3)=NT*100000000+(ID(3)-NR*1000000)
C              THIS REMOVES RR AND LEAVES T INTACT.
         ENDIF
C
      ENDIF
C
 106  CONTINUE
D     WRITE(KFILDO,107)(JD(J),J=1,4),LDATE
D107  FORMAT(/' IN GFETCH2,'25X' LOOKING FOR'2XI9.9,2I10.9,I11.3,
D    1        '  FOR DATE'I11)   
C
C        FIND A LOCATION IN LSTORE( , ) MATCHING ID( ), IF ANY.
C
      DO 170 J=1,LITEMS
      IF(LSTORE(8,J).NE.LDATE.AND.
     1   LSTORE(8,J).NE.0)GO TO 170
C        DROP THROUGH HERE MEANS THE NEEDED DATE HAS BEEN FOUND,
C        OR THE NEEDED "DATE" IS ZERO WHICH IS THE CASE FOR
C        'CONSTANT" DATA. 
C
      DO 110 L=1,4
      IF(LSTORE(L,J).NE.JD(L))GO TO 170
 110  CONTINUE
C
C        DROP THROUGH HERE MEANS THAT THE DATA ID HAS BEEN FOUND.
C        WHEN LSTORE(1, ) HAS BEEN SET TO ZERO, MEANING DATA FOR
C        THIS SLOT HAVE BEEN DECLARED NONRETRIEVABLE, THEN
C        LSTORE(1, ) WILL NOT MATCH ID(1).  NOTE THAT THE FIRST
C        ID CANNOT EQUAL 0.
C
C***D     WRITE(KFILDO,114)(LSTORE(M,J),M=1,12)
C***D114  FORMAT(/' GFETCH2 AT 114  '3I10.9,I10.3,I8,I8,I2,I11,2I4,I5,I11/
C***D    1       ('                '3I10.9,I10.3,I8,I8,I2,I11,2I4,I5,I11)) 
C***D     WRITE(KFILDO,115)((LSTORE(M,N),M=1,12),N=1,LITEMS)
C***D115  FORMAT(/' GFETCH2 AT 115  '3I10.9,I10.3,I8,I8,I2,I11,2I4,I5,I11/
C***D    1       ('                '3I10.9,I10.3,I8,I8,I2,I11,2I4,I5,I11)) 
      NWORDS=LSTORE(6,J)
C
C        DETERMINE WHETHER DATA ARE STORED IN CORE OR ON DISK
C        AND WHETHER NDX IS LARGE ENOUGH.
C
      IF(LSTORE(5,J).LT.0)GO TO 117
      IF(NDX.LT.NWORDS)GO TO 177
C
C        FETCH FROM CORE( ).
C
      DO 116 M=1,NWORDS
      DATA(M)=CORE(LSTORE(5,J)+M-1)
 116  CONTINUE
      GO TO 160
C
C        FETCH FROM DISK, PROVIDED NDX IS LARGE ENOUGH.
C
 117  LWORDS=LSTORE(6,J)
C*** 117  LWORDS=((LSTORE(6,J)+NBLOCK-1)/NBLOCK)*NBLOCK
C        TESTING HAS SHOWN THAT THE NUMBER OF WORDS TO READ
C        FROM THIS RANDOM ACCESS FILE, WHICH IS ALSO THE
C        SIZE OF DATA( ) IN RDDISK, MUST BE AN EVEN MULTIPLE OF
C        THE BLOCK SIZE NBLOCK.  (FURTHER TESTING, JANUARY 1997,
C        PUTS THE ABOVE CONCLUSION IN QUESTION.  THE TEST HAS BEEN
C        LEFT AND DOES NO HARM, EXCEPT NDX MAY HAVE TO BE 
C        NBLOCK-1 LARGER THAN NECESSARY.  THIS SHOULD BE
C        NO BIG DEAL.)  USERS WERE COMPLAINING; TEST REMOVED 5/16/99.
      IF(NDX.LT.LWORDS)GO TO 176
      CALL RDDISK(KFILDO,KFIL,-LSTORE(5,J),DATA,LWORDS,
     1            NBLOCK,NOREC,IER)
      IF(IER.NE.0)GO TO 180
C        IER NE 0 SHOULD BE TREATED AS A FATAL ERROR.  A DIAGNOSTIC
C        WILL HAVE BEEN PRINTED BY RDDISK.
C
C        THE STATEMENTS FROM HERE TO 200 ARE FOR BOTH CORE AND DISK 
C        STORAGE AND FOR EITHER PACKED OR UNPACKED DATA.
C
 160  NPACK=LSTORE(7,J)
      NTIMES=LSTORE(9,J)+1
      LSTORE(9,J)=NTIMES
      IF(ITIME.LT.0.AND.LSTORE(12,J).EQ.0)LSTORE(12,J)=ITIME
C****************
C        THE ABOVE TEST ON LSTORE(12,J)=0 WAS ADDED FEB. 1, 1998
C        FOR U850.  IT HAS NOT BEEN TESTED WITH U201, U600, OR U660.
      GO TO 200
C
 170  CONTINUE
C
C        A FALL THROUGH HERE MEANS DATA HAVE NOT BEEN FOUND.
C
      IER=47
C        DATA WERE NOT FETCHED.
      NWORDS=0
C        SET NWORDS = 0 WHEN NO DATA RETURNED.
D     WRITE(KFILDO,175)(JD(J),J=1,4),LDATE,IER
D175  FORMAT(' ****DATA NOT FOUND BY GFETCH2.',
D    1       '       LOOKING FOR'2XI9.9,2I10.9,I11.3,
D    2       '  FOR DATE'I11,'  IER ='I5,)
      GO TO 180
C
C        NDX IS NOT LARGE ENOUGH TO HOLD THE DATA.  THIS IS
C        A FATAL ERROR.
C
 176  WRITE(KFILDO,178)NDX,LWORDS,(JD(L),L=1,4)
      GO TO 179
C
 177  WRITE(KFILDO,178)NDX,NWORDS,(JD(L),L=1,4)
 178  FORMAT(/,' ****DIMENSION NDX =',I6,' NOT LARGE ENOUGH TO HOLD',
     1         ' RECORD OF',I8,' WORDS.',/,
     2         '     DATA NOT RETURNED BY GFETCH2.  ID( ) =',
     3          1X,I9.9,2I10.9,I11.3)
 179  IER=48
C        IER=48 SHOULD PROBABLY BE A FATAL ERROR.
C
 180  DO 190 M=1,NDX
      DATA(M)=9999.
 190  CONTINUE
C
 200  CONTINUE
C
C***D     WRITE(KFILDO,201)NFETCH,((LSTORE(L,J),L=1,12),J=1,LITEMS)
C***D201  FORMAT(/' GFETCH2  'I4,I11.9,2I10.9,I10.3,I8,I8,I2,I11,2I4,I5,I11/
C***D    1      ('             'I11.9,2I10.9,I10.3,I8,I8,I2,I11,2I4,I5,I11)) 
C
      RETURN
      END   
