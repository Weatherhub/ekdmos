      SUBROUTINE RDONEV(KFILDO,KFILIN,NAMIN,JFOPEN,NUMIN,
     1                  MSDATE,IN,ID,IDPARS,
     2                  NDATE,CCALL,XDATA,INDEXC,ND1,NSTA,
     3                  CCALLD,IPACK,IWORK,DATA,ND5,
     3                  IS0,IS1,IS2,IS4,ND7,
     4                  IP12,IP14,IP23,L3264B,L3264W,ISTOP,IER)
C
C        NOVEMBER 1997   GLAHN   TDL   MOS-2000
C        APRIL    1998   GLAHN   DIAGNOSTIC SHORTENED TO FIT ON LINE
C        OCTOBER  1998   GLAHN   INDEXC( ) = 99999999 FOR MISSING
C        APRIL    2000   DALLAVALLE   MODIFIED FORMAT STATEMENTS TO
C                                     CONFORM TO FORTRAN 90 STANDARDS
C                                     ON THE IBM SP
C        MAY 8    2000   MCE     REMOVED FILENAME FROM OPEN STMNT
C                                FOR OPERATIONS
C        JULY     2012   ENGLE   ADDED CONVERTX; ADDED CALL TO CKFILEND
C                                BEFORE OPENING A TDLPACK VECTOR FILE;
C                                MODIFIED OPEN STATEMENT TO INCLUDE
C                                CONVERT= SPECIFIER.
C
C        PURPOSE
C            TO OBTAIN A VARIABLE FROM A TDLPACK VECTOR FILE.
C            THE REQUESTED VARIABLE IN ID( ) IS RETURNED WHEN
C            ENCOUNTERED, SO THE VARIABLES (IF MORE THAN ONE IS
C            DESIRED PER DATA SET) MUST BE REQUESTED IN THE ORDER
C            ON THE FILE.  THIS IS USEFUL WHEN ONLY ONE VARIABLE
C            PER DATE IS NEEDED FROM A PARTICULAR UNIT NUMBER.
C            RDONEV WAS ADAPTED FROM RDVECT.  NO INTERNAL STORAGE
C            IS USED.
C   
C        DATA SET USE
C            KFILDO - UNIT NUMBER OF OUTPUT (PRINT) FILE.  (OUTPUT)
C
C        VARIABLES
C              KFILDO = UNIT NUMBER OF OUTPUT (PRINT) FILE.  (INPUT)
C           KFILIN(J) = UNIT NUMBERS FOR INPUT DATA, ALL IN TDL GRIB
C                       FORMAT (J=1,NUMIN).  (INPUT)
C            NAMIN(J) = NAME OF THE INPUT FILES BEING PROCESSED 
C                       (J=1,NUMIN).  (CHARACTER*60)  (INPUT)
C           JFOPEN(J) = FOR EACH FILE IN KFILIN(J), JFOPEN(J) IS 1 WHEN
C                       THE FILE IS OPEN, IS 0 WHEN IT HAS ALREADY BEEN
C                       USED AND IS 2 WHEN THE FILE HAS NOT BEEN OPENED 
C                       (J=1,NUMIN).  (OUTPUT)
C               NUMIN = THE NUMBER OF VALUES IN KFILIN( ), NAMIN( ), AND
C                       INDEXC( , ).  ALSO TREATED AS THEIR DIMENSIONS.
C                       (INPUT)
C              MSDATE = KEEPS TRACK OF WHETHER ANY DATA ARE AVAILABLE
C                       FOR A PARTICULAR DATE ON AN INPUT FILE. 
C                       SHOULD BE INITIALIZED TO ZERO IN CALLING
C                       PROGRAM.  SET TO 1 IN RDONEV WHEN
C                       A DATE/TIME HAS BEEN FOUND ON THAT FILE.  USED 
C                       FOR DIAGNOSTIC PRINT WHEN IP14 NE 0.
C                       (INPUT/OUTPUT)
C                  IN = THE INDEX OF KFILIN( ), NAMIN( ), AND JFOPEN( ).
C                       (INPUT)
C               ID(J) = THE INTEGER PREDICTOR ID'S (J=1,4).  THIS
C                       IS THE VARIABLE TO BE RETURNED.  (INPUT)
C           IDPARS(J) = THE PARSED, INDIVIDUAL COMPONENTS OF THE 
C                       PREDICTOR ID CORRESPONDING TO ID( )
C                       (J=1,15).  NOT ACTUALLY USED.  (INPUT)
C                       J=1--CCC (CLASS OF VARIABLE),
C                       J=2--FFF (SUBCLASS OF VARIABLE),
C                       J=3--B (BINARY INDICATOR),
C                       J=4--DD (DATA SOURCE, MODEL NUMBER),
C                       J=5--V (VERTICAL APPLICATION),
C                       J=6--LBLBLBLB (BOTTOM OF LAYER, 0 IF ONLY
C                            1 LAYER),
C                       J=7--LTLTLTLT (TOP OF LAYER),
C                       J=8--T (TRANSFORMATION),
C                       J=9--RR (RUN TIME OFFSET, ALWAYS + AND BACK
C                            IN TIME),
C                       J=10--OT (TIME APPLICATION),
C                       J=11--OH (TIME PERIOD IN HOURS),
C                       J=12--TAU (PROJECTION IN HOURS),
C                       J=13--I (INTERPOLATION TYPE),
C                       J=14--S (SMOOTHING INDICATOR), AND
C                       J=15--G (GRID INDICATOR).
C               NDATE = THE DATE/TIME FOR WHICH PREDICTORS ARE TO BE
C                       FURNISHED ON THIS CALL TO RDONEV.  (INPUT)
C          CCALL(K,J) = 8-CHARACTER STATION CALL LETTERS (OR GRIDPOINT
C                       LOCATIONS FOR GRID DEVELOPMENT) TO PROVIDE
C                       OUTPUT FOR (J=1) AND 5 POSSIBLE OTHER STATION
C                       CALL LETTERS (J=2,6) THAT CAN BE USED INSTEAD
C                       IF THE PRIMARY (J=1) STATION CANNOT BE FOUND 
C                       IN AN INPUT DIRECTORY (K=1,NSTA).  ALL STATION
C                       DATA ARE KEYED TO THIS LIST.  (CHARACTER*8)
C                       (INPUT/OUTPUT)
C            XDATA(K) = THE DATA FOR THE NSTA STATIONS BEING PROCESSED
C                       (K=1,NSTA).  (OUTPUT)
C         INDEXC(K,J) = LOCATIONS OF THE NSTA STATIONS (K=1,NSTA)
C                       FOR EACH OF THE INPUT FILES (J=1,NUMIN)
C                       IN THE LIST CCALL(K, ) IN REFERENCE TO THE 
C                       STATION CALL LETTERS RECORD ON THE INPUT
C                       DATA SET BEING DEALT WITH.  THIS IS UPDATED
C                       IF ANOTHER CALL LETTERS RECORD IS ENCOUNTERED.
C                       THE VALUES IN INDEXC( , ) ARE USED UNTIL THIS
C                       NEW CALL LETTERS RECORD IS FOUND, THEN THE 
C                       NEW VALUES IN INDEXC( , ) PUT THERE BY RDDIR
C                       ARE USED.   IF THE STATION CAN'T BE FOUND IN
C                       THE DIRECTORY, INDEXC( ) IS SET TO 99999999.
C                       NOTE THAT THIS MUST BE LARGER THAN THE MAXIMUM
C                       NUMBER OF STATIONS BEING DEALT WITH (GRIDPOINTS
C                       IN THE CASE OF GRIDPOINT DEVELOPMENT).
C                       (INPUT/OUTPUT)
C                 ND1 = MAXIMUM NUMBER OF STATIONS THAT CAN BE DEALT
C                       WITH.  (INPUT)
C                NSTA = THE NUMBER OF STATIONS IN CCALL( , ).  (INPUT)
C           CCALLD(K) = 8-CHARACTER STATION CALL LETTERS (K=1,ND5).
C                       (INTERNAL)
C            IPACK(J) = HOLDS THE TDL GRIB RECORD (J=1,ND5).  (INTERNAL)
C            IWORK(J) = WORK ARRAY (J=1,ND5).  FURNISHED TO UNPACK, BUT
C                       NOT ACTUALLY USED BECAUSE ONLY THE ID'S ARE
C                       UNPACKED.  (INTERNAL)
C             DATA(J) = WORK ARRAY (J=1,ND5).  FURNISHED TO UNPACK, BUT
C                       NOT ACTUALLY USED BECAUSE ONLY THE ID'S ARE
C                       UNPACKED.  (INTERNAL)
C                 ND5 = DIMENSION OF IPACK( ), IWORK( ), AND DATA( ).
C                       (INPUT)
C              IS0(J) = MOS-2000 GRIB SECTION 0 ID'S (J=1,3).
C                       (INTERNAL)
C              IS1(J) = MOS-2000 GRIB SECTION 1 ID'S (J=1,22+).
C                       (INTERNAL)
C              IS2(J) = MOS-2000 GRIB SECTION 2 ID'S (J=1,12).
C                       (INTERNAL)
C              IS4(J) = MOS-2000 GRIB SECTION 4 ID'S (J=1,4).
C                       (INTERNAL)
C                 ND7 = DIMENSION OF IS0( ), IS1( ), IS2( ), AND IS4( ).
C                       NOT ALL LOCATIONS ARE USED.  (INPUT)
C                IP12 = INDICATES WHETHER (>1) OR NOT (=0) THE LIST OF
C                       STATIONS ON THE INPUT FILES WILL BE PROVIDED ON 
C                       THE FILE WHOSE UNIT NUMBER IS IP12.  (INPUT)
C                IP14 = INDICATES WHETHER (>0) OR NOT (=0) A DIAGNOSTIC
C                       WILL BE PROVIDED ON UNIT IP(14) WHEN THERE ARE
C                       NO DATA FOR A DEISRED DATE/TIME ON A PARTICULAR
C                       INPUT FILE.  (WITH THE SWITCHING OF DATA SETS,
C                       THIS IS NOT OF MUCH USE, AND MAY BE MISLEADING.
C                       IT IS ACTIVATED ONLY ON THE /D COMPILE.)
C                       (INPUT)
C                IP23 = INDICATES WHETHER (>0) OR NOT (=0) STATEMENTS
C                       ABOUT EOF AND FILE OPENINGS AND CLOSINGS WILL
C                       BE OUTPUT FOR PRINTING ON UNIT IP(23).  (INPUT)
C              L3264B = INTEGER WORD LENGTH IN BITS OF MACHINE BEING 
C                       USED (EITHER 32 OR 64).  (INPUT)
C              L3264W = NUMBER OF WORDS IN 64 BITS (EITHER 1 OR 2).  
C                       CALCULATED BY PARAMETER, BASED ON L3464B.
C               ISTOP = INCREMENTED BY ONE EACH TIME AN ERROR IS
C                       ENCOUNTERED.  (INPUT-OUTPUT)
C                 IER = STATUS RETURN.
C                         0 = GOOD RETURN.
C                        31 = TROUBLE OPENING FILE OR SWITCHING FILES.
C                        38 = DIMENSION OF IPACK( ) TOO SMALL.
C                       137 = NO MORE DATA AVAILABLE.  NOT USUALLY AN 
C                             ERROR.
C                       138 = 500 READING ERRORS HAVE OCCURRED.
C                       SEE ROUTINE GSTORE, GFETCH, AND GRCOMB FOR FOR
C                       OTHER VALUES.  (INTERNAL-OUTPUT)
C              NWORDS = NUMBER OF WORDS IN IPACK( ).   (INTERNAL)
C               MISSP = WHEN PRIMARY MISSING VALUE INDICATORS ARE IN THE
C                       DATA RETURNED FROM UNPACK, THEY WILL HAVE THE 
C                       VALUE FLOAT(MISSP).  OTHERWISE, MISSP = 0.
C                       (INTERNAL)
C               MISSS = WHEN SECONDARY MISSING VALUE INDICATORS ARE IN
C                       THE DATA RETURNED FROM UNPACK, THEY WILL HAVE
C                       THE VALUE FLOAT(MISSS).  OTHERWISE, MISSS = 0.
C                       RDONEV TREATS THIS MISSING VALUE AS ZERO.
C                       (INTERNAL)
C                MSTA = THE NUMBER OF WORDS OF DATA RETURNED = IS4(3).
C                       (INTERNAL)
C              LSTOPC = AN INTERNAL COUNTER TO KEEP AN INFINITE READING
C                       LOOP FROM OCCURRING.  (INTERNAL)
C               LSTOP = THE VALUE TO COMPARE LSTOPC WITH TO STOP THE
C                       READING.  CURRENTLY SET AT 500; THIS ASSUMES
C                       500 READING ERRORS SHOULD NOT OCCUR IN A SINGLE
C                       RUN.  NOTE THAT THIS COUNT IS SEPARATE FROM
C                       ISTOP IN CASE ISTOP HAS TO BE LARGE WHEN DEALING
C                       WITH HOURLY DATA AND MISSING STATIONS.
C            CONVERTX = CHARACTER HOLDING THE KEYWORD USED TO OPEN
C                       RANDOM ACCESS FILE WITH THE CORRECT ENDIAN.
C                       (CHARACTER*20).
C 
C        NONSYSTEM SUBROUINES USED 
C            CKFILEND, UNPACK, UNPKBG, RDDIR
C
      CHARACTER*8 CCALL(ND1,6)
      CHARACTER*8 CCALLD(ND5)
CINTEL
      CHARACTER*20 CONVERTX
CINTEL
      CHARACTER*60 NAMIN(NUMIN)
C
      DIMENSION XDATA(ND1)
      DIMENSION INDEXC(ND1,NUMIN)
      DIMENSION ID(4),IDPARS(15)
      DIMENSION IPACK(ND5),IWORK(ND5),DATA(ND5)
      DIMENSION IS0(ND7),IS1(ND7),IS2(ND7),IS4(ND7)
      DIMENSION KFILIN(NUMIN),JFOPEN(NUMIN)
      DIMENSION NBYTES(2)
C
CINTEL
      CONVERTX='BIG_ENDIAN'
CINTEL
      DATA LSTOP/500/,
     1     LSTOPC/0/
C
      IER=0
C
D     WRITE(KFILDO,100)IP23,L3264B,IN,KFILIN(IN),NDATE
D100  FORMAT(/,' IN RDONEV, IP23,L3264B,IN,KFILIN(IN),NDATE',6I11)
 110  READ(KFILIN(IN),IOSTAT=IOS,ERR=111,END=1104)
     1              (NBYTES(J),J=1,L3264W),
     2              (IPACK(J),J=1,MIN(ND5,NBYTES(L3264W)*8/L3264B))
C        IPACK( ) CONTAINS THE PACKED RECORD.
C        THE RECORD CONSISTS OF AN INITIAL 64 BITS CONTAINING THE NUMBER
C        OF BYTES FOLLOWING.  FOR A 32-BIT MACHINE, THIS IS TWO WORDS.
      IF(L3264B.EQ.32)THEN
C           FOR A 32-BIT MACHINE, IPACK(5) HOLDS THE DATE/TIME OF THE
C           RECORD.
         IDATE=IPACK(5)
C
      ELSE
C           FOR A 64-BIT MACHINE, THE LEFT HALF OF IPACK(3) HOLDS
C           THE DATE/TIME OF THE RECORD.
         LOC=3
         IPOS=1
         CALL UNPKBG(KFILDO,IPACK,ND5,LOC,IPOS,IDATE,32,L3264B,IER,*117)
      ENDIF
C
      NWORDS=NBYTES(L3264W)*8/L3264B
C
      IF(NWORDS.GT.ND5)THEN
         WRITE(KFILDO,1101)ND5,NWORDS,KFILIN(IN),NDATE,NAMIN(IN)
 1101    FORMAT(/,' ****ERROR IN RDONEV AT 1101.',
     1            '  ND5 MUST BE INCREASED FROM',I8,' TO GE',I8,/,
     2            '     READING ON UNIT',I3,' PROCESSING DATE',I11,
     3            ' ON FILE = ',A60)
         ISTOP=ISTOP+1
         IER=38
         GO TO 130
C
      ENDIF
C
      GO TO 113
C
 1104 IF(IP23.NE.0)WRITE(IP23,1105)KFILIN(IN),NDATE,NAMIN(IN)
 1105 FORMAT(/,' END OF  FILE ON UNIT NO.',I3,
     1         ' PROCESSING DATE',I11,'    FILE = ',A60)
      GO TO 1133
C
 111  WRITE(KFILDO,112)KFILIN(IN),NDATE,IOS,NAMIN(IN)
      IF(IP23.NE.0.AND.IP23.NE.KFILDO)
     1          WRITE(IP23,112)KFILIN(IN),NDATE,IOS,NAMIN(IN)
 112  FORMAT(/,' ****ERROR READING PACKED RECORD ON UNIT NO.',I3,
     1         ' PROCESSING DATE',I11,' IN RDONEV AT 112.  IOSTAT =',I5,/,
     2         '     ON FILE = ',A60)
      ISTOP=ISTOP+1
      LSTOPC=LSTOPC+1
      IF(LSTOPC.LT.LSTOP)GO TO 110
C        THIS CHECK IS TO STOP AN INFINITE LOOP THAT MIGHT OCCUR.
      WRITE(KFILDO,1120)LSTOP,NDATE
      IF(IP23.NE.0.AND.IP23.NE.KFILDO)WRITE(IP23,1120)LSTOP,NDATE
 1120 FORMAT('     A TOTAL OF',I5,' READING ERRORS HAVE OCCURRED.',
     1       '  RETURN FROM RDONEV AT 1120 WHILE PROCESSING DATE',I11)
      IER=138
      GO TO 130
C
 113  IF(IDATE.NE.9999)GO TO 115
C
C        A DUMMY RECORD HAS BEEN FOUND SIGNIFYING A DIRECTORY
C        RECORD OR AN EOF FOLLOWS.  ATTEMPT TO READ THE DIRECTORY
C        AND REINITIALIZE THE STATION LOCATIONS IN INDEXC( , ).
C        
      CALL RDDIR(KFILDO,KFILIN(IN),IP12,NAMIN(IN),NDATE,
     1           CCALL,INDEXC(1,IN),ND1,NSTA,CCALLD,ND5,MSTA,
     2           L3264B,L3264W,IER)
C
      IF(IER.EQ.0)THEN
         GO TO 110
      ELSEIF(IER.EQ.120)THEN
         ISTOP=ISTOP+1
         GO TO 110
      ELSEIF(IER.EQ.146)THEN
C           IER = 146 SIGNIFYING AN EOF IS NOT UNEXPECTED AND
C           IS NOT COUNTED AS AN ERROR.
         IF(IP23.NE.0)WRITE(IP23,1131)KFILIN(IN),NDATE,NAMIN(IN)
 1131    FORMAT(/,' END OF  FILE ON UNIT NO.',I3,
     1            ' PROCESSING DATE',I11,'    FILE = ',A60)
         GO TO 1133
      ELSE
         ISTOP=ISTOP+1
         GO TO 1133
C           IER = 146 MEANS AN EOF ON UNIT IN.
C           ERRORS IER = 140 AND 145 ARE FATAL AND
C           ARE TREATED THE SAME AS AN END OF FILE.
      ENDIF
C
      GO TO 130
C
 1133 CLOSE(UNIT=KFILIN(IN),IOSTAT=IOS,ERR=1136)
      IF(IP23.NE.0)WRITE(IP23,1134)KFILIN(IN),NDATE,NAMIN(IN)
 1134 FORMAT(' CLOSING FILE ON UNIT NO.',I3,
     1       ' PROCESSING DATE',I11,'    FILE = ',A60)
      JFOPEN(IN)=0
      GO TO 1138
C
 1136 WRITE(KFILDO,1137)KFILIN(IN),NDATE,IOS,NAMIN(IN)
      IF(IP23.NE.0.AND.IP23.NE.KFILDO)
     1             WRITE(IP23,1137)KFILIN(IN),NDATE,IOS,NAMIN(IN)
 1137 FORMAT(/,' ****ERROR CLOSING FILE NO.',I3,
     1         ' PROCESSING DATE',I11,' IN RDONEV AT 1137, IOSTAT =',I5,/,
     2         '     ON FILE = ',A60)
      ISTOP=ISTOP+1
      JFOPEN(IN)=0
C
 1138 IF(IN.EQ.NUMIN)THEN
         WRITE(KFILDO,1139)KFILIN(IN),NDATE,NAMIN(IN)
         IF(IP23.NE.0.AND.IP23.NE.KFILDO)
     1               WRITE(IP23,1139)KFILIN(IN),NDATE,NAMIN(IN)
 1139    FORMAT(' END OF  DATA ON UNIT NO.',I3,
     1          ' PROCESSING DATE',I11,'    FILE = ',A60)
C            THIS IS THE LAST DATA SET.  NOT NECESSARILY AN ERROR.
C            RETURN.
         IER=137
         GO TO 130
C
      ENDIF
C
      IF(KFILIN(IN).NE.KFILIN(IN+1))THEN
         WRITE(KFILDO,1139)KFILIN(IN),NDATE,NAMIN(IN)
         IF(IP23.NE.0.AND.IP23.NE.KFILDO)
     1          WRITE(IP23,1139)KFILIN(IN),NDATE,NAMIN(IN)
C           NEXT DATA SET DOES NOT HAVE THE SAME UNIT NUMBER.
C           RETURN TO LET "IN" BE INCREMENTED.
         IER=137
         GO TO 130
C
      ENDIF
C
      IF(JFOPEN(IN+1).EQ.2)THEN
C           JFOPEN(IN+1) SHOULD BE 2 WHEN
C           KFILIN(IN) = KFILIN(IN+1)
         JFOPEN(IN+1)=1
CINTEL
         CALL CKFILEND(KFILDO,KFILIN(IN+1),NAMIN(IN+1),ISYSEND,
     1                 IFILEND,CONVERTX,IER)
         OPEN(UNIT=KFILIN(IN+1),
     1        FORM='UNFORMATTED',STATUS='OLD',
     2        CONVERT=CONVERTX,IOSTAT=IOS,ERR=1143)
C         OPEN(UNIT=KFILIN(IN+1),
C     1        FORM='UNFORMATTED',STATUS='OLD',
C     2        IOSTAT=IOS,ERR=1143)
CINTEL
         IF(IP23.NE.0)WRITE(IP23,1141)KFILIN(IN+1),NDATE,NAMIN(IN+1)
 1141    FORMAT(' OPENING FILE ON UNIT NO.',I3,
     1          ' PROCESSING DATE',I11,'    FILE = ',A60)
C
C           READ DIRECTORY RECORD ON THE NEW FILE.
C
         CALL RDDIR(KFILDO,KFILIN(IN+1),IP12,NAMIN(IN+1),NDATE,
     1              CCALL,INDEXC(1,IN+1),ND1,NSTA,CCALLD,ND5,MSTA,
     2              L3264B,L3264W,IER)
C
C           SINCE THE FILE WAS SWITCHED, MUST RETURN FOR IN
C           TO BE INCREMENTED.  IER = 146 WILL SIGNAL AN EOF
C           AND NO DATA.
C
         IF(IER.NE.0)THEN
            ISTOP=ISTOP+1
C
            IF(IER.EQ.146)THEN
               JFOPEN(IN+1)=0
               IF(IP23.NE.0)WRITE(IP23,1142)KFILIN(IN),NDATE,NAMIN(IN)
 1142          FORMAT(/,' END OF  FILE ON UNIT NO.',I3,
     1                  ' PROCESSING DATE',I11,'    FILE = ',A60)
            ELSEIF(IER.EQ.140.OR.IER.EQ.145)THEN
               JFOPEN(IN+1)=0
               IER=146
            ENDIF
C
         ENDIF
C
C           IER ERRORS FROM RDDIR OF 140, 145, AND 146 NEED TO
C           BE TREATED IN THE CALLING PROGRAM AS AN EOF = 146.
C           ERRORS ARE COUNTED; THE ARRAY XDATA( ) IS ALWAYS FILLED
C           BELOW STATEMENT 130.
         GO TO 130
C
 1143    WRITE(KFILDO,1144)KFILIN(IN+1),NDATE,IOS,NAMIN(IN+1)
         IF(IP23.NE.0.AND.IP23.NE.KFILDO)
     1            WRITE(IP23,1144)KFILIN(IN+1),NDATE,IOS,NAMIN(IN+1)
 1144    FORMAT(/,' ****ERROR OPENING FILE ON UNIT NO.',I3,
     1            ' PROCESSING DATE',I11,'IN RDVRBL AT 1144, IOSTAT =',
     2              I5,/,'     ON FILE = ',A60)
         JFOPEN(IN+1)=0
         IER=31
      ELSE
         WRITE(KFILDO,1145)KFILIN(IN+1),NDATE,NAMIN(IN+1)
         IF(IP23.NE.0.AND.IP23.NE.KFILDO)
     1          WRITE(IP23,1145)KFILIN(IN+1),NDATE,NAMIN(IN+1)
 1145    FORMAT(/,' ****TROUBLE IN SWITCHING TO FILE ON UNIT NO.',I3,
     1            ' PROCESSING DATE',I11,' IN RDVRBL AT 1145, IOSTAT =',I5,/,
     2            '     ON FILE = ',A60)
         ISTOP=ISTOP+1
         JFOPEN(IN+1)=0
         IER=31
      ENDIF
C
      GO TO 130
C
 115  IF(IDATE.LT.NDATE)THEN
         GO TO 110
C           THE ABOVE SPACES UP TO THE DAY WANTED. 
      ELSEIF(IDATE.GT.NDATE)THEN
         BACKSPACE KFILIN(IN)
C           THE READ ABOVE HAS GONE BEYOND THE DATE WANTED BY 1 RECORD;
C           THEREFORE, THE BACKSPACE.
         IF(IP14.NE.0.AND.MSDATE.EQ.0)
     1          WRITE(IP14,1156)KFILIN(IN),NDATE,NAMIN(IN)
1156     FORMAT(/,' ****NO DATA FOUND ON UNIT NO.',I3,
     1            ' PROCESSING DATE',I11,' ON FILE = ',A60)
         IER=137
         GO TO 130
C
      ENDIF
C
C        THIS IS A DATE/TIME TO USE FOR THIS MODEL FOR THIS DAY.
C        DOES IT HAVE THE NEEDED ID'S?  NOTE THAT IS1(9-11) =
C        IPACK(6-8) ON A 32-BIT MACHINE.  ON A 64-BIT MACHINE,
C        THE 3 ID'S HAVE TO BE UNPACKED.
C
      MSDATE=1
C        MSDATE( ) = 1 INDICATES SOME DATA WERE AVAILABLE ON THIS FILE
C        FOR THIS DATE.
C
      IF(L3264B.EQ.32)THEN
         IPA6=IPACK(6)
         IPA7=IPACK(7)
         IPA8=IPACK(8)
         IPA9=IPACK(9)
C
      ELSE
         LOC=3
         IPOS=33
         CALL UNPKBG(KFILDO,IPACK,ND5,LOC,IPOS,IPA6,32,L3264B,IER,*117)
         CALL UNPKBG(KFILDO,IPACK,ND5,LOC,IPOS,IPA7,32,L3264B,IER,*117)
         CALL UNPKBG(KFILDO,IPACK,ND5,LOC,IPOS,IPA8,32,L3264B,IER,*117)
         CALL UNPKBG(KFILDO,IPACK,ND5,LOC,IPOS,IPA9,32,L3264B,IER,*117)
      ENDIF
C
      IF(IPA6.NE.ID(1).OR.
     1   IPA7.NE.ID(2).OR.
     2   IPA8.NE.ID(3).OR.
     3   IPA9.NE.ID(4))GO TO 110
C        THE VARIABLE READ IS NOT NEEDED.
      GO TO 118
C        THE VARIABLE READ IS THE ONE WANTED.
C
C        THIS IS THE ERROR RETURN FOR UNPKBG ABOVE.  IT MUST BE
C        OUT OF THE IF THEN ELSE LOOPS, OR BE DUPLICATED INSIDE 
C        THEM.
C
 117  WRITE(KFILDO,1170)KFILIN(IN),NDATE,IER
 1170 FORMAT(/,' ****ERROR IN UNPKBG IN RDONEV AT 1170.',
     1         '  INPUT UNIT NO.',I4,' FOR DATE',I11,'.  IER =',I4)
      ISTOP=ISTOP+1
      GO TO 130
C
C        THE DATA ARE NEEDED, SO UNPACK.
C
 118  CALL UNPACK(KFILDO,IPACK,IWORK,DATA,ND5,
     1            IS0,IS1,IS2,IS4,ND7,MISSP,MISSS,
     2            2,L3264B,IER)
C        THE UNPACKED DATA NOW RESIDE IN DATA( ), UNLESS IER NE 0.
D     MSTA=IS4(3)
C        MSTA IS THE NUMBER OF STATIONS IN THE UNPACKED RECORD.
D     IF(IER.EQ.0)WRITE(KFILDO,1298)IPA6,IPA7,IPA8,IPA9
D1298 FORMAT(/' DATA AS READ  '3(1XI9.9),1XI10.3)
D     IF(IER.EQ.0)WRITE(KFILDO,1299)(DATA(J),J=1,MSTA)
D1299 FORMAT((' 'F10.2))
C
 130  IF(IER.EQ.0)THEN
C
         DO 135 K=1,NSTA
         IF(INDEXC(K,IN).EQ.99999999)THEN
            XDATA(K)=9999.
         ELSE
            XDATA(K)=DATA(INDEXC(K,IN))
            IF(XDATA(K).EQ.9997.)XDATA(K)=0.
         ENDIF
 135     CONTINUE
C
      ELSE
C
         DO 136 K=1,NSTA
         XDATA(K)=9999.
 136     CONTINUE
C
      ENDIF
C
C
      RETURN
      END

