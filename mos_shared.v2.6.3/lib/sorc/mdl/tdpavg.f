      SUBROUTINE TDPAVG(KFILDO,KFIL10,IDPARS,JD,NDATE,
     1                  SDATA,SDATA1,NSTA,ND1,
     2                  IPACK,IWORK,ND5,
     3                  NGRIDC,DIR,ND11,
     4                  LSTORE,ND9,LITEMS,CORE,ND10,NBLOCK,NFETCH,
     5                  IS0,IS1,IS2,IS4,ND7, 
     6                  FD1,FD2,ND2X3,
     7                  ISTAV,L3264B,IER)
C
C        APRIL   2003   LIANG, RUDACK AND GLAHN   TDL   MOS-2000 
C        MAY     2003   GLAHN   REARRANGED CALL AND ADDED ND2X3
C        OCTOBER 2003   SMB     MODIFIED FORMAT STATEMENT 145  
C                               FOR THE IBM
C
C        PURPOSE 
C            TO COMPUTE THE AVERAGE OF TEMPERATURE AND DEWPOINT
C            LAMP FORECASTS WHEN THE DEWPOINT IS GREATER THAN THE 
C            TEMPERATURE.  THIS ROUTINE IS ENTERED WHEN EITHER A 
C            TEMPERATURE OR DEWPOINT ID IS SUPPLIED IN THE CONTROL
C            FILE.  TEMPERATURE OR DEWPOINT VALUES ARE RETURNED IN 
C            THE ARRAY OF SDATA.  NOTE: THE CONSISTENCY CHECK BETWEEN
C            THE TEMPERATURE AND DEWPOINT IS PERFORMED AT STATIONS.
C
C               002 303 - TEMPERATURE CONVERTED FROM 002 301
C               003 303 - DEWPOINT    CONVERTED FROM 003 301 
C
C        DATA SET USE 
C            KFILDO - DEFAULT UNIT NUMBER FOR OUTPUT (PRINT) FILE.  (OUTPUT) 
C            KFIL10 - UNIT NUMBER OF TDL MOS-2000 FILE SYSTEM ACCESS.
C                     (INPUT) 
C 
C        VARIABLES 
C              KFILDO = DEFAULT UNIT NUMBER FOR OUTPUT (PRINT) FILE
C                       (INPUT). 
C              KFIL10 = UNIT NUMBER OF TDL MOS-2000 FILE SYSTEM 
C                       ACCESS (INPUT-OUTPUT).
C           IDPARS(J) = THE PARSED, INDIVIDUAL COMPONENTS OF THE VARIABLE
C                       ID CORRESPONDING TO ID( ) (J=1,15).
C                       (INPUT)
C                       J=1--CCC (CLASS OF VARIABLE),
C                       J=2--FFF (SUBCLASS OF VARIABLE),
C                       J=3--B (BINARY INDICATOR),
C                       J=4--DD (DATA SOURCE, MODEL NUMBER),
C                       J=5--V (VERTICAL APPLICATION),
C                       J=6--LBLBLBLB (BOTTOM OF LAYER, 0 IF ONLY 1 LAYER),
C                       J=7--LTLTLTLT (TOP OF LAYER),
C                       J=8--T (TRANSFORMATION),
C                       J=9--RR (RUN TIME OFFSET, ALWAYS + AND BACK IN TIME),
C                       J=10--OT (TIME APPLICATION),
C                       J=11--OH (TIME PERIOD IN HOURS),
C                       J=12--TAU (PROJECTION IN HOURS),
C                       J=13--I (INTERPOLATION TYPE),
C                       J=14--S (SMOOTHING INDICATOR), AND
C                       J=15--G (GRID INDICATOR).
C               JD(J) = THE BASIC INTEGER VARIABLE ID (J=1,4).
C                       THIS IS THE SAME AS ID(J), EXCEPT THAT THE PORTIONS
C                       PERTAINING TO PROCESSING ARE OMITTED:
C                       B = IDPARS(3),
C                       T = IDPARS(8),
C                       I = IDPARS(13),
C                       S = IDPARS(14),
C                       G = IDPARS(15), AND
C                       THRESH.
C                       JD( ) IS USED TO IDENTIFY THE BASIC MODEL FIELDS
C                       AS READ FROM THE ARCHIVE.  (INPUT)
C               NDATE = THE DATE/TIME FOR WHICH VARIABLE IS NEEDED.  (INPUT)
C            SDATA(K) = STATION DATA TO RETURN (K=1,NSTA).  (OUTPUT)
C           SDATA1(K) = WORK ARRAY (K=1,NSTA).  (INTERNAL)
C                NSTA = NUMBER OF VALUES EXPECTED FROM GFETCH.  (INPUT)
C                 ND1 = MAXIMUM NUMBER OF STATIONS THAT CAN BE DEALT WITH.
C                       DIMENSION OF SDATA( ).  (INPUT)
C            IPACK(J) = WORK ARRAY (J=1,ND5).  (INTERNAL)
C            IWORK(J) = WORK ARRAY (J=1,ND5).  (INTERNAL)
C                 ND5 = DIMENSION OF IPACK( ), AND IWORK( ).  (INPUT)
C         NGRIDC(L,M) = HOLDS THE GRID CHARACTERISTICS (L=1,6) FOR
C                       EACH GRID COMBINATION (M=1,ND11). (INPUT)
C                       L=1--MAP PROJECTION NUMBER (3=LAMBERT, 5=
C                            POLAR STEREOGRAPHIC).
C                       L=2--GRID LENGTH IN METERS.
C                       L=3--LATITUDE AT WHICH THE GRID LENGTH IS
C                            CORRECT *1000.
C                       L=4--GRID ORIENTATION IN DEGREES * 1000.
C                       L=5--LATITUDE OF LL CORNER IN DEGREES *1000.
C                       L=6--LONGITUDE OF LL CORNER IN DEGREES
C                            *1000.
C          DIR(K,J,M) = THE IX (J=1) AND JY (J=2) POSITIONS ON THE GRID 
C                       FOR COMBINATION OF GRID CHARACTERISTICS M
C                       (M=1,ND11) AND STATION K (K=1,ND1) IN
C                       NGRIDC( ,M). (INPUT)
C                ND11 = NUMBER OF THE SLAB IN DIR( , ,ND11) AND
C                       IN NGRIDC( ,ND11) DEFINING THE CHARACTERISTICS
C                       OF THIS GRID.  (INPUT)
C         LSTORE(L,J) = THE ARRAY HOLDING INFORMATION ABOUT THE DATA 
C                       STORED (L=1,12) (J=1,ITEMS).  (INPUT)
C                       L=1,4--THE 4 ID'S FOR THE DATA.
C                       L=5  --LOCATION OF STORED DATA.  WHEN IN CORE,
C                              THIS IS THE LOCATION IN CORE( ) WHERE
C                              THE DATA START.  WHEN ON DISK, 
C                              THIS IS MINUS THE RECORD NUMBER WHERE 
C                              THE DATA START.
C                       L=6  --THE NUMBER OF 4-BYTE WORDS STORED.
C                       L=7  --2 FOR DATA PACKED IN TDL GRIB, 1 FOR NOT.
C                       L=8  --THE DATE/TIME OF THE DATA IN FORMAT
C                              YYYYMMDDHH.
C                       L=9  --NUMBER OF TIMES DATA HAVE BEEN RETRIEVED.
C                       L=10 --NUMBER OF THE SLAB IN DIR( , ,L) AND
C                              IN NGRIDC( ,L) DEFINING THE CHARACTERISTICS
C                              OF THIS GRID.  NOT USED.
C                       L=11 --THE NUMBER OF THE VARIABLE IN THE SORTED
C                              LIST IN ID( ,N) (N=1,NPRED) FOR WHICH THIS
C                              VARIABLE IS NEEDED, WHEN IT IS NEEDED ONLY
C                              ONCE FROM LSTORE( , ).  WHEN IT IS NEEDED
C                              MORE THAN ONCE, THE VALUE IS SET = 7777.
C                       L=12 --USED INITIALLY IN ESTABLISHING MOSTORE( , ).
C                              LATER USED AS A WAY OF DETERMINING WHETHER
C                              TO KEEP THIS VARIABLE.
C                 ND9 = THE SECOND DIMENSION OF LSTORE( , ).  (INPUT)
C              LITEMS = THE NUMBER OF ITEMS (COLUMNS) IN LSTORE( , ) THAT 
C                       HAVE BEEN USED IN THIS RUN.  (INPUT)
C             CORE(J) = THE ARRAY TO STORE OR RETRIEVE THE DATA IDENTIFIED IN
C                       LSTORE( , ) (J=1,ND10).  WHEN CORE( ) IS FULL
C                       DATA ARE STORED ON DISK.  (INPUT)
C                ND10 = DIMENSION OF CORE( ).  (INPUT)
C              NBLOCK = THE BLOCK SIZE IN WORDS OF THE MOS-2000 RANDOM
C                       DISK FILE.  (INPUT)
C              NFETCH = INCREMENTED EACH TIME GFETCH IS ENTERED.
C                       IT IS A RUNNING  COUNT FROM THE BEGINNING OF THE 
C                       PROGRAM.  THIS COUNT IS MAINTAINED IN CASE THE USER 
C                       NEEDS IT (DIAGNOSTICS, ETC.).  (OUTPUT)
C              IS0(J) = MOS-2000 GRIB SECTION 0 ID'S (J=1,3).  (INTERNAL)
C              IS1(J) = MOS-2000 GRIB SECTION 1 ID'S (J=1,22+).  (INTERNAL)
C              IS2(J) = MOS-2000 GRIB SECTION 2 ID'S (J=1,12).  (INTERNAL)
C              IS4(J) = MOS-2000 GRIB SECTION 4 ID'S (J=1,4).  (INTERNAL)
C                 ND7 = DIMENSION OF IS0( ), IS1( ), IS2( ), AND IS4( ).
C                       NOT ALL LOCATIONS ARE USED.  (INPUT)
C              FD1(J) = WORK ARRAY TO HOLD THE TEMPERATURE AT GRIDPOINTS
C                       (J=1,ND2X3). (INTERNAL)
C              FD2(J) = WORK ARRAY TO HOLD THE DEWPOINT AT GRIDPOINTS
C                       (J=1,ND2X3). (INTERNAL)
C               ND2X3 = DIMENSION OF FD2( ) AND FD2( ).  (INPUT)
C               ISTAV = 1 SINCE THE DATA RETURNED ARE STATION DATA.  (OUTPUT)
C              L3264B = INTEGER WORD LENGTH IN BITS OF MACHINE BEING USED
C                       (EITHER 32 OR 64).  (INPUT)
C                 IER = STATUS RETURN.
C                         0 = GOOD RETURN.
C                       100 = GRID CHARACTERISTICS BETWEEN TEMPERATURE
C                             AND DEWPOINT ARE MISMATCHED.
C                       103 = ID IN JD( ) IS NOT ACCOMMODATED.
C                       SEE GFETCH FOR OTHER VALUES.  (INTERNAL-OUTPUT)
C              NTIMES = THE NUMBER OF TIMES, INCLUDING THIS ONE, THAT THE 
C                       RECORD HAS BEEN FETCHED.  THIS IS STORED IN
C                       LSTORE(9, ).  (INTERNAL)
C               LD(J) = HOLDS THE 4 ID WORDS OF THE DATA RETRIEVED INTO
C                       SDATA( ) (J=1,4).  (INTERNAL)
C               MD(J) = HOLDS THE 4 ID WORDS OF THE DATA RETRIEVED INTO
C                       DATA( ) (J=1,4).  (INTERNAL)
C              NWORDS = NUMBER OF WORDS RETURNED FROM GFETCH.  (INTERNAL)
C              MTX,MTY= DIMENSIONS OF GRID RETURNED FOR TEMPERATURE (INTERNAL)
C              MDX,MDY= DIMENSIONS OF GRID RETURNED FOR DEWPOINT (INTERNAL)
C               NSLAB = RETURNED FROM GFETCH AS THE VALUE STORED IN
C                       LSTORE(10, ) FOR THE TEMPERATURE AND DEWPOINT  
C                       FIELD.  (INPUT)
C              NSLABD = SAME AS NSLAB.  RETURNED FROM CALL TO GFETCH
C                       FOR DEWPOINT. (INTERNAL)
C              NSLABT = SAME AS NSLAB.  RETURNED FROM CALL TO GFETCH
C                       FOR TEMPERATURE. (INTERNAL)
C 
C        NONSYSTEM SUBROUTINES CALLED 
C            GFETCH, INTRPA, INTRPB
C
      DIMENSION IDPARS(15),JD(4)
      DIMENSION SDATA(ND1),SDATA1(ND1) 
      DIMENSION IPACK(ND5),IWORK(ND5)
      DIMENSION FD1(ND2X3),FD2(ND2X3)
      DIMENSION IS0(ND7),IS1(ND7),IS2(ND7),IS4(ND7)
      DIMENSION LSTORE(12,ND9)
      DIMENSION CORE(ND10)
      DIMENSION NGRIDC(6,ND11),DIR(ND1,2,ND11)      
      DIMENSION LD(4),MD(4)
      DIMENSION ITABLE(3,2)
C
      DATA ITABLE/002303, 002301, 003301,
     1            003303, 002301, 003301/
C
      IER=0
      ISTAV=1
C        ISTAV = 1 SIGNIFIES THE DATA RETURNED IN SDATA( ) ARE
C        VECTOR.
C
C        FIND THE ID FOR THE FIRST FIELD TO RETRIEVE, BASED ON
C        THE MODIFIED FIELD TO RETURN.  NOTE THAT "B" IS NOT 
C        CHECKED.
C
      DO 115 JJ=1,2
        IF(ITABLE(1,JJ).EQ.(IDPARS(1)*1000+IDPARS(2)))GO TO 120
 115  CONTINUE
C
      WRITE(KFILDO,117)(JD(L),L=1,4)
 117  FORMAT(/' ****TDPAVG ENTERED FOR VARIABLE  ',
     1         3I9.9,1X,I10.3,' NOT ACCOMMODATED.')
      IER=103
      GO TO 300
C
C        GET THE TEMPERATURE AT GRIDPOINTS. THE ID IN JD( ) 
C        INCLUDES THE RUN OFFSET TIME.  THIS IS THE VARIABLE
C        TO RETURN, AND IS RETRIEVED IN SDATA( ) SO THAT DATA 
C        WON'T HAVE TO BE TRANSFERRED UNLESS THE DEWPOINT
C        EXCEEDS THE TEMPERATURE.
C
 120  LD(1)=ITABLE(2,JJ)*1000+IDPARS(4)
      LD(2)=JD(2)
      LD(3)=JD(3)
      LD(4)=0
C
      CALL GFETCH(KFILDO,KFIL10,LD,7777,LSTORE,ND9,LITEMS,
     1            IS0,IS1,IS2,IS4,ND7,IPACK,IWORK,FD1,ND2X3,
     2            NWORDS,NPACK,NDATE,NTIMES,CORE,ND10,NBLOCK,
     3            NFETCH,NSLAB,MISSP,MISSS,L3264B,1,IER)
C
      IF(IER.NE.0)THEN
         WRITE(KFILDO,125)(LD(J),J=1,4)
 125     FORMAT(/' ****THE TEMPERATURE VALUES COULD NOT RETRIEVED BY',
     1           ' GFETCH IN TDPAVG.  THIS ELEMENT CORRESPONDS TO',
     2           ' THE MOS-ID OF ',I9.9,2I10.9,I4.3)
         GO TO 300
      ENDIF
C
      MTX=IS2(3)
      MTY=IS2(4)
      NSLABT=NSLAB     
C
C        GET THE DEWPOINT AT GRIDPOINTS.  THE ID IN JD( ) INCLUDES
C        THE RUN OFFSET TIME.
C
      MD(1)=ITABLE(3,JJ)*1000+IDPARS(4)
      MD(2)=JD(2)
      MD(3)=JD(3)
      MD(4)=0
C
      CALL GFETCH(KFILDO,KFIL10,MD,7777,LSTORE,ND9,LITEMS,
     1            IS0,IS1,IS2,IS4,ND7,IPACK,IWORK,FD2,ND2X3,
     2            NWORDS,NPACK,NDATE,NTIMES,CORE,ND10,NBLOCK,
     3            NFETCH,NSLAB,MISSP,MISSS,L3264B,1,IER)
C
      IF(IER.NE.0)THEN
         WRITE(KFILDO,135)(MD(J),J=1,4)
 135     FORMAT(/' ****THE DEWPOINT VALUES COULD NOT RETRIEVED BY',
     1           ' GFETCH IN TDPAVG.  THIS ELEMENT CORRESPONDS TO',
     2           ' THE MOS-ID OF ',I9.9,2I10.9,I4.3)
         GO TO 300
      ENDIF      
C
      MDX=IS2(3)
      MDY=IS2(4)
      NSLABD=NSLAB
C
C        COMPARE THE GRID CHARACTERISTICS.  IF THE GRID 
C        CHARACTERISTICS ARE NOT IDENTICAL, STOP ALL
C        PROCESSING AND EXIT THE SUBROUTINE.
C
      IF(NSLABT.NE.NSLABD)THEN
        WRITE(KFILDO,140)NSLABT,NSLABD
 140    FORMAT(/' ****THE GRID CHARACTERISTICS OF THE ',
     1          ' TEMPERATURE AND THE DEWPOINT ',
     2          ' ARE DIFFERENT.',I3,2X,I3)
        IER=100
        GOTO 300
      END IF
C
      IF((MTX.NE.MDX).OR.(MTY.NE.MDY))THEN
        WRITE(KFILDO,145)(LD(J),J=1,4),(NGRIDC(J,NSLABT),J=1,6),
     1                    MTX,MTY,
     2                   (MD(J),J=1,4),(NGRIDC(J,NSLABD),J=1,6),
     3                    MDX,MDY
 145    FORMAT(/' ****THE GRIDS NEEDED IN TDPAVG HAVE ',
     1          'DIFFERENT CHARACTERISTICS.  ',
     2          'VALUES FROM NGRIDC(,) AND MX,MY.',
     3        (/5X,I9.9,I10.9,I10.9,I4.3,4X,6I10,4X,2I5))
        IER=100
        GOTO 300
      END IF
C
C         INTERPOLATE GRIDPOINT VALUES TO STATION LOCATIONS.
C         'INTRPA' PERFORMS BIQUADRATIC INTERPOLATIONS.
C         'INTRPB' PERFORMS BILINEAR INTERPOLATIONS.
C
       IF(IDPARS(13).EQ.1) THEN
           CALL INTRPA(KFILDO,FD1,IS2(3),IS2(4),DIR(1,1,NSLAB),
     1                 ND1,NSTA,SDATA)
           CALL INTRPA(KFILDO,FD2,IS2(3),IS2(4),DIR(1,1,NSLAB),
     1                 ND1,NSTA,SDATA1)
       ELSEIF(IDPARS(13).EQ.2) THEN
           CALL INTRPB(KFILDO,FD1,IS2(3),IS2(4),DIR(1,1,NSLAB),
     1                 ND1,NSTA,SDATA)
           CALL INTRPB(KFILDO,FD2,IS2(3),IS2(4),DIR(1,1,NSLAB),
     1                 ND1,NSTA,SDATA1)
       ENDIF
C
C        COMPUTE AVERAGE IN FIELD. MISSING DATA ARE REPLACED WITH 9999.
C
      IF(JJ.EQ.1)THEN
C
C           THE DATA TO RETURN ARE TEMPERATURE AT STATIONS.
C
         DO 220 J=1,NSTA
C
            IF((INT(SDATA(J)).EQ.9999).OR.
     1         (INT(SDATA1(J)).EQ.9999)) THEN
	       SDATA(J)=9999.
            ELSEIF(SDATA(J).LT.SDATA1(J)) THEN
	       SDATA(J)=(SDATA(J)+SDATA1(J))*.5
            ENDIF
C
 220     CONTINUE
C
      ELSE
C
C           THE DATA TO RETURN ARE DEWPOINT AT STATIONS.
C
         DO 230 J=1,NSTA
C
            IF((INT(SDATA(J)).EQ.9999).OR.
     1         (INT(SDATA1(J)).EQ.9999)) THEN
	       SDATA(J)=9999.
            ELSEIF(SDATA1(J).LE.SDATA(J)) THEN 
               SDATA(J)=SDATA1(J)
            ELSE
               SDATA(J)=(SDATA(J)+SDATA1(J))*.5
            ENDIF
C
 230     CONTINUE
C
      ENDIF
C
      GO TO 350
C
C        THIS VARIABLE CANNOT BE COMPUTED.  SET THE ARRAY TO MISSING.
C
 300  DO 301 J=1,NSTA
         SDATA(J)=9999.
 301  CONTINUE 
C
 350  RETURN
      END     
                  
