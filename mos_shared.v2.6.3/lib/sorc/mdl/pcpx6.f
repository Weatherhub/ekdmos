      SUBROUTINE PCPX6(KFILDO,KFIL10,IDPARS,JD,NDATE,
     1                SDATA,ND1,NSTA,
     2                IPACK,IWORK,FDPCPN,FDFLAG,ND2X3,
     3                LSTORE,ND9,LITEMS,CORE,ND10,NBLOCK,NFETCH,
     4                IS0,IS1,IS2,IS4,ND7,
     5                ISTAV,L3264B,IER)
C
C        JUNE     1998   SETTELMAIER TDL   MOS-2000 
C        OCTOBER  1998   SHIREY   PROGRAM RESTRUCTURED
C        JULY     2001   MALONEY  SUBROUTINE MODIFIED TO CALCULATE
C                                 BOTH UNCONDITIONAL AND CONDITIONAL
C                                 PRECIPITATION AMOUNTS
C        OCTOBER  2002   MCALOON  LIBRARY WEEK - ADDED COMMENT ABOUT 
C                                 IDPARS(1),(2)
C        DECEMBER 2002   WEISS    CHANGED ND5 TO ND2X3
C        MAY      2003   GLAHN    PUT IDTBL( , ) IN DATA STATEMENT;
C                                 MODIFIED FORMATS 100 AND 155;
C                                 REMOVED COMMENT THAT 703 210 IS
C                                 ACCOMMODATED; REARRANGED TYPE
C                                 STATEMENTS
C
C        PURPOSE 
C            THIS SUBROUTINE WILL COMPUTE THE SPECIFIED PCPN AMOUNT
C            (CONTAINED IN IDPARS(2)), FROM VECTOR DATA.  THE AMOUNT 
C            WILL BE CALCULATED FROM 6 HR PCPN AMOUNTS WITH THE 
C            PERIOD ENDING ON NDATE.  NDATE MUST END AT 00Z, 06Z, 12Z,
C            OR 18Z FOR THE SUBROUTINE TO WORK, OTHERWISE THE
C            PROGRAM IS EXITED.  IT IS ASSUMED THAT
C            THE PCPN DATA HAS BEEN QC'D ELSEWHERE, SO NO ERROR 
C            CHECKING IS DONE ON THIS INPUT VARIABLE.  A TRACE WILL 
C            EQUAL .004.  IF ONE OF THE 6 HR PCPN AMOUNTS IS MISSING,
C            THEN THE TOTAL CALCULATION WILL BE SET TO MISSING. 
C            BECAUSE RR IS USED IN THIS SUBROUTINE, A DUMMY RECORD IS
C            REQUIRED TO BE THE FIRST FOUR WORD ID IN THE .CN FILE,
C            WHERE IDPARS(1) = 799, AND RR = (TOTAL PCPN AMOUNT-6). 
C            (FOR EXAMPLE RR=18 FOR 24-HR PCPN CALCULATED TOTAL).
C            ON THE FIRST PROCESS DATE, DATA AT THE TIME (NDATE-RR)
C            MUST BE PRESENT OR THE SUBROUTINE WILL NOT WORK.  FOR 
C            EXAMPLE IF YOU ARE CALCULATING 18-HR PCPN TOTAL (RR=12)
C            AND STARTING AT 5/6/12Z, THEN PCPN DATA FOR 5/6/00Z MUST 
C            BE PRESENT.  PLEASE READ WRITE UP FOR MORE DETAILS.
C           
C            THE FOLLOWING IDPARS(1) AND IDPARS(2) ARE ACCOMMODATED:
C
C              703 212 - 06-HR CONDITIONAL PRECIP AMT
C              703 220 - 12-HR PRECIPITATION AMOUNT
C              703 222 - 12-HR CONDITIONAL PRECIP AMT
C              703 230 - 18-HR PRECIPITATION AMOUNT
C              703 232 - 18-HR CONDITIONAL PRECIP AMT
C              703 240 - 24-HR PRECIPITATION AMOUNT
C              703 242 - 24-HR CONDITIONAL PRECIP AMT 
C
C        DATA SET USE 
C            KFILDO - DEFAULT UNIT NUMBER FOR OUTPUT (PRINT) FILE 
C                     (OUTPUT). 
C            KFIL10 - UNIT NUMBER OF TDL MOS-2000 FILE SYSTEM ACCESS
C                     (INPUT-OUTPUT). 
C 
C        VARIABLES 
C              KFILDO = DEFAULT UNIT NUMBER FOR OUTPUT (PRINT) FILE
C                       (INPUT). 
C              KFIL10 = UNIT NUMBER OF TDL MOS-2000 FILE SYSTEM 
C                       ACCESS (INPUT).   
C           IDPARS(J) = THE PARSED, INDIVIDUAL COMPONENTS OF THE 
C                       PREDICTOR ID CORRESPONDING TO ID(J) (J=1,15)
C                       DEFINED IN THE CALLING PROGRAM (INPUT).
C                       J=1--CCC (CLASS OF VARIABLE),
C                       J=2--FFF (SUBCLASS OF VARIABLE),
C                       J=3--B (BINARY INDICATOR),
C                       J=4--DD (DATA SOURCE, MODEL NUMBER),
C                       J=5--V (VERTICAL APPLICATION),
C                       J=6--LBLBLBLB (BOTTOM OF LAYER, 0 IF ONLY 1 
C                            LAYER),
C                       J=7--LTLTLTLT (TOP OF LAYER),
C                       J=8--T (TRANSFORMATION),
C                       J=9--RR (RUN TIME OFFSET -- PREVIOUS CYCLE.  
C                            ALWAYS + AND COUNTED BACKWARDS IN TIME),
C                       J=10--OT (TIME APPLICATION),
C                       J=11--OH (TIME PERIOD IN HOURS),
C                       J=12--TAU (PROJECTION IN HOURS),
C                       J=13--I (INTERPOLATION TYPE),
C                       J=14--S (SMOOTHING INDICATOR), AND
C                       J=15--G (GRID INDICATOR).
C               JD(J) = THE BASIC INTEGER PREDICTOR ID (J=1,4).
C                       THIS IS THE SAME AS ID(J), EXCEPT THAT THE 
C                       PORTIONS PERTAINING TO PROCESSING ARE OMITTED:
C                       B = IDPARS(3),
C                       T = IDPARS(8),
C                       I = IDPARS(13),
C                       S = IDPARS(14),
C                       G = IDPARS(15), AND THRESH.
C                       JD( ) IS USED TO IDENTIFY THE BASIC MODEL 
C                       FIELDS AS READ FROM THE ARCHIVE (INPUT).
C               NDATE = THE DATE/TIME FOR WHICH PREDICTOR IS NEEDED
C                       (INPUT).
C            SDATA(K) = DATA TO RETURN (K=1,NSTA) (OUTPUT) 
C                 ND1 = MAXIMUM NUMBER OF STATIONS THAT CAN BE DEALT 
C                       WITH.  (INPUT).
C                NSTA = NUMBER OF STATIONS OR LOCATIONS BEING DEALT 
C                       WITH.  (INPUT).
C            IPACK(J) = WORK ARRAY (J=1,ND2X3) (INTERNAL).  
C            IWORK(J) = WORK ARRAY (J=1,ND2X3) (INTERNAL).  
C           FDPCPN(J) = WORK ARRAY (J=1,ND2X3) FDPCPN CONTAINS
C                       6-HR PRECIP AMOUNT RETURNED FROM GFETCH.  
C                       (INTERNAL). 
C           FDFLAG(J) = TRACE FLAG (=-10. FOR TRACE, =0. FOR NOT TRACE)
C                       (J=1,ND2X3) (INTERNAL).
C                 ND5 = FORMER DIMENSION OF IPACK( ),IWORK( ),FDPCPN( ), 
C                       AND FDFLAG( ).(INPUT).
C         LSTORE(L,J) = THE ARRAY HOLDING INFORMATION ABOUT THE DATA 
C                       STORED (L=1,12) (J=1,LITEMS), (INPUT-OUTPUT).
C                       L=1,4--THE 4 ID'S FOR THE DATA.
C                       L=5  --LOCATION OF STORED DATA.  WHEN IN CORE,
C                              THIS IS THE LOCATION IN CORE( ) WHERE
C                              THE DATA START.  WHEN ON DISK, 
C                              THIS IS MINUS THE RECORD NUMBER WHERE 
C                              THE DATA START.
C                       L=6  --THE NUMBER OF 4-BYTE WORDS STORED.
C                       L=7  --2 FOR DATA PACKED IN TDL GRIB, 1 FOR 
C                              NOT.
C                       L=8  --THE DATE/TIME OF THE DATA IN FORMAT
C                              YYYYMMDDHH.
C                       L=9  --NUMBER OF TIMES DATA HAVE BEEN 
C                              RETRIEVED.
C                       L=10 --NUMBER OF THE SLAB IN DIR( , ,L) AND
C                              IN NGRIDC( ,L) DEFINING THE 
C                              CHARACTERISTICS OF THIS GRID.
C                       L=11 --THE NUMBER OF THE PREDICTOR IN THE 
C                              SORTED LIST IN ID( ,N) (N=1,NPRED)
C                              FOR WHICH THIS VARIABLE IS NEEDED, WHEN 
C                              IT IS NEEDED ONLY ONCE FROM 
C                              LSTORE( , ).  WHEN IT IS NEEDED MORE
C                              THAN ONCE, THE VALUE IS SET = 7777.
C                       L=12 --USED INITIALLY IN ESTABLISHING 
C                              MSTORE( , ). LATER USED AS A WAY OF 
C                              DETERMINING WHETHER TO KEEP THIS 
C                              VARIABLE.
C                 ND9 = THE SECOND DIMENSION OF LSTORE( , ), (INPUT). 
C              LITEMS = THE NUMBER OF ITEMS (COLUMNS) IN LSTORE( , )
C                       THAT HAVE BEEN USED IN THIS RUN (INPUT).  
C             CORE(J) = THE ARRAY TO STORE OR RETRIEVE THE DATA 
C                       IDENTIFIED IN LSTORE( , ) (J=1,ND10). WHEN
C                       CORE( ) IS FULL, DATA ARE STORED ON DISK
C                       (OUTPUT).
C                ND10 = DIMENSION OF CORE( ), (INPUT).
C              NBLOCK = THE BLOCK SIZE IN WORDS OF THE MOS-2000 RANDOM
C                       DISK FILE (INPUT).  
C              NFETCH = INCREMENTED EACH TIME GFETCH IS ENTERED.
C                       IT IS A RUNNING  COUNT FROM THE BEGINNING OF 
C                       THE PROGRAM.  THIS COUNT IS MAINTAINED IN 
C                       CASE THE USER NEEDS IT (DIAGNOSTICS, ETC.). 
C                       (OUTPUT).  
C              IS0(J) = MOS-2000 GRIB SECTION 0 ID'S (J=1,3)
C                       (INTERNAL).
C              IS1(J) = MOS-2000 GRIB SECTION 1 ID'S (J=1,22+)  
C                       (INTERNAL).
C              IS2(J) = MOS-2000 GRIB SECTION 2 ID'S (J=1,12)
C                       (INTERNAL).
C              IS4(J) = MOS-2000 GRIB SECTION 4 ID'S (J=1,4)
C                       (INTERNAL).
C                 ND7 = DIMENSION OF IS0, IS1, IS2, AND IS4. NOT ALL
C                       LOCATIONS ARE USED (INPUT).
C               ISTAV = 1 WHEN THE DATA RETURNED ARE STATION DATA
C                       0 THE DATA RETURNED ARE GRID DATA OR
C                       DATA ARE NOT AVAILABLE FOR RETURN. 
C                       (OUTPUT).
C              L3264B = INTEGER WORD LENGTH IN BITS OF MACHINE BEING 
C                       USED (EITHER 32 OR 64) (INPUT).
C                 IER = STATUS RETURN.
C                         0 = GOOD RETURN.
C			 -1 = STARTING DATE NOT 00, 06, 12, OR 18 UTC.
C                        52 = NWORDS DOES NOT EQUAL NSTA.
C                       103 = IDPARS(1) AND IDPARS(2) NOT ACCOMMODATED
C                             IN THIS SUBROUTINE.
C                       SEE GFETCH FOR OTHER VALUES WHEN IER.NE.0 AND
C                       DATA ARE RETURNED AS MISSING (INTERNAL-OUTPUT)
C
C      ADDITIONAL VARIABLES
C               ENDLP = HOW MANY TIMES TO LOOP THROUGH MAIN 
C                       PROCESSING LOOP. EACH LOOP GOES BACK 6 HRS.
C                       (INTERNAL).
C          IDTBL(I,J) = TABLE HOLDING IDPARS(2) WORD ID'S AND THE 
C                       CORRESPONDING HRLY PCPN AMOUNTS THEY
C                       REPRESENT.  (INTERNAL). 
C              IBADHR = FLAG THAT NDATE HAS EQUALED A NON-
C                       SYNOPTIC TIME.  (INTERNAL).
C              IENTER = NUMBER OF TIMES THIS SUBROUTINE IS ENTERED.
C                       (INTERNAL).  
C                 I,J = LOOP COUNT (INTERNAL) 
C               LD(J) = HOLDS THE 4 ID WORDS OF THE DATA RETRIEVED INTO
C                       FDPCPN( )
C                      (J=1,4) (INTERNAL).
C               MISSP = PRIMARY MISSING VALUE INDICATOR.  RETURNED AS
C                       ZERO FROM CALLING GFETCH WHEN THERE IS NO
C                       SECONDARY MISSING VALUE (INTERNAL)
C               MISSS = SECONDARY MISSING VALUE INDICATOR.  RETURNED AS
C                       ZERO FROM CALLING GFETCH WHEN THERE IS NO 
C                       SECONDARY MISSING VALUE. (INTERNAL)
C                   N = CNTR VARIABLE TO INCREMENT IDPARS(9) IN LD(3). 
C                       THIS TELLS GFETCH HOW MANY HOURS TO GO BACK
C                       FROM NDATE TO GET THE 6HR PCPN DATA. (INTERNAL).
C               NPACK = 2 FOR TDL GRIB PACKED DATA; 1 FOR NOT PACKED.
C                       THIS IS RETURNED FROM CALLING GFETCH (INTERNAL)
C               NSLAB = RETURNED FROM GFETCH AS THE VALUE STORED IN
C                       LSTORE(10, ) FOR THE FIRST FIELD.  THIS IS THE
C                       VALUE OF NSLAB RETURNED.  WHEN IER NE 0, THIS
C                       VALUE SHOULD NOT BE USED (OUTPUT).  
C              NTIMES = THE NUMBER OF TIMES, INCLUDING THIS ONE, THAT 
C                       THE RECORD HAS BEEN FETCHED. THIS IS STORED 
C                       IN LSTORE(9, ) (INTERNAL).
C              NWORDS = NUMBER OF WORDS RETURNED IN FDPCPN( ).
C                       (INTERNAL).
C 
C        NONSYSTEM SUBROUTINES CALLED 
C            GFETCH
C
      IMPLICIT NONE
C
      INTEGER IDPARS(15),JD(4)
      INTEGER IPACK(ND2X3),IWORK(ND2X3)
      INTEGER IS0(ND7),IS1(ND7),IS2(ND7),IS4(ND7)
      INTEGER LSTORE(12,ND9)
      INTEGER IDTBL(2,4),LD(4)
      INTEGER ENDLP,I,IBADHR,IENTER,IER,ISTAV,J,KFIL10,KFILDO,
     +        L3264B,LITEMS,MISSP,MISSS,N,NBLOCK,ND1,ND2X3,ND7,
     +        ND9,ND10,NDATE,NFETCH,NPACK,NSLAB,NSTA,NTIMES,
     +	      NWORDS 
C
      REAL SDATA(ND1)
      REAL FDPCPN(ND2X3),FDFLAG(ND2X3)
      REAL CORE(ND10)
C
      DATA IENTER/0/
      DATA IBADHR/0/
      SAVE IENTER
      SAVE IBADHR
      DATA ((IDTBL(I,J),I=1,2),J=1,4)
     1     /21,  6,
     2      22, 12,
     3      23, 18,
     4      24, 24/
C        IDTBL(1, ) = IDPARS(2)/10 AND 
C        IDTBL(2, ) = THE CORRESPONDING PCPN AMOUNT IN HRS.
C
      IER=0
      ISTAV=1
C
C        INITIALIZE VARIABLES.
C
      ENDLP=0
C
      DO J=1,ND1
	 SDATA(J)=0.
         FDFLAG(J)=0.
      END DO
C
C        CHECK IF IDPARS(1) AND IDPARS(2) ARE ACCOMMODATED 
C        IN THIS SUBROUTINE.
C
      IF(IDPARS(1).NE.703.OR.(IDPARS(2).NE.212.AND.
     +   IDPARS(2).NE.220.AND.IDPARS(2).NE.222.AND.IDPARS(2).NE.230.AND.
     +   IDPARS(2).NE.232.AND.IDPARS(2).NE.240.AND.IDPARS(2).NE.242)) 
     +  THEN
	 IER=103
	 WRITE(KFILDO,100)(JD(J),J=1,4),IER
 100     FORMAT(/' ****IDPARS(1) AND IDPARS(2) DO NOT INDICATE',
     +           ' PCPN AMOUNT CALCULATED FROM 6-HR AMOUNTS.',
     +          /'     PREDICTOR ',I9.9,I10.9,I10.9,I4.3,' NOT',
     +           ' ACCOMMODATED IN PCPX6.  IER=',I3)
         GO TO 900
      ENDIF
C
C        INCREMENT IENTER VARIABLE BY 1.
C
      IENTER=IENTER+1
C
C        IF NDATE DOES NOT END AT 00Z, 06Z, 12Z, OR 18Z,
C        AND IT IS THE FIRST PROCESS DATE...
C        PCPX6 WILL NOT WORK,  
C        AND THE SUBROUTINE WILL BE EXITED WITH IER = -1.
C
      IF (MOD(MOD(NDATE,100),6).NE.0.AND.IENTER.EQ.1) THEN
	 IER=-1
         WRITE(KFILDO,120)NDATE 
 120     FORMAT(/' ****ERROR, FIRST PROCESS DATE IS ON A',
     1           ' NON-SYNOPTIC TIME.  NDATE =',I12,
     2           '.  PCPX6 CANNOT RUN, PLEASE READ WRITE UP.',
     3          /'     YOU PROBABLY NEED A DUMMY CCC = 799',
     4           ' WITH AN RR TO MATCH THE COMPUTATIONAL PERIOD.') 
	 GO TO 900
      ENDIF
C                                                                       
C        IF NDATE DOES NOT END AT 00Z, 06Z, 12Z, OR 18Z,
C        PCPN AMOUNT WILL NOT (CANNOT) BE CALCULATED,  
C        AND THE SUBROUTINE WILL BE EXITED WITH IER = -1.
C        THE FIRST TIME A NON-SYNOPTIC TIME IS ENCOUNTERED,
C        A MESSAGE WILL BE PRINTED TO REMIND THE USER OF THIS
C        LIMITATION.
C
      IF (MOD(MOD(NDATE,100),6).NE.0.AND.IBADHR.EQ.0) THEN
         WRITE(KFILDO,130) 
 130     FORMAT(/' ****REMINDER, ONE OR MORE NON-SYNOPTIC',
     +           ' PROCESS DATES HAVE BEEN DETECTED IN PCPX6.', 
     +           '  PLEASE REMEMBER THAT PCPX6 WILL NOT PRODUCE',
     +           ' OUTPUT ON NON-SYNOPTIC PROCESS DATES.')
	 IBADHR=1
	 IER=-1
	 GO TO 900
      ENDIF
C
      IF (MOD(MOD(NDATE,100),6).NE.0) THEN
	 IER=-1
	 GO TO 900
      ENDIF
C
C        CALCULATE ENDLP.
C
      DO 200 I=1,4
	 IF (IDTBL(1,I).EQ.(IDPARS(2)/10)) THEN
	    ENDLP=IDTBL(2,I)/6
	    N=IDTBL(2,I)-6
         ENDIF
 200  CONTINUE
C
C        LOOP THROUGH ENDLP AMOUNT OF TIMES TO CALCULATE
C        TOTAL AMOUNT OF PCPN.
C
      DO 230 I=1,ENDLP
C
C           CONSTRUCT THE ARRAY LD FOR PCPN AMOUNT
C           AND FETCH THE PARAMETER.  
C
         LD(1)=IDPARS(1)*1000000+210000+IDPARS(4)
         LD(2)=IDPARS(7)
         LD(3)=(IDPARS(9)+N)*1000000+IDPARS(12)
         LD(4)=0
         CALL GFETCH(KFILDO,KFIL10,LD,7777,LSTORE,ND9,LITEMS,
     +               IS0,IS1,IS2,IS4,ND7,IPACK,IWORK,FDPCPN,ND2X3,
     +               NWORDS,NPACK,NDATE,NTIMES,CORE,ND10,
     +               NBLOCK,NFETCH,NSLAB,MISSP,MISSS,L3264B,1,
     +               IER)
C
C           CHECK TO SEE IF IER NE 0, AND IF THIS IS THE FIRST
C           PROCESS DATE.  PRINT ERROR MESSAGE IF NEEDED. 
C
         IF((IER.NE.0).AND.(IENTER.EQ.1).AND.(I.EQ.1))THEN
            WRITE(KFILDO,140)NDATE 
 140        FORMAT(/' ****ERROR FROM GFETCH OCCURRED ON', 
     1              ' 1ST PROCESS DATE = ',I12,
     2              '.  PCPX6 CANNOT RUN, PLEASE READ WRITE UP.',
     3             /'     YOU PROBABLY NEED A DUMMY CCC = 799',
     4              ' WITH AN RR TO MATCH THE COMPUTATIONAL PERIOD.') 
         ENDIF 
C
C           PERFORM ERROR CHECK ON IER.
C
D        IF(IER.NE.0) THEN
D           WRITE(KFILDO,155)IER,NDATE,N
D155        FORMAT(/' ****6-HR PCPN FETCH FAILED IN PCPX6 AT 155.',
D    +              '  IER =',I4,' FOR NDATE =',I12,'AND RR =',I4)  
D           GO TO 900
D        ENDIF
D
         IF(IER.NE.0) GO TO 900
C
C           IF NWORDS DOES NOT EQUAL NSTA, SET ALL VALUES TO MISSING.
C
         IF(NWORDS.NE.NSTA)THEN
            IER=52
	    WRITE(KFILDO,160)NWORDS,NSTA,IER
 160        FORMAT(/' ****NWORDS =',I6,' RETURNED FROM GFETCH',
     +              ' AT 160, NOT EQUAL TO NSTA =',I6,
     +              ' IN PCPX6.  DATA SET TO MISSING.  IER=',I4) 
	    GO TO 900
         ENDIF
C
C              START THE PCPN CALCULATION PROCESS.
C
         DO 220 J=1,NSTA
C 
C              IF PRECIP AMOUNT IS MISSING...DO NOT 
C              EXECUTE...AND SET VALUE TO MISSING.
C
            IF(FDPCPN(J).NE.9999..AND.SDATA(J).NE.9999.)THEN
C
C                 IF NEEDED, SET TRACE FLAG (FDFLAG(J)=-10. FOR TRACE)
C                 AND SKIP CALCULATION.              
C
               IF((FDPCPN(J).LT..005).AND.(FDPCPN(J).GT..003)) THEN
	          FDFLAG(J)=-10. 
C
C                    IF FDPCPN(J) NOT A TRACE THEN ADD AMOUNT TO 
C                    TOTAL.
C
               ELSE
	          SDATA(J)=SDATA(J)+FDPCPN(J)
               ENDIF
            ELSE 
               SDATA(J)=9999.
            ENDIF
C
C              IF THIS IS THE FINAL LOOP...SET
C              SDATA TO TRACE (IF NEEDED).
C
            IF (I.EQ.ENDLP) THEN
	       IF (FDFLAG(J).LT.-1..AND.SDATA(J).LT..002) THEN
	          SDATA(J)=.004
               ENDIF	
            ENDIF
 220     CONTINUE
C
C           INCREMENT COUNTER (RR IN IDPARS(9)) BY 6 HRS.
C
         N=N-6
 230  CONTINUE
C
C        IF CONDITIONAL PRECIP IS NOT DESIRED (NOT 7032X2), THEN  
C        RETURN IMMEDIATELY
C
      IF(MOD(IDPARS(2),10).NE.2) GO TO 910
C
C           IF NO (0 - ZERO) PRECIPITATION OR A TRACE WAS
C           REPORTED, SET SDATA(J) TO MISSING FOR CONDITIONAL.
C
      DO 300 J=1,NSTA
         IF(SDATA(J).LT..009) SDATA(J)=9999.
 300  CONTINUE
C
      GO TO 910 
C
C        FILL IN THE PCPX6 ARRAY WITH MISSING VALUES
C
 900  DO J=1,ND1
	 SDATA(J)=9999.
      END DO
 910  RETURN
      END 
