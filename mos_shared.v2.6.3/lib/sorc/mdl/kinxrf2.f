      SUBROUTINE KINXRF2(KFILDO,KFIL10,IP12,IP16,IDPARS,JD,NDATE,
     1                   KFILRA,RACESS,NUMRA,
     2                   CCALL,ICALLD,CCALLD,
     3                   ISDATA,SDATA,DIR,ND1,NSTA,
     4                   NGRIDC,ND11,NSLAB,IPACK,IWORK,DATA,ND5,
     5                   LSTORE,ND9,LITEMS,CORE,ND10,
     6                   LASTL,NBLOCK,LASTD,NSTORE,NFETCH,
     6                   IS0,IS1,IS2,IS4,ND7,
     8                   FD1,FD2,FD3,FD5,FD6,FD4,ND2X3,
     9                   ISTAV,L3264B,L3264W,MISTOT,IER)
C
C        JULY      2010   SHAFER  MDL  MOS-2000
C        MAR       2012   SHAFER  ADDED CHECK FOR MISSING VALUES BEFORE 
C                                 COMPUTATION OF KI*RF PRODUCT.
C        JUNE      2012   SHAFER  ADDED IDS FOR KIx2H_TSRF
C
C        PURPOSE 
C            SUBROUTINE KINXRF2 COMPUTES THE INTERACTIVE PREDICTOR (KF), DEFINED
C            BY THE PRODUCT OF THE K STABILITY INDEX AND THE 2-H CONVECTION OR
C            TSTORM RELATIVE FREQUENCY (F).  K=(850T-500T)+850TD+(700TD-700T), WHERE
C            T IS THE TEMPERATURE AND TD IS THE DEW POINT.  F IS OBTAINED BY LINEAR 
C            INTERPOLATION BETWEEN THE MONTHLY CLIMATOLOGICAL VALUES OF TSTORM OR  
C            CONVECTION FREQUENCY STORED ON DISK.  THE K INDEX AND RELATIVE
C            FREQUENCY INPUT FILES ARE STORED ON DISK IN TDLPACK FORMAT. 
C            KF VALUES ARE RETURNED TO THE CALLING PROGRAM (OPTION) IN ARRAY  
C            SDATA. PRIMARY USE OF THE KF PREDICTOR IS TO PREDICT THUNDERSTORMS
C            AND CONVECTION.
C
C            THE LOGIC OF THIS ROUTINE IS SIMILAR TO KINXRF EXCEPT:
C            (1)  THIS ROUTINE PERFORMS TIME INTERPOLATION OF K FOR OFF HOUR
C                 PROJECTIONS (NOT DIVISIBLE BY 3) BEFORE INTERPOLATING TO STATIONS.
C            (2)  NEGATIVE VALUES OF KF (RESULTING FROM K < 0) ARE TRUNCATED 
C                 TO ZERO IN THIS ROUTINE.   
C
C            THE FOLLOWING IDPARS(1) AND IDPARS(2) ARE ACCOMMODATED:
C
C                007 451 - KINDEX * PREVIOUS 2 HR CONVECTION RF
C                007 456 - KINDEX * SUBSEQUENT 2 HR CONVECTION RF
C                007 452 - KINDEX * PREVIOUS 2 HR TSTORM RF
C                007 457 - KINDEX * SUBSEQUENT 2 HR TSTORM RF
C
C        DATA SET USE
C            KFILDO - DEFAULT UNIT NUMBER FOR OUTPUT (PRINT) FILE.  (OUTPUT) 
C            KFIL10 - UNIT NUMBER OF TDL MOS-2000 FILE SYSTEM ACCESS.
C                     (INPUT/OUTPUT) 
C
C        VARIABLES
C              KFILDO = DEFAULT UNIT NUMBER FOR OUTPUT (PRINT) FILE. (INPUT) 
C              KFIL10 = UNIT NUMBER OF TDL MOS-2000 FILE SYSTEM ACCESS.
C                       (INPUT)
C           IDPARS(J) = THE PARSED, INDIVIDUAL COMPONENTS OF THE 
C                       PREDICTOR ID CORRESPONDING TO ID() (J=1,15).
C                       (INPUT)
C                       J=1--CCC (CLASS OF VARIABLE),
C                       J=2--FFF (SUBCLASS OF VARIABLE),
C                       J=3--B (BINARY INDICATOR),
C                       J=4--DD (DATA SOURCE, MODEL NUMBER),
C                       J=5--V (VERTICAL APPLICATION),
C                       J=6--LBLBLBLB (BOTTOM OF LAYER, 0 IF ONLY
C                                      1 LAYER)
C                       J=7--LTLTLTLT (TOP OF LAYER)
C                       J=8--T (TRANSFORMATION)
C                       J=9--RR (RUN TIME OFFSET, ALWAYS + AND 
C                                BACK IN TIME)
C                       J=10-OT (TIME APPLICATION)
C                       J=11-OH (TIME PERIOD IN HOURS)
C                       J=12-TAU (PROJECTION IN HOURS)
C                       J=13-I (INTERPOLATION TYPE)
C                       J=14-S (SMOOTHING INDICATOR)
C                       J=15-G (GRID INDICATOR)
C               JD(J) = THE BASIC INTEGER PREDICTOR ID (J=1,4).
C                       THIS IS THE SAME AS ID(J), EXCEPT THAT
C                       THE PORTIONS PERTAINING TO PROCESSING
C                       ARE OMITTED:
C                       B = IDPARS(3),
C                       T = IDPARS(8),
C                       I = IDPARS(13),
C                       S = IDPARS(14),
C                       G = IDPARS(15).
C                       JD() IS USED TO HELP IDENTIFY THE BASIC MODEL
C                       FIELDS AS READ FROM THE ARCHIVE. (INPUT)
C               NDATE = THE DATE/TIME FOR WHICH PREDICTOR IS NEEDED.
C                       (INPUT)
C         NGRIDC(L,M) = HOLDS THE GRID CHARACTERISTICS (L=1,6) FOR EACH GRID
C                       COMBINATION (M=1,NGRID).
C                       L=1--MAP PROJECTION NUMBER (3=LAMBERT, 5=POLAR
C                            STEREOGRAPHIC). 
C                       L=2--GRID LENGTH IN MILLIMETERS,
C                       L=3--LATITUDE AT WHICH GRID LENGTH IS CORRECT *10000,
C                       L=4--GRID ORIENTATION IN DEGREES *10000,
C                       L=5--LATITUDE OF LL CORNER IN DEGREES *10000,
C                       L=6--LONGITUDE OF LL CORNER IN DEGREES *10000.
C                ND11 = MAXIMUM NUMBER OF GRID COMBINATIONS THAT CAN BE
C                       DEALT WITH ON THIS RUN.  LAST DIMENSION OF
C                       NGRIDC( , ) AND DIR( , , ).  (INPUT)
C               NSLAB = THE NUMBER OF THE SLAB IN DIR( , , ) AND
C                       IN NGRIDC( , ) DEFINING THE CHARACTERISTICS
C                       OF THIS GRID.  SEE LSTORE(10, ).  FOR THE
C                       COMPUTATION ROUTINES RETURNING A GRID, THIS
C                       VALUE MUST BE OUTPUT BY GFETCH.  (OUTPUT) 
C            IPACK(J) = WORK ARRAY (J=1,ND5).  (INTERNAL)
C            IWORK(J) = WORK ARRAY (J=1,ND5).  (INTERNAL)
C             DATA(J) = ARRAY TO HOLD RETURNED DATA WHEN THE DATA ARE
C                       AT GRIDPOINTS. (J=1,ND5).  (OUTPUT)
C            DATA1(J) = ARRAY TO HOLD RETURNED K INDEX VALUES FOR FIRST
C                       FORECAST PROJECTION (J=1,ND5).  (INTERNAL)
C            DATA2(J) = ARRAY TO HOLD RETURNED K INDEX VALUES FOR SECOND
C                       FORECAST PROJECTION (J=1,ND5).  (INTERNAL)
C                 ND5 = DIMENSION OF IPACK( ), IWORK( ), AND DATA( ).
C                       (INPUT)
C         LSTORE(L,J) = THE ARRAY HOLDING INFORMATION ABOUT THE DATA 
C                       STORED (L=1,12) (J=1,LITEMS).  (INPUT/OUTPUT)
C                       L=1,4--THE 4 ID'S FOR THE DATA.
C                       L=5  --LOCATION OF STORED DATA.  WHEN IN CORE,
C                              THIS IS THE LOCATION IN CORE( ) WHERE
C                              THE DATA START.  WHEN ON DISK, 
C                              THIS IS MINUS THE RECORD NUMBER WHERE 
C                              THE DATA START.
C                       L=6  --THE NUMBER OF 4-BYTE WORDS STORED.
C                       L=7  --2 FOR DATA PACKED IN TDL GRIB, 1 FOR NOT.
C                       L=8  --THE DATE/TIME OF THE DATA IN FORMAT
C                              YYYYMMDDHH.
C                       L=9  --NUMBER OF TIMES DATA HAVE BEEN RETRIEVED.
C                       L=10 --NUMBER OF THE SLAB IN DIR( , ,L) AND
C                              IN NGRIDC( ,L) DEFINING THE CHARACTERISTICS
C                              OF THIS GRID.
C                       L=11 --THE NUMBER OF THE PREDICTOR IN THE SORTED
C                              LIST IN ID( ,N) (N=1,NPRED) FOR WHICH THIS
C                              VARIABLE IS NEEDED, WHEN IT IS NEEDED ONLY
C                              ONCE FROM LSTORE( , ).  WHEN IT IS NEEDED
C                              MORE THAN ONCE, THE VALUE IS SET = 7777.
C                       L=12 --USED INITIALLY IN ESTABLISHING MSTORE( , ).
C                              LATER USED AS A WAY OF DETERMINING WHETHER
C                              TO KEEP THIS VARIABLE.
C                 ND9 = THE SECOND DIMENSION OF LSTORE( , ).  (INPUT)
C              LITEMS = THE NUMBER OF ITEMS (COLUMNS) IN LSTORE( , ) THAT 
C                       HAVE BEEN USED IN THIS RUN.  (INPUT/OUTPUT)
C             CORE(J) = THE ARRAY TO STORE OR RETRIEVE THE DATA
C                       IDENTIFIED IN LSTORE(,) (J=1,ND10).
C                       WHEN CORE() IS FULL DATA ARE STORED ON DISK.
C                       (INPUT)
C                ND10 = DIMENSION OF CORE( ).  (INPUT)
C              NBLOCK = THE BLOCK SIZE IN WORDS OF THE MOS-2000 RANDOM
C                       DISK FILE.  (INPUT)
C              NFETCH = INCREMENTED EACH TIME GFETCH IS ENTERED.
C                       IT IS A RUNNING COUNT FROM THE BEGINNING OF
C                       THE PROGRAM.  THIS COUNT IS MAINTAINED IN
C                       CASE THE USER NEEDS IT(DIAGNOSTICS, ETC.).
C                       (OUTPUT)
C              IS0(J) = MOS-2000 GRIB SECTION 0 ID'S (J=1,3).
C                       (INTERNAL)
C              IS1(J) = MOS-2000 GRIB SECTION 1 ID'S (J=1,22+).
C                       (INTERNAL)
C              IS2(J) = MOS-2000 GRIB SECTION 2 ID'S (J=1,12).
C                       IS2(3) AND IS2(4) ARE USED BY THE CALLING
C                       PROGRAM AS THE GRID DIMENSIONS.
C                       (INTERNAL-OUTPUT)
C              IS4(J) = MOS-2000 GRIB SECTION 4 ID'S (J=1,4).
C                       (INTERNAL)
C                 ND7 = DIMENSION OF IS0(),IS1(),IS2(), AND IS4().
C                       NOT ALL LOCATIONS ARE USED. (INPUT)
C               ND2X3 = DIMENSION OF SEVERAL VARIABLES.  THE SIZE OF
C                       THE GRID IS NOT KNOWN BEFORE FDTK AND FDDP
C                       ARE FETCHED.  ALL WORK ARRAYS ARE DIMENSIONED
C                       ND2X3.  (INPUT)
C               ISTAV = 1 SINCE THE DATA RETURNED ARE STATION DATA.
C                       (OUTPUT)
C              L3264B = INTEGER WORD LENGTH IN BITS OF MACHINE BEING 
C                       USED (EITHER 32 OR 64). (INPUT)
C              MISTOT = TOTAL NUMBER OF TIMES A MISSING INDICATOR
C                       HAS BEEN ENCOUNTERED IN UNPACKING GRIDS.
C                       (INPUT-OUTPUT)
C  FD1(J),FD2(J),ETC  = WORK ARRAYS (J=1,ND2X3).  (INTERNAL)
C           KFILRA(J) = HOLDS THE UNIT NUMBERS FOR ACCESSING THE MOS-2000
C                       EXTERNAL RANDOM ACCESS FILES (J=1,NUMRA).  (INPUT)
C           RACESS(J) = THE FILE NAMES CORRESPONDING TO KFILRA(J) (J=1,NUMRA).
C                       (CHARACTER*60)  (INPUT)
C               NUMRA = THE NUMBER OF UNIT NUMBERS AND NAMES IN KFILRA( )
C                       AND RACESS( ).  (INPUT)
C                 ND1 = MAXIMUM NUMBER OF STATIONS THAT CAN BE DEALT WITH.
C                       DIMENSION OF SEVERAL VARIABLES.  (INPUT)
C          CCALL(K,J) = 8-CHARACTER STATION CALL LETTERS (OR GRIDPOINT
C                       LOCATIONS FOR GRID DEVELOPMENT) TO PROVIDE
C                       OUTPUT FOR (J=1) AND 5 POSSIBLE OTHER STATION
C                       CALL LETTERS (J=2,6) THAT CAN BE USED INSTEAD
C                       IF THE PRIMARY (J=1) STATION CANNOT BE FOUND 
C                       IN AN INPUT DIRECTORY (K=1,NSTA).  ALL STATION
C                       DATA ARE KEYED TO THIS LIST, EXCEPT POSSIBLY 
C                       CCALLD( ) AND CCALLP( ).  (CHARACTER*8)
C         ICALLD(L,K) = 8 STATION CALL LETTERS AS CHARACTERS IN AN INTEGER
C                       VARIABLE (L=1,L3264W) (K=1,ND5).
C                       EQUIVALENCED TO CCALLD( ).  (INTERNAL)
C           CCALLD(K) = 8 STATION CALL LETTERS (K=1,ND5).  THIS LIST IS USED 
C                       IN L1D1 TO READ THE REGION LISTS.  (CHARACTER*8)
C                       (INTERNAL)
C           ISDATA(K) = WORK ARRAY (K=1,ND1).  (INTERNAL)
C           SDATA1(K) = RELATIVE FREQUENCY (CONSTANT) DATA RETURNED (K=1,NSTA)
C                       FROM SUBROUTINE CONST (INTERNAL).
C            SDATA(K) = PRODUCT OF RELATIVE FREQUENCY AND K STABILITY INDEX. 
C                       (OUTPUT)
C                NSTA = NUMBER OF STATIONS OR LOCATIONS BEING DEALT WITH.
C                       (INPUT)
C               LASTL = THE LAST LOCATION IN CORE( ) USED FOR MOS-2000 INTERNAL
C                       STORAGE.  INITIALIZED TO 0 ON FIRST ENTRY TO GSTORE.
C                       ALSO INITIALIZED IN U201 IN CASE GSTORE IS NOT ENTERED.
C                       (INPUT-OUTPUT)
C               LASTD = TOTAL NUMBER OF PHYSICAL RECORDS ON DISK FOR MOS-2000
C                       INTERNAL STORAGE.  MUST BE CARRIED WHENEVER GSTORE
C                       IS TO BE CALLED.  (INPUT)
C              NSTORE = THE NUMBER OF TIMES GSTORE HAS BEEN ENTERED.  GSTORE
C                       KEEPS TRACK OF THIS AND RETURNS THE VALUE.  (OUTPUT)
C                IP16 = NOT USED.  (INPUT)
C              L3264W = NUMBER OF WORDS IN 64 BITS, EITHER 1 OR 2.  (INPUT)
C           DIR(K,J,) = THE IX (J=1) AND JY (J=2) POSITIONS ON THE
C                       GRID FOR STATION K (K=1,NSTA).  (INPUT)  
C                IP12 = DIAGNOSTICS FOR FINDST (STATIONS ON THE RANDOM
C                       ACCESS FILE).  (INPUT)
C                 IER = STATUS RETURN
C                         0 = GOOD RETURN
C                       103 = PREDICTOR NOT IDENTIFIED TO COMPUTE;
C                             WHEN IER NE 0, DATA ARE RETURNED AS MISSING.
C                       (INTERNAL-OUTPUT)
C                IADD = THE NUMBER OF HOURS THE FORECAST WANTED IS AFTER
C                       THE FIRST VALUE TO BE USED IN INTERPOLATION. (INTERNAL)
C                IBEG = THE FIRST FORECAST TO USE IN INTERPOLATION. (INTERNAL)
C                IEND = THE SECOND FORECAST TO USE IN INTERPOLATION. (INTERNAL)
C        1         2         3         4         5         6         7 X
C
      CHARACTER*8 CCALL(ND1,6),
     1            CCALLD(ND5) 
      CHARACTER*60 RACESS(NUMRA) 
C
      DIMENSION IDPARS(15),JD(4)
      DIMENSION DIR(ND1,2,ND11),SDATA1(ND1),SDATA(ND1),ISDATA(ND1)
      DIMENSION IPACK(ND5),IWORK(ND5)
      DIMENSION DATA(ND5),DATA1(ND5),DATA2(ND5)
      DIMENSION FD1(ND2X3),FD2(ND2X3),FD3(ND2X3),FD4(ND2X3),FD5(ND2X3),
     1          FD6(ND2X3)
      DIMENSION IS0(ND7),IS1(ND7),IS2(ND7),IS4(ND7)
      DIMENSION LSTORE(12,ND9)
      DIMENSION NGRIDC(6,ND11)
      DIMENSION CORE(ND10)
      DIMENSION KFILRA(NUMRA)
      DIMENSION LDPARS(15),LD(4)
C
C***********************************************************************
C
C        STEP 1. INITIALIZATION
C
      IER =0
      ISTAV=1
C
      DO 99 J=1,ND1
       SDATA(J)=0.0
  99  CONTINUE
C
      DO 100 J=1,ND5
       DATA(J)=0.0
 100  CONTINUE
C
C        MAKE SURE THIS SUBROUTINE DEALS WITH THE PREDICTOR
C        007452 = KINDEX * PREVIOUS 2 HR TSTORM RF
C        007457 = KINDEX * SUBSEQUENT 2 HR TSTORM RF
C        007451 = KINDEX * PREVIOUS 2 HR CONVECTION RF
C        007456 = KINDEX * SUBSEQUENT 2 HR CONVECTION RF
C
      IF((IDPARS(1).NE.007).OR.((IDPARS(2).NE.452).AND.
     1                          (IDPARS(2).NE.457).AND.
     2                          (IDPARS(2).NE.451).AND.
     3                          (IDPARS(2).NE.456))) THEN
         IER=103
         WRITE(12,101)(JD(J),J=1,4)
 101     FORMAT(/,' ****IDPARS(1) AND IDPARS(2) DO NOT INDICATE KINXRF',
     1    ' PREDICTOR. ',I9.9,2I10.9,I4.3,' NOT COMPUTED IN KINXRF2.')
         GO TO 200
      ENDIF
C
C        STEP 2. COMPUTE THE K STABILITY INDEX
C        TIME INTERPOLATION IS PERFORMED FOR OFF-HOUR PROJECTIONS
C  
      IF(MOD(IDPARS(12),3).NE.0) GO TO 110
C
      LD(1)=007200000+IDPARS(4)
      LD(2)=000000700
      LD(3)=IDPARS(9)*1000000+IDPARS(12)  
      LD(4)=0 
      CALL PRSID1(KFILDO,LD,LDPARS)
C
      CALL KINDEX(KFILDO,KFIL10,LDPARS,LD,NDATE,
     1            NGRIDC,ND11,NSLAB,IPACK,IWORK,DATA,ND5,
     2            LSTORE,ND9,LITEMS,CORE,ND10,NBLOCK,
     3            NFETCH,IS0,IS1,IS2,IS4,ND7,
     4            FD1,FD2,FD3,FD5,FD6,FD4,ND2X3,
     5            ISTAV,L3264B,MISTOT,IER)
C
      IF(IER.NE.0) GO TO 200
      IF(IER.EQ.0) GO TO 120
C
C        IADD = THE NUMBER OF HOURS THE FORECAST WANTED IS AFTER
C               THE FIRST VALUE TO BE USED IN INTERPOLATION.
C        IBEG = THE FIRST FORECAST TO USE IN INTERPOLATION.
C        IEND = THE SECOND FORECAST TO USE IN INTERPOLATION.
C
  110 IADD=MOD(IDPARS(12),3)
      IBEG=IDPARS(12)-IADD
      IEND=IBEG+3
C      
C        COMPUTE THE K INDEX FOR PROJECTION IBEG
C        GRIDPOINT VALUES FOR K INDEX ARE RETURNED IN ARRAY DATA1
C
      LD(1)=007200000+IDPARS(4)
      LD(2)=000000700
      LD(3)=IDPARS(9)*1000000+IBEG  
      LD(4)=0 
      CALL PRSID1(KFILDO,LD,LDPARS)
C
      CALL KINDEX(KFILDO,KFIL10,LDPARS,LD,NDATE,
     1            NGRIDC,ND11,NSLAB,IPACK,IWORK,DATA1,ND5,
     2            LSTORE,ND9,LITEMS,CORE,ND10,NBLOCK,
     3            NFETCH,IS0,IS1,IS2,IS4,ND7,
     4            FD1,FD2,FD3,FD5,FD6,FD4,ND2X3,
     5            ISTAV,L3264B,MISTOT,IER)
C
      IF(IER.NE.0) GO TO 200
C      
C        COMPUTE THE K INDEX FOR PROJECTION IEND
C        GRIDPOINT VALUES FOR K INDEX ARE RETURNED IN ARRAY DATA2
C
      LD(1)=007200000+IDPARS(4)
      LD(2)=000000700
      LD(3)=IDPARS(9)*1000000+IEND  
      LD(4)=0 
      CALL PRSID1(KFILDO,LD,LDPARS)
C
      CALL KINDEX(KFILDO,KFIL10,LDPARS,LD,NDATE,
     1            NGRIDC,ND11,NSLAB,IPACK,IWORK,DATA2,ND5,
     2            LSTORE,ND9,LITEMS,CORE,ND10,NBLOCK,
     3            NFETCH,IS0,IS1,IS2,IS4,ND7,
     4            FD1,FD2,FD3,FD5,FD6,FD4,ND2X3,
     5            ISTAV,L3264B,MISTOT,IER)
C
      IF(IER.NE.0) GO TO 200
C
C        COMPUTE THE TIME-INTERPOLATED K INDEX AT EACH GRID POINT
C        AND SAVE IN ARRAY DATA
C
      NX=IS2(3)
      NY=IS2(4)
      F=FLOAT(IADD)/(IEND-IBEG)
C
      DO 115 J=1,NX*NY
         DATA(J)=(DATA2(J)-DATA1(J))*F+DATA1(J)
  115 CONTINUE
C
C        STEP 3. INTERPOLATE THE K INDEX VALUES FROM THE NCEP
C                MODEL GRID TO THE STATION (GRIDPOINT) LIST 
C
  120 NX=IS2(3)
      NY=IS2(4)
      JSTA=NSTA
      KK=0
C
C        SMOOTH K INDEX IF DESIRED.
C
      IF(IDPARS(14).EQ.1)CALL SMTH5 (KFILDO,DATA,FD1,NX,NY)
      IF(IDPARS(14).EQ.2)CALL SMTH9 (KFILDO,DATA,FD1,NX,NY)
      IF(IDPARS(14).EQ.3)CALL SMTH25(KFILDO,DATA,FD1,NX,NY)
 
      CALL INTRPB(KFILDO,DATA,NX,NY,DIR(1,1,NSLAB),ND1,NSTA,FD1)
C
C        STEP 4. FETCH THE MONTHLY RELATIVE FREQUENCY
C                FROM THE RANDOM-ACCESS CONSTANT FILE
C
C        2 HRS PREVIOUS
C
      IF(IDPARS(2).EQ.452) THEN 
        LD(1)=437501000
        LD(3)=IDPARS(12)		
      ELSE IF(IDPARS(2).EQ.451) THEN
        LD(1)=437515000
        LD(3)=IDPARS(12)      
C
C        2 HRS SUBSEQUENT
C
      ELSE IF(IDPARS(2).EQ.457) THEN
        LD(1)=437501000
        LD(3)=IDPARS(12)+2
      ELSE IF(IDPARS(2).EQ.456) THEN
        LD(1)=437515000
        LD(3)=IDPARS(12)+2
      ENDIF
C
      LD(2)=030000000
C      
      IF(IDPARS(2).EQ.451.OR.IDPARS(2).EQ.456) THEN
	 LD(4)=000000000
      ELSE IF(IDPARS(2).EQ.452.OR.IDPARS(2).EQ.457) THEN
         LD(4)=500000000
      ENDIF  
C
      CALL PRSID1(KFILDO,LD,LDPARS)
C
      CALL CONST(KFILDO,KFIL10,IP12,
     1              LD,LDPARS,JD,NDATE,
     2              KFILRA,RACESS,NUMRA,
     3              CCALL,ICALLD,CCALLD,
     4              ISDATA,SDATA1,ND1,NSTA,
     5              IPACK,IWORK,DATA,ND5,
     6              LSTORE,ND9,LITEMS,CORE,ND10,LASTL,
     7              NBLOCK,LASTD,NSTORE,NFETCH,
     8              IS0,IS1,IS2,IS4,ND7,
     9              ISTAV,L3264B,L3264W,IER)
C
      IF(IER.EQ.0) GO TO 130
C
      WRITE(KFILDO,126)IER
  126 FORMAT('     RELATIVE FREQUENCY FETCH FAILED IN KINXRF2.',
     1       '  IER = ',I3)
      GO TO 200
C
C        STEP 5. COMPUTE THE PRODUCT OF THE K INDEX AND THE 
C                DAILY RELATIVE FREQUENCY  
C
  130 DO 140 J=1,ND1
         IF(FD1(J).EQ.9999..OR.SDATA1(J).EQ.9999.) THEN
            SDATA(J) = 9999.
         ELSE
            SDATA(J) = FD1(J)*SDATA1(J)
            IF(SDATA(J).LT.0) SDATA(J)=0.           
         ENDIF
  140 CONTINUE
C
      GO TO 300
C 
C        SET OUTPUT FIELD TO MISSING WHEN AN ERROR HAS OCCURRED.
C
  200 DO 210 J=1,ND1
         SDATA(J)=9999.
  210 CONTINUE
C
  300 RETURN
      END
