      SUBROUTINE LMSTR1(KFILDO,NDATE,NRRDAT,LSTORE,LITEMS,
     1                  MSTORE,MITEMS,ND9,INCCYL,IER)
C
C        JULY      1995   GLAHN   TDL   MOS-2000
C        SEPTEMBER 1996   GLAHN   MODIFIED FOR KEEPING ONLY CYCLE NEEDED
C        JULY      1997   GLAHN   EXTENSIVE MODS
C        NOVEMBER  1998   GLAHN   REMOVED MITEMS=0; OTHER CHANGES TO
C                                 ACCOMMODATE MISSING DAY 1 DATA
C        DECEMBER  1998   GLAHN   LSTORE(9, ) = 99 NOT 999 FOR PRINT;
C                                 MOVED MINDAT = ABOVE GO TO 140
C        DECEMBER  1998   GLAHN   MORE TO ACCOUNT FOR DAY 1 MISSING DATA
C        MAY       2000   GLAHN   ADDED TESTS FOR MITEMS AND MITEM
C                                 LE ND9 WHEN BEING INCREASED 
C
C        PURPOSE
C           TO INITIALIZE MSTORE AND PREPARE LSTORE FOR GCPAC FOR U201.
C   
C        DATA SET USE
C            KFILDO - UNIT NUMBER OF OUTPUT (PRINT) FILE.  (OUTPUT)
C
C        VARIABLES
C              KFILDO = UNIT NUMBER OF OUTPUT (PRINT) FILE.  (INPUT)
C               NDATE = THE DAY 1 DATE/TIME.  (INPUT)
C              NRRDAT = THE NEXT DATE/TIME IN THE LIST.  NORMALLY, THIS
C                       WOULD BE THE CURRENT DATE/TIME + INCCYL.  (INPUT)
C         LSTORE(L,J) = THE ARRAY HOLDING INFORMATION ABOUT THE DATA 
C                       STORED (L=1,12) (J=1,LITEMS).  (INPUT-OUTPUT)
C                       L=1,4--THE 4 ID'S FOR THE DATA.
C                       L=5  --LOCATION OF STORED DATA.  WHEN IN CORE,
C                              THIS IS THE LOCATION IN CORE( ) WHERE
C                              THE DATA START.  WHEN ON DISK, 
C                              THIS IS MINUS THE RECORD NUMBER WHERE 
C                              THE DATA START.
C                       L=6  --THE NUMBER OF 4-BYTE WORDS STORED.
C                       L=7  --2 FOR DATA PACKED IN TDL GRIB, 1 FOR NOT.
C                       L=8  --THE DATE/TIME OF THE DATA IN FORMAT
C                              YYYYMMDDHH.
C                       L=9  --NUMBER OF TIMES DATA HAVE BEEN RETRIEVED.
C                       L=10 --NUMBER OF THE SLAB IN DIR( , ,L) AND
C                              IN NGRIDC( ,L) DEFINING THE CHARACTERISTICS
C                              OF THIS GRID.
C                       L=11 --THE NUMBER OF THE FIRST PREDICTOR IN THE SORTED
C                              LIST IN ID( ,N) (N=1,NPRED) FOR WHICH THIS
C                              VARIABLE IS NEEDED, WHEN IT DOES NOT NEED
C                              TO BE STORED AFTER DAY 1.  WHEN THE VARIABLE
C                              MUST BE STORED (TO BE ACCESSED THROUGH OPTION)
C                              FOR ALL DAYS, LSTORE(11,N) IS 7777 + THE NUMBER
C                              OF THE FIRST PREDICTOR IN THE SORTED LIST
C                              FOR WHICH THIS VARIABLE IS NEEDED.
C                       L=12 --USED INITIALLY IN ESTABLISHING MSTORE( , ).
C                              LATER USED AS A WAY OF DETERMINING WHETHER
C                              TO KEEP THIS VARIABLE.
C              LITEMS = THE NUMBER OF ITEMS IN LSTORE( , ).
C         MSTORE(L,J) = THE ARRAY HOLDING THE VARIABLES NEEDED AS INPUT, AFTER
C                       DAY 1, AND ASSOCIATED INFORMATION (L=1,7) (J=1,MITEMS).
C                       (OUTPUT)
C                       L=1,4 --THE 4 ID'S FOR THE DATA.
C                       L=5   --INDICATES WHETHER OR NOT TO STORE THE
C                               VARIABLE AND THE FIRST PREDICTOR TO USE IT FOR.
C                       L=6   --INITIALLY, THE EARLIEST DATE/TIME FOR WHICH
C                               THIS VARIABLE IS NEEDED FOR THE DATE BEING
C                               PROCESSED.  UPON EXIT, THE VALUE WILL HAVE 
C                               BEEN SET TO THE CYCLE TIME.  THERE WILL BE 
C                               AN ENTRY IN MSTORE( , ) FOR EACH CYCLE FOR
C                               WHICH THE VARIABLE IS NEEDED.  MSTORE( , ) 
C                               IS NOT CHANGED AFTER EXIT.
C                       L=7   --THE MAXIMUM TIME OFFSET RR (SEE IDPARS(9, )
C                               CORRESPONDING TO MSTORE(6, )
C                       NOTE THAT MSTORE IN U201 AND LMSTR1 IS NOT EXACTLY
C                       THAT IN U600 AND RDVECT.  U201 DOES NOT USE RDVECT.
C              MITEMS = THE NUMBER OF ITEMS IN MSTORE( , ).  (INPUT/OUTPUT)
C                 ND9 = MAXIMUM NUMBER OF FIELDS STORED IN LSTORE( , )
C                       AND MSTORE( , ).  SECOND DIMENSION OF LSTORE( , ) 
C                       AND MSTORE( , ).  (INPUT)
C              INCCYL = INCREMENT IN HOURS BETWEEN DATE/TIMES THAT
C                       ARE PUT INTO IDATE( ) BY SUBROUTINE DATPRO.
C                       USED IN LMSTR1 TO ASSURE THAT DATA ARE SAVED FOR
C                       CYCLES AT THIS FREQUENCY.
C                 IER = STATUS RETURN.  (OUTPUT)
C                        0 = GOOD RETURN.
C                       70 = DID NOT COMPUTE MAXIMUM TIME OFFSET.
C              MINDAT = MINIMUM DATE FOR WHICH THIS VARIABLE MAY BE NEEDED.
C                       (INTERNAL)
C             JCYL(J) = WORK ARRAY.  COMPUTE ALL THE CYCLE TIMES NEEDE
C                       (J=1,NOCYL).  (INTERNAL)
C               NOCYL = NUMBER OF VALUES IN JCYL( ).  (INTERNAL)
C              ITEMEN = THE ENTRY VALUE OF MITEMS.  (INTERNAL)
C        NONSYSTEM SUBROUTINES USED
C            NONE
C
      DIMENSION LSTORE(12,ND9),MSTORE(7,ND9)
      DIMENSION JCYL(24)
C
      DATA JCYL/24*0/      
C
      IER=0
      ITEMEN=MITEMS
C
D     WRITE(KFILDO,100)((LSTORE(I,J),I=1,12),J=1,LITEMS)
D100  FORMAT(/' LSTORE STARTING LMSTR1'/('  '3I10,I11,3I8,I12,3I8,I12))
C
C        COMPUTE ALL THE POSSIBLE CYCLE TIMES IN JCYL( ), MAXIMUM OF 24.
C        ONLY WHEN INCCYL NE 24 WILL NOCYL BE GT 1.
C
      JCYLST=MOD(NDATE,100)
      JCYL(1)=JCYLST
      NOCYL=1
C
      DO 103 J=2,24
      JCYLX=MOD(JCYLST+(J-1)*INCCYL,24)
      IF(JCYLX.EQ.JCYLST)GO TO 104
      NOCYL=NOCYL+1
      JCYL(NOCYL)=JCYLX
 103  CONTINUE
C
C        DETERMINE WHETHER DATA IN LSTORE( , ) SHOULD BE SAVED
C        BECAUSE OF ENTRIES ALREADY IN MSTORE( , ) CAUSED
C        BY MISSING DATA FOR DAY 1.  IF SO, ARRANGE TO SAVE.
C        IF MITEMS = 0, THE DO 1045 LOOP WILL NOT BE EXECUTED.
C
 104  DO 1045 M=1,MITEMS
C
      DO 1044 L=1,LITEMS
C
      IF(MSTORE(1,M).EQ.LSTORE(1,L).AND.
     1   MSTORE(2,M).EQ.LSTORE(2,L).AND.
     2   MSTORE(3,M).EQ.LSTORE(3,L).AND.
     3   MSTORE(4,M).EQ.LSTORE(4,L).AND.
     4   LSTORE(9,L).EQ.0)LSTORE(9,L)=99
C           ABOVE INDICATES THE DATA HAVE BEEN USED, EVEN THOUGH
C           NOT.
 1044 CONTINUE
C
 1045 CONTINUE
C
C        IT MUST BE DETERMINED FOR EACH ENTRY IN LSTORE( , ) WHETHER A
C        MATCHING ENTRY WILL BE PUT INTO MSTORE( , ).
C
      DO 150 J=1,LITEMS
      MINDAT=2100000000
      LUSE=0
      IF(LSTORE(12,J).NE.0)GO TO 140
C        LSTORE(12,J) WILL HAVE BEEN SET NE 0 WHEN ALREADY FOUND AS A
C        MATCH.
C
      DO 110 L=J,LITEMS
      IF(LSTORE(12,L).NE.0)GO TO 110
      IF(L.EQ.J)GO TO 105
C        ALWAYS A MATCH AT L = J. 
      IF(LSTORE(1,L).NE.LSTORE(1,J).OR.
     1   LSTORE(2,L).NE.LSTORE(2,J).OR.
     2   LSTORE(3,L).NE.LSTORE(3,J).OR.
     3   LSTORE(4,L).NE.LSTORE(4,J))GO TO 110
 105  IF(LSTORE(9,L).GT.0)MINDAT=MIN(MINDAT,LSTORE(8,L))
C        MINDAT WILL RETAIN THE MINIMUM DATE FOR WHICH THIS VARIABLE 
C        WAS NEEDED FOR DAY 1.
      LUSE=MAX(LUSE,LSTORE(9,L))
      LSTORE(12,L)=1
D     WRITE(KFILDO,109)J,L,LUSE,(LSTORE(I,L),I=1,12)
D109  FORMAT(' LSTORE AT 109 IN LMSTR1, J,L,LUSE ='3I6/
D    1      ('  '3I10,I11,3I8,I12,3I8,I12))
C        SET LSTORE(12,L) = 1 SO IT WON'T BE CONSIDERED AGAIN.
C        A DUPLICATE FIELD ON THE INPUT FILE MAY CREATE A PROBLEM HERE.
 110  CONTINUE
C
c
      IF(LUSE.EQ.0)GO TO 129
C
C        MAKE AN ENTRY IN MSTORE( , ) FOR EACH USE OF THIS VARIABLE
C        IF IT WOULD NOT BE A DUPLICATE.  THE 4 ID'S MUST BE THE 
C        SAME (THEY DO NOT HAVE RR IN THEM), AND THE CYCLE MUST
C        BE THE SAME.  SOME VALUES OF MSTORE(5, ) AND LSTORE(11, )
C        MAY BE GE 7777 AND MUST BE PRESERVED.  ANY TIME LUSE
C        IS GT 1, MSTORE(5, ) MUST BE GE 7777.
C
      DO 116 L=J,LITEMS
      IF(LSTORE(12,L).NE.1)GO TO 116
      IF(LSTORE(9,L).EQ.0)GO TO 116
      IF(MITEMS.EQ.0)GO TO 114
C
      DO 112 M=1,MITEMS
C
      IF(LSTORE(1,L).EQ.MSTORE(1,M).AND.
     1   LSTORE(2,L).EQ.MSTORE(2,M).AND.
     2   LSTORE(3,L).EQ.MSTORE(3,M).AND.
     3   LSTORE(4,L).EQ.MSTORE(4,M).AND.
     4   MOD(LSTORE(8,L),100).EQ.MOD(MSTORE(6,M),100))THEN
C
         IF(MSTORE(5,M).NE.LSTORE(11,L))THEN
            MST5M=MOD(MSTORE(5,M),7777)
            LST11L=MOD(LSTORE(11,L),7777)
C
            IF(LSTORE(8,L).EQ.NDATE)THEN
C
               IF(MST5M.EQ.0)THEN
                  MST5=LST11L
               ELSE
                  MST5=MIN(MST5M,LST11L)
               ENDIF
C
            ELSE
               MST5=MIN(MST5M,LST11L)
            ENDIF
C
            IF(MSTORE(5,M).LT.7777.AND.LUSE.LE.1)THEN
               MSTORE(5,M)=MST5
            ELSE
               MSTORE(5,M)=MST5+7777
            ENDIF
C
D           WRITE(KFILDO,1115)J,L,M,(MSTORE(I,M),I=1,7)
D1115       FORMAT(' MSTORE( , ) AT 1115,  MOD  ITEM ',
D    1                      3I4,4X,4I11,I6,I11,I6)
C              THE SPECIFIC STRUCTURE HERE IS TO FACILITATE
C              PRINT WITH D OPTION.
            GO TO 116
         ENDIF
C
         GO TO 1145
      ENDIF
C
 112  CONTINUE
C
C        NO MATCH.  MUST MAKE ENTRY.
C
 114  MITEMS=MITEMS+1
C
      IF(MITEMS.GT.ND9)THEN
         WRITE(KFILDO,1140)ND9,((MSTORE(I,K),I=1,7),K=1,MITEMS-1)
 1140    FORMAT(/,' ****NO SLOTS AVAILABLE IN MSTORE( , ).',
     1            '  THIS IS A FATAL USER ERROR.',/,'     ND9 =',I8,
     2            ' CAN BE INCREASED IN THE MAIN PROGRAM.',
     3            '  STORED VARIABLES ARE:',/,
     4         (' ',4I11,I6,I11,I6))
         WRITE(KFILDO,1141)
 1141    FORMAT(' ****STOP IN LMSTR1 AT 1141.')
         STOP 1140
      ENDIF
C
      MSTORE(1,MITEMS)=LSTORE(1,L)
      MSTORE(2,MITEMS)=LSTORE(2,L)
      MSTORE(3,MITEMS)=LSTORE(3,L)
      MSTORE(4,MITEMS)=LSTORE(4,L)
C
C        DIFFERENT PROCESS DEPENDING ON WHETHER OR NOT MITEMS = 0
C        ON ENTRY.  NORMAL PROCESS SHOULD BE FOR ITEMEN = 0.
C
      IF(ITEMEN.EQ.0)THEN
         MSTORE(6,MITEMS)=LSTORE(8,L)
C
         IF(LSTORE(8,L).EQ.NDATE)THEN
            MSTORE(5,MITEMS)=LSTORE(11,L)
         ELSE
            MSTORE(5,MITEMS)=7777
         ENDIF
C
      ELSE
C
         IF(LSTORE(8,L).EQ.NDATE)THEN
c
            IF(LSTORE(11,L).GE.7777)THEN
               MSTORE(5,MITEMS)=LSTORE(11,L)
            ELSE
               MSTORE(5,MITEMS)=LSTORE(11,L)+7777
            ENDIF
C
         ELSE
            MSTORE(5,MITEMS)=7777
         ENDIF
         
         MAXHR=0
C
         DO 1143 M=1,ITEMEN
C
         IF(MSTORE(1,MITEMS).EQ.MSTORE(1,M).AND.
     1      MSTORE(2,MITEMS).EQ.MSTORE(2,M).AND.
     2      MSTORE(3,MITEMS).EQ.MSTORE(3,M).AND.
     3      MSTORE(4,MITEMS).EQ.MSTORE(4,M))THEN
               MAXHR=MAX(MAXHR,MSTORE(7,M))
         ENDIF
C
 1143    CONTINUE
C
         MSTORE(7,MITEMS)=MAXHR
         MSTORE(6,MITEMS)=LSTORE(8,L)
      ENDIF
C
 1145 CONTINUE
C
D     WRITE(KFILDO,115)J,L,(MSTORE(I,MITEMS),I=1,7)
D115  FORMAT(' MSTORE( , ) AT 115,  ADDED ITEM '2I4,8X,4I11,I6,I11,I6)
D     WRITE(KFILDO,1150)(LL,(MSTORE(I,LL),I=1,7),LL=1,MITEMS)
D1150 FORMAT(' '38XI10,4I11,I6,I11,I6)
C
 116  CONTINUE
C
C        SET LSTORE(12, ) TO THE MINIMUM DATE THIS VARIABLE MAY BE
C        NEEDED, SO THAT IT CAN AT SOME POINT BE DISCARDED.
C
 129  DO 130 L=J,LITEMS
      IF(LSTORE(12,L).EQ.1)LSTORE(12,L)=MINDAT
 130  CONTINUE
C
 140  IF(LSTORE(12,J).NE.MINDAT)GO TO 148
C        THERE WAS A MATCH, SO DON'T DISCARD THE FIELD, UNLESS THE TEST
C        ABOVE WAS MET.
      IF(LSTORE(9,J).EQ.0)LSTORE(1,J)=0
C        A FIELD CAN BE DISCARDED IF IT HAS NOT BEEN USED AND
C        THERE WAS NO MATCH.  NOTE THAT IF ALL DATA FOR ALL DATES NEEDED
C        ARE NOT AVAILABLE FOR THIS DAY 1, DATA NEEDED FOR DAY 2 MAY NOT BE
C        SAVED.  SINCE DATA IDENTIFICATIONS CAN BE BURIED IN ROUTINES
C        CALLED FROM OPTION, AND NO RECORD OF DATA NEEDED BUT NOT AVAILABLE
C        IS KEPT, THERE IS NO WAY TO RECOVER.  MOREOVER, DAY 2 WILL LIKELY 
C        NOT RECOVER EITHER.  THEREFORE, THE FIRST DAY USED SHOULD HAVE ALL
C        DATA NEEDED. 
 148  CONTINUE
C
 150  CONTINUE
C
D     WRITE(KFILDO,152)((MSTORE(I,J),I=1,7),J=1,MITEMS)
D152  FORMAT(/' MSTORE( , ) AT 152, VARIABLES NEEDED',
D    1        ' FROM INPUT'/(' '4I11,I6,I11,I6))
C
C        INITIALIZE MSTORE(7, ) WITH MAXIMUM TIME OFFSET RR.
C
      DO 180 L=1,MITEMS
C
      IF(MSTORE(6,L).EQ.NDATE)THEN
C
         IF(MSTORE(3,L)/1000000.EQ.0)THEN
            GO TO 180
C              ABOVE STATEMENT ADDED 12/27/98.
         ELSE
            MSTORE(7,L)=0
            GO TO 180
         ENDIF
C
      ELSE
C
         DO 160 N=1,240
C           THE 240 IS ARBITRARY; IT SHOULD BE SUFFICIENT TO GO
C           BACK IN TIME 10 DAYS.  NOTE THAT USUALLY THIS
C           LOOP WILL NOT BE USED BECAUSE ONLY CURRENT DATA WILL
C           BE USED.
         CALL UPDAT(NDATE,-N,LDATE)
         IF(LDATE.LE.MSTORE(6,L))THEN
            MSTORE(7,L)=N
            IF(MSTORE(5,L).LT.7777.AND.N.GE.INCCYL)
     1                       MSTORE(5,L)=MSTORE(5,L)+7777
C              ANY TIME THERE IS A TIME OFFSET, THE VARIABLE MUST BE STORED.
            GO TO 180
         ENDIF
 160     CONTINUE
C
      ENDIF
C
      WRITE(KFILDO,179)
 179  FORMAT(' ****DID NOT COMPUTE MAXIMUM TIME OFFSET IN LMSTR1')
      IER=70
 180  CONTINUE
C
D     WRITE(KFILDO,1790)((MSTORE(I,L),I=1,7),L=1,MITEMS)
D1790 FORMAT(/' MSTORE( , ) AT 1790,  VARIABLES NEEDED',
D    1        ' FROM INPUT'/(' '4I11,I6,I11,I6))
C
C        WHEN THERE IS MORE THAN ONE CYCLE, 
C        THE MAXIMUM TIME OFFSET IN MSTORE(7, ) MUST BE THE SAME
C        AND BE THE MAXIMUM AMOUNT FOR ALL ENTRIES OF THE SAME
C        VARIABLE, REGARDLESS OF CYCLE.  ASSURE THAT NOW.
C        ALSO, THE VALUE IN MSTORE(5, ) MUST BE THE SAME FOR
C        EACH CYCLE.  FOR THE FIRST DATE/TIME (CYCLE), THIS
C        VALUE WILL BE EITHER 7777 (INDICATING IT MUST BE STORED
C        BUT IS NOT NEEDED FOR THIS CYCLE), 7777+X (INDICATING
C        IT MUST BE STORED AND IS ALSO USED FOR VARIABLE X),
C        OR X (INDICATING IT IS TO BE USED FOR VARIABLE X BUT
C        NOT STORED.  IF THIS SAME VARIABLE EXISTS FOR ANOTHER
C        CYCLE, THE X WILL NOT BE PRESENT, BUT WILL NEED TO BE.
C        THEREFORE, THE MAXIMUM OF THE MATCHING ENTRIES CAN BE 
C        USED.  THE DATES MUST ALSO BE MADE CONSISTENT.
C
C        THIS LOOP ASSURES THAT VARIABLES NEEDED FOR "ON-CYCLE"
C        TIMES HAVE THE MAXIMUM TIME OFFSET IN MSTORE(7, ).
C
      IF(NOCYL.EQ.1)GO TO 200
C
      DO 186 L=1,MITEMS
      DO 184 M=1,MITEMS
C        LEAVE THIS M=1,MITEMS, NOT M=L,MITEMS
      IF(M.EQ.L)GO TO 184
C
      IF(MSTORE(1,L).EQ.MSTORE(1,M).AND.
     1   MSTORE(2,L).EQ.MSTORE(2,M).AND.
     2   MSTORE(3,L).EQ.MSTORE(3,M).AND.
     3   MSTORE(4,L).EQ.MSTORE(4,M))THEN
           ICYL=MOD(MSTORE(6,L),100)
C
         DO 183 N=1,NOCYL
         IF(ICYL.EQ.JCYL(N))THEN
            MSTORE(7,L)=MAX(MSTORE(7,L),MSTORE(7,M))
C
            IF(MSTORE(7,L).GE.INCCYL)THEN
               IF(MSTORE(5,L).LT.7777)MSTORE(5,L)=MSTORE(5,L)+7777
            ENDIF
C
D        WRITE(KFILDO,1825)L,M,N,MITEMS,JCYL(N),
D    1         ((MSTORE(I,LL),I=1,7),LL=1,MITEMS)
D1825    FORMAT(/' MSTORE( , ) AT 1825, VARIABLES NEEDED',
D    1           ' FROM INPUT'5I4/(' ',4I11,I6,I11,I6))
C
         ENDIF
C
 183     CONTINUE
C
      ENDIF
C
 184  CONTINUE
C
 186  CONTINUE
C

      MITEM=MITEMS
C
C        THIS LOOP ADDS TO THE LIST IN MSTORE( , ) TO ASSURE
C        THAT EACH VARIABLE WILL BE AVAILABLE FOR EACH CYCLE
C        AND HAVE THE SAME VALUE OF MSTORE(5, ).  NEED TO
C        GO BACK NOCYL TIMES. 
C
      DO 190 L=1,MITEMS
      DO 189 N=1,NOCYL
      CALL UPDAT(MSTORE(6,L),-INCCYL*N,NEWDAT)
      NEWCYL=MOD(NEWDAT,100)
C
      DO 188 M=1,MITEM
C        LEAVE THIS M=1,MITEM, NOT M=L,MITEM
C
      IF(MSTORE(1,L).EQ.MSTORE(1,M).AND.
     1   MSTORE(2,L).EQ.MSTORE(2,M).AND.
     2   MSTORE(3,L).EQ.MSTORE(3,M).AND.
     3   MSTORE(4,L).EQ.MSTORE(4,M).AND.
     4   MOD(MSTORE(6,M),100).EQ.NEWCYL)THEN
            MST5L=MOD(MSTORE(5,L),7777)
            MST5M=MOD(MSTORE(5,M),7777)
C
            IF(MST5L.EQ.0)THEN
               MST5=MST5M
C
            ELSEIF(MST5M.EQ.0)THEN
               MST5=MST5L
c
            ELSE
               MST5=MIN(MST5L,MST5M)
            ENDIF
C
            IF(MSTORE(5,L).LT.7777.AND.MSTORE(5,M).LT.7777)THEN
               MSTORE(5,L)=MST5
               MSTORE(5,M)=MST5
            ELSE
               MSTORE(5,L)=MST5+7777
               MSTORE(5,M)=MST5+7777
            ENDIF
C
            MSTORE(7,L)=MAX(MSTORE(7,L),MSTORE(7,M))
            MSTORE(7,M)=MSTORE(7,L)
C
            IF(MSTORE(7,L).GE.INCCYL.AND.MSTORE(5,L).LT.7777)THEN
               MSTORE(5,L)=MSTORE(5,L)+7777
               MSTORE(5,M)=MSTORE(5,L)
            ENDIF
C
            GO TO 189
         ENDIF
C
 188  CONTINUE
C
C        ADD ENTRY.
      MITEM=MITEM+1
C
      IF(MITEM.GT.ND9)THEN
         WRITE(KFILDO,1880)ND9,((MSTORE(I,K),I=1,7),K=1,MITEM-1)
 1880    FORMAT(/,' ****NO SLOTS AVAILABLE IN MSTORE( , ).',
     1            '  THIS IS A FATAL USER ERROR.',/,'     ND9 =',I8,
     2            ' CAN BE INCREASED IN THE MAIN PROGRAM.',
     3            '  STORED VARIABLES ARE:',/,
     4         (' ',4I11,I6,I11,I6))
         WRITE(KFILDO,1881)
 1881    FORMAT(' ****STOP IN LMSTR1 AT 1141.')
         STOP 1880
      ENDIF
C
      MSTORE(1,MITEM)=MSTORE(1,L)
      MSTORE(2,MITEM)=MSTORE(2,L)
      MSTORE(3,MITEM)=MSTORE(3,L)
      MSTORE(4,MITEM)=MSTORE(4,L)
      MSTORE(5,MITEM)=MSTORE(5,L)
      MSTORE(6,MITEM)=NEWDAT
      MSTORE(7,MITEM)=MSTORE(7,L)
 189  CONTINUE
C
 190  CONTINUE
C
D     WRITE(KFILDO,195)L,N,MITEM,JCYL(N),
D    1      ((MSTORE(I,LL),I=1,7),LL=1,MITEM)
D195  FORMAT(/' MSTORE( , ) AT 195, VARIABLES NEEDED',
D    1        ' FROM INPUT'4I4/(' ',4I11,I6,I11,I6))
      MITEMS=MITEM
C
C        THIS LOOP MAKES SURE THE MSTORE(5, ) ENTRIES ARE SUCH
C        THAT THE USE OF A VARIABLE AS READ WILL BE FOR THE
C        CORRECT ID.
C
C        MAKE SURE DATA NOT USED FOR DAY 1 WILL BE SAVED UNTIL IT
C        IS NEEDED.
C
 200  DO 210 M=1,MITEMS
      MSTORE(6,M)=MOD(MSTORE(6,M),100)
C        MSTORE(6, ) IS SET TO THE CYCLE TIME.
C
      DO 205 L=1,LITEMS
      IF(MSTORE(1,M).NE.LSTORE(1,L).OR.
     1   MSTORE(2,M).NE.LSTORE(2,L).OR.
     2   MSTORE(3,M).NE.LSTORE(3,L).OR.
     3   MSTORE(4,M).NE.LSTORE(4,L))GO TO 205
C           THERE IS A MATCH.
D     WRITE(KFILDO,204)M,L,MSTORE(6,M),LSTORE(8,L),
D    1                 LSTORE(12,L),LSTORE(1,L)
C
      IF(MSTORE(6,M).EQ.MOD(LSTORE(8,L),100))
     1   CALL UPDAT(LSTORE(8,L),MSTORE(7,M),LSTORE(12,L))
C          THE ABOVE STATEMENT ARRANGES TO KEEP DATA UNTIL NEEDED.
C
D      WRITE(KFILDO,204)M,L,MSTORE(6,M),LSTORE(8,L),
D    1                 LSTORE(12,L),LSTORE(1,L)
D204  FORMAT(' LMSTR1 AT 204'6I12)
C
 205  CONTINUE
C
 210  CONTINUE
C
C        ARRANGE TO DISCARD ALL DATA NOT NEEDED.
C
      DO 215 J=1,LITEMS
      IF(LSTORE(12,J).LT.NRRDAT)LSTORE(1,J)=0
 215  CONTINUE
C
D     WRITE(KFILDO,220)((LSTORE(I,J),I=1,12),J=1,LITEMS)
D220  FORMAT(/' LSTORE ENDING LMSTR1'/('  '3I10,I11,3I8,I12,3I8,I12))
 230  RETURN
      END
