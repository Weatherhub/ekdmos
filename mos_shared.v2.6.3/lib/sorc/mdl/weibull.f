      SUBROUTINE WEIBULL(KFILDO,KFIL10,IP12,KFILRA,RACESS,NUMRA,
     1                   ID,IDPARS,JD,ITAU,
     2                   NDATE,MDATE,CCALL,ISDATA,XDATA,ND1,NCAT,NSTA,
     3                   ICALLD,CCALLD,IPACK,IWORK,DATA,ND5,
     4                   LSTORE,ND9,LITEMS,CORE,ND10,
     5                   NBLOCK,NFETCH,
     6                   IS0,IS1,IS2,IS4,ND7,
     7                   L3264B,L3264W,IER)
C 
C        OCTOBER 1999    RUDACK   TDL   MOS-2000
C        NOVEMBER 2002   HUGHES   ADDED COMMAS TO FORMAT STATEMENTS
C        OCTOBER  2012   GHIRARDELLI  MODIFIED FORMAT STATEMENTS
C                                 173, 174, 175, 176, AND 177 FOR 
C                                 INTEL COMPILER
C
C        PURPOSE:
C               TO FIRST CALCULATE ALPHA AND BETA FOR THE WEIBULL 
C               DISTRIBUTION GIVEN THE QPF PROBABILITIES AT SPECIFIC STATIONS. 
C               SECOND, TO CALCULATE THE 10%, 25%, 50% AND 75% UNCONDITIONAL 
C               OR CONDITIONAL EXCEEDANCE FRACTILES GIVEN WEIBULL A 
C               DISTRIBUTION WITH PARAMETERS ALPHA AND BETA.  THE P% 
C               (UN)CONDITIONAL EXCEEDANCE FRACTILE IS THE AMOUNT OF PRECIP 
C               EXPECTED SUCH THAT THE PROBABILIY OF EXCEEDING THAT AMOUNT 
C               (CONDITIONAL ON PRECIP OCCURING ) IS P%.  THE CALCULATION IS 
C               PERFORMED FOR THE 6-HR, 12-HR OR 24-HR PROJECTIONS.
C 
C                IDPARS(1) AND IDPARS(2) ARE MAPPED
C                              INTO        FROM  
C                                                        
C                              203250      203220
C                              203260      203320
C                              203350      203420                        
C                              203360      
C                              203450
C                              203460
C
C        DATA SET USE 
C            KFILDO - DEFAULT UNIT NUMBER FOR OUTPUT (PRINT) FILE.
C                     (OUTPUT) 
C            KFIL10 - UNIT NUMBER OF TDL MOS-2000 FILE SYSTEM ACCESS.
C                     (INPUT-OUTPUT) 
C            IP12   - INDICATES WHETHER (>1) OR NOT (=0) THE LIST OF
C                     STATIONS ON THE INPUT FILES WILL BE PRINTED TO 
C                     THE FILE WHOSE UNIT NUMBER IS IP12.  (OUTPUT)
C         KFILRA(J) - THE UNIT NUMBERS FOR WHICH RANDOM ACCESS FILES
C                     ARE AVAILABLE (J=1,NUMRA).  (INPUT)
C 
C        VARIABLES 
C              KFILDO = DEFAULT UNIT NUMBER FOR OUTPUT (PRINT) FILE.
C                       (INPUT) 
C              KFIL10 = UNIT NUMBER OF TDL MOS-2000 FILE SYSTEM ACCESS.
C                       (INPUT)
C                IP12 = INDICATES WHETHER (>0) OR NOT (=0) THE LIST OF
C                       STATIONS ON THE EXTERNAL RANDOM ACCESS FILES
C                       WILL BE LISTED TO UNIT IP12.  (INPUT)
C           KFILRA(J) = THE UNIT NUMBERS FOR WHICH RANDOM ACCESS FILES
C                       ARE AVAILABLE (J=1,NUMRA).  (INPUT)
C           RACESS(J) = THE FILE NAMES ASSOCIATED WITH KFILRA(J) (J=1,NUMRA).
C                       (CHARACTER*60)  (INPUT)
C               NUMRA = THE NUMBER OF VALUES IN KFILRA( ) AND RACESS( ).
C                       (INPUT)
C               ID(J) = THE PREDICTOR ID (J=1,4).  (INPUT)
C           IDPARS(J) = THE PARSED, INDIVIDUAL COMPONENTS OF THE 
C                       PREDICTOR ID CORRESPONDING TO ID( ) (J=1,15).
C                       (INPUT)
C                       J=1--CCC (CLASS OF VARIABLE),
C                       J=2--FFF (SUBCLASS OF VARIABLE),
C                       J=3--B (BINARY INDICATOR),
C                       J=4--DD (DATA SOURCE, MODEL NUMBER),
C                       J=5--V (VERTICAL APPLICATION),
C                       J=6--LBLBLBLB (BOTTOM OF LAYER, 0 IF ONLY 
C                            1 LAYER),
C                       J=7--LTLTLTLT (TOP OF LAYER),
C                       J=8--T (TRANSFORMATION),
C                       J=9--RR (RUN TIME OFFSET, ALWAYS + AND BACK IN 
C                            TIME),
C                       J=10--OT (TIME APPLICATION),
C                       J=11--OH (TIME PERIOD IN HOURS),
C                       J=12--TAU (PROJECTION IN HOURS),
C                       J=13--I (INTERPOLATION TYPE),
C                       J=14--S (SMOOTHING INDICATOR), AND
C                       J=15--G (GRID INDICATOR).
C               JD(J) = THE BASIC INTEGER PREDICTOR ID (J=1,4).
C                       THIS IS THE SAME AS ID(J), EXCEPT THAT THE
C                       PORTIONS PERTAINING TO PROCESSING ARE OMITTED:
C                       B = IDPARS(3),
C                       T = IDPARS(8),
C                       I = IDPARS(13),
C                       S = IDPARS(14),
C                       G = IDPARS(15), AND
C                       THRESH.
C                       JD( ) IS USED TO IDENTIFY THE BASIC MODEL FIELDS
C                       AS READ FROM THE ARCHIVE.  (INPUT)
C                ITAU = THE NUMBER OF HOURS AHEAD TO FIND A VARIABLE.
C                       THIS HAS ALREADY BEEN CONSIDERED IN MDATE, BUT
C                       IS NEEDED FOR CALL TO RETVEC.  (INPUT)
C               NDATE = THE DATE/TIME FOR WHICH PREDICTOR IS NEEDED.
C                       (INPUT)
C               MDATE = NDATE UPDATED WITH ITAU( ).  (INPUT)
C          CCALL(K,J) = 8-CHARACTER STATION CALL LETTERS (OR GRIDPOINT
C                       LOCATIONS FOR GRID DEVELOPMENT) TO PROVIDE
C                       OUTPUT FOR (J=1) AND 5 POSSIBLE OTHER STATION
C                       CALL LETTERS (J=2,6) THAT CAN BE USED INSTEAD
C                       IF THE PRIMARY (J=1) STATION CANNOT BE FOUND 
C                       IN AN INPUT DIRECTORY (K=1,NSTA).  ALL STATION
C                       DATA ARE KEYED TO THIS LIST, EXCEPT POSSIBLY 
C                       CCALLD( ).  EQUIVALENCED TO ICALL( , , ). 
C                       (CHARACTER*8)  (INPUT)
C           ISDATA(K) = WORK ARRAY (K=1,ND1).  (INTERNAL)
C          XDATA(K,J) = STORES VALUES OF 25%,50 AND 75% EXCEEDENCE FOR ALL 
C                       STATIONS.  (OUTPUT)
C                 ND1 = MAXIMUM NUMBER OF STATIONS THAT CAN BE DEALT 
C                       WITH.  DIMENSION OF XDATA( ).  (INPUT)
C                NSTA = NUMBER OF STATIONS OR LOCATIONS BEING DEALT
C                       WITH.  (INPUT)
C         ICALLD(L,K) = 8 STATION CALL LETTERS AS CHARACTERS IN AN INTEGER
C                       VARIABLE (L=1,L3264W) (K=1,ND5).  THIS ARRAY IS USED 
C                       TO READ THE STATION DIRECTORY FROM A MOS-2000
C                       EXTERNAL FILE.  EQUIVALENCED TO CCALLD( ). 
C                       (CHARACTER*8)  (INTERNAL)
C           CCALLD(K) = 8 STATION CALL LETTERS (K=1,ND5).  EQUIVALENCED
C                       TO ICALLD( , ).  (INTERNAL)
C            IPACK(J) = WORK ARRAY (J=1,ND5).  (INTERNAL)
C            IWORK(J) = WORK ARRAY (J=1,ND5).  (INTERNAL)
C             DATA(K) = WORK ARRAY (J=1,ND5).  (INTERNAL)
C                 ND5 = DIMENSION OF IPACK( ), IWORK( ), AND DATA( ).
C                       (INPUT)
C         LSTORE(L,J) = THE ARRAY HOLDING INFORMATION ABOUT THE DATA 
C                       STORED (L=1,12) (J=1,LITEMS).  (INPUT-OUTPUT)
C                       L=1,4--THE 4 ID'S FOR THE DATA.
C                       L=5  --LOCATION OF STORED DATA.  WHEN IN CORE,
C                              THIS IS THE LOCATION IN CORE( ) WHERE
C                              THE DATA START.  WHEN ON DISK, 
C                              THIS IS MINUS THE RECORD NUMBER WHERE 
C                              THE DATA START.
C                       L=6  --THE NUMBER OF 4-BYTE WORDS STORED.
C                       L=7  --2 FOR DATA PACKED IN TDL GRIB, 1 FOR NOT.
C                       L=8  --THE DATE/TIME OF THE DATA IN FORMAT
C                              YYYYMMDDHH.
C                       L=9  --NUMBER OF TIMES DATA HAVE BEEN RETRIEVED.
C                       L=10 --NUMBER OF THE SLAB IN DIR( , ,L) AND
C                              IN NGRIDC( ,L) DEFINING THE 
C                              CHARACTERISTICS OF THIS GRID.
C                       L=11 --THE NUMBER OF THE PREDICTOR IN THE SORTED
C                              LIST IN ID( ,N) (N=1,NPRED) FOR WHICH 
C                              THIS VARIABLE IS NEEDED, WHEN IT IS 
C                              NEEDED ONLY ONCE FROM LSTORE( , ). 
C                              WHEN IT IS NEEDED MORE THAN ONCE, THE 
C                              VALUE IS SET = 7777.
C                       L=12 --USED INITIALLY IN ESTABLISHING 
C                              MOSTORE( , ).  LATER USED AS A WAY OF
C                              DETERMINING WHETHER TO KEEP THIS 
C                              VARIABLE.
C                 ND9 = THE SECOND DIMENSION OF LSTORE( , ).  (INPUT)
C              LITEMS = THE NUMBER OF ITEMS (COLUMNS) IN LSTORE( , )
C                       THAT HAVE BEEN USED IN THIS RUN.  (INPUT)
C             CORE(J) = THE ARRAY TO STORE OR RETIREVE THE DATA 
C                       IDENTIFIED IN LSTORE( , ) (J=1,ND10).  WHEN 
C                       CORE( ) IS FULL DATA ARE STORED ON DISK.
C                       (INPUT)
C                ND10 = DIMENSION OF CORE( ).  (INPUT)
C              NBLOCK = THE BLOCK SIZE IN WORDS OF THE MOS-2000 RANDOM
C                       DISK FILE.  (INPUT)
C              NFETCH = THE NUMBER OF TIMES GFETCH HAS BEEN ENTERED.
C                       GFETCH KEEPS TRACK OF THIS AND RETURNS THE
C                       VALUE.  (OUTPUT)
C              IS0(J) = MOS-2000 GRIB SECTION 0 ID'S (J=1,3). 
C                       (INTERNAL)
C              IS1(J) = MOS-2000 GRIB SECTION 1 ID'S (J=1,22+). 
C                       (INTERNAL)
C              IS2(J) = MOS-2000 GRIB SECTION 2 ID'S (J=1,12). 
C                       (INTERNAL)
C              IS4(J) = MOS-2000 GRIB SECTION 4 ID'S (J=1,4). 
C                       (INTERNAL)
C                 ND7 = DIMENSION OF IS0( ), IS1( ), IS2( ), AND IS4( ).
C                       NOT ALL LOCATIONS ARE USED.  (INPUT)
C              L3264B = INTEGER WORD LENGTH IN BITS OF MACHINE BEING
C                       USED (EITHER 32 OR 64).  (INPUT)
C              L3264W = NUMBER OF WORDS IN 64 BITS (EITHER 1 OR 2).  
C                       CALCULATED BY PARAMETER, BASED ON L3464B.
C                       (INPUT)
C                 IER = STATUS RETURN.
C                         0 = GOOD RETURN.
C                       102 = ID NOT ACCOMMODATED.
C                       SEE RETVEC FOR OTHER VALUES.  (OUTPUT)
C               LD(J) = HOLDS THE 4 ID WORDS OF THE DATA RETRIEVED INTO
C                       XDATA( ) (J=1,4).  (INTERNAL)
C           LDPARS(J) = PARSE VALUES CORRESPONDING TO LD( ) (J=1,15)
C                       (INTERNAL)
C           KTABLE(I) = VALUES OF CCCFFF ACCOMMODATED (I=1,8).  (INTERNAL)
C           ITABLE(I) = NUMBER OF CATEGORIES (I=1), FIRST WORD OF PROBABILITY 
C                       ID(I=2) AND CORRESPONDING THRESHHOLD VALUES (I=3,7).
C                       FOR 6-HR PROJECTION.  (INTERNAL)
C           JTABLE(I) = NUMBER OF CATEGORIES (I=1), FIRST WORD OF PROBABILITY 
C                       IDS(I=2,3) AND CORRESPONDING THRESHHOLD VALUES (I=4,9).
C                       FOR 12 AND 24-HR PROJECTIONS.  (INTERNAL)
C               ALPHA = VALUE OF ALPHA FOR A PARTICULAR WEIBULL DISTRIBUTION.
C                       (INTERNAL) 
C                BETA = THE CORRESPONDING VALUE OF BETA FOR THAT PARTICULAR 
C                       WEIBULL DISTRIBUTION.  (INTERNAL)
C                EF10 = COND. 10% EXCEEDANCE FRACTILE.  (INTERNAL)  
C                EF25 = COND. 25% EXCEEDANCE FRACTILE.  (INTERNAL)  
C                EF50 = COND. 50% EXCEEDANCE FRACTILE.  (INTERNAL)
C                EF75 = COND. 75% EXCEEDANCE FRACTILE.  (INTERNAL)
C                NDIM = SECOND DIMENSION OF ITABLE( ).  SET BY
C                       PARAMETER.  (INTERNAL)
C 
C        NONSYSTEM SUBROUTINES CALLED 
C            RETVEC,PRSID1,FROOT
C
      PARAMETER (NDIM=6)
C      
      CHARACTER*8 CCALL(ND1,6)
      CHARACTER*8 CCALLD(ND5)
      CHARACTER*60 RACESS(5)      
C      
      DIMENSION XDATA(ND1,4),ISDATA(ND1),YDATA(ND1,6)
C        YDATA( ) IS AN AUTOMATIC ARRAY.
      DIMENSION ID(4),IDPARS(15),JD(4),ZDATA(ND1)
      DIMENSION IPACK(ND5),IWORK(ND5),DATA(ND5)
      DIMENSION IS0(ND7),IS1(ND7),IS2(ND7),IS4(ND7)
      DIMENSION LSTORE(12,ND9)
      DIMENSION CORE(ND10),ICALLD(L3264W,ND5)
      DIMENSION LD(4),LDPARS(15),KFILRA(5)
      DIMENSION ITABLE(7),KTABLE(6),JTABLE(9),THRESH(6)
      DOUBLE PRECISION DGAMMA,EXVALU,GAMMA,TERM1,TERM2,TERM3,TEMP
      DOUBLE PRECISION ALPHA,BETA,EF10,EF25,EF50,EF75
C
C        DATA TABLE
C
      DATA LDPARS/15*0/
      DATA KTABLE/203250,203260,203350,203360,203450,203460/
      DATA ITABLE/5,203220,
     1            950052000,950051000,245000000,495000000,995000000/
      DATA JTABLE/6,203320,203420,950052000,950051000,245000000,
     1                             495000000,995000000,199501000/
      DATA THRESH/0.01,0.10,0.25,0.50,1.00,2.00/
C
C     IER=0
C
C        FIND CCCFFF OF ID(1) IN ITABLE(1).
C
      DO 105 JJ=1,NDIM
      IF(KTABLE(JJ).EQ.IDPARS(1)*1000+IDPARS(2)) GO TO 110
 105  CONTINUE
C
      WRITE(KFILDO,107)(JD(L),L=1,4)
 107  FORMAT(' ****WEIBULL ENTERED FOR VARIABLE',
     1         2X,I9.9,1X,I9.9,1X,I9.9,1X,I10.3,
     2       ' NOT ACCOMMODATED.')
      IER=102
      GO TO 300
C
C        VERIFY THAT NCAT GT 0.
C
 108  IF(NCAT.LE.0)THEN
         WRITE(KFILDO,109)NCAT
 109     FORMAT(/,' ****NCAT =',I4,' NOT CORRECT IN WEIBULL.')
         IER=102
         GO TO 300
      ENDIF

 110  IF(IDPARS(12).EQ.6)  GOTO 120
      IF(IDPARS(12).EQ.12) GOTO 135
      IF(IDPARS(12).EQ.24) GOTO 150

C        GET THE KCAT PROBABILITIES FOR THE 6-HR PROJECTION.
C     
 120  KCAT=ITABLE(1)
      LD(1)=ITABLE(2)*1000+100+IDPARS(4)
      LD(2)=JD(2)
      LD(3)=JD(3)
C
      DO 125 J=1,KCAT
         LD(4)=ITABLE(J+2)
C
         CALL PRSID1(KFILDO,LD,LDPARS)
         CALL RETVEC(KFILDO,KFIL10,IP12,KFILRA,RACESS,NUMRA,
     1               LD,LDPARS,JD,ITAU,
     2               NDATE,MDATE,CCALL,ISDATA,YDATA(1,J),ND1,NSTA,
     3               ICALLD,CCALLD,IPACK,IWORK,DATA,ND5,
     4               LSTORE,ND9,LITEMS,CORE,ND10,
     5               NBLOCK,NFETCH,
     6               IS0,IS1,IS2,IS4,ND7,
     7               L3264B,L3264W,IER)
C
C          JD( ) IS NOT ACTUALLY USED IN RETVEC.  IT IS USED
C          IN CALL TO CONST, BUT CONST DOES NOT USE IT EITHER.
C
         IF(IER.NE.0)THEN
            WRITE(KFILDO,122)(LD(L),L=1,4)
 122        FORMAT(' ****VARIABLE NOT RETRIEVED BY RETVEC IN WEIBULL',
     1              2X,I9.9,1X,I9.9,1X,I9.9,1X,I10.3)
            GO TO 300
         ENDIF
C      
 125  CONTINUE
C
C        CHECK IF 6-HR CONDITIONAL OR UNCONDITIONAL FRACTILES ARE TO 
C        BE CALCULATED.  IF CONDITIONAL FRACTILES ARE DESIRED, USE 
C        UNCONDITIONAL PROBABILITES IN DEFINING CONDITIONAL PROBABILITIES.
C
      IF(IDPARS(2).EQ.260) THEN
C
         DO 127 K=1,NSTA
            DO 126 J=2,KCAT
               IF(YDATA(K,1).GE.YDATA(K,J)) THEN
                  YDATA(K,J)=YDATA(K,J)/YDATA(K,1)
               ENDIF
 126        CONTINUE
 127     CONTINUE
C
      ENDIF
      GOTO 165
C
C        GET THE KCAT PROBABILITIES FOR THE 12-HR PROJECTION.
C     
 135  KCAT=JTABLE(1)
      LD(1)=JTABLE(2)*1000+100+IDPARS(4)
      LD(2)=JD(2)
      LD(3)=JD(3)
C
      DO 140 J=1,KCAT
         LD(4)=JTABLE(J+2)
C
         CALL PRSID1(KFILDO,LD,LDPARS)
         CALL RETVEC(KFILDO,KFIL10,IP12,KFILRA,RACESS,NUMRA,
     1               LD,LDPARS,JD,ITAU,
     2               NDATE,MDATE,CCALL,ISDATA,YDATA(1,J),ND1,NSTA,
     3               ICALLD,CCALLD,IPACK,IWORK,DATA,ND5,
     4               LSTORE,ND9,LITEMS,CORE,ND10,
     5               NBLOCK,NFETCH,
     6               IS0,IS1,IS2,IS4,ND7,
     7               L3264B,L3264W,IER)
C
C          JD( ) IS NOT ACTUALLY USED IN RETVEC.  IT IS USED
C          IN CALL TO CONST, BUT CONST DOES NOT USE IT EITHER.
C
         IF(IER.NE.0)THEN
           WRITE(KFILDO,137)(LD(L),L=1,4)
 137       FORMAT(' ****VARIABLE NOT RETRIEVED BY RETVEC IN WEIBULL',
     1              2X,I9.9,1X,I9.9,1X,I9.9,1X,I10.3)
           GO TO 300
         ENDIF
C      
 140  CONTINUE
C
C        CHECK IF 12-HR CONDITIONAL OR UNCONDITIONAL FRACTILES ARE TO 
C        BE CALCULATED.  IF CONDITIONAL FRACTILES ARE DESIRED, USE 
C        UNCONDITIONAL PROBABILITES IN DEFINING CONDITIONAL PROBABILITIES.
C
      IF(IDPARS(2).EQ.360) THEN
C
         DO 145 K=1,NSTA
            DO 144 J=2,KCAT
               IF(YDATA(K,1).GE.YDATA(K,J)) THEN
                  YDATA(K,J)=YDATA(K,J)/YDATA(K,1)
               ENDIF
 144        CONTINUE
 145     CONTINUE
C
      ENDIF
      GOTO 165
C
C        GET THE KCAT PROBABILITIES FOR THE 24-HR PROJECTION.
C     
150   KCAT=JTABLE(1)
      LD(1)=JTABLE(3)*1000+100+IDPARS(4)
      LD(2)=JD(2)
      LD(3)=JD(3)
C
      DO 160 J=1,KCAT
         LD(4)=JTABLE(J+2)
C
         CALL PRSID1(KFILDO,LD,LDPARS)
         CALL RETVEC(KFILDO,KFIL10,IP12,KFILRA,RACESS,NUMRA,
     1               LD,LDPARS,JD,ITAU,
     2               NDATE,MDATE,CCALL,ISDATA,YDATA(1,J),ND1,NSTA,
     3               ICALLD,CCALLD,IPACK,IWORK,DATA,ND5,
     4               LSTORE,ND9,LITEMS,CORE,ND10,
     5               NBLOCK,NFETCH,
     6               IS0,IS1,IS2,IS4,ND7,
     7               L3264B,L3264W,IER)
C
C          JD( ) IS NOT ACTUALLY USED IN RETVEC.  IT IS USED
C          IN CALL TO CONST, BUT CONST DOES NOT USE IT EITHER.
C
         IF(IER.NE.0)THEN
            WRITE(KFILDO,157)(LD(L),L=1,4)
 157        FORMAT(' ****VARIABLE NOT RETRIEVED BY RETVEC IN WEIBULL',
     1              2X,I9.9,1X,I9.9,1X,I9.9,1X,I10.3)
            GO TO 300
         ENDIF
C      
 160  CONTINUE
C
C        CHECK IF 24-HR CONDITIONAL OR UNCONDITIONAL FRACTILES ARE TO 
C        BE CALCULATED.  IF CONDITIONAL FRACTILES ARE DESIRED, USE 
C        UNCONDITIONAL PROBABILITES IN DEFINING CONDITIONAL PROBABILITIES.
C
      IF(IDPARS(2).EQ.460) THEN
C
         DO 163 K=1,NSTA
            DO 162 J=2,KCAT
               IF(YDATA(K,1).GE.YDATA(K,J)) THEN
                  YDATA(K,J)=YDATA(K,J)/YDATA(K,1)
               ENDIF
 162        CONTINUE
 163     CONTINUE
C
      ENDIF
C
C        GET EXPECTED VALUE FROM 'EXVALU' PROGRAM
C
 165  LD(1)=203240*1000+IDPARS(4)
      LD(2)=JD(2)
      LD(3)=JD(3)
      LD(4)=IDPARS(13)*100+IDPARS(14)*10+IDPARS(15)
C
         CALL PRSID1(KFILDO,LD,LDPARS)
         CALL RETVEC(KFILDO,KFIL10,IP12,KFILRA,RACESS,NUMRA,
     1               LD,LDPARS,JD,ITAU,
     2               NDATE,MDATE,CCALL,ISDATA,ZDATA,ND1,NSTA,
     3               ICALLD,CCALLD,IPACK,IWORK,DATA,ND5,
     4               LSTORE,ND9,LITEMS,CORE,ND10,
     5               NBLOCK,NFETCH,
     6               IS0,IS1,IS2,IS4,ND7,
     7               L3264B,L3264W,IER)
C
C          JD( ) IS NOT ACTUALLY USED IN RETVEC.  IT IS USED
C          IN CALL TO CONST, BUT CONST DOES NOT USE IT EITHER.
C
         IF(IER.NE.0)THEN
            WRITE(KFILDO,167)(LD(L),L=1,4)
 167        FORMAT(' ****VARIABLE NOT RETRIEVED BY RETVEC IN WEIBULL',
     1              2X,I9.9,1X,I9.9,1X,I9.9,1X,I10.3)
            GO TO 300
         ENDIF
C 
C        CHECK FOR MISSING QPF PROBABILITY FORECASTS AND COUNT THE 
C        NUMBER OF NON-ZERO PROBABILITY FORECASTS.  PROBABILITY FORECASTS
C        LESS THAN 1% (0.01) ARE ASSUMED TO BE ZERO.  PROBABILITIES
C        MUST BE IN DECREASING ORDER... ADJUST IF NECESSARY.
C
      DO 180 K=1,NSTA
C      
         NPROB=0
         EXVALU=0.0
         BETA=0.0
         ALPHA=0.0
C
C           CHECK IF PROBABILITIES ARE UNCONDITIONAL OR CONDITIONAL. 
C           THIS IS IMPORTANT IN THE CALCULATION OF THE FRACTILES.
C
         IF((IDPARS(2).EQ.250).OR.
     1      (IDPARS(2).EQ.350).OR.(IDPARS(2).EQ.450)) THEN
            M=1
         ELSE
            M=2
         ENDIF
C        
         DO 170 J=M,KCAT   
C
            IF(NINT(YDATA(K,J)).EQ.9999) THEN
               BETA=9999.0
               ALPHA=9999.0
C
C                 SET THE 25%,50% AND 75% EXCEEDENCE FRACTILE TO MISSING
C  
               XDATA(K,1)=9999.0
               XDATA(K,2)=9999.0
               XDATA(K,3)=9999.0
               XDATA(K,4)=9999.0
               GOTO 180
            ENDIF
C                       
            IF((YDATA(K,J+1).GE.YDATA(K,J)).AND.
     1         (YDATA(K,J+1)-0.001).GE.0.) THEN
                YDATA(K,J+1)=YDATA(K,J)-0.001
            ENDIF    
C      
            IF(YDATA(K,J).GE.0.005) THEN
               NPROB=NPROB+1 
            ENDIF
C
 170     CONTINUE
C
C           CALCUALTE ALPHA AND BETA OF THE WEIBULL FUNCTION.  IF THERE
C           ARE NO PROBABILITIES GREATER THAN ZERO, ALPHA=0 AND BETA=0.
C
         IF(NPROB.EQ.0) THEN
C
            BETA=0.
            ALPHA=0.
C
C           CALCUALTE ALPHA AND BETA OF THE WEIBULL FUNCTION.  IF THERE 
C           IS ONLY ONE ADJUSTED PROBABILITY, SET BETA=1 AND CALCULATE 
C           ALPHA.
C
         ELSEIF(NPROB.EQ.1) THEN
C
            BETA=1.0
            ALPHA=(-1.0*THRESH(1))/LOG(YDATA(K,1)) 
C
C           IF THERE ARE TWO ADJUSTED PROBABILITIES, ALPHA AND BETA 
C           CAN BE CALCULATED EXPLICITLY.
C     
         ELSEIF(NPROB.EQ.2) THEN
C
            TERM1=LOG(LOG(YDATA(K,2))/LOG(YDATA(K,1)))
            TERM2=LOG(THRESH(2)/THRESH(1))
            BETA=TERM1/TERM2
C                   
C              SMALL BETA VALUES CAN OCCUR DURING AN UNLIKELY PRECIPITATION
C              EVENT, AND CAN CAUSE UNREASONABLE VALUES OF ALPHA AND BETA.
C              IN THIS INSTANCE, SMALL BETA VALUES ARE SET TO 1 AND ALPHA
C              IS RECALCULATED USING THE FIRST ADJUSTED PROBABILITY.
C
            IF(BETA.LE.0.3) THEN
               BETA=1.0
               ALPHA=(-1.0*THRESH(1))/LOG(YDATA(K,1))
            ELSE
               ALPHA=(-1.0*(THRESH(1)**BETA))/
     1                     LOG(YDATA(K,1))
            ENDIF
C
         ELSE
C
C              IF THERE ARE MORE THAN TWO ADJUSTED PROBABILITIES, BETA 
C              MUST BE DETERMINED NUMERICALLY, THEN ALPHA CAN BE 
C              CALCULATED. USE FROOT ROUTINE TO ESTIMATE BETA.
C
            CALL FROOT(KFILDO,K,ND1,YDATA,THRESH,NPROB,BETA)
C
            IF(NINT(BETA).EQ.9999) THEN
C
C                 BETA COULD NOT BE DETERMINED; SET ALPHA AND BETA
C                 TO MISSING.
C
               BETA=9999.0
               ALPHA=9999.0
C
C                 SET THE 25%,50% AND 75% EXCEEDENCE FRACTILE TO MISSING
C  
               XDATA(K,1)=9999.0
               XDATA(K,2)=9999.0
               XDATA(K,3)=9999.0
               XDATA(K,4)=9999.0
               GOTO 180
C
            ENDIF           
C           
C              CALCULATE ALPHA ASSUMING "FROOT" DOES NOT RETURN A MISSING 
C              VALUE FOR BETA.
C
            TERM1=0.0
            TERM2=0.0
C
            DO 172 L=1,NPROB
C
               TERM1=TERM1+(THRESH(L)**(2.0*BETA))
               TERM2=TERM2+((THRESH(L)**BETA)*LOG(YDATA(K,L)))
C
 172        CONTINUE
C 
            ALPHA=(-1.0*TERM1)/TERM2

C              SMALL BETA VALUES CAN OCCUR DURING AN UNLIKELY PRECIPITATION
C              EVENT, AND CAN CAUSE UNREASONABLE VALUES OF ALPHA AND BETA.
C              IN THIS INSTANCE, SMALL BETA VALUES ARE SET TO 1 AND ALPHA
C              IS RECALCULATED USING THE FIRST ADJUSTED PROBABILITY.
C          
            IF(BETA.LE.0.3) THEN
               BETA=1.0
               ALPHA=(-1.0*THRESH(1))/LOG(YDATA(K,1))
            ENDIF
C     
         ENDIF
C
C           VERY SMALL VALUES OF ALPHA CAN OCCUR DURING AN UNLIKELY 
C           PRECIPITATION EVENT AND CAN BECOME "ZERO" DEPENDING ON THE 
C           PRECISION OF THE STORED VALUES.  A VALUE OF "ZERO" FOR ALPHA 
C           IS INVALID, SO IN THIS CASE, BETA AND ALPHA MUST BOTH TAKE THE 
C           VALUE OF ZERO.
C
         IF(ALPHA.LT.0.005) THEN
C
              ALPHA=0.0
              BETA=0.0
C            
         ENDIF
C
C          IF NO PRECIP EXPECTED, SET EXCEEDANCE FRACTILES = 0
C
         IF((ALPHA.EQ.0.).AND.(BETA.EQ.0.)) THEN
            EF10=0.0D0
            EF25=0.0D0
            EF50=0.0D0
            EF75=0.0D0
C
         ELSE
C
C             CALCULATE CONDITIONAL EXCEEDENCE FRACTILES (25%, 50% AND 75%)
C
            TERM1=-1.0D0*DBLE(ALPHA)
            TERM2=1.0D0/DBLE(BETA)
            TERM3=0.01D0**DBLE(BETA)
            TEMP=TERM1*DLOG(0.10D0)
            EF10=(TEMP+TERM3)**TERM2
            TEMP=TERM1*DLOG(0.25D0)
            EF25=(TEMP+TERM3)**TERM2
            TEMP=TERM1*DLOG(0.50D0)
            EF50=(TEMP+TERM3)**TERM2
            TEMP=TERM1*DLOG(0.75D0)
            EF75=(TEMP+TERM3)**TERM2
C
         ENDIF
C
         XDATA(K,1)=SNGL(EF10)
         XDATA(K,2)=SNGL(EF25)
         XDATA(K,3)=SNGL(EF50)
         XDATA(K,4)=SNGL(EF75)
C         
         WRITE(KFILDO,*) '****XDATA(K,1) = ', XDATA(K,1)
         WRITE(KFILDO,*) '****XDATA(K,2) = ', XDATA(K,2)
         WRITE(KFILDO,*) '****XDATA(K,3) = ', XDATA(K,3)
         WRITE(KFILDO,*) '****XDATA(K,4) = ', XDATA(K,4)        
C         
         GAMMA=DGAMMA(BETA)
C         
         TEMP1=((1./ALPHA)**(-1./BETA))
         TEMP2=(1.+1./BETA)
         EXVALU=TEMP1*GAMMA*TEMP2
C
      WRITE(KFILDO,*)  'STATION NUMBER = ', K
      WRITE(KFILDO,173) YDATA(K,1),YDATA(K,2),YDATA(K,3), YDATA(K,4),
     1                  YDATA(K,5)
 173  FORMAT(' PROB(1) =',1X,F6.3,'  PROB(2) =',1X,F6.3,'  PROB(3) =',
     1           1X,F6.3,'  PROB(4) =',1X,F6.3,'  PROB(5) =',1X,F6.3) 
      WRITE(KFILDO,*)  'NPROB (>=.005) = ', NPROB                  

      WRITE(KFILDO,*) 'ALPHA = ', ALPHA
      WRITE(KFILDO,*) 'BETA  = ', BETA
      WRITE(KFILDO,*) 'EXPECTED VALUE (1) = ',ZDATA(K)
      WRITE(KFILDO,*) 'EXPECTED VALUE (2) = ',EXVALU
      WRITE(KFILDO,*) 'EXPECTED VALUE DIFFERENCE = ',
     1                 ABS(ZDATA(K)-EXVALU)
C
      WRITE(KFILDO,174) XDATA(K,1) 
 174  FORMAT(/,'THE 10% EXCEEDENCE VALUE = ',F6.3)
      WRITE(KFILDO,175) XDATA(K,2)
 175  FORMAT('THE 25% EXCEEDENCE VALUE = ',F6.3)
      WRITE(KFILDO,176) XDATA(K,3) 
 176  FORMAT(/,'THE 50% EXCEEDENCE VALUE = ',F6.3)
      WRITE(KFILDO,177) XDATA(K,4)
 177  FORMAT('THE 75% EXCEEDENCE VALUE = ',F6.3)
      WRITE(KFILDO,*) '*********************************************'
 180  CONTINUE
      GOTO 350  
C
C       THIS PREDICTOR CANNOT BE COMPUTED.  SET THE ARRAY TO MISSING.
C       
 300  DO 310 K=1,ND1
         DO 309 J=1,NCAT
            XDATA(K,J)=9999.
 309     CONTINUE
 310  CONTINUE
C
 350  RETURN
      END
