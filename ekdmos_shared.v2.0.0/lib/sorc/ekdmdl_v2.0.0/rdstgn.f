      SUBROUTINE RDSTGN(KFILDO,IP4,IP5,KFILD,NEW,CCALL,
     1                  NAME,NELEV,IWBAN,STALAT,STALON,IFOUND,
     2                  NGP,ND1,KGP,NSTA,IER)
C 
C        AUGUST    1997   GLAHN   TDL   MOS-2000 
C        NOVEMBER  1997   GLAHN   REVISED FOR NEW DIRECTORY FORMAT
C        DECEMBER  1997   GLAHN   ADDED M TO WRITE 154 AFTER 156
C                                 CHANGED TO PRINT 14 STATIONS/LINE
C        DECEMBER  1997   GLAHN   CHANGED KFILDO TO IP5 IN TWO PLACES
C        SEPTEMBER 1998   GLAHN   FORMAT STATEMENT 110 CHANGED I4 TO I5
C        MARCH     1998   GLAHN   MODIFIED PRINT FOR STATIONS IN GROUPS
C        APRIL     1999   GLAHN   ADDED SEARCH ON ALL 6 STATION COLUMNS
C        APRIL     2000   DALLAVALLE   MODIFIED FORMAT STATEMENTS TO
C                                 CONFORM TO FORTRAN 90 STANDARDS
C                                 ON THE IBM SP
C        OCTOBER   2000   GLAHN   KGP REDUCED BY 1 AND GO TO 160 
C                                 CHNAGED TO GO TO 1405 JUST BELOW 116;
C                                 CHNAGED I4 TO I7 AT 116 AND 132;
C                                 MODIFIED SEARCH TO ALWAYS USE FIRST
C                                 COLUMN OF DIRECTORY BEFORE LINKS;
C                                 NEW USE FOR IFOUND( ) FOR DUPLICATES;
C                                 ADDED LINKNO( ) TO USE LINKS L TO R;
C                                 CHANGED PRINT STRUCTURE AT 148;
C                                 CORRECTED FORMAT 132; DIAGNOSTIC 
C                                 WRITTEN IF KFILD(1) = KFILD(2)
C        APRIL     2001   SFANOS  MODIFIED FORMAT STATMENTS TO CONFORM
C                                 TO FORTRAN 90 STANDARDS ON THE IBM SP
C        FEBRUARY  2007   GLAHN   CHANGED I4 TO I5 AT 150 AND 1500
C
C        PURPOSE 
C            TO READ A STATION LIST AND ASSOCIATED INFORMATION FROM A
C            STATION DIRECTORY IN ONE OR MORE GROUPS AND RETURN THE
C            LIST IN THE ORDER READ BY GROUP.  THE STATION LIST
C            IS PUT INTO CCALL( ,1), WITH UP TO 5 SUBSTITUTE STATIONS
C            IN CCALL( ,J),J=2,6).  THE "PRIMARY" VALUE PUT INTO
C            CCALL( ,1) CAN BE EITHER THE ICAO IDENTIFIERS OR THE
C            OLDER STATION CALL LETTERS, DEPENDING ON THE VALUE OF
C            THE VARIABLE "NEW."  WHEN CCALL( ,1) CONTAINS THE ICAO
C            IDENTIFIERS, CCALL( ,2) WILL CONTAIN THE OLDER STATION
C            CALL LETTERS, AND VICE VERSA.  THE LIST (8 CALL LETTERS)
C            CAN BE ON THE DEFAULT INPUT FILE, OR CAN BE ON A SEPERATE
C            FILE, BUT THE STATION LIST CANNOT BE ON THE SAME FILE AS
C            THE DIRECTORY.  THE CALL TO RDC IS SET TO READ UP TO 
C            NT = 7 VALUES PER RECORD ACCORDING TO THE FORMAT 
C            (7(A8,1X)); HOWEVER, THE RECORD NEED NOT HAVE THAT MANY 
C            VALUES.  THIS ROUTINE IS USED FOR READING A COMPLETE LIST
C            COMPOSED OF ONE OR MORE GROUPS.  READING STOPS WHEN AN
C            EMPTY SET IN ENCOUNTERED.  DUPLICATE STATIONS WILL BE KEPT,
C            BUT A DIAGNOSTIC IS OUTPUT.  THE ARRAYS TO BE FILLED ARE
C            INITIALIZED.
C
C            NOTE:  THE DIFFERENCE BETWEEN THIS RDSTGN AND RDSTGA IS 
C                   THAT RDSTGA ALPHABETIZES STATIONS, WHILE RDSTGN
C                   DOES NOT.  RDSTAL IS USED FOR A SINGLE STATION
C                   LIST; RDSTGN IS USED FOR MULTIPLE LISTS.
C
C        DATA SET USE 
C            KFILDO   - DEFAULT UNIT NUMBER FOR OUTPUT (PRINT) FILE.
C                       (OUTPUT) 
C            IP4      - UNIT NUMBER FOR OUTPUT OF CALL LETTERS.
C                       (OUTPUT)
C            IP5      - UNIT NUMBER FOR OUTPUT OF DIRECTORY INFORMATION
C                       (OUTPUT) 
C            KFILD(J) - UNIT NUMBER FROM WHICH TO READ STATION LIST
C                       (J=1) AND STATION DIRECTORY (J=2).  IT IS 
C                       ASSUMED FILES HAVE BEEN OPENED.  (INPUT) 
C 
C        VARIABLES 
C              KFILDO = DEFAULT UNIT NUMBER FOR OUTPUT (PRINT) FILE.
C                       (INPUT) 
C                 IP4 = INDICATES WHETHER (>0) OR NOT (=0) THE STATION 
C                       LIST (CALL LETTERS ONLY) WILL BE WRITTEN TO UNIT
C                       IP4.  IF THERE ARE INPUT ERRORS, THE STATION
C                       LIST WILL BE WRITTEN TO THE DEFAULT OUTPUT FILE
C                       UNIT KFILDO AS WELL AS TO UNIT IP4.  (INPUT)
C                 IP5 = INDICATES WHETHER (>0) OR NOT (=0) THE STATION 
C                       DIRECTORY INFORMATION WILL BE WRITTEN TO UNIT
C                       IP5.  IF THERE ARE INPUT ERRORS, THE STATION
C                       LIST WILL BE WRITTEN TO THE DEFAULT OUTPUT FILE
C                       UNIT KFILDO AS WELL AS TO UNIT IP5.  (INPUT) 
C            KFILD(J) = UNIT NUMBER FROM WHICH TO READ STATION LIST
C                       (J=1) AND STATION DIRECTORY (J=2).  IT IS 
C                       ASSUMED FILES HAVE BEEN OPENED.  (INPUT) 
C                 NEW = 1 WHEN NEW 4-LETTER CALL LETTERS ARE TO BE PUT
C                       INTO CCALL( ,1);
C                       0 WHEN OLD 3-LETTER CALL LETTERS ARE TO BE USED.
C                         NOTE THAT WHEN THERE ARE NO 3-LETTER CALL 
C                         LETTERS TO MATCH AN ICAO INPUT LIST, THE
C                         CALL LETTERS WILL BE BLANK, AND EVEN
C                         THOUGH THE STATION INFORMATION WILL BE THERE,
C                         IT WILL BE USELESS BECAUSE THERE ARE NO
C                         CALL LETTERS IN CCALL( , 1).
C                       (INPUT)
C          CCALL(K,J) = 8-CHARACTER STATION CALL LETTERS (OR GRIDPOINT
C                       LOCATIONS FOR GRID DEVELOPMENT) TO PROVIDE
C                       OUTPUT FOR (J=1) AND 5 POSSIBLE OTHER STATION
C                       CALL LETTERS (J=2,6) THAT CAN BE USED INSTEAD
C                       IF THE PRIMARY (J=1) STATION CANNOT BE FOUND 
C                       IN AN INPUT DIRECTORY (K=1,NSTA).  (CHARACTER*8)
C                       (OUTPUT)
C             NAME(K) = NAMES OF STATIONS (K=1,NSTA)  (CHARACTER*20)
C                       (OUTPUT)
C            NELEV(K) = ELEVATION OF STATIONS (K=1,NSTA).  (OUTPUT)
C           STALAT(K) = LATITUDE OF STATIONS (K=1,NSTA).  (OUTPUT)
C           STALON(K) = LONGITUDE OF STATIONS (K=1,NSTA).  (OUTPUT)
C            IWBAN(K) = WBAN NUMBERS OF STATIONS (K=1,NSTA).  (OUTPUT) 
C           IFOUND(K) = USED TO KEEP TRACK OF THE STATIONS FOUND IN THE
C                       DIRECTORY (K=1,NSTA).  (INTERNAL) 
C                       0 = NOT YET FOUND,
C                       L=1-6 = FOUND, COLUMN OF CCALL( ,L) WHERE 
C                            CCALLD( ) FOUND.
C                       7 = DUPLICATE.
C                       8 = DUPLICATE PROBABLY CAUSED BY A LINK TO AN
C                           ALTERNATE STATION.  AN ALTERNATE STATION IS
C                           DEFINED AS COLS. 2-6 WHEN NEW = 1, AND AS
C                           COLS. 1 AND 3-6 WHEN NEW = 0.
C                       (INTERNAL)
C              NGP(J) = SIZE OF KGP GROUPS OF STATIONS (J=1,KGP), MAX
C                       OF ND1.  (OUTPUT)
C                 ND1 = SIZE OF ARRAYS CCALL( , ), NAME( ),
C                       NELEV( ), IWBAN( ), STALAT( ), STALON( )
C                       IFOUND( ), AND NGP( ).  THIS IS THE MAXIMUM
C                       NUMBER OF STATIONS IN THE LIST TO BE RETURNED.
C                       (INPUT)
C                 KGP = THE NUMBER OF VALUES RETURNED IN NGP( ).
C                       (OUTPUT) 
C                NSTA = THE TOTAL NUMBER OF STATIONS RETURNED IN
C                       CCALL( , ) AND OTHER OUTPUT ARRAYS.  (OUTPUT)
C                 IER = STATUS RETURN.  (OUTPUT)
C                       0  = GOOD RETURN.
C                       20 = ERROR OR EOF READING KFILD(1) IN RDC
C                            (ABORTS)
C                       21 = TOO MANY STATIONS FOR CCALL(ND1) IN RDC
C                            (ABORTS)
C                       33 = ERROR ON UNIT KFILD(2) WHEN READING THE
C                            DIRECTORY (ABORTS)
C                       34 = TOO MANY STATIONS IN DIRECTORY TO BE 
C                       35 = ONE OR MORE STATIONS NOT FOUND IN THE
C                            DIRECTORY (NORMAL RETURN)
C                       36 = LINK IN THE DIRECTORY USED FOR ONE OR MORE 
C                            STATIONS (NORMAL RETURN)
C                       37 = BOTH IER 35 AND 36 HAVE OCCURRED (NORMAL
C                            RETURN)
C                         NOTE THAT DUPLICATE STATIONS DO NOT HAVE
C                         AN IER CODE, BUT A DIAGNOSTIC IS WRITTEN.
C            CTEMP( ) = TEMPORARY ARRAY THAT MUST BE OF AT LEAST SIZE
C                       NT.  (CHARACTER*8)  (INTERNAL) 
C                  NT = NUMBER OF WORDS PER RECORD INDICATED IN FORMAT.
C                       SET BY PARAMETER, BECAUSE IS IS A DIMENSION.  
C                       (INTERNAL)
C           CCALLT(J) = TO READ CALL LETTERS INTO FROM DIRECTORY
C                       (J=1,6).  FOR NEW = 1, THE KEY OR PRIMARY CALL
C                       LETTERS (J=1) ARE FROM COLUMNS 1-8 AND THE
C                       SECONDARY CALL LETTERS (USUALLY THE CALL
C                       LETTERS BEFORE THE SHIFT TO ICAO STATION
C                       IDENTIFIERS) (J=2) ARE FROM COLUMNS 10-17.
C                       FOR NEW = 0, THE PRIMARY CALL LETTERS ARE FROM
C                       COLUMNS 10-17, AND THE SECONDARY ARE FROM 1-8.
C                       OTHER OPTIONAL CALL LETTERS (J=3,6) ARE FROM
C                       COLUMNS 83-90, 92-99, 101-108, and 110-117.
C                       (CHARACTER*8) (INTERNAL)
C               NAMET = TO READ NAME INTO FROM DIRECTORY.
C                       (CHARACTER*20)  (INTERNAL)
C              NELEVT = TO READ ELEVATION INTO FROM DIRECTORY.
C                       (INTERNAL)
C              IWBANT = TO READ WBAN NUMBER INTO FROM DIRECTORY.
C                       (INTERNAL)
C              SIGNLA = SIGN OF THE LATITUDE AS READ FROM THE DIRECTORY.
C                       WILL BE "N" FOR NORTH LATITUDE OR "S" FOR SOUTH
C                       LATITUDE.  WHEN "S", THE LATITUDE WILL BE STORED
C                       AS NEGATIVE.  (CHARACTER*1)  (INTERNAL)
C              XLATDD = LATITUDE IN DEGREES.  (INTERNAL)
C              SIGNLO = SIGN OF THE LONGITUDE AS READ FROM THE
C                       DIRECTORY.  WILL BE "E" FOR EAST LONGITUDE OR
C                       "W" FOR WEST LONGITUDE.  WHEN "E", THE LONGITUDE
C                       IS ADJUSTED SO THAT ALL VALUES ARE WEST.
C                       (CHARACTER*1)  (INTERNAL)
C              XLONDD = LONGITUDE IN DEGREES.  (INTERNAL)
C               NSTA1 = THE NUMBER OF STATIONS READ IN A GROUP, RETURNED
C                       FROM RDC.  (INTERNAL)
C              BLANK8 = 8 BLANKS.  (CHARACTER*8)  (INTERNAL)
C               BLANK = 20 BLANKS   (CHARACTER*20)  (INTERNAL)
C           CCALLS(K) = HOLDS THE CALL LETTERS TO BE PUT INTO
C                       CCALL(K,1) BEFORE EXIT.  THIS IS NECESSARY SO
C                       THAT CCALL(K,1) WON'T BE OBLITERATED DUE TO
C                       A LINK THAT IS SUBSEQUENTLY FOUND AS A PRIMARY.
C                       (CHARACTER*8) (AUTOMATIC) (INTERNAL)
C           LINKNO(K) = USED FOR KEEPING TRACK OF THE LINK NUMBER
C                       FOR EACH STATION (K=1,NST)  (AUTOMATIC)
C                       (INTERNAL)
C        1         2         3         4         5         6         7 X
C 
C        NONSYSTEM SUBROUTINES CALLED 
C            RDC. 
C
      PARAMETER (NT=7)
C
      CHARACTER*1 SIGNLA,SIGNLO
      CHARACTER*8 CCALL(ND1,6),CTEMP(NT),BLANK8,CCALLT(6)
      CHARACTER*8 CCALLS(ND1)
C        CCALLS( ) IS AN AUTOMATIC ARRAY.      
      CHARACTER*20 NAME(ND1),NAMET,BLANK
C
      DIMENSION NELEV(ND1),IWBAN(ND1),STALAT(ND1),STALON(ND1),
     1          IFOUND(ND1),NGP(ND1)
      DIMENSION LINKNO(ND1)
C        LINKNO( ) IS AN AUTOMATIC ARRAY.
      DIMENSION KFILD(2)
C
      DATA BLANK8/' '/
      DATA BLANK/' '/
      DATA CCALLT/6*' '/
      DATA NAMET/' '/
C
D     CALL TIMPR(KFILDO,KFILDO,'START RDSTGN        ')
C
      IER=0
      KGP=1
      NSTA=0
C
C        INITIALIZE ARRAYS.
C
      DO 103 K=1,ND1
C
      DO 102 J=1,6
      CCALL(K,J)=BLANK8
 102  CONTINUE
C
      CCALLS(K)=BLANK8  
      NAME(K)=BLANK
      NELEV(K)=0
      IWBAN(K)=0
      STALAT(K)=0.
      STALON(K)=0.
      IFOUND(K)=0
      LINKNO(K)=0
      NGP(K)=0
 103  CONTINUE
C
C        KFILD(1) CANNOT EQUAL KFILD(2).
C
      IF(KFILD(1).EQ.KFILD(2))THEN
         WRITE(KFILDO,104)KFILD(1)
 104     FORMAT(/,' ****KFILD(1) AND KFILD(2) ARE BOTH =',I3,
     1           '.  CHANGE ONE OR THE OTHER.')
      ENDIF
C
C        READ STATION LIST FROM UNIT NUMBER KFILD(1).
C     
 105  CALL RDC(KFILDO,IP4,KFILD(1),CCALL(NSTA+1,1),ND1-NSTA,CTEMP,NT,
     1         '(7(A8,1X))',NSTA1,'99999999',IER)
C        NT = 7 WITH FMT = '(7(A8,1X))' MEANS THAT UP TO 7 VALUES WILL
C        BE READ PER RECORD.  FEWER CAN BE PRESENT.  IF THE LAST
C        VALUE IS NOT COMPLETE, IT WILL BE BLANK FILLED ON THE RIGHT.
C        THAT IS, 'OKC     ' COULD BE 'OKC' OR 'OKC '.
C        IER FROM RDC WILL BE OVERWRITTEN IF THERE ARE DUPLICATE
C        STATIONS IN THE LIST, OR IF A STATION CANNOT BE FOUND
C        IN THE DIRECTORY. WHEN IER NE 0, A DIAGNOSTIC WILL
C        HAVE BEEN WRITTEN BY RDC.
C
      IF(IER.NE.0.AND.NSTA1.NE.0)THEN
C
         IF(KGP.EQ.1)THEN
            WRITE(KFILDO,110)NSTA1,KGP,(CCALL(K,1),K=NSTA+1,NSTA+NSTA1)
 110        FORMAT(/,' ',I5,' STATIONS INPUT FOR GROUP NO.',I5,1X,
     1            10(1X,A8),/,(14X,13(1X,A8)))
         ELSE
            WRITE(KFILDO,111)NSTA1,KGP,(CCALL(K,1),K=NSTA+1,NSTA+NSTA1)
 111        FORMAT(' ',I5,' STATIONS INPUT FOR GROUP NO.',I5,1X,
     1            10(1X,A8),/,(14X,13(1X,A8)))
         ENDIF
C
      ENDIF
C
      IF(NSTA1.EQ.0)GO TO 120
C        AN EMPTY SET TERMINATES READING.
      IF(IP4.EQ.0)GO TO 115
      IF(IP4.EQ.KFILDO.AND.IER.NE.0.AND.NSTA1.NE.0)GO TO 115
C        STATION LIST MAY BE WRITTEN TWICE WHEN THERE ARE ERRORS
C        DETECTED, ONCE TO THE DEFAULT OUTPUT FILE AND ONCE TO UNIT
C        IP4.
C
      IF(KGP.EQ.1)THEN
         WRITE(IP4,110)NSTA1,KGP,(CCALL(K,1),K=NSTA+1,NSTA+NSTA1)
      ELSE
         WRITE(IP4,111)NSTA1,KGP,(CCALL(K,1),K=NSTA+1,NSTA+NSTA1)
      ENDIF
C
 115  IF(KGP.LE.ND1)GO TO 117
      WRITE(KFILDO,116)ND1
 116  FORMAT(/,' ****TOO MANY GROUPS IN RDSTAD FOR DIMENSION ND1 =',I7)
      IER=34
      KGP=KGP-1
      GO TO 160
C
 117  NGP(KGP)=NSTA1
      NSTA=NSTA+NSTA1
      IF(IER.NE.0)GO TO 160
C        WHEN IER NE 0 FROM RDC, NO USE OF ENTERING RDC AGAIN.
      KGP=KGP+1
      GO TO 105
C
C        MUST DECREASE KGP, BECAUSE IS IS THE VALUE OF THE NEXT
C        ENTRY INTO NGP( ).
C
 120  KGP=KGP-1
C
C        READ DIRECTORY.
C
 121  CCALLT(1)=BLANK8
      CCALLT(2)=BLANK8
      NAMET(1:20)=BLANK
      IF(NEW.EQ.1)THEN
         READ(KFILD(2),122,IOSTAT=IOS,ERR=123,END=1405)CCALLT(1),
     1        CCALLT(2),NAMET(1:17),NAMET(19:20),NBLOCK,
     2        NELEVT,SIGNLA,XLATDD,SIGNLO,XLONDD,ITIMEZ,ITYPE,
     3        OPEN,(CCALLT(K),K=3,6),IDATE,IWBANT
 122     FORMAT(A8,1X,A8,1X,A17,4X,A2,1X,I6,1X,I5,1X,A1,F7.4,1X,A1,
     1          F8.4,1X,I3,1X,I1,1X,A1,4(1X,A8),1X,I10,1X,I5)
      ELSE
         READ(KFILD(2),122,IOSTAT=IOS,ERR=123,END=1405)CCALLT(2),
     1        CCALLT(1),NAMET(1:17),NAMET(19:20),NBLOCK,
     2        NELEVT,SIGNLA,XLATDD,SIGNLO,XLONDD,ITIMEZ,ITYPE,
     3        OPEN,(CCALLT(K),K=3,6),IDATE,IWBANT
      ENDIF
C
      GO TO 130
C
C        ERROR READING DIRECTORY.
C
 123  WRITE(KFILDO,124)IOS
      IF(IP4.NE.0.AND.IP4.NE.KFILDO)WRITE(IP4,124)IOS
      IF(IP5.NE.0.AND.IP5.NE.KFILDO.AND.IP4.NE.IP5)WRITE(IP5,124)IOS
 124  FORMAT(/,' ****ERROR READING STATION DIRECTORY IN RDSTAD.',
     1         '  IOSTAT =',I5)
      IER=33
      GO TO 1405
C
C        A STATION LIST RESIDES IN CCALL( ,1).  DETERMINE WHETHER THIS
C        DIRECTORY ENTRY MATCHES A STATION IN CCALL( ,1) AND
C        IS TO BE KEPT.  DUPLICATE STATIONS WILL BE KEPT.
C        STATIONS NOT IN THE DIRECTORY WILL RETAIN THEIR PLACE AS INPUT.
C
 130  JP1=0
C        JP1 IS SET TO 0 FOR EVERY DIRECTORY ENTRY READ.
C
      DO 1395 L=1,6
      IF(L.LE.2)GO TO 1308
C        ALWAYS CHECK THE FIRST TWO COLUMNS OF THE DIRECTORY.
      IF(CCALLT(L).EQ.BLANK8)GO TO 121
C        ONCE A BLANK IS FOUND IN THE ALTERNATE STATION COLUMNS,
C        THE SEARCH IS OVER.  READ ANOTHER DIRECTORY ENTRY.
C
 1308 ISTART=0
C
      DO 140 M=1,KGP
C
      DO 139 KL=ISTART+1,ISTART+NGP(M)
      IF(IFOUND(KL).GT.0.AND.LINKNO(KL).EQ.0)GO TO 139
C        ABOVE TEST GUARDS AGAINST DUPLICATES IN THE DIRECTORY.
C        IF THERE IS A DUPLICATE, THE FIRST ENTRY IS USED.
C
C        CHECK FOR STATIONS.
C
      IF(CCALLT(L).NE.CCALL(KL,1))GO TO 139
C
      IF(LINKNO(KL).NE.0.AND.LINKNO(KL).LT.L)GO TO 139
C
      JP1=JP1+1
      IF(KL.LE.ND1)GO TO 135
C        ND1 ABOUT TO BE EXCEEDED.  (THIS SHOULD HAVE BEEN DISCERNED
C        EARLIER.)
      WRITE(KFILDO,132)ND1
      IF(IP4.NE.0.AND.IP4.NE.KFILDO)WRITE(IP4,132)ND1
      IF(IP5.NE.0.AND.IP5.NE.KFILDO.AND.IP4.NE.IP5)WRITE(IP5,132)ND1
 132  FORMAT(/' ****TOO MANY STATIONS IN LIST FOR DIMENSION ND1 =',
     1       I7,'.')
      IER=34
      GO TO 1405
C
 135  CCALLS(KL)=CCALLT(1)
C        CCALLS(KL) IS FILLED ACCORDING TO VARIABLE CCALLT(1).
C        BEFORE EXIT, THIS IS INSERTED INTO CCALL(K,1).
C        CCALLS( ) IS NECESSARY BECAUSE A LINK TO AN ALTERNATE
C        STATION MAY BE FOUND BEFORE THE PRIMARY CALL LETTERS.
C        WHEN THAT HAPPENS, CCALL(K,2-6) WILL BE OVERWRITTEN
C        PROPERLY, BUT CCALL(K,1) CAN'T BE DISTURBED UNTIL THE
C        SEARCH IS COMPLETED.
      CCALL(KL,2)=CCALLT(2)
      CCALL(KL,3)=CCALLT(3)
      CCALL(KL,4)=CCALLT(4)
      CCALL(KL,5)=CCALLT(5)
      CCALL(KL,6)=CCALLT(6)
      NAME(KL)(1:17)=NAMET(1:17)
      NAME(KL)(19:20)=NAMET(19:20)
      IWBAN(KL)=IWBANT
      NELEV(KL)=NELEVT
      STALAT(KL)=XLATDD
      IF(SIGNLA.EQ.'S')STALAT(KL)=-STALAT(KL)
C        ABOVE STATEMENT MAKES SOUTH LATITUDE NEGATIVE.
      STALON(KL)=XLONDD
      IF(SIGNLO.EQ.'E')STALON(KL)=360.-STALON(KL)     
C        ABOVE STATEMENT MAKES ALL LONGITUDES WEST, RANGE 0-360.
C  
      IF(L.EQ.1)THEN
         LINKNO(KL)=0
      ELSE
         LINKNO(KL)=L
      ENDIF
C
      IF(JP1.EQ.1)THEN
         IFOUND(KL)=L
      ELSE
C
         IF(L.EQ.1)THEN
            IFOUND(KL)=7
         ELSE
            IFOUND(KL)=8
         ENDIF
C
      ENDIF
C
C        IFOUND( ) CORRESPONDS TO THE ORIGINAL LIST AS READ.
C        EVEN THOUGH THIS DIRECTORY ENTRY HAS BEEN USED AND ENTERED
C        INTO THE LIST, THE SEARCH IS CONTINUED IN CASE THERE
C        ARE DUPLICATE STATIONS IN THE LIST.
C
 139  CONTINUE
C
      ISTART=ISTART+NGP(M)
 140  CONTINUE
C
 1395 CONTINUE
C
      GO TO 121
C
C        ARRAYS FOR STATIONS NOT IN THE DIRECTORY MUST BE
C        GIVEN VALUES.  DUPLICATE STATIONS AND STATIONS NOT 
C        FOUND IN THE DIRECTORY ARE LISTED ACCORDING TO THE
C        ORDER INPUT.
C
 1405 JER=0
      ISTART=0
C
      DO 146 M=1,KGP
C      
      DO 145 KL=ISTART+1,ISTART+NGP(M)
      IF(IFOUND(KL).EQ.0)THEN
C
         IF(JER.EQ.0)THEN
            WRITE(KFILDO,141)CCALL(KL,1)
            IF(IP4.NE.0.AND.IP4.NE.KFILDO)WRITE(IP4,141)CCALL(KL,1)
            IF(IP5.NE.0.AND.IP5.NE.KFILDO.AND.IP4.NE.IP5)
     1             WRITE(IP5,141)CCALL(KL,1)
 141        FORMAT(/,' ****STATION ',A8,' NOT FOUND IN DIRECTORY')
         ELSE
            WRITE(KFILDO,1410)CCALL(KL,1)
            IF(IP4.NE.0.AND.IP4.NE.KFILDO)WRITE(IP4,1410)CCALL(KL,1)
            IF(IP5.NE.0.AND.IP5.NE.KFILDO.AND.IP4.NE.IP5)
     1             WRITE(IP5,1410)CCALL(KL,1)
 1410       FORMAT(' ****STATION ',A8,' NOT FOUND IN DIRECTORY')
         ENDIF
C
         JER=1
         CCALL(KL,2)=BLANK8
         CCALL(KL,3)=BLANK8
         CCALL(KL,4)=BLANK8
         CCALL(KL,5)=BLANK8
         CCALL(KL,6)=BLANK8
         NAME(KL)=BLANK
         IWBAN(KL)=0
         NELEV(KL)=0
         STALAT(KL)=0.
         STALON(KL)=0.
C           ABOVE STATEMENTS NECESSARY TO OBLITERATE ANY INFO
C           LEFT OVER IN CCALL( , ).
      ELSE
         CCALL(KL,1)=CCALLS(KL)
C           THE STATION CALL LETTERS WERE SAVED IN CALLS( )
C           ACCORDING TO NEW.
C
         IF(IFOUND(KL).EQ.7)THEN
C
            IF(JER.EQ.0)THEN
               WRITE(KFILDO,142)CCALL(KL,1)
               IF(IP4.NE.0.AND.IP4.NE.KFILDO)WRITE(IP4,142)CCALL(KL,1)
               IF(IP5.NE.0.AND.IP5.NE.KFILDO.AND.IP4.NE.IP5)
     1                WRITE(IP5,142)CCALL(KL,1)
 142           FORMAT(/' ****STATION ',A8,' IS A DUPLICATE.')
            ELSE
               WRITE(KFILDO,1420)CCALL(KL,1)
               IF(IP4.NE.0.AND.IP4.NE.KFILDO)WRITE(IP4,1420)CCALL(KL,1)
               IF(IP5.NE.0.AND.IP5.NE.KFILDO.AND.IP4.NE.IP5)
     1                WRITE(IP5,1420)CCALL(KL,1)
 1420          FORMAT(' ****STATION ',A8,' IS A DUPLICATE.')
            ENDIF
C
            JER=1
C    
         ELSEIF(IFOUND(KL).EQ.8)THEN
C
            IF(JER.EQ.0)THEN
               WRITE(KFILDO,143)CCALL(KL,1)
               IF(IP4.NE.0.AND.IP4.NE.KFILDO)WRITE(IP4,143)CCALL(KL,1)
               IF(IP5.NE.0.AND.IP5.NE.KFILDO.AND.IP4.NE.IP5)
     1                WRITE(IP5,143)CCALL(KL,1)
 143           FORMAT(/' ****STATION ',A8,' IS A DUPLICATE',
     1                 ' MAY BE CAUSED BY A LINK TO ALTERNATE STATION.')
            ELSE
               WRITE(KFILDO,1430)CCALL(KL,1)
               IF(IP4.NE.0.AND.IP4.NE.KFILDO)WRITE(IP4,1430)CCALL(KL,1)
               IF(IP5.NE.0.AND.IP5.NE.KFILDO.AND.IP4.NE.IP5)
     1                WRITE(IP5,1430)CCALL(KL,1)
 1430          FORMAT(' ****STATION ',A8,' IS A DUPLICATE',
     1                ' MAY BE CAUSED BY A LINK TO ALTERNATE STATION.')
            ENDIF
C
            JER=1
C    
         ELSEIF(IFOUND(KL).NE.1)THEN
C
            IF(JER.EQ.0)THEN
               WRITE(KFILDO,144)CCALL(KL,1),IFOUND(KL)
               IF(IP4.NE.0.AND.IP4.NE.KFILDO)WRITE(IP4,144)CCALL(KL,1),
     1                                       IFOUND(KL)
               IF(IP5.NE.0.AND.IP5.NE.KFILDO.AND.IP4.NE.IP5)
     1                WRITE(IP5,144)CCALL(KL,1),IFOUND(KL)
 144           FORMAT(/' ****STATION ',A8,' REQUIRED A LINK NO. =',I3,
     1                 '.')
            ELSE
               WRITE(KFILDO,1440)CCALL(KL,1),IFOUND(KL)
               IF(IP4.NE.0.AND.IP4.NE.KFILDO)WRITE(IP4,1440)CCALL(KL,1),
     1                                       IFOUND(KL)
               IF(IP5.NE.0.AND.IP5.NE.KFILDO.AND.IP4.NE.IP5)
     1                WRITE(IP5,1440)CCALL(KL,1),IFOUND(KL)
 1440          FORMAT(' ****STATION ',A8,' REQUIRED A LINK NO. =',I3,
     1                '.')
            ENDIF
C
            JER=1
         ENDIF
C         
      ENDIF
C
 145  CONTINUE      
C 
      ISTART=ISTART+NGP(M)
 146  CONTINUE
C 
C        SET ERROR CODE IER.  WHEN IER = 33 OR 34, LEAVE IT;
C        THESE ARE CONSIDERED TO BE FATAL ERRORS.
C
      IF(IER.EQ.33.OR.IER.EQ.34)GO TO 148
C
C        ADJUST IER AS NECESSARY.
C        IER = 35 - ONE OR MORE STATIONS NOT FOUND.
C            = 36 - LINK USED FOR ONE OR MORE STATIONS.
C            = 37 - BOTH OF ABOVE.
C
      DO 147 K=1,NSTA
C
      IF(IFOUND(K).EQ.0)THEN
C
         IF(IER.GT.35)THEN
            IER=37
            GO TO 148
         ELSE
            IER=35
         ENDIF
C
      ELSEIF(IFOUND(K).EQ.8)THEN
C
         IF(IER.EQ.0.OR.IER.EQ.36)THEN
            IER=36
         ELSE
            IER=37
            GO TO 148
         ENDIF
C
      ENDIF
C
 147  CONTINUE
C 
C        WRITE STATION LISTS TO KFILDO WHEN THERE HAS BEEN AN 
C        ERROR AND TO IP5 AS DESIRED.  WRITING IS BY GROUP UNLESS
C        SINGLE STATION EQUATIONS ARE BEING PRODUCED, IN
C        WHICH CASE KGP = NSTA.  NOTE THAT ONLY ONE GROUP
C        OF TWO STATIONS WILL CAUSE LISTING BY GROUP.
C
 148  ISTART=0
      KIP5=0
      KDO=0
C
C        KIP5 AND KFILDO ARE COUNTERS THAT KEEP THE HEADING
C        FROM PRINTING MORE THAN ONCE ON IP5 AND KFILDO,
C        RESPECTIVELY.  FORMATS 150 AND 1500 BELOW ARE USED
C        REPETIVELY IN THE PRINT LOOP.
C
 150  FORMAT(/,' ',I5,
     1        ' STATIONS AND DIRECTORY INFORMATION (IF NOT',
     2        ' LISTED BY GROUP, IMPLIES ONE STATION PER GROUP),',
     3        ' IER =',I3/
     4        '           STA           NAME              WBAN',
     5        '    LAT     LON   ELEV   SUBSTITUTE STATIONS')
 1500 FORMAT(/,' ',I5,
     1        ' STATIONS AND DIRECTORY INFORMATION (GROUPS',
     2        ' ARE LISTED BY THE FIRST STATION IN THE GROUP),',
     3        ' IER =',I3/
     4        '           STA           NAME              WBAN',
     5        '    LAT     LON   ELEV   SUBSTITUTE STATIONS')
C
      DO 158 M=1,KGP
C
      DO 157 J=ISTART+1,ISTART+NGP(M)
C
      IF(IER.EQ.0)THEN
C
         IF(IP5.NE.0)THEN
C
            IF(KIP5.EQ.0)THEN
C
               IF(KGP.EQ.NSTA)THEN
                  WRITE(IP5,150)NSTA,IER
               ELSE
                  WRITE(IP5,1500)NSTA,IER
               ENDIF
C
            KIP5=1
            ENDIF
C
            IF(J.EQ.ISTART+1.AND.KGP.NE.NSTA)THEN
               WRITE(IP5,154)M,CCALL(J,1),NAME(J),IWBAN(J),
     1           STALAT(J),STALON(J),NELEV(J),(CCALL(J,I),I=2,6)
 154           FORMAT(' GROUP',I4,1X,A8,1X,A20,1X,I6,2F8.2,I6,2X,
     1                5(1X,A8))
            ELSE
               WRITE(IP5,155)CCALL(J,1),NAME(J),IWBAN(J),
     1              STALAT(J),STALON(J),NELEV(J),(CCALL(J,I),I=2,6)
 155           FORMAT(' ',10X,A8,1X,A20,1X,I6,2F8.2,I6,2X,5(1X,A8))
            ENDIF
C
         ENDIF
C
      ELSEIF(IER.EQ.33.OR.IER.EQ.34)THEN
C
         IF(KDO.EQ.0)THEN
C
            IF(KGP.EQ.NSTA)THEN
               WRITE(KFILDO,150)NSTA,IER
            ELSE
               WRITE(KFILDO,1500)NSTA,IER
            ENDIF
C
         KDO=1
         ENDIF
C
         IF(J.EQ.ISTART+1.AND.KGP.NE.NSTA)THEN
            WRITE(KFILDO,154)M,CCALL(J,1),NAME(J),IWBAN(J),
     1        STALAT(J),STALON(J),NELEV(J),(CCALL(J,I),I=2,6)
         ELSE
            WRITE(KFILDO,155)CCALL(J,1),NAME(J),IWBAN(J),
     1           STALAT(J),STALON(J),NELEV(J),(CCALL(J,I),I=2,6)
         ENDIF
C   
         IF(IP5.NE.0.AND.IP5.NE.KFILDO)THEN
C
            IF(J.EQ.ISTART+1.AND.KGP.NE.NSTA)THEN
               WRITE(IP5,154)M,CCALL(J,1),NAME(J),IWBAN(J),
     1           STALAT(J),STALON(J),NELEV(J),(CCALL(J,I),I=2,6)
            ELSE
               WRITE(IP5,155)CCALL(J,1),NAME(J),IWBAN(J),
     1              STALAT(J),STALON(J),NELEV(J),(CCALL(J,I),I=2,6)
            ENDIF
C
         ENDIF
         
      ELSE
C
         IF(IP5.NE.0)THEN
C
            IF(KIP5.EQ.0)THEN
C
               IF(KGP.EQ.NSTA)THEN
                  WRITE(IP5,150)NSTA,IER
               ELSE
                  WRITE(IP5,1500)NSTA,IER
               ENDIF
C
               KIP5=1
               ENDIF
C
            IF(J.EQ.ISTART+1.AND.KGP.NE.NSTA)THEN
               WRITE(IP5,154)M,CCALL(J,1),NAME(J),IWBAN(J),
     1           STALAT(J),STALON(J),NELEV(J),(CCALL(J,I),I=2,6)
            ELSE
               WRITE(IP5,155)CCALL(J,1),NAME(J),IWBAN(J),
     1              STALAT(J),STALON(J),NELEV(J),(CCALL(J,I),I=2,6)
            ENDIF
C            
         ENDIF
C
      ENDIF
C
 157  CONTINUE
C
      ISTART=ISTART+NGP(M)
 158  CONTINUE
C
D     CALL TIMPR(KFILDO,KFILDO,'END RDSTGN          ')
C
 160  RETURN
      END
