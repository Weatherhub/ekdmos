      SUBROUTINE LMSTR6(KFILDO,NDATE,LSTORE,LITEMS,
     1                  MSTORE,MITEMS,ND9,
     2                  KFILIN,NAMIN,MAXTAU,JFOPEN,NUMIN,
     3                  INCCYL,IP23,IER)
C
C        MARCH     1995   GLAHN   TDL   MOS-2000
C        AUGUST    1997   GLAHN   CHANGED MSTORE(7, ) TO MSTORE(8, )
C        SEPTEMBER 1997   GLAHN   ADDED CHECK FOR CLOSING LAST UNIT
C        SEPTEMBER 1997   GLAHN   MODIFIED TEST BETWEEN 199 AND 201
C        JANUARY   1998   GLAHN   ADDED NRRDAT
C        MARCH     1998   GLAHN   ADDED TEST IN DO 160 LOOP
C                                 STATEMENT 141 CONTINUE OMITTED
C                                 ADDED DO 154 AND INCLUDED LOOPS
C                                 TEST CHANGED FROM LT TO LE ABOVE 160
C        APRIL     1998   GLAHN   REMOVED INITIALIZATION MITEMS=0
C                                 ADDED MAXMAX FOR VARIABLES NOT
C                                 AVAILABLE FOR DAY 1
C        APRIL     1998   GLAHN   PUT LOOPND=0 TEST BEFORE 1345
C        MAY       1998   GLAHN   ADDED TEST FOR MSTORE(5, ).LT.7777
C                                 IN DO 120 LOOP
C        AUGUST    1998   GLAHN   ADDED TEST ON NRRDAT UNDER DO 120;
C                                 ACCOMMODATED NUMIN = 0 BEFORE DO 190
C        DECEMBER  1998   GLAHN   DIAGNOSTIC ADDED
C        SEPTEMBER 1999   GLAHN   COMMENT CHANGE TO MAXTAU( )
C        JULY      2000   GLAHN   RESTORED THIS VERSION--CHANGE MADE
C                                 2/27/00 NOT CORRECT; INSERTED COMMAS
C                                 IN FORMATS; ADDED TEST ON ND9 ABOUT
C                                 TO BE EXCEEDED
C
C        PURPOSE
C           TO INITIALIZE MSTORE AND PREPARE LSTORE FOR GCPAC FOR
C           U600 AND SIMILAR ROUTINES.
C   
C        DATA SET USE
C            KFILDO - UNIT NUMBER OF OUTPUT (PRINT) FILE.  (OUTPUT)
C
C        VARIABLES
C              KFILDO = UNIT NUMBER OF OUTPUT (PRINT) FILE.  (INPUT)
C               NDATE = THE DAY 1 DATE/TIME.  (INPUT)
C         LSTORE(L,J) = THE ARRAY HOLDING INFORMATION ABOUT THE DATA 
C                       STORED (L=1,12) (J=1,LITEMS).  (INPUT-OUTPUT)
C                       L=1,4--THE 4 ID'S FOR THE DATA.
C                       L=5  --LOCATION OF STORED DATA.  WHEN IN CORE,
C                              THIS IS THE LOCATION IN CORE( ) WHERE
C                              THE DATA START.  WHEN ON DISK, 
C                              THIS IS MINUS THE RECORD NUMBER WHERE 
C                              THE DATA START.
C                       L=6  --THE NUMBER OF 4-BYTE WORDS STORED.
C                       L=7  --2 FOR DATA PACKED IN TDL GRIB, 1 FOR NOT.
C                       L=8  --THE DATE/TIME OF THE DATA IN FORMAT
C                              YYYYMMDDHH.
C                       L=9  --NUMBER OF TIMES DATA HAVE BEEN RETRIEVED.
C                       L=10 --THE NUMBER IN THE LIST OF UNIT NUMBERS 
C                              FROM WHICH THE DATA CAME.  STORED AS "IN"
C                              IN RDSTRX.
C                       L=11 --THE NUMBER OF THE FIRST PREDICTOR IN THE SORTED
C                              LIST IN ID( ,N) (N=1,NPRED) FOR WHICH THIS
C                              VARIABLE IS NEEDED, WHEN IT DOES NOT NEED
C                              TO BE STORED AFTER DAY 1.  WHEN THE VARIABLE
C                              MUST BE STORED (TO BE ACCESSED THROUGH OPTION)
C                              FOR ALL DAYS, LSTORE(11,N) IS 7777 + THE NUMBER
C                              OF THE FIRST PREDICTOR IN THE SORTED LIST
C                              FOR WHICH THIS VARIABLE IS NEEDED.
C                       L=12 --USED INITIALLY IN ESTABLISHING MSTORE( , ).
C                              LATER USED AS A WAY OF DETERMINING WHETHER
C                              TO KEEP THIS VARIABLE.
C              LITEMS = THE NUMBER OF ITEMS IN LSTORE( , ).
C         MSTORE(L,J) = THE ARRAY HOLDING THE VARIABLES NEEDED AS INPUT, AFTER
C                       DAY 1, AND ASSOCIATED INFORMATION (L=1,8) (J=1,MITEMS).
C                       (OUTPUT)
C                       L=1,4--THE 4 ID'S FOR THE DATA.
C                       L=5  --INDICATES WHETHER OR NOT TO STORE THE
C                              VARIABLE AND THE FIRST PREDICTOR TO USE IT FOR.
C                       L=6  --THE NUMBER OF HOURS AHEAD THE VARIABLE
C                              NEEDS TO BE SAVED.  THIS IS BASED ON THE
C                              INPUT FILE AND HOW FAR AHEAD IT NEEDS TO
C                              BE READ FOR THE LOOKAHEAD FEATURE.  FOR
C                              INSTANCE, IF A PREDICTOR IS ON THE SAME FILE
C                              AS A PREDICTAND THAT HAS A TAU OF 60 HOURS,
C                              THEN THERE WOULD BE AN ENTRY IN MSTORE( , )
C                              FOR EACH PROJECTION AHEAD IT NEEDS TO BE 
C                              SAVED AS THE FILE IS READ.  HOWEVER, IF
C                              THE PREDICTAND IS ON A SEPARATE FILE,
C                              THERE WOULD BE ONLY ONE ENTRY FOR THE 
C                              PREDICTOR, AND MSTORE(6, ) WOULD BE 0.
C                              MSTORE( , ) IS NOT CHANGED AFTER EXIT, EXCEPT
C                              FOR MSTORE(8, ).
C                       L=7  --TAKEN FROM LSTORE(10, ).  THE NUMBER IN THE
C                              LIST OF UNIT NUMBERS FROM WHICH THE DATA CAME.
C                              STORED AS "IN" IN RDSTRX.
C                       L=8  --CALCULATED FROM THE MAXIMUM TAU MAXTAU(IN),
C                              WHERE "IN" IS THE INPUT FILE NUMBER IN 
C                              MSTORE(7, ), AND THE VALUE IN MSTORE(6, )
C                              FOR EACH NEW CYCLE.  THIS KEEPS CALLS TO 
C                              UPDAT TO A MINIMUM.
C                       NOTE THAT MSTORE IN U600 AND VRBL62 IS NOT EXACTLY
C                       THAT IN U201.  U201 DOES NOT USE RDVECT.
C              MITEMS = THE NUMBER OF ITEMS IN MSTORE( , ).  IF 
C                       VARIABLES COULD NOT BE FOUND OR COMPUTED, THEY
C                       HAVE ALREADY BEEN ENTERED INTO MSTORE( , ).
C                       (INPUT/OUTPUT)
C                 ND9 = MAXIMUM NUMBER OF FIELDS STORED IN LSTORE( , )
C                       AND MSTORE( , ).  SECOND DIMENSION OF LSTORE( , ) 
C                       AND MSTORE( , ).  (INPUT)
C           KFILIN(J) = UNIT NUMBERS OF THE FILES TO READ (J=1,NUMIN).
C                       (INPUT)
C            NAMIN(J) = NAME OF THE INPUT FILES BEING PROCESSED (J=1,NUMIN).
C                       (CHARACTER*60)  (INPUT)
C           MAXTAU(J) = THE MAXIMUM TAU OF ANY VARIABLE IN FILE J
C                       (J=1,NUMIN).  THE VALUES OF J ARE THE VALUES
C                       STORED IN MSTORE(7, ).  WHEN MAXTAU( ) = -1,
C                       IT MEANS THAT FILE WAS NOT USED ON DAY ONE
C                       AND IS CLOSED.  (IF THIS BECOMES A PROBLEM,
C                       THE LOOP DO 200 AN BE OMITTED.)  (OUTPUT)
C           JFOPEN(J) = FOR EACH FILE IN KFILIN(J), JFOPEN(J) IS 1 WHEN
C                       THE FILE IS OPEN, IS 0 WHEN IT HAS ALREADY BEEN
C                       USED AND IS 2 WHEN THE FILE HAS NOT BEEN OPENED 
C                       (J=1,NUMIN).  WHEN IT IS DETERMINED THAT A FILE
C                       UNIT NUMBER WAS NOT USED ON DAY 1, IT IS ASSUMED
C                       IT WILL NOT BE NEEDED, AND IS CLOSED.  JFOPEN( )
C                       IS THEN SET TO 0.  (INPUT/OUTPUT)
C               NUMIN = NUMBER OF VALUES IN KFILIN( ), NAMIN( ), MAXTAU( ),
C                       JFOPEN( ).  USED AS THEIR DIMENSIONS. 
C                       CAN BE ZERO.(INPUT)
C              INCCYL = INCREMENT IN HOURS BETWEEN DATE/TIMES THAT
C                       ARE PUT INTO IDATE( ) BY SUBROUTINE DATPRO.
C                       USED IN LMSTR6 TO ASSURE THAT DATA ARE SAVED FOR
C                       CYCLES AT THIS FREQUENCY.
C                IP23 = INDICATES WHETHER (>0) OR NOT (=0) STATEMENTS
C                       ABOUT EOF AND FILE OPENINGS AND CLOSINGS WILL
C                       BE OUTPUT FOR PRINTING ON UNIT IP23.  (INPUT)
C                 IER = STATUS RETURN.  (OUTPUT)
C                        0 = GOOD RETURN.
C                       70 = MAY NOT HAVE COMPUTED MAXIMUM TAU CORRECTLY
C                            (ERROR IN LSTORE(9, )) OR ND9 IS ABOUT TO BE
C                            EXCEEDED.
C              NRRDAT = DATE WHICH WHEN LSTORE(12, ) EQUALS OR EXCEEDS,
C                       THE ITEM IN LSTORE( , ) WILL NOT BE DISCARDED.
C                       USED FOR CONSTANT ITEMS (E.G., STORED BY SCR01A).
C                       (INTERNAL)
C              MAXMAX = MAXIMUM TAU OF ANY VARIABLE REGARDLESS OF
C                       SOURCE FILE.  THIS IS NEEDED FOR VARIABLES
C                       NOT AVAILABLE FOR DAY 1.  SINCE IT IS NOT
C                       KNOWN WHAT FILE THEY WILL COME FROM OR
C                       WHAT IS THE MAXIMUM TAU, IT IS ASSUMED THE
C                       MAXIMUM TAU IS THE MAXIMUM OF ANY OTHER
C                       VARIABLE.
C
C        NONSYSTEM SUBROUTINES USED
C            UPDAT
C
      CHARACTER*60 NAMIN(NUMIN)
C
      DIMENSION KFILIN(NUMIN),MAXTAU(NUMIN),JFOPEN(NUMIN)
      DIMENSION LSTORE(12,ND9),MSTORE(8,ND9)
C
      DATA NRRDAT/2100010100/
C
      IER=0
C
C***D     WRITE(KFILDO,100)((LSTORE(I,J),I=1,12),J=1,LITEMS)
C***D100  FORMAT(/' LSTORE STARTING LMSTR6'/('  ',3I10,I11,3I8,I12,3I8,I12))
C
C        INITIALIZE MAXTAU( ) AND MAXMAX.
C
      DO 105 J=1,NUMIN
      MAXTAU(J)=-1
 105  CONTINUE
C
      MAXMAX=-1
C
C        TRANSFER ITEMS FROM LSTORE( , ) TO MSTORE( , ) THAT HAVE BEEN
C        USED.
C
      DO 120 J=1,LITEMS
      IF(LSTORE(11,J).EQ.0.OR.
     1   LSTORE(12,J).GE.NRRDAT)GO TO 120
C        ABOVE TEST FOR NRRDAT NEEDED WHEN EXTERNAL RANDOM 
C        ACCESS FILE (CONSTANT FILE) INDEX IS STORED.
      MITEMS=MITEMS+1
C
      IF(MITEMS.GT.ND9)THEN
         WRITE(KFILDO,107)ND9,((MSTORE(I,K),I=1,8),K=1,MITEMS-1)
 107  FORMAT(/,' ****ND9 = ',I5,' IS ABOUT TO BE EXCEEDED IN LMSTR6.',
     1       /,'     CURRENT MSTORE( , ) IS:',/,
     2        ('    ',3I10,I11,I8,I12,2I8))
         WRITE(KFILDO,1070)
 1070    FORMAT(/,' ****STOP IN LMSTR6 AT 1070.')
         STOP 1070
      ENDIF
C
      MSTORE(1,MITEMS)=LSTORE(1,J)
      MSTORE(2,MITEMS)=LSTORE(2,J)
      MSTORE(3,MITEMS)=LSTORE(3,J)
      MSTORE(4,MITEMS)=LSTORE(4,J)
      MSTORE(5,MITEMS)=LSTORE(11,J)
      MSTORE(6,MITEMS)=-LSTORE(12,J)
      MSTORE(7,MITEMS)=LSTORE(10,J)
      IF((LSTORE(9,J).GT.1.OR.
     1    MSTORE(6,MITEMS).GE.INCCYL).AND.
     2    MSTORE(5,MITEMS).LT.7777)
     3         MSTORE(5,MITEMS)=MSTORE(5,MITEMS)+7777
C       ABOVE GT CHANGED TO GE 8/23/97
C       ABOVE TEST ON MSTORE(5, ) FOR LT 7777 ADDED 5/26/98
C
      IF(LSTORE(9,J).LE.0)THEN
C           THIS ERROR SHOULD NOT HAPPEN, BUT COULD CAUSE A MAJOR 
C           PROBLEM IF IT DID.
         WRITE(KFILDO,109)J,(LSTORE(I,J),I=1,12)
 109     FORMAT(/' ****ERROR IN LMSTR6, LSTORE(9,J) LE 0 FOR ITEM',I4/
     1           '  ',3I10,I11,3I8,I12,3I8,I12)
         IER=70
         GO TO 120
C
      ENDIF
C
C        CALCULATE THE MAXIMUM TAU FOR PREDICTANDS BY INPUT 
C        UNIT NUMBER.
C
      IF(LSTORE(12,J).GT.0)GO TO 120
C
      MAXTAU(LSTORE(10,J))=MAX(MAXTAU(LSTORE(10,J)),-LSTORE(12,J))
C        NOTE THAT PREDICTORS WITH TAU GT 0 ARE STORED AT NDATE, BUT
C        PREDICTANDS WITH ANY TAU ARE STORED AT NDATE + TAU.
C        LSTORE(10,J) IS THE INPUT UNIT NUMBER, AND LSTORE(12,J)
C        IS MINUS THE PROJECTION FOR PREDICTANDS.
      MAXMAX=MAX(MAXMAX,MAXTAU(LSTORE(10,J)))
C***D     WRITE(KFILDO,119)LSTORE(10,J),MAXTAU(LSTORE(10,J)),MAXMAX
C***D119  FORMAT(' LMSTR6--LSTORE(10,J),MAXTAU(LSTORE(10,J)),MAXMAX',
C***D    1       3I10)
 120  CONTINUE
C
C        MUST GUARANTEE THAT ALL DATES NEEDED FOR EACH VARIABLE ARE
C        SAVED, AND THAT MSTORE( , ) CONTAINS ALL NECESSARY ENTRIES.
C
      NEWITM=MITEMS
C 
C***D     WRITE(KFILDO,125)((MSTORE(II,J),II=1,8),J=1,MITEMS)
C***D125  FORMAT(' LMSTR6-MSTORE( , )',8I11/
C***D    1      ('                   ',8I11))
      DO 150 J=1,MITEMS
C
      IF(MSTORE(7,J).EQ.0)THEN
         LOOPND=MAXMAX
      ELSE
         LOOPND=MAXTAU(MSTORE(7,J))
      ENDIF
C
C***D     WRITE(KFILDO,1345)J,MITEMS,MSTORE(7,J),LOOPND,MAXMAX
C***D1345 FORMAT(/' LMSTR6 AT 1345--J,MITEMS,MSTORE(7,J),LOOPND,MAXMAX',
C***D    1       5I10)
C
      IF(LOOPND.EQ.0)GO TO 150
C
      DO 145 NECTAU=MSTORE(6,J)+INCCYL,LOOPND,INCCYL
C 
      DO 135 L=1,NEWITM
      IF(L.EQ.J)GO TO 135
C
      IF(MSTORE(1,L).EQ.MSTORE(1,J).AND.
     1   MSTORE(2,L).EQ.MSTORE(2,J).AND.
     2   MSTORE(3,L).EQ.MSTORE(3,J).AND.
     3   MSTORE(4,L).EQ.MSTORE(4,J).AND.
     4   MSTORE(6,L).EQ.NECTAU)THEN
C***D        WRITE(KFILDO,1349)(MSTORE(I,L),I=1,6),L,J,NECTAU
C***D1349    FORMAT(' LMSTR6 AT 1349--(MSTORE(I,L),I=1,6),L,J,NECTAU',
C***D    1            6I10,3I4)
         GO TO 145
      ENDIF
C
 135  CONTINUE
C
C        MUST ADD TO MSTORE( , ).
C
      NEWITM=NEWITM+1
      IF(NEWITM.LE.ND9)GO TO 138
      NEWITM=NEWITM-1
      WRITE(KFILDO,137)ND9,((MSTORE(I,M),I=1,7),M=1,NEWITM)
 137  FORMAT(/' ****ND9 = ',I4,' IS ABOUT TO BE EXCEEDED IN LMSTR6.'/
     1        '     CURRENT MSTORE( , ) IS:'/
     2       ('    ',3I10,I11,I8,I12,I8))
      IER=70
      GO TO 151
C
 138  MSTORE(1,NEWITM)=MSTORE(1,J)
      MSTORE(2,NEWITM)=MSTORE(2,J)
      MSTORE(3,NEWITM)=MSTORE(3,J)
      MSTORE(4,NEWITM)=MSTORE(4,J)
      MSTORE(5,NEWITM)=7777
C        THIS VARIABLE WILL (LIKELY) BE NEEDED, BUT NOT AS A DIRECT
C        RETURN.
      MSTORE(6,NEWITM)=NECTAU
C***D     WRITE(KFILDO,139)(MSTORE(M,NEWITM),M=1,7)
C***D139  FORMAT(' LMSTR6 AT 139--(MSTORE(M,NEWITM),M=1,7)',7I10)
      MSTORE(7,NEWITM)=MSTORE(7,J)
C
C     MARK THE VARIABLE FOR SAVING IN LSTORE( , ). 
C 
      DO 140 M=1,LITEMS
      IF(LSTORE(1,M).NE.MSTORE(1,J).OR.
     1   LSTORE(2,M).NE.MSTORE(2,J).OR.
     2   LSTORE(3,M).NE.MSTORE(3,J).OR.
     3   LSTORE(4,M).NE.MSTORE(4,J))GO TO 140
C           THIS IS A MATCH.
      CALL UPDAT(NDATE,NECTAU,LDATE)
C***D     WRITE(KFILDO,1390)J,MITEMS,M,LITEMS,(LSTORE(I,M),I=1,4),
C***D    1         LSTORE(8,M),NDATE,NECTAU,LDATE
C***D1390 FORMAT(' LMSTR6 AT 1390--J,MITEMS,M,LITEMS,(LSTORE(I,M),I=1,4),',
C***D    1       'LSTORE(8,M),NDATE,NECTAU,LDATE'/
C***D    2       '         ',2I3,2I5,4I10,2I11,I4,I11)
      IF(LSTORE(8,M).NE.LDATE)GO TO 140
      LSTORE(11,M)=7777
      LSTORE(12,M)=-NECTAU
C        BELOW PRINT ADDED 2/27/00
C***D     WRITE(KFILDO,1395)(LSTORE(JJJ,M),JJJ=1,12)
C***D1395 FORMAT(/' AT 1395',12I10)
      GO TO 145
C
 140  CONTINUE
C
 145  CONTINUE
C
 150  CONTINUE
C
 151  MITEMS=NEWITM
C
C        THE LOOP BELOW IS TO SAVE DATA THAT MAY BE NEEDED.
C        IT CAN HAPPEN THAT AN ID IS FOUND ON AN INPUT
C        WHICH CAUSES IT TO READ BEYOND THE DATA NEEDED, 
C        AND BEYOND WHAT MAXTAU WILL INDICATE.  IT WAS
C        DISCOVERED IN U850 THAT THE OBSERVATIONAL VARIABLE
C        702000000 FOR HOUR 2 WAS ON A MOSARC "FORECAST" INPUT,
C        BUT THE DATA FOR 702000000 NEEDED WAS ON ANOTHER INPUT
C        (THE HOURLY DATA), SO THE MOSARC WAS READ UP TO THE
C        PROJECTION NEEDED FOR THE HOURLY DATA INPUT, EVEN
C        THOUGH MAXTAU WAS LATER CALCULATED TO BE ZERO
C        ACCORDING TO THE ACTUAL USE OF THE DATA.  THIS
C        LOOP ADDED 3/15/98.
C    
      DO 154 J=1,MITEMS
      DO 153 M=1,LITEMS
      DO 152 L=1,4
      IF(LSTORE(L,M).NE.MSTORE(L,J))GO TO 153
 152  CONTINUE
C        THERE IS A MATCH.  SET LSTORE(12,M) WHEN DATE
C        OF DATA IS PAST NDATE
C***D     WRITE(KFILDO,1525)LSTORE(12,M),LSTORE(8,M),NDATE
C***D1525 FORMAT(' AT 1525--LSTORE(12,M),LSTORE(8,M),NDATE',3I11)
      IF(LSTORE(12,M).EQ.0.AND.LSTORE(8,M).GT.NDATE)
     1   LSTORE(12,M)=LSTORE(8,M) 
 153  CONTINUE
 154  CONTINUE   

C        NOW MARK THE ITEMS IN LSTORE( , ) FOR DELETION.
C
      DO 160 L=1,LITEMS
C        BELOW PRINT ADDED 2/27/00
D     WRITE(KFILDO,155 )(LSTORE(JJJ,L),JJJ=1,12)
D155  FORMAT(/' AT 155',12I10)
      IF(LSTORE(12,L).GE.NRRDAT)GO TO 160
      IF(LSTORE(11,L).EQ.0.AND.LSTORE(12,L).EQ.0)THEN
         LSTORE(1,L)=0
      ELSEIF(LSTORE(12,L).LE.0.AND.-LSTORE(12,L).LT.INCCYL)THEN
C           THE LSTORE(12,L).LE.0 ADDED 3/15/98 FOR U850 AND
C           LT.INCCYL CHANGED TO LE.INCCYL; NOT OTHERWISE
C           CHECKED OUT.  (LE CHANGED BACK TO LT FOR U660,
C           4/10/98)
         LSTORE(1,L)=0
      ELSE
C           BELOW PRINT ADDED 7/1/00.
D        WRITE(KFILDO,1550)(LSTORE(JJJ,L),JJJ=1,12)
D1550    FORMAT(' AT 1550',12I10)
         LSTORE(12,L)=LSTORE(8,L)
C           THE LAST DATE FOR WHICH THE DATA WILL BE USED IS THE
C           DATE OF THE DATA.
      ENDIF
C        BELOW PRINT ADDED 2/27/00
C***D     WRITE(KFILDO,156)(LSTORE(JJJ,L),JJJ=1,12)
C***D156  FORMAT(/' AT 156',12I10)
C
 160  CONTINUE
C 
C***D     WRITE(KFILDO,167)((LSTORE(I,J),I=1,12),J=1,LITEMS)
C***D167  FORMAT(/' LSTORE ENDING LMSTR6'/('  ',3I10,I11,3I8,I12,3I8,I12))
C
C***D     WRITE(KFILDO,168)((MSTORE(I,J),I=1,7),J=1,MITEMS)
C***D168  FORMAT(/' MSTORE IN LMSTR6'/('  ',3I10,I11,I8,I12,I8))
C
      IF(NUMIN.EQ.0)GO TO 250
C
C        NEED TO EXTEND MAXIMUM TAU IN MAXTAU( ) TO ALL VALUES
C        OF IN.  THE SAME VALUES OF KFILIN( ) MUST HAVE THE SAME
C        VALUES OF MAXTAU( ).  THIS SEEMINGLY ELABORATE PROCESS
C        IS NECESSARY BECAUSE ONE OR MORE DATA SETS MAY HAVE 
C        SWITCHED BEFORE ALL DATA FROM DAY 1 (NDATE) HAVE BEEN 
C        READ.
C
      ISTART=1
      IEND=ISTART
C
 185  DO 190 J=ISTART,NUMIN-1
      IF(KFILIN(J).NE.KFILIN(J+1))GO TO 195
      IEND=J+1
 190  CONTINUE
C
 195  IF(IEND.LE.ISTART)GO TO 199
C
 196  MAXTMP=-1
C
      DO 197 J=ISTART,IEND
      MAXTMP=MAX(MAXTMP,MAXTAU(J))
 197  CONTINUE
C
      DO 198 J=ISTART,IEND
      MAXTAU(J)=MAXTMP
      IF(MAXTAU(J).LT.0)THEN
C
         IF(JFOPEN(J).EQ.1)THEN
            CLOSE(UNIT=KFILIN(J),IOSTAT=IOS,ERR=1975)
 1975       IF(IP23.NE.0)WRITE(IP23,1976)KFILIN(J),NDATE,NAMIN(J)
 1976       FORMAT(/' CLOSING FILE ON UNIT NO.',I3,
     1              ' PROCESSING DATE',I11,'    FILE = ',A60/
     2              29X,'A UNIT NUMBER NOT USED ON DAY 1 WILL',
     3              ' NOT BE AVAILABLE LATER.')
         ENDIF
C
         JFOPEN(J)=0
C
      ENDIF
C         
 198  CONTINUE
C
 199  ISTART=IEND+1
      IEND=ISTART
      IF(ISTART.EQ.NUMIN)GO TO 196
C        THE ABOVE TEST IN CASE ONLY ONE UNIT LEFT AND IT NEEDS
C        TO BE CLOSED.
      IF(ISTART.LT.NUMIN)GO TO 185
c
C        DROP THROUGH AT COMPLETION.  CLOSE ANY FILE NOT USED.
C
      DO 200 J=1,NUMIN
      IF(MAXTAU(J).LT.0)THEN
C
         IF(JFOPEN(J).EQ.1)THEN
            CLOSE(UNIT=KFILIN(J),IOSTAT=IOS,ERR=1995)
 1995       IF(IP23.NE.0)WRITE(IP23,1996)KFILIN(J),NDATE,NAMIN(J)
 1996       FORMAT(/' CLOSING FILE ON UNIT NO.',I3,
     1              ' PROCESSING DATE',I11,'    FILE = ',A60/
     2              29X,'A UNIT NUMBER NOT USED ON DAY 1 WILL',
     3              ' NOT BE AVAILABLE LATER.')
         ENDIF
C
         JFOPEN(J)=0
C
      ENDIF
C         
 200  CONTINUE
C
      WRITE(KFILDO,201)(J,J=1,NUMIN)
 201  FORMAT(/' MAXTAU BY INPUT UNIT NUMBER',
     1        ' (A MINUS VALUE MEANS FILE IS PROBABLY NOT NEEDED)'
     2       /(' ',30I4))
      IF(NUMIN.GT.30)WRITE(KFILDO,202)
C        IN CASE MORE THAN ONE LINE IS REQUIRED, INSERT BLANK LINE.
 202  FORMAT(' ')
      WRITE(KFILDO,203)(KFILIN(J),J=1,NUMIN)
      IF(NUMIN.GT.30)WRITE(KFILDO,202)
      WRITE(KFILDO,203)(MAXTAU(J),J=1,NUMIN)
 203  FORMAT(' ',30I4)
 250  RETURN
      END
