      SUBROUTINE TRPD(KFILDO,P,TERR,RMASK,NX,NY,
     1                CCALL,NAME,STALAT,STALON,NELEV,
     2                SDATA,DSAVE,EDSAVE,IXSAVE,JYSAVE,
     3                DIR,ND1,NSTA,ECONST,IER)
C 
C        JULY      2003   GLAHN   TDL   MOS-2000 
C
C        PURPOSE 
C            TO DO COMPUTATIONS FOR INTERPOLATION SUBROUTINE INTRPD.
C            TO FURNISH A VALUE AT EACH OF NSTA STATIONS FROM THE
C            CLOSEST GRIDPOINT TO THAT STATION WITHIN THE 4-GRIDPOINT
C            SQUARE IN WHICH THE STATION IS LOCATED SUCH THAT THE
C            GRIDPOINT:
C              1)  VALUE IS NOT MISSING (=9999.),
C              2)  IS NOT DEFINED AS UNUSABLE WITH A GRID MASK, AND
C              3)  IS NOT MORE THAN ECONST FT DIFFERENT IN ELEVATION
C                  FROM THE STATION.
C
C        DATA SET USE 
C            KFILDO - DEFAULT UNIT NUMBER FOR OUTPUT (PRINT) FILE.
C                     (OUTPUT) 
C 
C        VARIABLES 
C              KFILDO = DEFAULT UNIT NUMBER FOR OUTPUT (PRINT) FILE.
C                       (INPUT) 
C            P(IX,NY) = INPUT GRID FROM WHICH TO TAKE VALUES TO RETURN
C                       IN SDATA( ) (IX=1,NX) (JY=1,NY).  (INPUT)
C                  NX = THE X EXTENT OF THE GRID IN P( , ).  (INPUT)
C                  NY = THE Y EXTENT OF THE GRID IN P( , ).  (INPUT)
C         TERR(IX,JY) = TERRAIN FIELD READ FROM EXTERNAL RANDOM ACCESS
C                       (IX=1,NX) (JY=1,NY).  (INPUT) 
C        RMASK(IX,JY) = GRID MASK READ FROM EXTERNAL RANDOM ACCESS
C                       (IX=1,NX) (JY=1,NY).  A "1" MEANS THE POINT CAN
C                       BE USED; A "0" MEANS DON'T USE THE POINT.
C                       (INPUT) 
C          CCALL(K,J) = 8-CHARACTER STATION CALL LETTERS (OR GRIDPOINT
C                       LOCATIONS FOR GRID DEVELOPMENT) TO PROVIDE
C                       OUTPUT FOR (K=1,NSTA).  STATION DATA ARE KEYED
C                       TO THIS LIST.  (CHARACTER*8)  (INPUT)
C             NAME(K) = NAMES OF STATIONS (K=1,NSTA).  USED FOR PRINTOUT
C                       ONLY.  (CHARACTER*20)  (INPUT)
C           STALAT(K) = LATITUDE OF STATIONS (K=1,NSTA).  (NOT ACTUALLY
C                       (USED)  (INPUT)
C           STALON(K) = LONGITUDE OF STATIONS (K=1,NSTA).  (NOT ACTUALLY
C                       (USED)  (INPUT)
C            NELEV(K) = ELEVATION OF STATIONS (K=1,NSTA).  (INPUT)
C            SDATA(K) = "INTERPOLATED" DATA.  THESE ARE THE "CLOSEST"
C                       GRIDPOINT VALUES (SEE PURPOSE) (K=1,NSTA).  (OUTPUT)
C            DSAVE(K) = THE DISTANCE FROM THE STATION TO THE GRIDPOINT 
C                       USED FOR DATA RETURNED IN SDATA(K) IN 
C                       GRIDLENGTHS.  USED FOR /D PRINTING ONLY.
C                       (INTERNAL) 
C           EDSAVE(K) = THE ELEVATION DIFFERENCE BETWEEN THE STATION
C                       AND THE GRIDPOINT USED FOR DATA RETURNED IN 
C                       SDATA(K).  USED FOR /D PRINTING ONLY.  (INTERNAL) 
C           IXSAVE(K) = THE IX POSITION FOR EACH STATION OF THE GRID
C                       VALUE RETURNED IN SDATA(K) IN THE IX DIRECTION.
C                       USED FOR /D PRINTING ONLY.  (INTERNAL) 
C           JYSAVE(K) = THE JY POSITION FOR EACH STATION OF THE GRID
C                       VALUE RETURNED IN SDATA(K) IN THE JY DIRECTION.
C                       USED FOR /D PRINTING ONLY.  (INTERNAL) 
C            DIR(K,J) = THE IX (J=1) AND JY (J=2) POSITIONS ON THE GRID
C                       FOR THE STATION K (K=1,NSTA).
C                       (INPUT)
C                 ND1 = MAXIMUM NUMBER OF STATIONS THAT CAN BE DEALT WITH.
C                       DIMENSION OF SEVERAL VARIABLES.  (INPUT)
C                NSTA = NUMBER OF STATIONS OR LOCATIONS BEING DEALT WITH.
C                       (INPUT)
C              ECONST = THE VALUE IN FT WHICH WHEN THE DIFFERENCE OF 
C                       THE ELEVATION OF THE STATION AND THE ELEVATION
C                       OF THE GRIDPOINT EXCEEDS, THE GRIDPOINT VALUE
C                       WILL NOT BE USED.  SET BY DATA STATEMENT.
C                       (INPUT)
C                 IER = STATUS RETURN.
C                         0 = GOOD RETURN.
C                       (OUTPUT)
C            XIADD(J) = VALUES ASSOCIATED WITH GRIDPOINTS SURROUNDING
C                       THE STATION IN ORDER: UR, LR, LL, UL TO AID
C                       IN DETERMINING THE CLOSEST GRIDPOINT IN THE IX
C                       DIRECTION (J=1,4).  THIS ELIMINATES HAVING
C                       4 SECTIONS OF ESSENTIALLY DUPLICATIVE CODE. 
C                       VALUES SET BY DATA STATEMENT.  (INTERNAL) 
C            YJADD(J) = ESSENTIALLY THE SAME AS XIADD( ), EXCEPT IN THE
C                       JY DIRECTION.  (INTERNAL)
C        1         2         3         4         5         6         7 X
C
C        NONSYSTEM SUBROUTINES CALLED 
C            NONE
C
      CHARACTER*8 CCALL(ND1)
      CHARACTER*20 NAME(ND1)
C
      DIMENSION SDATA(ND1),STALAT(ND1),STALON(ND1),
     1          NELEV(ND1),IXSAVE(ND1),JYSAVE(ND1),
     1          EDSAVE(ND1),DSAVE(ND1)
      DIMENSION DIR(ND1,2)
      DIMENSION P(NX,NY),TERR(NX,NY),RMASK(NX,NY)
      DIMENSION XIADD(4),YJADD(4)
C
      DATA XIADD/1.,1.,0.,0./,
     1     YJADD/1.,0.,0.,1./
C
D     WRITE(KFILDO,100)
D100  FORMAT(/,' ENTERING TRPD')
C
      IER=0
C  
C        LOOP OVER NSTA STATIONS TO FIND VALUES FROM P( , ) TO PUT
C        IN SDATA( ).  THIS HAS TO BE DONE FOR EACH INPUT GRID IN
C        P( , ) BECAUSE THE VALUE AT THE GRIDPOINT COULD BE MISSING;
C        NOT LIKELY TO BE DIFFERENT FOR DIFFERENT GRIDS, PUT
C        POSSIBLE.  THEN THE NEAREST POINT MIGHT BE DIFFERENT
C        GRIDPOINT.
C
      DO 200 K=1,NSTA
         SDATA(K)=9999.
         DSAVE(K)=9999.
         EDSAVE(K)=9999.
         IXSAVE(K)=9999
         JYSAVE(K)=9999
C
         DO 190 J=1,4
            IX=DIR(K,1)+XIADD(J)
            JY=DIR(K,2)+YJADD(J)
C              IX AND JY ARE TRUNCATED, NOT ROUNDED, VALUES.
D           WRITE(KFILDO,120)K,J,IX,JY,P(IX,JY),RMASK(IX,JY),
D    1          TERR(IX,JY),NELEV(K)
D120        FORMAT(' IN TRPD AT 120--K,J,IX,JY,P(IX,JY),RMASK(IX,JY)',
D    1             'TERR(IX,JY),NELEV(K)',
D    2             4I6,F9.3,F4.0,F9.0,I6)
            IF(P(IX,JY).EQ.9999.)GO TO 190
C              A MISSING GRIDPOINT VALUE CANNOT BE USED.
            IF(RMASK(IX,JY).EQ.0.)GO TO 190
C              THE GRID MASK INDICATES A POINT TO NOT USE.
            EDIF=ABS(NELEV(K)-TERR(IX,JY))
            IF(EDIF.GT.ECONST)GO TO 190
C              THE ELEVATION DIFFERENCE IS EXCEEDED.
C
            DSQ=(DIR(K,1)-IX)**2+(DIR(K,2)-JY)**2
C              DSQ IS THE DISTANCE SQUARED BETWEEN THE GRIDPOINT
C              BEING CONSIDERED AND THE STATION BEING CONSIDERED.
C
            IF(DSQ.LT.DSAVE(K))THEN
C                 THIS ONE IS CLOSER, SO SAVE IT AND ASSOCIATED DATA.
               DSAVE(K)=DSQ
               IXSAVE(K)=IX
               JYSAVE(K)=JY
               SDATA(K)=P(IX,JY)
               EDSAVE(K)=EDIF
            ENDIF
C
 190     CONTINUE
C   
 200  CONTINUE
C
C        COMPUTE DISTANCE FROM EACH STATION TO THE GRIDPOINT
C        USED, IF /D PRINT IS TO BE DONE.
C
D     DO 210 K=1,NSTA
D        IF(DSAVE(K).NE.9999.)DSAVE(K)=SQRT(DSAVE(K))
D210  CONTINUE
C
D     WRITE(KFILDO,220)(K,CCALL(K),NAME(K),DIR(K,1),DIR(K,2),
D    1        IXSAVE(K),JYSAVE(K),DSAVE(K),EDSAVE(K),SDATA(K),K=1,NSTA)
D220  FORMAT(/' FROM TRPD,    K  CCALL(K)      NAME           ',
D    1        '   DIR(K,1)  DIR(K,2)',
D    1        '  IXSAVE  JYSAVE  DSAVE   EDSAVE   SDATA'/
D    2       ('            'I4,2X,A8,2X,A20,F10.2,F10.2,I8,I8,
D    3         F7.2,F9.0,F8.2))
C
      RETURN
      END
