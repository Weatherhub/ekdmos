      SUBROUTINE TESFC(KFILDO,KFIL10,KFILRA,RACESS,NUMRA,IDPARS,JD,
     1                 NDATE,NSLAB,IPACK,IWORK,THETAE,ND5,
     2                 LSTORE,ND9,LITEMS,CORE,ND10,NBLOCK,NFETCH,
     3                 IS0,IS1,IS2,IS4,ND7,
     4                 FDELV,FDTMP,FDDEW,FDSLP,ND2X3,
     5                 ISTAV,L3264B,MISTOT,IER)
C
C        NOVEMBER 2004  CHARBA  MDL  MOS 2000                      
C        MAY      2005  CHARBA  IMPROVED DOCUMENTATION
C        JUNE     2005  CHARBA  CHANGED INGEST OF LAMP TOPO GRID
C	  			FROM SEQUENTIAL FILE TO RANDOM ACCESS 
C				(CONSTANT) FILE.
C	 AUGUST   2005  CHARBA  CHANGED TO ACCOMMODATE NEW ID(1) FOR 
C				TERRAIN GRID INGEST.  PREVIOUSLY, DD WAS
C				MISTAKENLY SET TO 05.  IN THE NEW ID(1)
C				THE DD VALUE IS 00. 
C        MAY      2006  CHARBA  MADE COSMETIC CHANGES TO ACCOMMODATE 
C                               CODE WALK-THRU.
C        JULY     2006  CHARBA  CHANGED 9999 TO 9998.5 IN CALL TO 
C                               SMTH9V.
C
C        PURPOSE 
C            TO COMPUTE THETAE AT THE SURFACE USING TEMPERATURE, 
C            DEWPOINT, MEAN SEA LEVEL PRESSURE AND TERRAIN.  COMPUTED 
C	     THETAE FIELD IS VERY LIGHTLY SMOOTHED WITH A 9-PT WEIGHTED 
C	     SMOOTHER TO REMOVE FINE-SCALE SPATIAL/COMPUTATIONAL NOISE.
C
C            THE FOLLOWING IDPARS(1) AND IDPARS(2) ARE ACCOMMODATED:
C	         003  132   LAMP SURFACE THETAE 
C
C        DATA SET USE 
C            KFILDO - DEFAULT UNIT NUMBER FOR OUTPUT (PRINT) FILE. 
C		      (OUTPUT) 
C            KFIL10 - UNIT NUMBER OF TDL MOS-2000 FILE SYSTEM ACCESS.
C                     (INPUT-OUTPUT) 
C 
C        VARIABLES 
C              KFILDO = DEFAULT UNIT NUMBER FOR OUTPUT (PRINT) FILE. 
C		        (INPUT) 
C              KFIL10 = UNIT NUMBER OF TDL MOS-2000 FILE SYSTEM ACCESS.
C                       (INPUT)
C           KFILRA(J) = UNIT NUMBERS FOR RANDOM ACCESS FILES 
C	                (J=1,NUMRA).  (INPUT)
C           RACESS(J) = NAMES OF RANDOM ACCESS FILES (J=1,NUMRA).  
C		        (INPUT/CHARACTER*60)
C	        NUMRA = NUMBER OF RANDOM ACCESS FILES.  (INPUT)
C           IDPARS(J) = THE PARSED, INDIVIDUAL COMPONENTS OF THE PRE-
C	 		DICTOR ID CORRESPONDING TO ID( ) (J=1,15).
C                       (INPUT)
C                       J=1--CCC (CLASS OF VARIABLE),
C                       J=2--FFF (SUBCLASS OF VARIABLE),
C                       J=3--B (BINARY INDICATOR),
C                       J=4--DD (DATA SOURCE, MODEL NUMBER),
C                       J=5--V (VERTICAL APPLICATION),
C                       J=6--LBLBLBLB (BOTTOM OF LAYER, 0 IF ONLY 1 
C			     LAYER),
C                       J=7--LTLTLTLT (TOP OF LAYER),
C                       J=8--T (TRANSFORMATION),
C                       J=9--RR (RUN TIME OFFSET, ALWAYS + AND BACK IN 
C			     TIME),
C                       J=10--OT (TIME APPLICATION),
C                       J=11--OH (TIME PERIOD IN HOURS),
C                       J=12--TAU (PROJECTION IN HOURS),
C                       J=13--I (INTERPOLATION TYPE),
C                       J=14--S (SMOOTHING INDICATOR), AND
C                       J=15--G (GRID INDICATOR).
C               JD(J) = THE BASIC INTEGER PREDICTOR ID (J=1,4).
C                       THIS IS THE SAME AS ID(J), EXCEPT THAT THE POR-
C			TIONS PERTAINING TO PROCESSING ARE OMITTED:
C                       B = IDPARS(3),
C                       T = IDPARS(8),
C                       I = IDPARS(13),
C                       S = IDPARS(14),
C                       G = IDPARS(15), AND
C                       THRESH.
C                       JD( ) IS USED TO HELP IDENTIFY THE BASIC MODEL 
C			FIELDS
C                       AS READ FROM THE ARCHIVE.  (INPUT)
C               NDATE = THE DATE/TIME FOR WHICH PREDICTOR IS NEEDED.  
C			(INPUT)
C               NSLAB = RETURNED FROM GFETCH AS THE VALUE STORED IN
C                       LSTORE(10, ) FOR THE HEIGHTS, WHEN THE HEIGHTS
C                       HAVE BEEN CORRECTLY RETURNED.  WHEN IER NE 0, 
C			THIS VALUE SHOULD NOT BE USED.  (OUTPUT) 
C            IPACK(J) = WORK ARRAY (J=1,ND5).  (INTERNAL)
C            IWORK(J) = WORK ARRAY (J=1,ND5).  (INTERNAL)
C           THETAE(K) = THETAE CALCULATED AT THE SURFACE USING TERRAIN 
C			ELEVATION, TEMPERATURE, DEW POINT AND, MEAN SEA
C		        LEVEL PRESSURE (K=1,ND5).  (OUTPUT)
C		  ND5 = DIMENSION OF IPACK( ),IWORK( ), AND THETAE( ).
C			(INPUT)
C         LSTORE(L,J) = THE ARRAY HOLDING INFORMATION ABOUT THE DATA 
C                       STORED (L=1,12) (J=1,LITEMS).  (INPUT-OUTPUT)
C                       L=1,4--THE 4 ID'S FOR THE DATA.
C                       L=5  --LOCATION OF STORED DATA.  WHEN IN CORE,
C                              THIS IS THE LOCATION IN CORE( ) WHERE
C                              THE DATA START.  WHEN ON DISK, 
C                              THIS IS MINUS THE RECORD NUMBER WHERE 
C                              THE DATA START.
C                       L=6  --THE NUMBER OF 4-BYTE WORDS STORED.
C                       L=7  --2 FOR DATA PACKED IN TDL GRIB, 1 FOR NOT.
C                       L=8  --THE DATE/TIME OF THE DATA IN FORMAT
C                              YYYYMMDDHH.
C                       L=9  --NUMBER OF TIMES DATA HAVE BEEN RETRIEVED.
C                       L=10 --NUMBER OF THE SLAB IN DIR( , ,L) AND
C                              IN NGRIDC( ,L) DEFINING THE CHARACTERIS-
C			       TICS OF THIS GRID.
C                       L=11 --THE NUMBER OF THE PREDICTOR IN THE SORTED
C                              LIST IN ID( ,N) (N=1,NPRED) FOR WHICH 
C			       THIS VARIABLE IS NEEDED, WHEN IT IS NEED-
C			       ED ONLY ONCE FROM LSTORE( , ).  WHEN IT 
C			       IS NEEDED MORE THAN ONCE, THE VALUE IS 
C			       SET = 7777.
C                       L=12 --USED INITIALLY IN ESTABLISHING 
C			       MOSTORE( , ).
C                              LATER USED AS A WAY OF DETERMINING WHE-
C			       THER TO KEEP THIS VARIABLE.
C                 ND9 = THE SECOND DIMENSION OF LSTORE( , ).  (INPUT)
C              LITEMS = THE NUMBER OF ITEMS (COLUMNS) IN LSTORE( , ) 
C			THAT HAVE BEEN USED IN THIS RUN.  (INPUT)
C             CORE(J) = THE ARRAY TO STORE OR RETIREVE THE DATA IDENTI-
C			FIED IN LSTORE( , ) (J=1,ND10).  WHEN CORE( ) IS
C		        FULL DATA ARE STORED ON DISK.  (INPUT)
C                ND10 = DIMENSION OF CORE( ).  (INPUT)
C              NBLOCK = THE BLOCK SIZE IN WORDS OF THE MOS-2000 RANDOM
C                       DISK FILE.  (INPUT)
C              NFETCH = INCREMENTED EACH TIME GFETCH IS ENTERED.
C                       IT IS A RUNNING  COUNT FROM THE BEGINNING OF THE
C                       PROGRAM.  THIS COUNT IS MAINTAINED IN CASE THE 
C			USER NEEDS IT (DIAGNOSTICS, ETC.).  (OUTPUT)
C              IS0(J) = MOS-2000 GRIB SECTION 0 ID'S (J=1,3).  
C			(INTERNAL)
C              IS1(J) = MOS-2000 GRIB SECTION 1 ID'S (J=1,22+).  
C			(INTERNAL)
C              IS2(J) = MOS-2000 GRIB SECTION 2 ID'S (J=1,12).
C                       IS2(3) AND IS2(4) ARE USED BY THE CALLING
C                       PROGRAM AS THE GRID DIMENSIONS.  (INTERNAL-
C		        OUTPUT)
C              IS4(J) = MOS-2000 GRIB SECTION 4 ID'S (J=1,4).  
C			(INTERNAL)
C                 ND7 = DIMENSION OF IS0( ), IS1( ), IS2( ), AND IS4( ).
C                       NOT ALL LOCATIONS ARE USED.  (INPUT)
C            FDELV(K) = WORK ARRAY TO HOLD THE TERRAIN ELEVATION
C                       (K=1,ND2X3).  (INTERNAL)
C            FDTMP(K) = WORK ARRAY TO HOLD THE TEMPERATURE
C                       (K=1,ND2X3).  (INTERNAL)
C            FDDEW(K) = WORK ARRAY TO HOLD THE DEW POINT   
C                       (K=1,ND2X3).  (INTERNAL)
C            FDSLP(K) = WORK ARRAY TO HOLD THE MEAN SEA LEVEL PRESSURE
C                       (K=1,ND2X3).  (INTERNAL)
C               ND2X3 = DIMENSION OF SEVERAL VARIABLES.  THE SIZE OF THE
C                       GRID IS NOT KNOWN BEFORE THE HEIGHTS ARE
C                       FETCHED.  (INPUT)
C               ISTAV = SET TO 0 TO INDICATE A GRID FIELD IS BEING RE-
C                       TURNED. (OUTPUT).
C              L3264B = INTEGER WORD LENGTH IN BITS OF MACHINE BEING 
C			USED (EITHER 32 OR 64).  (INPUT)
C              MISTOT = TOTAL NUMBER OF TIMES A MISSING INDICATOR
C                       HAS BEEN ENCOUNTERED IN UNPACKING GRIDS.
C                       (INPUT-OUTPUT)
C                 IER = STATUS RETURN.
C                         0 = GOOD RETURN.
C                       103 = IDPARS(1) AND IDPARS(2) NOT ACCOMMODATED.
C                       SEE GFETCH AND CONSTG FOR OTHER VALUES. 
C                       (INTERNAL-OUTPUT)
C                       WHEN IER NE 0, DATA ARE RETURNED AS MISSING.
C              NTIMES = THE NUMBER OF TIMES, INCLUDING THIS ONE, THAT 
C			THE RECORD HAS BEEN FETCHED.  THIS IS STORED IN
C                       LSTORE(9, ).  (INTERNAL)
C               LD(J) = HOLDS THE 4 ID WORDS OF THE DATA RETRIEVED FROM
C			INTERNAL AND EXTERNAL STORAGE (J=1,4).  
C			(INTERNAL)
C          ICCCFFF(J) = ID(1)'s OF VARIABLES TO FETCH (J=1,4).
c			(INTERNAL)
C               MISSP = PRIMARY MISSING VALUE INDICATOR.  RETURNED AS 
C			ZERO WHEN DATA ARE NOT PACKED.  (INTERNAL)
C               MISSS = SECONDARY MISSING VALUE INDICATOR.  RETURNED AS
C		        ZERO WHEN DATA ARE NOT PACKED.  (INTERNAL)
C 
C        NONSYSTEM SUBROUTINES CALLED 
C            GFETCH, CONSTG, SMTH9V
C
      CHARACTER*60 RACESS(NUMRA)
C      
      DIMENSION IDPARS(15),JD(4),LD(4),KFILRA(NUMRA)
      DIMENSION FDELV(ND2X3),FDTMP(ND2X3),FDDEW(ND2X3),FDSLP(ND2X3)
      DIMENSION THETAE(ND5),IPACK(ND5),IWORK(ND5)
      DIMENSION IS0(ND7),IS1(ND7),IS2(ND7),IS4(ND7)
      DIMENSION LSTORE(12,ND9)
      DIMENSION CORE(ND10)
      DIMENSION ICCCFFF(4)
C 	 
C	 CHECK WHETHER THIS ROUTINE APPLIES TO ID(1).
C
      IF(IDPARS(1).EQ.003.AND.IDPARS(2).EQ.132) GO TO 30
C
      WRITE(KFILDO,20) JD
 20   FORMAT(/,' **** VARIABLE ',I9.9,2I10.9,I4.3,' CANNOT BE COMPU',
     1         'TED IN TESFC ...SET IER=103 AND SUPPLY MISSING VALUES')
      IER=103
      GO TO 800   
C
C        ID(1) FOR TERRAIN, TEMP, DEWPOINT, AND SL PRESSURE.
C
 30   ICCCFFF(1)=409020                              
      ICCCFFF(2)=002301
      ICCCFFF(3)=003301
      ICCCFFF(4)=001201
C
D     CALL TIMPR(KFILDO,KFILDO,'START TESFC         ')
      IER=0
      ISTAV=0
C
C	 FETCH GRID TERRAIN (FROM GRID CONSTANT FILE) INTO FDELV( ).
C	 MUST FIRST FIND THE UNIT NUMBER AND NAME OF THE RANDOM ACCESS
C	 FILE.  NOTE:  ND2X3 IS SUFFICIENT FOR DIMENSIONS OF ARRAYS 
C        PASSED TO CONSTG SINCE THE TERRAIN FETCHED IS ON THE 80-KM GFS 
C        GRID.
C
      LD(1)=ICCCFFF(1)*1000
      LD(2)=0
      LD(3)=0
      LD(4)=0
C
      DO 35 J=1,NUMRA
         IF(KFILRA(J).EQ.44) THEN
            CALL CONSTG(KFILDO,KFILRA(J),RACESS(J),LD,
     1                  IPACK,IWORK,FDELV,ND2X3,
     2                  IS0,IS1,IS2,IS4,ND7,
     3                  ISTAV,L3264B,IER)
            IF(IER.NE.0)GO TO 800
            NWORDS=IS2(3)*IS2(4)
            GO TO 50
         ENDIF
 35   CONTINUE
C
C        TERRAIN GRID CONSTANT FILE MISSING.  MISSING VALUES SUPPLIED 
C        FOR THETAE.
C
      WRITE(KFILDO,40)
 40   FORMAT('**** RANDOM ACCESS GRID CONSTANT FILE WITH UNIT = 44 IS ',
     1       'MISSING IN TESFC ...SUPPLY MISSING VALUES FOR SFC THETAE')
      GO TO 800
C
C	 FETCH SURFACE TEMP
C
 50   LD(1)=ICCCFFF(2)*1000+IDPARS(4)
      LD(2)=JD(2)
      LD(3)=IDPARS(9)*1000000+IDPARS(12)+IDPARS(11)
      LD(4)=0
C
      CALL GFETCH(KFILDO,KFIL10,LD,7777,LSTORE,ND9,LITEMS,
     1            IS0,IS1,IS2,IS4,ND7,IPACK,IWORK,FDTMP,ND2X3,
     2            NWORDS,NPACK,NDATE,NTIMES,CORE,ND10,
     3            NBLOCK,NFETCH,NSLAB,MISSP,MISSS,L3264B,1,IER)
      IF(MISSP.NE.0)MISTOT=MISTOT+1
      IF(IER.NE.0)GO TO 800
C
C	 FETCH SURFACE DEWPOINT
C
      LD(1)=ICCCFFF(3)*1000+IDPARS(4)
      LD(2)=JD(2)
      LD(3)=IDPARS(9)*1000000+IDPARS(12)+IDPARS(11)
      LD(4)=0
C
      CALL GFETCH(KFILDO,KFIL10,LD,7777,LSTORE,ND9,LITEMS,
     1            IS0,IS1,IS2,IS4,ND7,IPACK,IWORK,FDDEW,ND2X3,
     2            NWORDS,NPACK,NDATE,NTIMES,CORE,ND10,
     3            NBLOCK,NFETCH,NSLAB,MISSP,MISSS,L3264B,1,IER)
      IF(MISSP.NE.0)MISTOT=MISTOT+1
      IF(IER.NE.0)GO TO 800
C
C	 FETCH SL PRESSURE
C
      LD(1)=ICCCFFF(4)*1000+IDPARS(4)
      LD(2)=0
      LD(3)=IDPARS(9)*1000000+IDPARS(12)+IDPARS(11)
      LD(4)=0
C
      CALL GFETCH(KFILDO,KFIL10,LD,7777,LSTORE,ND9,LITEMS,
     1            IS0,IS1,IS2,IS4,ND7,IPACK,IWORK,FDSLP,ND2X3,
     2            NWORDS,NPACK,NDATE,NTIMES,CORE,ND10,
     3            NBLOCK,NFETCH,NSLAB,MISSP,MISSS,L3264B,1,IER)
      IF(MISSP.NE.0)MISTOT=MISTOT+1
      IF(IER.NE.0)GO TO 800
C
C	 COMPUTE THETAE AT MSL ...NO CHECKS FOR MISSING.
C
      F=5./9.
C
      DO 100 J=1,NWORDS
        IF(FDDEW(J).GT.FDTMP(J))FDDEW(J)=FDTMP(J)
C            NOTE: 273.16 SHOULD BE 273.15, ACCORDING TO MOS2000 NOTES.
C            SINCE 273.16 WAS USED FOR DEVELOPMENT, RETAIN IT IN OPERA-
C            TIONS FOR CONSISTENCY.
        TMP=F*(FDTMP(J)-32.)+273.16+FDELV(J)*.00976
        DEW=F*(FDDEW(J)-32.)+273.16+FDELV(J)*.0017
        P1=FDSLP(J)/10.
        V=.61078*2.71828**((17.269*(DEW-273.16))/(DEW-35.86))
        THETA=TMP*(100./(P1-V))**.286
        Q=.622*(V/(P1-V))
        HL=596.73-.601*(TMP-273.16)
        THETAE(J)=THETA*2.71828**((HL*Q)/(TMP*.238))
 100  CONTINUE
C
C	 SMOOTH THE THETAE GRID.
C
      CALL SMTH9V(THETAE,IS2(3),IS2(4),0.4,IWORK,9998.5)
C
      GO TO 900
C
C        SET OUTPUT FIELD TO MISSING WHEN AN ERROR HAS OCCURRED.
C
 800  DO 801 J=1,ND5
      THETAE(J)=9999.
 801  CONTINUE
C
 900  RETURN
      END      
