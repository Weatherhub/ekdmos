      SUBROUTINE DIFFV(KFILDO,KFIL10,
     1                 ID,IDPARS,JD,ITAU,NDATE,MDATE,XDATA,ND1,NSTA,
     2                 IPACK,IWORK,DATA,ND5,
     3                 LSTORE,ND9,LITEMS,CORE,ND10,
     4                 NBLOCK,NFETCH,
     5                 IS0,IS1,IS2,IS4,ND7,
     6                 ISTAV,L3264B,IER)
C 
C        AUGUST    1998   GLAHN   TDL   MOS-2000
C        OCTOBER   1998   GLAHN   ISTAV ADDED TO CALL; LASTL, LASTD,
C                                 NSTORE REMOVED; PLUS OTHER CHANGES
C        APRIL     1999   GLAHN   MDATE ADDED TO CALL WITH CODE CHANGES
C        MARCH     2000   DALLAVALLE   MODIFIED FORMAT STATEMENTS TO
C                                 CONFORM TO FORTRAN 90 STANDARDS
C                                 ON IBM SP
C        FEBRUARY  2004   GLAHN   MODIFIED TO BE MORE GENERIC FOR
C                                 NON-AEV DATA; ASSUMES BINARY 
C                                 VARIABLES NOT INVOLVED
C        JULY      2004   SHAFER  MODIFIED TO BE MORE GENERIC    
C        JANUARY   2006   GORLINE ADDED ID FOR GFS MOS DEWPOINT  
C        FEBRUARY  2006   DAGOSTARO   ADDED COMMENT ABOUT ROUNDING AND
C                                 UNIT CONVERSION OF DATA
C
C        PURPOSE 
C            TO COMPUTE THE DIFFERENCE OR ABSOLUTE DIFFERENCE OF TWO
C            VARIABLES.  IN THIS CASE THE TWO VARIABLES ARE A
C            FORECAST AND AN OBSERVATION DEFINED IN ITABLE. 
C
C            (1) FORECAST ISSUED ON DATE = NDATE - RR + ITAU
C            (2) OBSERVATION VALID AT NDATE - RR + ITAU + IDPARS(12)
C
C            NOTE, HOWEVER, THAT FOR SOME MODELS AND WEATHER ELEMENTS,
C            THE OBSERVATION TIME IS ADJUSTED BY 6 HOURS.  FOR EXAMPLE,
C            AN NGM MOS MAX TEMP FORECAST LABELED "24-H" IS COMPARED TO
C            AN OBSERVATION LABELED "30-H".
C
C            THE OPERATION IS CONTROLLED BY X IN IDPARS(CXC):
C
C            8 = ALGEBRAIC DIFFERENCE (1)-(2)
C            9 = ABSOLUTE  DIFFERENCE (1)-(2)
C
C            ***IMPORTANT NOTES***:  SINCE THIS SUBROUTINE IS REACHED
C            VIA OPTX, NOT DIRECTLY THROUGH U850, IT DOESN'T ROUND FORE-
C            CASTS OR OBS PRIOR TO COMPUTING THE ALGEBRAIC OR ABSOLUTE
C            DIFFERENCE, AS IS DONE IN OTHER U850-RELATED SUBROUTINES.
C            THE USER MUST PROVIDE ROUNDED FORECASTS AND/OR OBS IN THE 
C            APPROPRIATE UNITS IN THE INPUT DATA FILE(S), AS UNIT
C            CONVERSION ISN'T DONE EITHER.
C
C            POSSIBLE MISSING VALUES OF 9999. ARE TREATED AS 
C            MISSING = 9999.  VECTOR DATA FROM THE MOS-2000 INTERNAL
C            STORAGE SYSTEM WILL BE UNPACKED, WILL BE IN THE ORDER
C            NEEDED.  DIFFV ASSUMES THERE WILL BE NO SECONDARY
C            MISSING VALUES OF 9997.
C
C        DATA SET USE 
C            KFILDO - DEFAULT UNIT NUMBER FOR OUTPUT (PRINT) FILE.
C                     (OUTPUT) 
C            KFIL10 - UNIT NUMBER OF TDL MOS-2000 FILE SYSTEM ACCESS.
C                     (INPUT-OUTPUT) 
C 
C        VARIABLES 
C              KFILDO = DEFAULT UNIT NUMBER FOR OUTPUT (PRINT) FILE.
C                       (INPUT) 
C              KFIL10 = UNIT NUMBER OF TDL MOS-2000 FILE SYSTEM 
C                       ACCESS.  (INPUT)
C               ID(J) = THE PREDICTOR ID (J=1,4).  (INPUT)
C           IDPARS(J) = THE PARSED, INDIVIDUAL COMPONENTS OF THE 
C                       PREDICTOR ID CORRESPONDING TO ID( ) (J=1,15).
C                       (INPUT)
C                       J=1--CCC (CLASS OF VARIABLE),
C                            C8C = ALGEBRAIC DIFFERENCE,
C                            C9C = ABSOLUTE DIFFERENCE,
C                       J=2--FFF (SUBCLASS OF VARIABLE),
C                       J=3--B (BINARY INDICATOR),
C                       J=4--DD (DATA SOURCE, MODEL NUMBER),
C                       J=5--V (VERTICAL APPLICATION),
C                       J=6--LBLBLBLB (BOTTOM OF LAYER, 0 IF ONLY 
C                            1 LAYER),
C                       J=7--LTLTLTLT (TOP OF LAYER),
C                       J=8--T (TRANSFORMATION),
C                       J=9--RR (RUN TIME OFFSET, ALWAYS + AND BACK IN 
C                            TIME),
C                       J=10--O (TIME APPLICATION),
C                       J=11--HH (TIME PERIOD IN HOURS),
C                       J=12--TAU (PROJECTION IN HOURS),
C                       J=13--I (INTERPOLATION TYPE),
C                       J=14--S (SMOOTHING INDICATOR), AND
C                       J=15--G (GRID INDICATOR).
C               JD(J) = THE BASIC INTEGER PREDICTOR ID (J=1,4).
C                       THIS IS THE SAME AS ID(J), EXCEPT THAT THE
C                       PORTIONS PERTAINING TO PROCESSING ARE OMITTED:
C                       B = IDPARS(3),
C                       T = IDPARS(8),
C                       I = IDPARS(13),
C                       S = IDPARS(14),
C                       G = IDPARS(15), AND
C                       THRESH.
C                       JD( ) IS USED TO IDENTIFY THE BASIC MODEL FIELDS
C                       AS READ FROM THE ARCHIVE.  (INPUT)
C                ITAU = THE NUMBER OF HOURS TO BE ADDED TO NDATE
C                       FOR THE DATE OF THE FIRST VARIABLE.  (INPUT)
C               NDATE = THE DATE/TIME FOR WHICH PREDICTOR IS NEEDED.
C                       (INPUT)
C               MDATE = NDATE UPDATED WITH ITAU (NOT USED)  (INPUT)
C            XDATA(K) = COMPUTED VARIABLE IS RETURNED IN XDATA( )
C                       (K=1,NSTA).  (OUTPUT)
C                 ND1 = MAXIMUM NUMBER OF STATIONS THAT CAN BE DEALT 
C                       WITH.  DIMENSION OF XDATA( ).  (INPUT)
C                NSTA = NUMBER OF STATIONS OR LOCATIONS BEING DEALT
C                       WITH.  (INPUT)
C            IPACK(J) = WORK ARRAY (J=1,ND5).  (INTERNAL)
C            IWORK(J) = WORK ARRAY (J=1,ND5).  (INTERNAL)
C             DATA(J) = WORK ARRAY (J=1,ND5).  (INTERNAL)
C                 ND5 = DIMENSION OF IPACK( ), IWORK( ), AND DATA( ).
C                       (INPUT)
C         LSTORE(L,J) = THE ARRAY HOLDING INFORMATION ABOUT THE DATA 
C                       STORED (L=1,12) (J=1,LITEMS).  (INPUT-OUTPUT)
C                       L=1,4--THE 4 ID'S FOR THE DATA.
C                       L=5  --LOCATION OF STORED DATA.  WHEN IN CORE,
C                              THIS IS THE LOCATION IN CORE( ) WHERE
C                              THE DATA START.  WHEN ON DISK, 
C                              THIS IS MINUS THE RECORD NUMBER WHERE 
C                              THE DATA START.
C                       L=6  --THE NUMBER OF 4-BYTE WORDS STORED.
C                       L=7  --2 FOR DATA PACKED IN TDL GRIB, 1 FOR NOT.
C                       L=8  --THE DATE/TIME OF THE DATA IN FORMAT
C                              YYYYMMDDHH.
C                       L=9  --NUMBER OF TIMES DATA HAVE BEEN RETRIEVED.
C                       L=10 --NUMBER OF THE SLAB IN DIR( , ,L) AND
C                              IN NGRIDC( ,L) DEFINING THE 
C                              CHARACTERISTICS OF THIS GRID.
C                       L=11 --THE NUMBER OF THE PREDICTOR IN THE SORTED
C                              LIST IN ID( ,N) (N=1,NPRED) FOR WHICH 
C                              THIS VARIABLE IS NEEDED, WHEN IT IS 
C                              NEEDED ONLY ONCE FROM LSTORE( , ). 
C                              WHEN IT IS NEEDED MORE THAN ONCE, THE 
C                              VALUE IS SET = 7777.
C                       L=12 --USED INITIALLY IN ESTABLISHING 
C                              MOSTORE( , ).  LATER USED AS A WAY OF
C                              DETERMINING WHETHER TO KEEP THIS 
C                              VARIABLE.
C                 ND9 = THE SECOND DIMENSION OF LSTORE( , ).  (INPUT)
C              LITEMS = THE NUMBER OF ITEMS (COLUMNS) IN LSTORE( , )
C                       THAT HAVE BEEN USED IN THIS RUN.  (INPUT)
C             CORE(J) = THE ARRAY TO STORE OR RETIREVE THE DATA 
C                       IDENTIFIED IN LSTORE( , ) (J=1,ND10).  WHEN 
C                       CORE( ) IS FULL DATA ARE STORED ON DISK.
C                       (INPUT)
C                ND10 = DIMENSION OF CORE( ).  (INPUT)
C              NBLOCK = THE BLOCK SIZE IN WORDS OF THE MOS-2000 RANDOM
C                       DISK FILE.  (INPUT)
C              NFETCH = THE NUMBER OF TIMES GFETCH HAS BEEN ENTERED.
C                       GFETCH KEEPS TRACK OF THIS AND RETURNS THE
C                       VALUE.  (OUTPUT)
C              IS0(J) = MOS-2000 GRIB SECTION 0 ID'S (J=1,3). 
C                       (INTERNAL)
C              IS1(J) = MOS-2000 GRIB SECTION 1 ID'S (J=1,22+). 
C                       (INTERNAL)
C              IS2(J) = MOS-2000 GRIB SECTION 2 ID'S (J=1,12). 
C                       (INTERNAL)
C              IS4(J) = MOS-2000 GRIB SECTION 4 ID'S (J=1,4). 
C                       (INTERNAL)
C                 ND7 = DIMENSION OF IS0( ), IS1( ), IS2( ), AND IS4( ).
C                       NOT ALL LOCATIONS ARE USED.  (INPUT)
C               ISTAV = 1 SINCE THE DATA RETURNED ARE VECTOR DATA. 
C                       (OUTPUT)
C              L3264B = INTEGER WORD LENGTH IN BITS OF MACHINE BEING
C                       USED (EITHER 32 OR 64).  (INPUT)
C                 IER = STATUS RETURN.
C                         0 = GOOD RETURN.
C                        52 = NWORDS FROM GFETCH NE NSTA.
C                       102 = PROCESSING INDICATOR NOT ACCOMMODATED.
C                       SEE GFETCH FOR OTHER VALUES.  (OUTPUT)
C              IHOURS = THE TOTAL NUMBER OF HOURS TO ADD TO NDATE TO
C                       OBTAIN A FORECAST OR OBSERVATION; FOR
C                       FORECASTS THIS IS EQUAL TO ITAU - RR (WHICH IS
C                       THE SAME AS IDPARS(9)).  FOR OBSERVATIONS,
C                       IHOURS = ITAU - RR + IDPARS(12) + ADDSIX.
C                       (INTERNAL)
C              ADDSIX = 6-HOUR ADJUSTMENT FOR NON-AEV MAX/MIN OBS; FOR
C                       LABELING PURPOSES  (INTERNAL)
C               JDATE = THE DATE FOR WHICH DATA ARE RETRIEVED (INTERNAL)
C              SUBSIX = 6-HOUR ADJUSTMENT FOR COMPUTING THE "PROJECTION"
C                       OF AN AEV MAX/MIN OBSERVATION.  (INTERNAL)
C              NTIMES = THE NUMBER OF TIMES, INCLUDING THIS ONE, THAT
C                       THE RECORD HAS BEEN FETCHED.  THIS IS STORED
C                       IN LSTORE(9, ).  (INTERNAL)
C               LD(J) = HOLDS THE 4 ID WORDS OF THE DATA RETRIEVED INTO
C                       DATA( ) (J=1,4).  (INTERNAL)
C              NSOURC = RETURNED FROM GFETCH AS THE VALUE STORED IN
C                       LSTORE(10, ).  NOT ACTUALLY USED.  (INTERNAL) 
C              NWORDS = NUMBER OF WORDS RETURNED IN DATA( ) BY GFETCH.
C                       (INTERNAL)
C               MISSP = PRIMARY MISSING VALUE INDICATOR.  RETURNED AS 
C                       ZERO BY GFETCH WHEN DATA ARE NOT PACKED. 
C                       (INTERNAL)
C               MISSS = SECONDARY MISSING VALUE INDICATOR.  RETURNED 
C                       AS ZERO BY GFETCH WHEN DATA ARE NOT PACKED. 
C                       (INTERNAL)
C                IDIM = NUMBER OF NON-AEV VARIABLES THAT CAN BE
C                       ACCOMMODATED.  SECOND DIMENSION OF ITABLE( , ).
C                       (INTERNAL)
C        ITABLE(I,JJ) = THE CXCFFF ACCOMMODATED WHERE X=8 OR 9 (I=1),
C                       THE FORECAST VARIABLE (I=2), THE PRIMARY (NON-AEV)
C                       OBSERVATION (I=3), AND THE AEV OBSERVATION (I=4)
C                       TO USE IN THE COMPUTATION FOR UP TO JJ=1,IDIM
C                       VARIABLES.  THE FIRST 8 ENTRIES ARE MAX/MIN
C                       VARIABLES WHOSE FORECAST VALID TIME WOULD NEED
C                       TO BE ADJUSTED BY 6 HOURS IF A NON-AEV OB IS
C                       DESIRED.  DON'T INTERSPERSE OTHER IDS WITHIN 
C                       THIS BLOCK OF IDS.  NEW IDS SHOULD BE ADDED 
C                       BELOW THAT POINT.  (INTERNAL)
C        1         2         3         4         5         6         7 X
C 
C        NONSYSTEM SUBROUTINES CALLED 
C            GFETCH
C
      PARAMETER (IDIM=13)
C
      DIMENSION XDATA(ND1)
      DIMENSION ID(4),IDPARS(15),JD(4)
      DIMENSION IPACK(ND5),IWORK(ND5),DATA(ND5)
      DIMENSION IS0(ND7),IS1(ND7),IS2(ND7),IS4(ND7)
      DIMENSION LSTORE(12,ND9)
      DIMENSION CORE(ND10)
      DIMENSION LD(4),ITABLE(4,IDIM)
C
      DATA ITABLE/202001,202001,702001,702001,
     1            202011,202011,702011,702011,
     2            202120,202120,702001,702001,
     3            202220,202220,702011,702011,
     4            202130,202130,702001,702001,
     5            202230,202230,702011,702011,
     6            202140,202140,702001,702001,
     7            202240,202240,702011,702011,
     8            202020,202020,702000,999999,
     9            202050,202050,702000,999999,
     A            203000,203000,703100,999999,
     B            203020,203020,703100,999999,
     C            203030,203030,703100,999999/
C
      IER=0
      ISTAV=1
C
C        ISOLATE THE PROCESSING INDICATOR IDP AND TEST
C        ITS VALIDITY.
C
      IDP=(IDPARS(1)-(IDPARS(1)/100)*100)/10
C
      IF(IDP.NE.8.AND.IDP.NE.9)THEN
         WRITE(KFILDO,107)(JD(L),L=1,4),IDP
 107     FORMAT(' ****DIFFV ENTERED FOR VARIABLE ',
     1         3(1X,I9.9),1X,I10.3,' NOT ACCOMMODATED.',
     2         '  X =',I3,' IN CXC MUST BE 8 OR 9.')
         IER=102
         GO TO 800
      ENDIF
C
C           DETERMINE WHETHER THE VARIABLE IS ACCOMMODATED.
C
      ADDSIX=0
      SUBSIX=0
      DO 210 JJ=1,IDIM
      IF(IDPARS(1)*1000+IDPARS(2).EQ.(ITABLE(1,JJ)+IDP*10000))THEN
C
C           GET THE FIRST VARIABLE (1).  
C
C
D        WRITE(KFILDO,217)JJ,(ITABLE(J,JJ),J=1,3),NDATE,ITIME,
D    1                    (IDPARS(J),J=1,15)
D217     FORMAT(/,' IN DIFFV AT 217--JJ,(ITABLE(J,JJ),J=1,3),NDATE,ITIME',
D    1           6I10/15I8)
C
         LD(1)=ITABLE(2,JJ)*1000+IDPARS(4)
         LD(2)=JD(2)
         LD(3)=IDPARS(12)
         LD(4)=IDPARS(13)*100+IDPARS(14)*10+IDPARS(15)
C           FOR NDFD, AEV, OR NGM MOS MAX/MIN VARIABLES (ALL CLUSTERED
C           IN THE FIRST 8 ENTRIES OF ITABLE), THERE MIGHT NEED TO BE
C           A 6-HOUR ADJUSTMENT OF THE OBSERVATION HOUR LATER.
         IF((IDPARS(4).GE.79.AND.IDPARS(4).LE.81).OR.
     1      IDPARS(4).EQ.06)THEN
            IF(JJ.LE.8) THEN
               ADDSIX=6
            ENDIF
         ELSE
            IF(JJ.LE.8) THEN
               SUBSIX=6
            ENDIF
         ENDIF
C           THE RR IN IDPARS(9) TELLS HOW MANY HOURS BACK THE DATA CAME
C           FROM.  THAT VALUE PLUS THE TAU IN THE INCOMING ID DETERMINES
C           THE FORECAST CYCLE.
         IHOURS=ITAU-IDPARS(9)
         CALL UPDAT(NDATE,IHOURS,JDATE)
         ITIME=0
         CALL GFETCH(KFILDO,KFIL10,LD,7777,LSTORE,ND9,LITEMS,
     1               IS0,IS1,IS2,IS4,ND7,IPACK,IWORK,XDATA,ND1,
     2               NWORDS,NPACK,JDATE,NTIMES,CORE,ND10,
     3               NBLOCK,NFETCH,NSOURC,MISSP,MISSS,L3264B,ITIME,IER)
C
         IF(IER.NE.0)THEN
            WRITE(KFILDO,230)(LD(J),J=1,4),NDATE,JDATE,IER
 230        FORMAT(' ****VARIABLE NOT RETRIEVED BY GFETCH IN DIFFV',
     1             3(1X,I9.9),1X,I10.3,/,'     NDATE =',I12,
     2             ',   JDATE =',I12,'     IER=',I3)
            GO TO 800
         ENDIF
C
         IF(NWORDS.NE.NSTA)THEN
            WRITE(KFILDO,231)NWORDS,NSTA
 231        FORMAT(/,' ****NWORDS =',I6,' RETURNED FROM GFETCH',
     1               ' NOT EQUAL TO NSTA =',I6,
     2               ' IN DIFFV.  DATA SET TO MISSING.')
            IER=52
            GO TO 800
C
         ENDIF
C
C           GET THE SECOND VARIABLE (2).  ASSUME IT IS AN OBSERVATION.
C
         LD(1)=ITABLE(3,JJ)*1000
         LD(2)=JD(2)
         LD(3)=0
         LD(4)=0
C           THE RR IN IDPARS(9) TELLS HOW MANY HOURS BACK THE DATA CAME
C           FROM, ITAU TELLS HOW MANY HOURS AHEAD TO ADVANCE THE DATE,
C           IDPARS(12) IS THE PROJECTION OF THE FORECAST (AND THUS, THE
C           VALID TIME), AND ADDSIX IS AN ADJUSTMENT IF THIS IS
C           A MAX/MIN TEMPERATURE (FOR DATA LABELING PURPOSES).
         IHOURS=ITAU-IDPARS(9)+IDPARS(12)+ADDSIX
         CALL UPDAT(NDATE,IHOURS,JDATE)
C
         CALL GFETCH(KFILDO,KFIL10,LD,7777,LSTORE,ND9,LITEMS,
     1               IS0,IS1,IS2,IS4,ND7,IPACK,IWORK,DATA,ND5,
     2               NWORDS,NPACK,JDATE,NTIMES,CORE,ND10,
     3               NBLOCK,NFETCH,NSOURC,MISSP,MISSS,L3264B,ITIME,IER)
C
         IF(IER.NE.0)THEN
C           UNSUCCESSFUL RETURN FROM GFETCH WHILE RETRIEVING THE 
C           PRIMARY OBSERVATION.  REBUILD THE ID TO RETRIEVE THE
C           AEV OBSERVATION.  ONLY A LIMITED NUMBER OF VARIABLES HAVE
C           AEV OBS, SO IF THE ENTRY IN ITABLE(4,JJ) IS SET TO 999999,
C           THERE ARE NO AEV OBS FOR THAT VARIABLE.
C
            WRITE(KFILDO,230)(LD(J),J=1,4),NDATE,JDATE,IER
            IF(ITABLE(4,JJ).NE.999999)THEN
               LD(1)=ITABLE(4,JJ)*1000+82
C              THE AEV OBSERVATION HAS A PROJECTION, JUST LIKE AN AEV 
C              FORECAST, HENCE THE USE OF IDPARS(12).  ADJUST THE
C              PROJECTION BY 6 HOURS, IF NEEDED, FOR MAX/MIN TEMP.
               LD(3)=IDPARS(12)-SUBSIX
               IHOURS=ITAU-IDPARS(9)
               CALL UPDAT(NDATE,IHOURS,JDATE)
               CALL GFETCH(KFILDO,KFIL10,LD,7777,LSTORE,ND9,LITEMS,
     1              IS0,IS1,IS2,IS4,ND7,IPACK,IWORK,DATA,ND5,
     2              NWORDS,NPACK,JDATE,NTIMES,CORE,ND10,
     3              NBLOCK,NFETCH,NSOURC,MISSP,MISSS,L3264B,ITIME,IER)
               IF(IER.NE.0)THEN
C        THIS PART OF THE CODE IS REACHED IF THE NON-AEV OB WASN'T
C        FOUND ON THE INPUT DATA FILES, THEN AN ATTEMPT WAS MADE
C        TO READ AN AEV OB FROM THE INPUT FILES.  THE OB IS SIMPLY
C        UNAVAILABLE IN ANY FORM.
                  WRITE(KFILDO,FMT='('' ****UNSUCCESSFUL RETURN FROM'',
     1                  '' GFETCH IN SUBROUTINE DIFFV IN SECOND'',/,5X,
     2                  '' ATTEMPT TO RETRIEVE AN OBSERVATION.'')')
                  GO TO 800
               ELSE
C        THIS PART OF THE CODE IS REACHED IF THE NON-AEV OB WASN'T FOUND
C        ON THE INPUT DATA FILES, THEN AN ATTEMPT WAS MADE TO READ AN
C        AEV OB FROM THE INPUT FILES.  RETRIEVAL OF THE AEV DATA MAY OR
C        MAY NOT HAVE BEEN SUCCESSFUL, REGARDLESS OF THE VALUE OF IER
C        RETURNED FROM GFETCH.  IF THE AEV OB WAS INCLUDED SOMEWHERE
C        IN THE VARIABLE LIST, SUCH AS THE MATCHING VARIABLE SECTION,
C        THE AEV OB WAS PROBABLY OBTAINED SUCCESSFULLY.  TO INSURE THE
C        AEV DATA ARE STORED IN THE INTERNAL STORAGE SYSTEM, THE ID
C        MUST APPEAR IN THE OBSERVATION AND/OR MATCHING
C        VARIABLE SECTION.  IF AEV DATA ARE NOT WANTED AT ALL, BE SURE
C        TO REMOVE ALL OCCURRENCES OF THE AEV OB IN THE INPUT VARIABLE
C        LIST.
                  WRITE(KFILDO,FMT='('' ****IN SUBROUTINE DIFFV,'',
     1                  '' PRIMARY OB NOT FOUND; ATTEMPTED TO '',
     2                  ''OBTAIN THE AEV OB INSTEAD.'')')
               ENDIF
            ELSE
C        ONLY ONE ATTEMPT WAS MADE TO RETRIEVE A NON-AEV OB, AND IT
C        WASN'T SUCCESSFUL.
               WRITE(KFILDO,FMT='('' ****UNSUCCESSFUL RETURN FROM'',
     1               '' GFETCH IN SUBROUTINE DIFFV WHILE RETRIEVING'',
     2               /,'' THE PRIMARY OBSERVATION.'')')
               GO TO 800
            ENDIF
         ENDIF
C
         IF(NWORDS.NE.NSTA)THEN
            WRITE(KFILDO,231)NWORDS,NSTA
            IER=52
            GO TO 800
C
         ENDIF
C
C        COMPUTE DIFFERENCES.
C
         IF(IDP.EQ.8)THEN
C
            DO 311 J=1,NSTA
            IF(XDATA(J).NE.9999..AND.DATA(J).NE.9999.)THEN
               XDATA(J)=XDATA(J)-DATA(J)
            ELSE
               XDATA(J)=9999.
            ENDIF
C
 311        CONTINUE
C
         ELSEIF(IDP.EQ.9)THEN
C
            DO 312 J=1,NSTA
            IF(XDATA(J).NE.9999..AND.DATA(J).NE.9999.)THEN
               XDATA(J)=ABS(XDATA(J)-DATA(J))
            ELSE
               XDATA(J)=9999.
            ENDIF
C
 312        CONTINUE
C
         ELSE 
            WRITE(KFILDO,319)(JD(L),L=1,4),IDP
 319        FORMAT(' ****DIFFV ENTERED FOR PREDICTOR',
     1               3(1X,I9.9),1X,I10.3,
     2             ' WITH PROCESSING INDICATOR CXC =',I3,
     3             ' NOT ACCOMMODATED.')
            IER=102
            GO TO 800
C
         ENDIF
C
         RETURN
      ENDIF
 210  CONTINUE
C
C        FALL THROUGH HERE MEANS THE VARIABLE IS NOT ACCOMMODATED.
C
      WRITE(KFILDO,212)(JD(L),L=1,4)
 212  FORMAT(/,' ****DIFFV ENTERED FOR NON-AEV VARIABLE ',
     1      3(1X,I9.9),1X,I10.3,' NOT ACCOMMODATED.')
      IER=102
C
C        THIS PREDICTOR CANNOT BE COMPUTED.  SET THE ARRAY TO MISSING.
C
 800  DO 801 J=1,NSTA
      XDATA(J)=9999.
 801  CONTINUE 
C
      RETURN
      END
