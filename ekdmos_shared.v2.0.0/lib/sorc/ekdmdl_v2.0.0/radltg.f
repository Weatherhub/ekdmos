      SUBROUTINE RADLTG(KFILDO,KFIL10,IP12,ID,IDPARS,JD,NDATE,
     1                  KFILRA,RACESS,NUMRA,
     2                  CCALL,ICALLD,CCALLD,ISDATA,SDATA,DIR,ND1,NSTA,
     3                  IPACK,IWORK,DATA,ND5,
     4                  FD1,FD2,FD3,ND2X3,NGRIDC,NGRID,ND11,
     5                  NSLAB,LSTORE,ND9,LITEMS,CORE,ND10,
     6                  NBLOCK,NFETCH,LASTL,LASTD,NSTORE,
     7                  IS0,IS1,IS2,IS4,ND7,
     8                  ISTAV,L3264B,L3264W,IER)
C
C        MARCH     2004  LIANG/CHARBA   MDL   MOS-2000 
C        SEPTEMBER 2004  LIANG/CHARBA   REMOVED GRID INITIALIZATION 
C					NEEDED FOR DERIVING THE RADAR
C					AND LIGHTNING PREDICTORS ON A
C					20-KM OUTPUT GRID TO REDUCE 
C					COMPUTER PROCESSING TIME.  IN-
C					STEAD THE INITIALIZATION IS
C					IS PERFORMED EXTERNALLY AND RE-
C					LATED INITIALIZATION DATA IS
C					INPUT FROM A CONSTANT VECTOR
C					FILE.  ALSO, REMOVED A SPECIAL
C					INITIALIZATION FOR THE DERIVED
C					RADAR VARIABLES AT THE INITIAL
C					TIME, WHICH CAN BE USED TO AC-
C					COUNT FOR THE "5-KM OFFSET"
C					OF THE INITIAL RADAR GRIDS.  IT
C					WAS DETERMINED THE OFFSET COULD
C					BE IGNORED WITHOUT PAYING A SE-
C					VERE PENALTY.
C        OCTOBER   2004  CHARBA         CHANGED TWO ARGUMENTS IN CALL TO
C                                       CONST.  THE FIRST USE OF ND2X3
C                                       WAS CHANGED TO ND1 AND THE SE-
C                                       COND TO ND5.  THE PREVIOUS SETUP
C                                       COULD CAUSE A CORE DUMP FOR SOME
C                                       DIMENSIONING CONFIGURATIONS OF
C                                       DRU203 (AND PROBABLY DRU201).
C        OCTOBER   2004  CHARBA         CHANGED TWO ARGUMENTS IN CALL TO
C					CONST AGAIN.  THIS TIME 
C					FD1(ND2X3) WAS CHANGED TO 
C					SDATA(ND1) AND FD2(ND5) WAS 
C					CHANGED TO DATA(ND5).  THIS NEW
C					CONFIGURATION SHOULD ELIMINATE
C					THE POSSIBILITY OF ARRAY OVER-
C					FLOW WHICH THE PREVIOUS SETUP
C					ALLOWED.  THIS CHANGE ALSO NE-
C					CESSITATED ADDING SDATA( ) TO 
C					THE RADLTG ARGUMENT LIST AND RE-
C					PLACING FD1( ) WITH SDATA( ) IN
C				        LINE 464.
C  	 MAY       2005  CHARBA         IMPROVED DOCUMENTATION.
C        SEPTEMBER 2005  CHARBA         IMPORTANT NOTE (NO CODE CHANGE):
C					TO AVERT AN ERROR MESSAGE FROM 
C					CHKIDS, USE AN "I" VALUE OF 1 OR
C					2 (NOT 4) WHEN A GRID BINARY 
C					VARIABLE IS CREATED FROM THE 
C					RADAR OR LIGHTNING VARIABLES.
C					THE 1 OR 2 "I" VALUES PRODUCE 
C					THE SAME RESULT AS 4, BUT WITH-
C					OUT THE ANNOYING ERROR MESSAGE
C					AND THE CHANGE IN COMPUTATION 
C					TIME IS NEGLIGIBLE.
C        SEPTEMBER 2005  CHARBA         THE CHANGE IN THE "I" VALUE FROM
C					4 TO 1(OR 2) NOTED ABOVE HAD TO 
C					BE ABORTED, WITH THE "I" VALUE
C                                       BEING RETURNED TO 4.  THE REASON
C                                       IS AN INCREASED NUMBER OF MISS-
C                                       ING RADAR PREDICTOR VALUES RE-
C                                       SULTED FROM THE NEW I VALUE (DUE
C                                       TO THE DIFFERENT INTERPOLATION 
C                                       METHOD).  THUS, THE I VALUE WAS
C                                       RETURNED TO 4 AND INSTEAD
C					CHKIDS WAS MODIFIED TO ELIM-
C					INATE THE OFFENDING ERROR MESS-
C                                       AGE.
C        FEBRUARY  2006  CHARBA         CHANGED SUBROUTINE NAME TO 
C                                       RADLTG, RE-STRUCTURED MUCH OF 
C                                       EARLY PARTS TO MAKE IT MORE
C                                       STANDARD, CHANGED CHECKS FOR 
C                                       9999. VALUES FROM FLOATING POINT
C                                       TO INTEGER, AND CLEANED UP DOC-
C                                       UMENTATION.  THIS WAS DONE TO
C                                       SATISFY CODE WALK-THRU.
C        JUNE      2006  CHARBA         MADE MINOR CHANGES TO SATISFY
C                                       SECOND CODE WALK-THRU. 
C        JULY      2006  CHARBA         REPLACED NINT( ) CHECK FOR 
C                                       MISSING (9999) WITH GE 9998.5.
C
C        PURPOSE 
C	    COMPUTE AND RETURN THE MAX, SUM, OR AVERAGE RADAR OR LIGHT-
C	    NING VALUE IN 20-KM SQUARE BOXES (ON A LCC GRID) WHOSE
C           CENTER LOCATIONS ARE SPECIFIED BY THE STATION DIRECTORY IN 
C	    U201.CN.  THE MAX, SUM, OR AVERAGE VARIABLES ARE COMPUTED 
C	    FROM ALL (INPUT) 10-KM GRIDBOX VALUES THAT FALL IN THE 20-KM
C	    BOX.  RADLTG ACCOMPLISHES THIS THROUGH THE FOLLOWING STEPS:
C	    (1) THE COMPUTATIONAL OUTPUT GRID IS DEFINED, WHEREIN THE 
C	        GRID PARAMETERS ARE DEFINED IN A PARAMETER STATEMENT.
C           (2) THE LOCATIONS OF THE CENTERS OF THE INPUT GRIDBOXES AND
C	        THE OUTPUT BOXES ARE SPECIFIED IN TERMS OF COORDINATES
C	        OF THE COMPUTATIONAL GRID.
C           (3) SQUARE BOXES ARE DEFINED WHOSE CENTERS ARE THE OUTPUT 
C               STATIONS/GRIDPOINTS, AND THE BOX SIZE IS SPECIFIED IN 
c		TERMS OF THE OUTPUT GRIDMESH.
C	    (4) THE INPUT GRIDPOINTS FALLING IN EACH OUTPUT BOX IS
C	        DETERMINED AND STORED.
C           (5) THE DESIRED MAX, SUM, AND AVERAGE VALUE (BASED ON VALUES
C		FOR THE INPUT GRIDPOINTS) WITHIN EACH OUTPUT GRIDBOX IS 
C		COMPUTED AND RETURNED.
C
C           THE FOLLOWING IDPARS(1) - IDPARS(2) ARE ACCOMMODATED:  
C              007 - 647  MAX RADAR REFLECTIVITY IN A 20-KM GRIDBOX AT
C			  :45   
C              007 - 648  AVERAGE RADAR REFLECTIVITY IN A 20-KM GRIDBOX
C			  AT :45 
C              007 - 581  SUM OF LIGHTNING FLASHES IN A 20-KM GRIDBOX AT
C			  AT :59  
C              007 - 582  AVERAGE OF LIGHTNING FLASHES IN A 20-KM GRID-
C			  BOX AT :59  
C
C        DATA SET USE 
C            KFILDO - DEFAULT UNIT NUMBER FOR OUTPUT (PRINT) FILE 
C                       (OUTPUT). 
C            KFIL10 - UNIT NUMBER OF TDL MOS-2000 FILE SYSTEM ACCESS
C                       (INPUT-OUTPUT). 
C            IP12   - INDICATES WHETHER (>1) OR NOT (=0) THE LIST OF
C                     STATIONS ON THE INPUT FILES WILL BE PRINTED TO
C                     THE FILE WHOSE UNIT NUMBER IS IP12.
C 
C        VARIABLES 
C              KFILDO = DEFAULT UNIT NUMBER FOR OUTPUT (PRINT) FILE.
C                       (OUTPUT) 
C              KFIL10 = UNIT NUMBER OF TDL MOS-2000 FILE SYSTEM ACCESS.
C                       (INPUT-OUTPUT) 
C              IP12   = INDICATES WHETHER (>1) OR NOT (=0) THE LIST OF
C                       STATIONS ON THE INPUT FILES WILL BE PRINTED TO
C                       THE FILE WHOSE UNIT NUMBER IS IP12.
C		ID(J) = IDENTIFIERS FOR THE VARIABLE BEING COMPUTED.
C			(J=1,4).  (INPUT)
C           IDPARS(J) = THE PARSED, INDIVIDUAL COMPONENTS OF THE 
C                       OUTPUT ID CORRESPONDING TO ID( ) (J=1,15).
C                       (INPUT)
C                       J=1--CCC (CLASS OF VARIABLE),
C                       J=2--FFF (SUBCLASS OF VARIABLE),
C                       J=3--B (BINARY INDICATOR),
C                       J=4--DD (DATA SOURCE, MODEL NUMBER),
C                       J=5--V (VERTICAL APPLICATION),
C                       J=6--LBLBLBLB (BOTTOM OF LAYER, 0 IF ONLY 1 
C                            LAYER),
C                       J=7--LTLTLTLT (TOP OF LAYER),
C                       J=8--T (TRANSFORMATION),
C                       J=9--RR (RUN TIME OFFSET, ALWAYS + AND BACK 
C                            IN TIME),
C                       J=10--OT (TIME APPLICATION),
C                       J=11--OH (TIME PERIOD IN HOURS),
C                       J=12--TAU (PROJECTION IN HOURS),
C                       J=13--I (INTERPOLATION TYPE),
C                       J=14--S (SMOOTHING INDICATOR), AND
C                       J=15--G (GRID INDICATOR).
C               JD(J) = THE BASIC INTEGER OUTPUT ID (J=1,4).
C                       THIS IS THE SAME AS ID(J), EXCEPT THAT THE 
C                       PORTIONS PERTAINING TO PROCESSING ARE OMITTED:
C                       B = IDPARS(3),
C                       T = IDPARS(8),
C                       I = IDPARS(13),
C                       S = IDPARS(14),
C                       G = IDPARS(15), AND THRESH.
C                       JD( ) IS USED TO IDENTIFY THE BASIC MODEL 
C                       FIELDS AS READ FROM THE ARCHIVE.  (INPUT)
C               NDATE = THE DATE/TIME FOR OUTPUT VARIABLE.  (INPUT)
C           KFILRA(J) = THE UNIT NUMBERS FOR WHICH RANDOM ACCESS FILES
C                       ARE AVAILABLE (J=1,NUMRA).  (INPUT)
C           RACESS(J) = THE FILE NAMES ASSOCIATED WITH KFILRA(J)
C                       (J=1,NUMRA)(CHARACTER*60).  (INPUT)
C               NUMRA = THE NUMBER OF VALUES IN KFILRA( ) AND RACESS( ).
C                       (INPUT)
C          CCALL(K,J) = 8-CHARACTER STATION CALL LETTERS (OR GRIDPOINT
C                       LOCATIONS FOR GRID DEVELOPMENT) TO PROVIDE
C                       OUTPUT FOR (J=1) AND 5 POSSIBLE OTHER STATION
C                       CALL LETTERS (J=2,6) THAT CAN BE USED INSTEAD
C                       IF THE PRIMARY (J=1) STATION CANNOT BE FOUND
C                       IN AN INPUT DIRECTORY (K=1,NSTA).  ALL STATION
C                       DATA ARE KEYED TO THIS LIST, EXCEPT POSSIBLY
C                       CCALLD( ).  EQUIVALENCED TO ICALL( , )
C                       (CHARACTER*8).  (INPUT/OUTPUT)
C         ICALLD(L,K) = 8 STATION CALL LETTERS AS CHARACTERS IN AN INTE-
C	                GER VARIABLE (L=1,L3264W) (K=1,ND5).
C                       EQUIVALENCED TO CCALLD( ).  (INTERNAL)
C           CCALLD(K) = 8 STATION CALL LETTERS (K=1,ND5).  THIS LIST IS 
C			USED IN L1D1 TO READ THE REGION LISTS  
C			(CHARACTER*8).  (INTERNAL)
C           ISDATA(K) = WORK ARRAY (K=1,ND1).  (INTERNAL)
C	     SDATA(N) = CONTAINS VECTOR DATA RETURNED FROM CALL TO 
C                       CONST (N=1,NSTA).  (INTERNAL)
C          DIR(K,J,M) = THE IX (J=1) AND JY (J=2) POSITIONS ON THE GRID
C                       FOR THE COMBINATION OF GRID CHARACTERISTICS M
C                       (M=1,NGRID) AND STATION K (K=1,NSTA) IN 
C		        NGRIDC( ,M).  (INPUT/OUTPUT)
C                 ND1 = MAXIMUM NUMBER OF STATIONS THAT CAN BE DEALT 
C			WITH.  DIMENSION OF SEVERAL ARRAYS.  (INPUT)
C		 NSTA = NUMBER OF OUTPUT STATIONS.  (INPUT)
C            IPACK(J) = WORK ARRAY (J=1,ND5).  (INTERNAL)  
C            IWORK(J) = WORK ARRAY (J=1,ND5).  (INTERNAL)  
C             DATA(K) = DATA (GRIDDED) RETURNED (K=1,NX2*NY2).  NOTE:
C		        DATA( ) IS DIMENSIONED ND5.  (OUTPUT)
C                 ND5 = DIMENSION OF IPACK( ), IWORK( ), AND 
C                       DATA( ).  (INPUT)
C              FD1(J) = WORK ARRAY (J=1,ND2X3).  (INTERNAL)
C              FD2(J) = WORK ARRAY (J=1,ND2X3).  (INTERNAL)
C            FD3(I,J) = WORK ARRAY TO HOLD OUTPUT VARIABLE IN GRID ARRAY
C			FORM (I=1,NX2,J=1,NY2).  NOTE:  DIMENSION OF 
C                       FD3( ) IN DRU201 IS ND2X3, SO A CHECK IS MADE
C                       TO TO SEE IF NX2*NY2 LE ND2X3.  (OUTPUT)
C               ND2X3 = DIMENSION OF FD1( ), FD2( ), AND FD3( ). 
C		        (INPUT)
C         NGRIDC(L,M) = HOLDS THE GRID CHARACTERISTICS (L=1,6) FOR EACH
C		        GRID COMBINATION.  (M=1,NGRID)
C                       L=1--MAP PROJECTION NUMBER (3=LAMBERT, 5=POLAR
C                            STEREOGRAPHIC).
C                       L=2--GRID LENGTH IN MILLIMETERS,
C                       L=3--LATITUDE AT WHICH GRID LENGTH IS CORRECT
C			     *10000,
C                       L=4--GRID ORIENTATION IN DEGREES *10000,
C                       L=5--LATITUDE OF LL CORNER IN DEGREES *10000,
C                       L=6--LONGITUDE OF LL CORNER IN DEGREES *10000.
C               NGRID = THE NUMBER OF GRID COMBINATIONS IN NGRIDC( , ),
C		        MAXIMUM OF ND11.  NOTE:  NGRID IS INCREMENTED BY
C		        ONE IN THIS ROUTINE IF THE OUTPUT GRID IS ADDED.
C		        (INPUT/OUTPUT)
C		 ND11 = SECOND DIMENSION OF NGRIDC( , ).  (INPUT)
C	        NSLAB = SLAB OF THE GRID IN USE...SET EQUAL TO NCHECK
C			(THE OUTPUT GRID) BEFORE RETURNING TO OPTION.
C			(OUTPUT)
C         LSTORE(L,J) = THE ARRAY HOLDING INFORMATION ABOUT THE DATA 
C                       STORED (L=1,12) (J=1,LITEMS).  (INPUT-OUTPUT)
C                       L=1,4--THE 4 ID'S FOR THE DATA.
C                       L=5  --LOCATION OF STORED DATA.  WHEN IN CORE,
C                              THIS IS THE LOCATION IN CORE( ) WHERE
C                              THE DATA START.  WHEN ON DISK, 
C                              THIS IS MINUS THE RECORD NUMBER WHERE 
C                              THE DATA START.
C                       L=6  --THE NUMBER OF 4-BYTE WORDS STORED.
C                       L=7  --2 FOR DATA PACKED IN TDL GRIB, 1 FOR 
C                              NOT.
C                       L=8  --THE DATE/TIME OF THE DATA IN FORMAT
C                              YYYYMMDDHH.
C                       L=9  --NUMBER OF TIMES DATA HAVE BEEN 
C                              RETRIEVED.
C                       L=10 --NUMBER OF THE SLAB IN DIR( , ,L) AND
C                              IN NGRIDC( ,L) DEFINING THE 
C                              CHARACTERISTICS OF THIS GRID.
C                       L=11 --THE NUMBER OF THE PREDICTAND IN THE 
C                              SORTED LIST IN ID( ,N) (N=1,NPRED)
C                              FOR WHICH THIS VARIABLE IS NEEDED, WHEN 
C                              IT IS NEEDED ONLY ONCE FROM 
C                              LSTORE( , ).  WHEN IT IS NEEDED MORE
C                              THAN ONCE, THE VALUE IS SET = 7777.
C                       L=12 --USED INITIALLY IN ESTABLISHING 
C                              MOSTORE( , ). LATER USED AS A WAY OF 
C                              DETERMINING WHETHER TO KEEP THIS 
C                              VARIABLE.
C                 ND9 = THE SECOND DIMENSION OF LSTORE( , ).  (INPUT) 
C              LITEMS = THE NUMBER OF ITEMS (COLUMNS) IN LSTORE( , )
C                       THAT HAVE BEEN USED IN THIS RUN.  (INPUT)  
C             CORE(J) = THE ARRAY TO STORE OR RETRIEVE THE DATA 
C                       IDENTIFIED IN LSTORE( , ) (J=1,ND10). WHEN
C                       CORE( ) IS FULL DATA ARE STORED ON DISK.
C                       (OUTPUT)
C                ND10 = DIMENSION OF CORE( ).  (INPUT)
C              NBLOCK = THE BLOCK SIZE IN WORDS OF THE MOS-2000 RANDOM
C                       DISK FILE.  (INPUT)  
C              NFETCH = INCREMENTED EACH TIME GFETCH IS ENTERED.
C                       IT IS A RUNNING COUNT FROM THE BEGINNING OF 
C                       THE PROGRAM.  THIS COUNT IS MAINTAINED IN 
C                       CASE THE USER NEEDS IT (DIAGNOSTICS, ETC.). 
C                       NEEDS IT (DIAGNOSTICS, ETC.).  (INTERNAL)  
C               LASTL = THE LAST LOCATION IN CORE( ) USED FOR MOS-2000
C                       INTERNAL STORAGE.  INITIALIZED TO 0 ON FIRST
C                       ENTRY TO GSTORE.  ALSO INITIALIZED IN U201 IN
C                       CASE GSTORE IS NOT ENTERED.  (INPUT-OUTPUT)
C               LASTD = TOTAL NUMBER OF PHYSICAL RECORDS ON DISK FOR
C                       MOS-2000 INTERNAL STORAGE.  MUST BE CARRIED
C                       WHENEVER GSTORE IS TO BE CALLED.  (INPUT)
C              NSTORE = THE NUMBER OF TIMES GSTORE HAS BEEN ENTERED.
C                       GSTORE  KEEPS TRACK OF THIS AND RETURNS THE
C                       VALUE.  (OUTPUT)
C              IS0(J) = MOS-2000 GRIB SECTION 0 ID'S (J=1,3).
C                       (INTERNAL)
C              IS1(J) = MOS-2000 GRIB SECTION 1 ID'S (J=1,22+). 
C                       (INTERNAL)
C              IS2(J) = MOS-2000 GRIB SECTION 2 ID'S (J=1,12).
C                       (INTERNAL)
C              IS4(J) = MOS-2000 GRIB SECTION 4 ID'S (J=1,4).
C                       (INTERNAL)
C                 ND7 = DIMENSION OF IS0, IS1, IS2, AND IS4. NOT ALL
C                       LOCATIONS ARE USED.  (INPUT)
C               ISTAV = SET TO 0 TO INDICATE A GRID FIELD IS BEING RE-
C		        TURNED.  (OUTPUT)  
C              L3264B = INTEGER WORD LENGTH IN BITS OF MACHINE BEING 
C                       USED (EITHER 32 OR 64).  (INPUT)
C              L3264W = NUMBER OF WORDS IN 64 BITS, EITHER 1 OR 2.
C                       (INPUT)
C                 IER = STATUS RETURN.  (OUTPUT)
C                         0 = GOOD RETURN.
C			 33 = ERROR READING STATION IDS.
C                        53 = OUTPUT GRID IS LARGER THAN WORK ARRAYS OR
C			      ND11 MUST BE INCREASED.
C			103 = REQUESTED PREDICTOR ID IS NOT SUPPORTED.
C			IOS = NOT ABLE TO ALLOCATE MEMORY FOR STORING
C                             CONSTANT DATA.
C                       SEE GFETCH AND CONST FOR OTHER VALUES.  WHEN AN
C                       ERROR IS ENCOUNTERED, MISSING VALUES ARE ENTERED
C                       FOR THE DESIRED VARIABLE.  (OUTPUT)
C
C     OTHER VARIABLES
C	        THMIN = MINIMUM NUMBER OF NON-MISSING INPUT GRIDPOINT
C			VALUES, BELOW WHICH MISSING IS RETURNED FOR 
C			THE MAX, SUM AND AVERAGE VALUES.  (PARAMETER) 
C	       NCHECK = A PARAMETER THAT SPECIFIES THE ARRAY INDEX OF
C		        THE OUTPUT GRID.  (INTERNAL)
C	       NUMGRD = NUMGRID-1 IS THE MAXIMUM NUMBER OF INPUT GRID-
C			BOXES THAT FALL WITHIN AN OUTPUT GRIDBOX 
C			(FIRST DIMENSION OF ISTAXY( , )).  (PARAMETER)  
C         ISTAXY(J,K) = J=1 HOLDS NUMBER OF INPUT GRIDBOXES, WHOSE MAX-
C			IMUM IS NUMGRD-1, THAT FALLS IN EACH (K'TH)
C			OUTPUT GRIDBOX.  J=2,NUMGRD HOLDS INPUT GRID
C		        ARRAY INDICES OF THOSE GRIDPOINTS THAT FALL IN-
C			SIDE AN OUTPUT GRIDBOX K (K=1,NSTA).  (INTERNAL)
C                 NX2 = NUMBER OF GRIDPOINTS IN THE X-DIRECTION OF THE 
C			COMPUTATIONAL (OUTPUT) GRID.  (PARAMETER)
C                 NY2 = NUMBER OF GRIDPOINTS IN THE Y-DIRECTION OF THE 
C			COMPUTATIONAL (OUTPUT) GRID.  (PARAMETER)
C	      XMESHL2 = GRID MESHLENGTH (M) OF THE COMPUTATIONAL/OUTPUT 
C			GRID.  (PARAMETER)
C	      ORIENT2 = STANDARD LONGITUDE (DEG) OF THE COMPUTATIONAL/-
C			OUTPUT GRID.  (PARAMETER)
C		XLAT2 = STANDARD LATITUDE (DEG) OF THE COMPUTATIONAL/-
C			OUTPUT GRID.  (PARAMETER)	
C	      XLATLL2 = LATITUDE (DEG) OF THE LOWER-LEFT CORNER OF
C			THE COMPUTATIONAL/OUTPUT GRID.  (PARAMETER)
C	      XLONLL2 = LONGITUDE (DEG) OF THE LOWER-LEFT CORNER OF
C                       THE COMPUTATIONAL/OUTPUT GRID.  (PARAMETER)
C	       NPROJ2 = MAP PROJECTION TYPE OF THE COMPUTATIONAL/OUTPUT
C		        GRID;
C			=3 FOR LAMBERT;
C		        =5 FOR POLAR STEREOGRAPHIC.  (PARAMETER)
C	       NUMVAR = NUMBER OF VARIABLES THAT CAN BE PROCESSED.  
C                       (PARAMETER)	
C	 ICCCFFF(I,J) = FIRST WORD OF LIST OF VARIABLE IDS THAT CAN BE
C		        PROCESSED.  I=1 IS THE OUTPUT VARIABLE, I=2 IS
C			INPUT VARIABLE, AND I=3 IS USED TO INDICATE 
C			WHICH VARIABLE IS BEING RETURNED.  J=1,NUMVAR.  
C			(INTERNAL)
C	         IOUT = INDICATES WHICH VARIABLE FOR A 20-KM GRIDBOX IS
C		        BEING COMPUTED:
C			= 1 FOR MAXIMUM VALUE.
C			= 2 FOR AVERAGE VALUE.
C			= 3 FOR SUMMATION VALUE (APPLIES ONLY TO LIGHT-
C			    NING STRIKES.  (INTERNAL)
C	      MD(K,L) = LIST (L=1,NUMGRD) OF IDS (K=1,4) OF "CONTROL"
C		        VARIABLES THAT ARE INPUT FROM A CONSTANT FILE.
C			K=1 IS FIRST ID WORD, WHICH HAS FOLLOWING MEAN-
C			ING FOR EACH L:
C			L=1, NUMBER OF 10-KM GRIDBOXES THAT FALL IN AN 
C			     OUTPUT GRIDBOX. 
C			L=2, INPUT GRID ARRAY INDEX OF FIRST 10-KM GRID-
C			     BOX THAT FALLS IN AN OUTPUT GRIDBOX. 
C	                L=3, INPUT GRID ARRAY INDEX OF SECOND 10-KM
C			     GRIDBOX THAT FALLS IN AN OUTPUT GRIDBOX.
C			.
C			.
C			.
C			L=NUMGRD, INPUT GRID ARRAY INDEX OF NUMGRD-1'TH 
C			     10-KM GRIDBOX THAT FALLS IN AN OUTPUT GRID-
C			     BOX.  (INTERNAL)
C              NTIMES = THE NUMBER OF TIMES, INCLUDING THIS ONE, THAT 
C                       THE RECORD HAS BEEN FETCHED. THIS IS STORED 
C                       IN LSTORE(9, ).  (INTERNAL)
C               LD(J) = HOLDS THE 4 ID WORDS OF THE DATA RETRIEVED INTO
C                       FD1( ) (J=1,4).  (INTERNAL)
C               MISSP = PRIMARY MISSING VALUE INDICATOR. RETURNED AS
C		        ZERO WHEN DATA ARE NOT PACKED.  (INTERNAL) 
C               MISSS = SECONDARY MISSING VALUE INDICATOR. RETURNED AS 
C		        ZERO WHEN DATA ARE NOT PACKED.  (INTERNAL) 
C               NPACK = 2 FOR TDL GRIB PACKED DATA: 1 FOR NOT PACKED.
C                       THIS IS STORED IN LSTORE(7, ).  (INTERNAL) 
C              NWORDS = NUMBER OF WORDS RETURNED IN DATA( ).  (INTERNAL)
C
C        NONSYSTEM SUBROUTINES CALLED 
C           GFETCH, PRSID1, CONST
C
C***********************************************************************
C
C        SPECIFY THE PARAMETERS OF THE COMPUTATIONAL/OUTPUT GRID.
C
      PARAMETER(XMESHL2=20317.625, ORIENT2=95.0, XLAT2=25.0,
     1          XLATLL2=16.281, XLONLL2=126.138, NPROJ2=3,
     2          NX2=301, NY2=225)
C
C        NUMGRD IS THE FIRST DIMENSION OF ISTAXY. IT IS MAXIMUM NUMBER 
C	 - 1 OF INPUT (10-KM) GRIDPOINTS THAT FALL IN AN OUTPUT (20-KM)
C        GRIDBOX.
C
c	 THMIN IS THE MIMIMUM NUMBER OF NON-MISSING INPUT GRID VALUES
C	 THAT ARE NEEDED TO COMPUTE THE MAX, SUM, AND AVERAGE VALUES.
C
      PARAMETER (NUMGRD=10, THMIN=1.0)
C
C        NUMVAR IS THE NUMBER OF VARIABLES THAT CAN BE PROCESSED.
C
      PARAMETER (NUMVAR=4)
C
      CHARACTER*60 RACESS(NUMRA)
      CHARACTER*8 CCALL(ND1,6),CCALLD(ND5)
C
      INTEGER, ALLOCATABLE, DIMENSION(:,:) :: ISTAXY 
C
      INTEGER ICALLD(L3264W,ND5),ISDATA(ND1),KFILRA(NUMRA),
     1        ICALL(L3264W,ND1,6)
      INTEGER KFILDO,KFIL10,IDPARS(15),ID(4),JD(4),LD(4),
     1        NDATE,NSLAB,ND7,NSTA,NGRIDC(6,ND11),MD(4,NUMGRD),
     2        ND2X3,LSTORE(12,ND9),LITEMS,ND10,NBLOCK,NFETCH,
     3        IS0(ND7),IS1(ND7),IS2(ND7),IS4(ND7),IPACK(ND5),
     4        IWORK(ND5),ISTAV,L3264B,IER,NCHECK
      INTEGER ICCCFFF(3,4),IFIRST,IGCK,KD(4),KDPARS(15)
C
      REAL DATA(ND5),CORE(ND10),DIR(ND1,2,ND11),FD1(ND2X3),FD2(ND2X3),
     1     FD3(NX2,NY2),SDATA(ND1)
C
C        PERMISEBLE VARIABLE IDS:
C          OUTPUT, INPUT, TYPE OF OUTPUT (1=MAX, 2=AVG, 3=SUM)
C
      DATA ((ICCCFFF(I,J),I=1,3),J=1,NUMVAR)
     1     /007647,007646, 1,               ! MAX REFLECTIVITY   
     2      007648,007646, 2,               ! AVERAGE REFLECTIVITY
     3      007581,007580, 3,               ! NUMBER OF FLASHES
     4      007582,007580, 2/               ! AVERAGE NUMBER OF FLASHES

      DATA ((MD(I,J),I=1,4),J=1,NUMGRD)
     1     /401100000,0,0,0,          ! NUMBER OF 10-KM GRIDBOXES     
     2      401110000,0,0,0,          ! ARRAY INDEX OF 1ST 10-KM GRIDBOX
     3      401120000,0,0,0,          ! ARRAY INDEX OF 2ND 10-KM GRIDBOX
     4      401130000,0,0,0,          ! ARRAY INDEX OF 3RD 10-KM GRIDBOX
     5      401140000,0,0,0,          ! ARRAY INDEX OF 4TH 10-KM GRIDBOX
     6      401150000,0,0,0,          ! ARRAY INDEX OF 5TH 10-KM GRIDBOX
     7      401160000,0,0,0,          ! ARRAY INDEX OF 6TH 10-KM GRIDBOX
     8      401170000,0,0,0,          ! ARRAY INDEX OF 7TH 10-KM GRIDBOX
     9      401180000,0,0,0,          ! ARRAY INDEX OF 8TH 10-KM GRIDBOX
     A      401190000,0,0,0/          ! ARRAY INDEX OF 9TH 10-KM GRIDBOX
C
      DATA IFIRST/0/,IGCK/0/
C
      SAVE ISTAXY,IFIRST,IGCK,NCHECK
C
C     CALL TIMPR(KFILDO,KFILDO,'START RADLTG        ')
C
      IER=0
C
C        CHECK TO SEE IF VARIABLE IS ACCOMMODATED IN THIS ROUTINE.
C
      DO 10 JVAR=1,NUMVAR
         IF((IDPARS(1).EQ.ICCCFFF(1,JVAR)/1000).AND.
     1      (IDPARS(2).EQ.MOD(ICCCFFF(1,JVAR),1000))) GO TO 30
 10   CONTINUE
C
      WRITE(KFILDO,20)(ID(J),J=1,4)
 20   FORMAT(/,' **** VARIABLE ',I9.9,2I10.9,I4.3,' NOT ACCOMMODA',
     1         'TED IN RADLTG ...SET IER=103 AND SUPPLY MISSING VALUES')
      IER=103
      GO TO 700
C
 30   IF(NX2*NY2.LE.ND2X3) THEN
C
C           INITIALIZE PREDICTOR OUTPUT GRID TO 9999 ON EACH ENTRY.
C
         DO 34 J=1,NY2
            DO 32 I=1,NX2
               FD3(I,J)=9999.
 32         CONTINUE
 34      CONTINUE
      ELSE
C
C           OUTPUT GRID IS LARGER THAN WORK ARRAYS; MUST ABORT COMPUTA-
C	    TION OF OUTPUT VARIABLE.
C
         DO 36 N=1,ND5
            DATA(N)=9999.
 36      CONTINUE
         WRITE(KFILDO,40) NX2,NY2
 40      FORMAT(/,' ****IN RADLTG THE',I4,'X',I4,' OUTPUT GRID CONTAINS'
     1          ,' MORE THAN ND2X3 POINTS ...SUPPLY MISSING VALUES '
     2          ,/,'AND SET IER = 53')
         IER=53
         GO TO 700
      ENDIF
C
      IF(IFIRST.EQ.0)THEN
C
C           GRID INITIALIZATION FOR VARIABLE COMPUTATION PERFORMED ONLY 
C           ON FIRST ENTRY.
C
C           READ IN (FROM RANDOM ACCESS FILE) AND STORE ARRAY INDICES OF
C	    10-KM GRIDPOINTS THAT FALL IN EACH 20-KM OUTPUT GRIDBOX. 
C
         ALLOCATE(ISTAXY(NUMGRD,NSTA),STAT=IOS)
C
         IF(IOS.NE.0)THEN
            IER=IOS
            WRITE(KFILDO,45) IOS
 45         FORMAT(/,' ****NOT ABLE TO ALLOCATE MEMORY IN RADLTG, IOS=',
     1             I3,' SUPPLY MISSING VALUES FOR RADAR AND LIGHTNING ',
     2             'PREDICTORS AND SET IER=IOS')
	    GO TO 700
         ENDIF
C
         DO 60 N=1,NUMGRD
            KD(1)=MD(1,N)
            KD(2)=MD(2,N)
            KD(3)=MD(3,N)
            KD(4)=MD(4,N)
            CALL PRSID1(KFILDO,KD,KDPARS)
            CALL CONST(KFILDO,KFIL10,IP12,
     1                 KD,KDPARS,KD,NDATE,
     2                 KFILRA,RACESS,NUMRA,
     3                 CCALL,ICALLD,CCALLD,
     4                 ISDATA,SDATA,ND1,NSTA,
     5                 IPACK,IWORK,DATA,ND5,
     6                 LSTORE,ND9,LITEMS,CORE,ND10,LASTL,
     7                 NBLOCK,LASTD,NSTORE,NFETCH,
     8                 IS0,IS1,IS2,IS4,ND7,
     9                 ISTAV,L3264B,L3264W,IER)
C
            IF(IER.NE.0)THEN
               WRITE(KFILDO,50) (KD(J),J=1,4),NDATE
 50            FORMAT(/,' ****ERROR IN RADLTG.  FETCH OF CONSTANT DATA',
     1                ' FROM RANDOM ACCESS VECTOR FILE FOR ',4I10,2X,
     2                I10,' NOT SUCCESSFUL ...SUPPLY MISSING VALUES TO',
     3                ' PREDICTOR VARIABLE')
               GO TO 700
            ENDIF
C
            DO 55 K=1,NSTA
               ISTAXY(N,K)=SDATA(K)
 55         CONTINUE
C
 60      CONTINUE
C
         IFIRST=1
C
      ENDIF
C
C        FETCH A GRIDDED INPUT FIELD (EITHER RADAR OR LIGHTNING)
C	 AS SPECIFIED IN THE TABLE OF PERMISEBLE VARIABLE IDS.  
C
C        JVAR DEFINED AT BEGINNING OF PROGRAM.
C
      LD(1)=ICCCFFF(2,JVAR)*1000+IDPARS(4)
      LD(2)=JD(2)
      LD(3)=JD(3)
      LD(4)=JD(4)
C
      CALL GFETCH(KFILDO,KFIL10,LD,7777,LSTORE,ND9,LITEMS,
     1            IS0,IS1,IS2,IS4,ND7,IPACK,IWORK,FD1,ND2X3,
     2            NWORDS,NPACK,NDATE,NTIMES,CORE,ND10,NBLOCK,
     3            NFETCH,NSLAB,MISSP,MISSS,L3264B,1,IER)
C
D     WRITE(KFILDO,95) NGRID,NSLAB,ID,(NGRIDC(J,2),J=1,6),
D    1                ((DIR(K,I,2),K=1,5),I=1,2)
D95   FORMAT(/,' AFTER GFETCH IN RADLTG, NGRID=',I4,2X,'NSLAB=',I4,
D    1         '  ID( ) = ',4I11,/,'NGRIDC(J,2)=',6I10,/,
D    2         'DIR(1-5,1-2,2)=',2(5F10.4),/)
C
      IF(IER.NE.0)THEN
         WRITE(KFILDO,100)(LD(J),J=1,4),NDATE
 100     FORMAT(/,' ****IN RADLTG THE NEEDED VARIABLE ID( ) ',4I10,
     1          ' FOR DATE ',I10,' COULD NOT BE FETCHED ...SUPPLY MISS',
     2          'ING VALUES TO PREDICTOR VARIABLE')
         GO TO 700
      ENDIF
C
C        PERFORM COMPUTATION OF AN OUTPUT VARIABLE.  THE COMPUTATION IS
C	 PERFORMED OVER THE OUTPUT SET OF POINTS (SPECIFIED IN U201.CN).
C
      IOUT=ICCCFFF(3,JVAR)
C
      IF(IOUT.EQ.1) THEN
C
         DO 110 K=1,NSTA
C
C           COMPUTE THE MAXIMUM VALUE FROM ALL GRIDPOINTS ON THE INPUT 
C	    GRID THAT FALL IN AN OUTPUT GRIDBOX.
C
         RMAX=0.0
         SUM=0.0
         NG=ISTAXY(1,K)
         DO 105 N=2,NG+1
            II=ISTAXY(N,K)
            IF(FD1(II).GE.9998.5) GOTO 105 
            SUM=SUM+1.0
            IF(FD1(II).GT.RMAX) RMAX=FD1(II)
 105     CONTINUE
C
C           IF A MINIMUM NUMBER OF NON-MISSING VALUES (SPECIFIED IN A
C	    PARAMETER STATEMENT) IS NOT FOUND IN BOX, SET THE VALUE TO
C	    MISSING.
C
         IF(SUM.LT.THMIN) THEN
            FD2(K)=9999.
         ELSE
            FD2(K)=RMAX
         ENDIF
 110     CONTINUE
C
      ELSEIF(IOUT.EQ.2) THEN
C
         DO 120 K=1,NSTA
C
C           COMPUTE AVERAGE VALUE FROM ALL GRIDPOINTS ON THE INPUT GRID
C	    THAT FALL IN AN OUTPUT GRIDBOX.
C
         SUM=0.0
         FD2(K)=0.0
         NG=ISTAXY(1,K)
         DO 115 N=2,NG+1
            II=ISTAXY(N,K)
            IF(FD1(II).GE.9998.5) GOTO 115
            SUM=SUM+1.0
            FD2(K)=FD2(K)+FD1(II)               
 115     CONTINUE
C
C           IF A MINIMUM NUMBER OF NON-MISSING VALUES (SPECIFIED IN A
C           PARAMETER STATEMENT) IS NOT FOUND IN BOX, SET THE VALUE TO
C           MISSING.
C
         IF(SUM.LT.THMIN) THEN
            FD2(K)=9999.
         ELSE
            FD2(K)=FD2(K)/SUM
         ENDIF
C
 120     CONTINUE
C
      ELSEIF(IOUT.EQ.3) THEN
C
         DO 130 K=1,NSTA
C
C           COMPUTE SUMMATION OF ALL GRIDPOINT VALUES ON THE INPUT GRID
C	    THAT FALL IN AN OUTPUT GRIDBOX.
C
         SUM=0.0
         FD2(K)=0.0
         NG=ISTAXY(1,K)
         DO 125 N=2,NG+1
            II=ISTAXY(N,K)
            IF(FD1(II).GE.9998.5) GOTO 125
            SUM=SUM+1.0
            FD2(K)=FD2(K)+FD1(II)
 125     CONTINUE
C
C           IF A MINIMUM NUMBER OF NON-MISSING VALUES (SPECIFIED IN A
C           PARAMETER STATEMENT) IS NOT FOUND IN BOX, SET THE VALUE TO
C           MISSING.
C
         IF(SUM.LT.THMIN) THEN
            FD2(K)=9999.
         ENDIF
C
 130     CONTINUE
C
      ENDIF          
C
C        THE OUTPUT VARIABLE MUST BE RETURNED IN THE OUTPUT GRID. 
C	 THUS, THE VARIABLE JUST COMPUTED MUST THE PLACED INTO THIS 
C	 GRID.
C
C        SET IS2( ) TO THE OUTPUT GRID PARAMETERS.
C
      IS2(2)=NPROJ2
      IS2(3)=NX2
      IS2(4)=NY2
      IS2(5)=XLATLL2*10000
      IS2(6)=XLONLL2*10000
      IS2(7)=ORIENT2*10000
      IS2(8)=XMESHL2*1000
      IS2(9)=XLAT2*10000
C
C	 CHECK IF OUTPUT GRID IS ALREADY STORED.
C
      IF(IGCK.EQ.0)THEN
C
         NCHECK=0
         DO 132 N=1,NGRID
            IF(NGRIDC(1,N).EQ.IS2(2).AND.
     1         NGRIDC(2,N).EQ.IS2(8).AND.
     2         NGRIDC(3,N).EQ.IS2(9).AND.
     3         NGRIDC(4,N).EQ.IS2(7).AND.
     4         NGRIDC(5,N).EQ.IS2(5).AND.
     5         NGRIDC(6,N).EQ.IS2(6)) NCHECK=N
C
C                 OUTPUT GRID HAS BEEN PREVIOUSLY STORED.  THUS, THERE 
C		  IS NO NEED TO STORE IT AGAIN.
C
            IF(NCHECK.GT.0) GO TO 140
 132        CONTINUE
C
C           MUST STORE REQUIRED ITEMS FOR THE OUTPUT GRID.
C
         IF(NGRID+1.GT.ND11) THEN
            WRITE(KFILDO,135) NGRID+1
 135        FORMAT(/,' ****ERROR IN OPTION/RADLTG; ND11 MUST BE INCREA',
     1             'SED TO ',I3,' ...SUPPLY MISSING VALUES AND SET IER',
     2             ' = 53')
            IER=53
            GO TO 700
         ENDIF
C
         NGRID=NGRID+1
         NCHECK=NGRID
C
C	    STORE THE GRID PARAMETERS.
C
         NGRIDC(1,NGRID)=IS2(2)
         NGRIDC(2,NGRID)=IS2(8)
         NGRIDC(3,NGRID)=IS2(9)
         NGRIDC(4,NGRID)=IS2(7)
         NGRIDC(5,NGRID)=IS2(5)
         NGRIDC(6,NGRID)=IS2(6)
C
C	    STORE THE COORDINATES OF THE OUTPUT (GRID) POINTS.
C
         DO 138 K=1,NSTA
            READ(CCALL(K,1),'(I4,4X)',ERR=650)IX
            READ(CCALL(K,1),'(4X,I4)',ERR=650)IY
            DIR(K,1,NGRID)=IX
            DIR(K,2,NGRID)=IY
 138     CONTINUE
         IGCK=1
      ENDIF
C
C        NOW PLACE COMPUTED VARIABLE INTO OUTPUT GRID ARRAY.
C
 140  DO 145 K=1,NSTA
         IX=DIR(K,1,NGRID)
         IY=DIR(K,2,NGRID)
         FD3(IX,IY)=FD2(K)
 145  CONTINUE
C
C        MOVE GRIDDED VARIABLE TO THE ONE-DIMENSIONAL OUTPUT ARRAY.
C
      N=0
      DO 600 J=1,NY2
        DO 590 I=1,NX2
           N=N+1
           DATA(N)=FD3(I,J)
 590    CONTINUE
 600  CONTINUE
C
C        SET NSLAB AND ISTAV TO SPECIFY GRID OUTPUT.
C
      NSLAB=NCHECK
      ISTAV=0
C
D     WRITE(KFILDO,610) NGRID,NSLAB,ID
D610  FORMAT(/,' AT THE END OF RADLTG, NGRID=',I4,2X,'NSLAB=',I4,
D    1         '  ID( ) = ',4I11)
C     
C     CALL TIMPR(KFILDO,KFILDO,'END RAGLTG          ')
C
      GO TO 900
C
 650  WRITE(KFILDO,660)
 660  FORMAT(/,' ****ERROR READING CALL LETTERS IN RADLTG...SUPPLY MIS',
     1         'SING VALUES TO PREDICTOR VARIABLE AND SET IER=33')
      IER=33
C
C        SET OUTPUT ARRAY TO MISSING WHEN AN ERROR HAS OCCURRED.
C
 700  DO 710 N=1,ND5
         DATA(N)=9999.
 710  CONTINUE
C
 900  RETURN
      END
