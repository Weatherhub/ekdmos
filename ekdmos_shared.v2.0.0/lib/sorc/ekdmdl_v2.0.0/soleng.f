      SUBROUTINE SOLENG(KFILDO,KFIL10,IP12,KFILRA,RACESS,NUMRA,
     1                  ID,IDPARS,JD,ITAU,
     2                  NDATE,MDATE,CCALL,ISDATA,XDATA,ND1,NSTA,
     3                  ICALLD,CCALLD,IPACK,IWORK,DATA,ND5,
     4                  LSTORE,ND9,LITEMS,CORE,ND10,
     5                  NBLOCK,NFETCH,
     6                  IS0,IS1,IS2,IS4,ND7,
     7                  L3264B,L3264W,IER)
C 
C        JULY      1999   RUDACK   TDL   MOS-2000
C        AUGUST    1999   RUDACK   INSERTED CALL TO PRSID1, ETC.
C        SEPTEMBER 1999   GLAHN    MODIFIED AND ADDED TESTS
C        APRIL     2000   DALLAVALLE   MODIFIED FORMAT STATEMENTS TO
C                                  CONFORM TO FORTRAN 90 
C                                  STANDARDS ON THE IBM SP
C        APRIL     2000   GLAHN    CHECKED SPELLING; IMPROVED COMMENTS;
C                                  INSERTED /, IN **** COMMENTS;
C                                  INSETED NINT BELOW 165
C        NOVEMBER  2002   SU       CORRECTED THE IDS OF DEW POINT TEMPERATURE
C                                  AND SKY COVER.
C
C        PURPOSE: 
C            TO COMPUTE THE FRACTION OF SOLAR ENERGY.  NOTE: THE SOLAR
C            ENERGY IN THIS CODE IS NOT A PERCENT BUT RATHER IN DECIMAL
C            FORM
C
C            IDPARS(1) & IDPARS(2) ARE MAPPED 
C                INTO      FROM 
C                209200    203020 AND 208340 
C
C        DATA SET USE 
C            KFILDO - DEFAULT UNIT NUMBER FOR OUTPUT (PRINT) FILE.
C                     (OUTPUT) 
C            KFIL10 - UNIT NUMBER OF TDL MOS-2000 FILE SYSTEM ACCESS.
C                     (INPUT-OUTPUT) 
C            IP12   - INDICATES WHETHER (>1) OR NOT (=0) THE LIST OF
C                     STATIONS ON THE INPUT FILES WILL BE PRINTED TO 
C                     THE FILE WHOSE UNIT NUMBER IS IP12.  (OUTPUT)
C         KFILRA(J) - THE UNIT NUMBERS FOR WHICH RANDOM ACCESS FILES
C                     ARE AVAILABLE (J=1,NUMRA).  (INPUT)
C 
C        VARIABLES 
C              KFILDO = DEFAULT UNIT NUMBER FOR OUTPUT (PRINT) FILE.
C                       (INPUT) 
C              KFIL10 = UNIT NUMBER OF TDL MOS-2000 FILE SYSTEM ACCESS.
C                       (INPUT)
C                IP12 = INDICATES WHETHER (>0) OR NOT (=0) THE LIST OF
C                       STATIONS ON THE EXTERNAL RANDOM ACCESS FILES
C                       WILL BE LISTED TO UNIT IP12.  (INPUT)
C           KFILRA(J) = THE UNIT NUMBERS FOR WHICH RANDOM ACCESS FILES
C                       ARE AVAILABLE (J=1,NUMRA).  (INPUT)
C           RACESS(J) = THE FILE NAMES ASSOCIATED WITH KFILRA(J) (J=1,NUMRA).
C                       (CHARACTER*60)  (INPUT)
C               NUMRA = THE NUMBER OF VALUES IN KFILRA( ) AND RACESS( ).
C                       (INPUT)
C               ID(J) = THE PREDICTOR ID (J=1,4).  (INPUT)
C           IDPARS(J) = THE PARSED, INDIVIDUAL COMPONENTS OF THE 
C                       PREDICTOR ID CORRESPONDING TO ID( ) (J=1,15).
C                       (INPUT)
C                       J=1--CCC (CLASS OF VARIABLE),
C                       J=2--FFF (SUBCLASS OF VARIABLE),
C                       J=3--B (BINARY INDICATOR),
C                       J=4--DD (DATA SOURCE, MODEL NUMBER),
C                       J=5--V (VERTICAL APPLICATION),
C                       J=6--LBLBLBLB (BOTTOM OF LAYER, 0 IF ONLY 
C                            1 LAYER),
C                       J=7--LTLTLTLT (TOP OF LAYER),
C                       J=8--T (TRANSFORMATION),
C                       J=9--RR (RUN TIME OFFSET, ALWAYS + AND BACK IN 
C                            TIME),
C                       J=10--OT (TIME APPLICATION),
C                       J=11--OH (TIME PERIOD IN HOURS),
C                       J=12--TAU (PROJECTION IN HOURS),
C                       J=13--I (INTERPOLATION TYPE),
C                       J=14--S (SMOOTHING INDICATOR), AND
C                       J=15--G (GRID INDICATOR).
C               JD(J) = THE BASIC INTEGER PREDICTOR ID (J=1,4).
C                       THIS IS THE SAME AS ID(J), EXCEPT THAT THE
C                       PORTIONS PERTAINING TO PROCESSING ARE OMITTED:
C                       B = IDPARS(3),
C                       T = IDPARS(8),
C                       I = IDPARS(13),
C                       S = IDPARS(14),
C                       G = IDPARS(15), AND
C                       THRESH.
C                       JD( ) IS USED TO IDENTIFY THE BASIC MODEL FIELDS
C                       AS READ FROM THE ARCHIVE.  (INPUT)
C                ITAU = THE NUMBER OF HOURS AHEAD TO FIND A VARIABLE.
C                       THIS HAS ALREADY BEEN CONSIDERED IN MDATE, BUT
C                       IS NEEDED FOR CALL TO GFETCH.  (INPUT)
C               NDATE = THE DATE/TIME FOR WHICH PREDICTOR IS NEEDED.
C                       (INPUT)
C               MDATE = NDATE UPDATED WITH ITAU( ).  (INPUT)
C          CCALL(K,J) = 8-CHARACTER STATION CALL LETTERS (OR GRIDPOINT
C                       LOCATIONS FOR GRID DEVELOPMENT) TO PROVIDE
C                       OUTPUT FOR (J=1) AND 5 POSSIBLE OTHER STATION
C                       CALL LETTERS (J=2,6) THAT CAN BE USED INSTEAD
C                       IF THE PRIMARY (J=1) STATION CANNOT BE FOUND 
C                       IN AN INPUT DIRECTORY (K=1,NSTA).  ALL STATION
C                       DATA ARE KEYED TO THIS LIST, EXCEPT POSSIBLY 
C                       CCALLD( ). 
C                       (CHARACTER*8)  (INPUT)
C           ISDATA(K) = WORK ARRAY (K=1,ND1).  (INTERNAL)
C            XDATA(K) = STATION LATITUDE (INTERNAL), THEN FRACTION
C                       OF SOLAR ENERGY (K=1,NSTA).  (OUTPUT)
C                 ND1 = MAXIMUM NUMBER OF STATIONS THAT CAN BE DEALT 
C                       WITH.  DIMENSION OF XDATA( ), ISDATA( ), AND
C                       SLONG( ) AND FIRST DIMENSION OF YDATA( , ) AND
C                       ZDATA( , , ).  (INPUT)
C                NSTA = NUMBER OF STATIONS OR LOCATIONS BEING DEALT
C                       WITH.  (INPUT)
C         ICALLD(L,K) = 8 STATION CALL LETTERS AS CHARACTERS IN AN INTEGER
C                       VARIABLE (L=1,L3264W) (K=1,ND5).  THIS ARRAY IS USED 
C                       TO READ THE STATION DIRECTORY FROM A MOS-2000
C                       EXTERNAL FILE.  EQUIVALENCED TO CCALLD( ). 
C                       (CHARACTER*8)  (INTERNAL)
C           CCALLD(K) = 8 STATION CALL LETTERS (K=1,ND5).  EQUIVALENCED
C                       TO ICALLD( , ).  (INTERNAL)
C            IPACK(J) = WORK ARRAY (J=1,ND5).  (INTERNAL)
C            IWORK(J) = WORK ARRAY (J=1,ND5).  (INTERNAL)
C             DATA(K) = WORK ARRAY (J=1,ND5).  (INTERNAL)
C                 ND5 = DIMENSION OF IPACK( ), IWORK( ), AND DATA( ).
C                       (INPUT)
C         LSTORE(L,J) = THE ARRAY HOLDING INFORMATION ABOUT THE DATA 
C                       STORED (L=1,12) (J=1,LITEMS).  (INPUT-OUTPUT)
C                       L=1,4--THE 4 ID'S FOR THE DATA.
C                       L=5  --LOCATION OF STORED DATA.  WHEN IN CORE,
C                              THIS IS THE LOCATION IN CORE( ) WHERE
C                              THE DATA START.  WHEN ON DISK, 
C                              THIS IS MINUS THE RECORD NUMBER WHERE 
C                              THE DATA START.
C                       L=6  --THE NUMBER OF 4-BYTE WORDS STORED.
C                       L=7  --2 FOR DATA PACKED IN TDL GRIB, 1 FOR NOT.
C                       L=8  --THE DATE/TIME OF THE DATA IN FORMAT
C                              YYYYMMDDHH.
C                       L=9  --NUMBER OF TIMES DATA HAVE BEEN RETRIEVED.
C                       L=10 --NUMBER OF THE SLAB IN DIR( , ,L) AND
C                              IN NGRIDC( ,L) DEFINING THE 
C                              CHARACTERISTICS OF THIS GRID.
C                       L=11 --THE NUMBER OF THE PREDICTOR IN THE SORTED
C                              LIST IN ID( ,N) (N=1,NPRED) FOR WHICH 
C                              THIS VARIABLE IS NEEDED, WHEN IT IS 
C                              NEEDED ONLY ONCE FROM LSTORE( , ). 
C                              WHEN IT IS NEEDED MORE THAN ONCE, THE 
C                              VALUE IS SET = 7777.
C                       L=12 --USED INITIALLY IN ESTABLISHING 
C                              MSTORE( , ).  LATER USED AS A WAY OF
C                              DETERMINING WHETHER TO KEEP THIS 
C                              VARIABLE.
C                 ND9 = THE SECOND DIMENSION OF LSTORE( , ).  (INPUT)
C              LITEMS = THE NUMBER OF ITEMS (COLUMNS) IN LSTORE( , )
C                       THAT HAVE BEEN USED IN THIS RUN.  (INPUT)
C             CORE(J) = THE ARRAY TO STORE OR RETRIEVE THE DATA 
C                       IDENTIFIED IN LSTORE( , ) (J=1,ND10).  WHEN 
C                       CORE( ) IS FULL DATA ARE STORED ON DISK.
C                       (INPUT)
C                ND10 = DIMENSION OF CORE( ).  (INPUT)
C              NBLOCK = THE BLOCK SIZE IN WORDS OF THE MOS-2000 RANDOM
C                       DISK FILE.  (INPUT)
C              NFETCH = THE NUMBER OF TIMES GFETCH HAS BEEN ENTERED.
C                       GFETCH KEEPS TRACK OF THIS AND RETURNS THE
C                       VALUE.  (OUTPUT)
C              IS0(J) = MOS-2000 GRIB SECTION 0 ID'S (J=1,3). 
C                       (INTERNAL)
C              IS1(J) = MOS-2000 GRIB SECTION 1 ID'S (J=1,22+). 
C                       (INTERNAL)
C              IS2(J) = MOS-2000 GRIB SECTION 2 ID'S (J=1,12). 
C                       (INTERNAL)
C              IS4(J) = MOS-2000 GRIB SECTION 4 ID'S (J=1,4). 
C                       (INTERNAL)
C                 ND7 = DIMENSION OF IS0( ), IS1( ), IS2( ), AND IS4( ).
C                       NOT ALL LOCATIONS ARE USED.  (INPUT)
C              L3264B = INTEGER WORD LENGTH IN BITS OF MACHINE BEING
C                       USED (EITHER 32 OR 64).  (INPUT)
C              L3264W = NUMBER OF WORDS IN 64 BITS (EITHER 1 OR 2).  
C                       CALCULATED BY PARAMETER, BASED ON L3464B.
C                       (INPUT)
C                 IER = STATUS RETURN.
C                         0 = GOOD RETURN.
C                       102 = ID NOT ACCOMMODATED.
C                       SEE RETVEC FOR OTHER VALUES.  (OUTPUT)
C               LD(J) = HOLDS THE 4 ID WORDS OF THE DATA RETRIEVED INTO
C                       XDATA( ) (J=1,4).  (INTERNAL)
C           FACTOR(L) = REGRESSION FACTOR FOR EQUATIONS (L=1,3).  (INTERNAL)
C           PERIOD(M) = STORES THE ASTRONOMICAL AMOUNT OF SUNSHINE 
C                       (IN HOURS) FOR EACH 6 HOUR PERIOD (M=1,4).
C                       (INTERNAL)
C          YDATA(K,L) = YDATA STORES THE FORECAST DEW POINTS FOR EACH 
C                       PERIOD AND FOR EACH STATION.
C                       (K=1,NSTA),(L=1,3). (AUTOMATIC)
C      ZDATA(ND1,L,M) = ZDATA STORES CLOUD PROBABILITIES (CLR, SCT, BKN & 
C                       OVC)(M=1,4) FOR EACH 6-HOUR PERIOD(L=1,3) FOR EACH 
C                       STATION.  (AUTOMATIC)
C           ITABLE(I) = CONTAINS THE PERCENT OF ETR ID (I=1). (OUTPUT), 
C                       FORECAST DEW POINT ID (I=2), NORMALIZED
C                       CLOUD PROBABILITIES (I=3).  THE NUMBER 
C                       OF CLOUD CATEGORIES (CLR,SCT BKN & OVC) IS IN 
C                       ITABLE(I=4) WHILE THE CORRESPONDING THRESHOLD VALUES 
C                       ARE (I=5,8). (INTERNAL)
C           MTABLE(I) = ARRAY CONTAINING THE LATITUDE ID (I=1,4) 
C                       AND THE LONGITUDE ID (I=5,8).  (INTERNAL)
C            SLONG(K) = ARRAY WHICH HOLDS THE LONGITUDE FOR EACH STATION
C                       (K=1,NSTA).  (AUTOMATIC)
C            COEFC(M) = REGRESSION COEFFICIENTS FOR THE CLOUD CATEGORIES
C                       (M=1,4).  (INTERNAL)
C            BOEFC(M) = BACK-UP REGRESSION COEFFICIENTS FOR THE ETR. (M=1,4) 
C                       (INTERNAL)
C            COEFH(L) = WEIGHTING COEFFICIENTS FOR 1200, 1800, AND 0000 GMT.
C                       (L=1,3)  (INTERNAL)
C              COEFD  = REGRESSION COEFFICIENT FOR THE DEW POINT FORECASTS. 
C                       (INTERNAL)
C              COEFE  = REGRESSION COEFFICIENT FOR THE ETR.  (INTERNAL)
C              BOEFE  = BACK-UP REGRESSION COEFFICIENT FOR THE ETR.  (INTERNAL)
C              RINTER = REGRESSION INTERCEPT.  (INTERNAL)
C              BINTER = BACK-UP REGRESSION INTERCEPT.  (INTERNAL)
C               MFLAG = 0 WHEN DEW POINT FORECATS ARE MISSING; 
C                       1 OTHERWISE.  (INTERNAL)
C
C        NONSYSTEM SUBROUTINES CALLED 
C           RETVEC, SUNHRS, PRSID1
C
      CHARACTER*8 CCALL(ND1,6)
      CHARACTER*8 CCALLD(ND5)
      CHARACTER*60 RACESS(5)
C
      DIMENSION XDATA(ND1),ISDATA(ND1)
      DIMENSION ID(4),IDPARS(15),JD(4),LD(4)
      DIMENSION COEFC(4),COEFH(3),BOEFC(4)
      DIMENSION IPACK(ND5),IWORK(ND5),DATA(ND5)
      DIMENSION IS0(ND7),IS1(ND7),IS2(ND7),IS4(ND7)
      DIMENSION LSTORE(12,ND9),ICALLD(L3264W,ND5)
      DIMENSION CORE(ND10),LDPARS(15)
      DIMENSION ITABLE(8),MTABLE(8)
      DIMENSION SLONG(ND1),YDATA(ND1,3),ZDATA(ND1,3,4)
C        YDATA( , ), ZDATA( , , ), AND SLONG( ) ARE AUTOMATIC ARRAYS.
C        
      DATA ITABLE/209200,203020,208340,4,
     1            150001000,400001000,700001000,999905000/
      DATA MTABLE/400006000,000000000,000000000,0000000000,
     1            400007000,000000000,000000000,0000000000/   
C
C        SET REGRESSION COEFFICIENTS AND CONSTANTS. 
C    
      DATA RINTER/.68576/
      DATA COEFD/-.00251/
      DATA COEFE/.01461/
      DATA COEFC/0.0,0.0,-.24851,-.54151/
      DATA BOEFC/0.0,-.14663,-.26861,-.61483/
      DATA BOEFE/.00509/
      DATA BINTER/.71747/
C
      IER=0
      JCYCLE=MOD(MDATE,100)
C
C        FIND CCCFFF OF ID(1) IN ITABLE(1) AND CHECK FOR LEGITIMATE 
C        PROJECTION.
C
      IF(ITABLE(1).NE.(IDPARS(1)*1000+IDPARS(2))) GOTO 105 
C
      IF ((JCYCLE.EQ.0).AND.(IDPARS(12).EQ.24.OR.
     1                       IDPARS(12).EQ.48.OR.
     2                       IDPARS(12).EQ.72)) GOTO 110
C
      IF((JCYCLE.EQ.6).AND.(IDPARS(12).EQ.42.OR.
     1                      IDPARS(12).EQ.66)) GOTO 110
C
      IF((JCYCLE.EQ.12).AND.(IDPARS(12).EQ.36.OR.
     1                       IDPARS(12).EQ.60)) GOTO 110
C
      IF((JCYCLE.EQ.18).AND.(IDPARS(12).EQ.30.OR.
     1                       IDPARS(12).EQ.54)) GOTO 110
C
C        THE ID DOES NOT MATCH IDPARS(1) AND IDPARS(2).
C
 105  WRITE(KFILDO,107)(JD(L),L=1,4)
 107  FORMAT(/,' ****SOLENG ENTERED FOR VARIABLE',
     1       2X,I9.9,1X,I9.9,1X,I9.9,1X,I10.3,
     2       ' NOT ACCOMMODATED.')
      IER=102
      GOTO 300
C    
C        READ MOS DEW POINT FORECASTS FOR 3 PROJECTIONS.  
C     
 110  LD(1)=ITABLE(2)*1000+IDPARS(4)
      LD(2)=JD(2)
      LD(4)=JD(4)
C     
      MTAU=12
C   
      DO 150 L=1,3
C
      LD(3)=JD(3)-MTAU
C
C        FETCH THE DEW POINT FORECASTS FOR EACH 6-HOUR PERIOD
C        BEGINNING AT IDPARS(12)-12.
C 
      CALL PRSID1(KFILDO,LD,LDPARS)
      CALL RETVEC(KFILDO,KFIL10,IP12,KFILRA,RACESS,NUMRA,
     1            LD,LDPARS,JD,ITAU,
     2            NDATE,MDATE,CCALL,ISDATA,YDATA(1,L),ND1,NSTA,
     3            ICALLD,CCALLD,IPACK,IWORK,DATA,ND5,
     4            LSTORE,ND9,LITEMS,CORE,ND10,
     5            NBLOCK,NFETCH,
     6            IS0,IS1,IS2,IS4,ND7,
     7            L3264B,L3264W,IER)
C
C        JD( ) IS NOT ACTUALLY USED IN RETVEC.  IT IS USED
C        IN CALL TO CONST, BUT CONST DOES NOT USE IT EITHER.
C    
      IF(IER.NE.0)THEN
         WRITE(KFILDO,143)(LD(M),M=1,4)
 143     FORMAT(/,' ****VARIABLE NOT RETRIEVED BY RETVEC IN',
     1          ' SOLENG',2X,I9.9,1X,I9.9,1X,I9.9,1X,I10.3,
     2          '.  CONTINUING.')
      ENDIF
C    
C        SUBTRACTING SIX HOURS FROM THE PROJECTION 'MTAU'.
C            
      MTAU=MTAU-6       
C            
 150  CONTINUE
C
C        READ THE NORMALIZED MOS CLOUD PROBABILITIES FOR CLEAR, SCATTERED,
C        BROKEN AND OVERCAST FOR THE SAME 3 VALID TIMES AS DEWPOINTS.
C        READ MOS NORMALIZED CLOUD PROBABILITIES FOR 5 PROJECTIONS.  
C     
      LD(1)=ITABLE(3)*1000+300+IDPARS(4)
      LD(2)=JD(2)
C          
      KCAT=ITABLE(4)
      MTAU=12
C   
      DO 160 L=1,3
C
      LD(3)=JD(3)-MTAU
C
         DO 159 J=1,KCAT
C              
         LD(4)=ITABLE(J+4)
C
C              FETCH THE CLOUD PROBABILITIES FOR EACH 6-HOUR PERIOD
C              BEGINNING AT IDPARS(12)-12.
C 
         CALL PRSID1(KFILDO,LD,LDPARS)
         CALL RETVEC(KFILDO,KFIL10,IP12,KFILRA,RACESS,NUMRA,
     1               LD,LDPARS,JD,ITAU,
     2               NDATE,MDATE,CCALL,ISDATA,ZDATA(1,L,J),ND1,NSTA,
     3               ICALLD,CCALLD,IPACK,IWORK,DATA,ND5,
     4               LSTORE,ND9,LITEMS,CORE,ND10,
     5               NBLOCK,NFETCH,
     6               IS0,IS1,IS2,IS4,ND7,
     7               L3264B,L3264W,IER)
C
C        JD( ) IS NOT ACTUALLY USED IN RETVEC.  IT IS USED
C        IN CALL TO CONST, BUT CONST DOES NOT USE IT EITHER.
C
            IF(IER.NE.0)THEN
                WRITE(KFILDO,152)(LD(M),M=1,4)
 152            FORMAT(/,' ****VARIABLE NOT RETRIEVED BY RETVEC IN',
     1                 ' SOLENG',2X,I9.9,1X,I9.9,1X,I9.9,1X,I10.3)
                GO TO 300
            ENDIF
C     
 159     CONTINUE
C
C           SUBTRACTING SIX HOURS FROM THE PROJECTION 'MTAU'.
C
         MTAU=MTAU-6       
C            
 160  CONTINUE
C    
C        CALL SUBROUTINE 'RETVECT' TO FETCH AND RETURN IN XDATA 
C        THE LATITUDE FOR EACH STATION.
C
      LD(1)=MTABLE(1)
      LD(2)=MTABLE(2)
      LD(3)=MTABLE(3)
      LD(4)=MTABLE(4)
C
      CALL PRSID1(KFILDO,LD,LDPARS)
      CALL RETVEC(KFILDO,KFIL10,IP12,KFILRA,RACESS,NUMRA,
     1            LD,LDPARS,JD,ITAU,
     2            NDATE,MDATE,CCALL,ISDATA,XDATA,ND1,NSTA,
     3            ICALLD,CCALLD,IPACK,IWORK,DATA,ND5,
     4            LSTORE,ND9,LITEMS,CORE,ND10,
     5            NBLOCK,NFETCH,
     6            IS0,IS1,IS2,IS4,ND7,
     7            L3264B,L3264W,IER)
C
C        JD( ) IS NOT ACTUALLY USED IN RETVEC.  IT IS USED
C        IN CALL TO CONST, BUT CONST DOES NOT USE IT EITHER.
C
            IF(IER.NE.0)THEN
                WRITE(KFILDO,162)(LD(M),M=1,4)
 162            FORMAT(/,' ****VARIABLE NOT RETRIEVED BY RETVEC IN',
     1                 ' SOLENG',2X,I9.9,1X,I9.9,1X,I9.9,1X,I10.3)
                GO TO 300
            ENDIF
C
C        CALL SUBROUTINE 'RETVEC' TO FETCH THE LONGITUDE FOR EACH STATION
C        AND RETURN VALUES IN SLONG.
C
      LD(1)=MTABLE(5)
      LD(2)=MTABLE(6)
      LD(3)=MTABLE(7)
      LD(4)=MTABLE(8)
C
      CALL PRSID1(KFILDO,LD,LDPARS)
      CALL RETVEC(KFILDO,KFIL10,IP12,KFILRA,RACESS,NUMRA,
     1            LD,LDPARS,JD,ITAU,
     2            NDATE,MDATE,CCALL,ISDATA,SLONG,ND1,NSTA,
     3            ICALLD,CCALLD,IPACK,IWORK,DATA,ND5,
     4            LSTORE,ND9,LITEMS,CORE,ND10,
     5            NBLOCK,NFETCH,
     6            IS0,IS1,IS2,IS4,ND7,
     7            L3264B,L3264W,IER)
C
C        JD( ) IS NOT ACTUALLY USED IN RETVEC.  IT IS USED
C        IN CALL TO CONST, BUT CONST DOES NOT USE IT EITHER.
C
      IF(IER.NE.0)THEN
         WRITE(KFILDO,163)(LD(M),M=1,4)
 163     FORMAT(/,' ****VARIABLE NOT RETRIEVED BY RETVEC IN', 
     1          ' SOLENG',2X,I9.9,1X,I9.9,1X,I9.9,1X,I10.3)
         GO TO 300
      ENDIF
C            
C        CALL SUBROUTINE 'SUNHRS' TO CALCULATE THE HOURS OF SUNLIGHT
C        WHICH IS RETURNED IN XDATA AND THE EXTRATERRESTRIAL RADIATION
C        (ETR) WHICH IS RETURNED IN DATA.
C 
      CALL SUNHRS(KFILDO,MDATE,IDPARS,XDATA,
     1            DATA,ND1,ND5,NSTA)
C
      DO 190 K=1,NSTA
C
C           IF A CLOUD FORECAST IS MISSING FOR A PARTICULAR STATION,
C           DO NOT COMPUTE THE FRACTION OF SOLAR ENERGY FOR THAT 
C           STATION.
C      
         DO 165 L=1,3
C
            DO 164 J=1,4
C 
               IF(NINT(ZDATA(K,L,J)).EQ.9999) THEN
                  XDATA(K)=9999.
                  GO TO 190
               ELSEIF(NINT(ZDATA(K,L,J)).EQ.9997) THEN
                  XDATA(K)=0.
C                    CLOUD PROBABILITIES CAN BE 9997, MEANING 0.
               ENDIF
C
 164        CONTINUE
C
 165     CONTINUE
C       
C           CALCULATE THE WEIGHTING FACTORS FOR 12, 18, AND 00 GMT.
C           CHECK FIRST FOR MISSING LATITUDE OR LONGITUDE.
C           
         IF(NINT(SLONG(K)).EQ.9999.OR.
     1      NINT(XDATA(K)).EQ.9999)THEN
            XDATA(K)=9999.
            GO TO 190
         ENDIF
C
         COEFH(1)=.54514-.00318*SLONG(K)-.00442*XDATA(K)
         COEFH(2)=1.06897-.00438*SLONG(K)-.01875*XDATA(K)
         COEFH(3)=-.61410+.00756*SLONG(K)+.02315*XDATA(K)
C
C           ZERO-OUT XDATA WHICH HOLDS THE AMOUNT OF SUNLIGHT FOR THAT 
C           PARTICULAR STATION.  THAT WAY PERCENT OF ETR CAN BE NOW BE 
C           STORED IN IT.
C         
         XDATA(K)=0.    
C
C           CHECK FOR STATION DEW POINTS.  IF ALL ARE MISSING, SET A 
C           FLAG (MFALG=0) AND USE BACK-UP EQUATION FOR FORECAST OF 
C           PERCENT OF ETR.
C         
         IF(NINT(YDATA(K,1)).NE.9999.AND.
     1      NINT(YDATA(K,2)).NE.9999.AND.
     2      NINT(YDATA(K,3)).NE.9999)GO TO 170
C
C           AT LEAST ONE DEW POINT PROJECTION IS MISSING.  THEREFORE,
C           USE THE BACK-UP EQUATION TO MAKE THE FORECAST.
C    
         DO 169 L=1,3
            XDATA(K)=XDATA(K)+COEFH(L)*(BINTER+BOEFC(1)*
     1               ZDATA(K,L,1)+BOEFC(2)*ZDATA(K,L,2)+
     2               BOEFC(3)*ZDATA(K,L,3)+BOEFC(4)*ZDATA(K,L,4)+
     3               BOEFE*DATA(K))
 169     CONTINUE
C 
         GO TO 180
C             
C           PRIOR TO USING THE PRIMARY EQUATION, ENSURE THAT THE DEW POINT 
C           TEMPERATURES ARE THERE FOR EACH PERIOD. IF NOT, EITHER SWAP VALUES
C           WITH ANOTHER PERIOD IN WHICH DEW POINT FORECASTS ARE AVAILABLE OR
C           USE AN AVERAGE DEW POINT FORECAST.
C         
 170     IF(NINT(YDATA(K,1)).EQ.9999.AND.
     1      NINT(YDATA(K,2)).NE.9999.AND.
     2      NINT(YDATA(K,3)).NE.9999) THEN
C  
               YDATA(K,1)=YDATA(K,2)
C       
         ELSEIF(NINT(YDATA(K,2)).EQ.9999.AND.
     1          NINT(YDATA(K,1)).NE.9999.AND.
     2          NINT(YDATA(K,3)).NE.9999) THEN
C             
            YDATA(K,2)=(YDATA(K,1)+YDATA(K,3))/2.
C
         ELSEIF(NINT(YDATA(K,3)).EQ.9999.AND.
     1          NINT(YDATA(K,1)).NE.9999.AND.
     2          NINT(YDATA(K,2)).NE.9999) THEN
C  
            YDATA(K,3)=YDATA(K,2)
C
         ELSEIF(NINT(YDATA(K,1)).EQ.9999.AND.
     1          NINT(YDATA(K,2)).EQ.9999.AND.
     2          NINT(YDATA(K,3)).NE.9999) THEN
C     
            YDATA(K,1)=YDATA(K,3)
            YDATA(K,2)=YDATA(K,3)
C
         ELSEIF(NINT(YDATA(K,1)).EQ.9999.AND.
     1          NINT(YDATA(K,3)).EQ.9999.AND.
     2          NINT(YDATA(K,2)).NE.9999) THEN
C          
            YDATA(K,1)=YDATA(K,2)
            YDATA(K,3)=YDATA(K,2) 
C
         ELSEIF(NINT(YDATA(K,2)).EQ.9999.AND.
     1          NINT(YDATA(K,3)).EQ.9999.AND.
     2          NINT(YDATA(K,1)).NE.9999) THEN
C            
            YDATA(K,2)=YDATA(K,1)
            YDATA(K,3)=YDATA(K,1)
C               
         ENDIF
C        
C           CALCULATE THE FORECAST FROM THE PRIMARY EQUATION.
C
         DO 172 L=1,3
C
            XDATA(K)=XDATA(K)+COEFH(L)*(RINTER+COEFC(1)*
     1               ZDATA(K,L,1)+COEFC(2)*ZDATA(K,L,2)+
     2               COEFC(3)*ZDATA(K,L,3)+COEFC(4)*ZDATA(K,L,4)+
     3               COEFD*YDATA(K,L)+COEFE*DATA(K))
C     
 172     CONTINUE
C
C           MAKE SURE THAT THE PRIMARY FORECAST OF PERCENT OF ETR IS BETWEEN 
C           .05 AND .85 .
C
 180  IF(XDATA(K).GT..85) XDATA(K)=.85
      IF(XDATA(K).LT..05) XDATA(K)=.05       
C       
 190  CONTINUE
C
      GO TO 350
C
C        THIS PREDICTOR CANNOT BE COMPUTED.  SET THE ARRAY TO MISSING.
C
 300  DO 310 K=1,NSTA
         XDATA(K)=9999.
 310  CONTINUE 
C
 350  RETURN
      END     
                  
