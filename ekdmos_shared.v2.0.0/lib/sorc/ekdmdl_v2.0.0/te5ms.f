      SUBROUTINE TE5MS(KFILDO,KFIL10,KFILRA,RACESS,NUMRA,IDPARS,JD,
     1                 NDATE,NGRIDC,ND11,NSLAB,IPACK,IWORK,THESM5,ND5,
     2                 LSTORE,ND9,LITEMS,CORE,ND10,NBLOCK,NFETCH,
     3                 IS0,IS1,IS2,IS4,ND7,
     4                 FD1,FD2,FD3,FD4,FD5,FD6,FD7,ND2X3,
     5                 ISTAV,L3264B,MISTOT,IER)
C
C        MAY      2005 CHARBA  MDL  MOS 2000                      
C        JUNE     2005 CHARBA  REPLACED INTERNAL COMPUTATION OF SFC 
C			       THETAE WITH CALL TO SUBROUTINE TESFC.
C        SEPTEMBER2005 CHARBA  CHANGED TO ACCOMMODATE SWITCH IN ID(1) 
C			       FROM 007162008 TO 007162005.
C        JUNE     2006 CHARBA  MADE COSMETIC CHANGES TO SATISFY CODE
C                              WALK-THRU
C        JUNE     2006 CHARBA  THIS NEW VERSION OF TE5MS INCORPORATES
C                              THE CONTENTS OF TELMP.  THIS AVERTS THE
C                              NECESSITY OF A NEW ID FOR 500-MB THETAE
C                              THAT IS VALID FOR ANY LAMP FORECAST 
C                              PROJECTION.
C        JUNE     2006 CHARBA  IN THIS VERSION OF TE5MS, TIMGRD, WHICH
C                              DOES NOT MEET MOS-2000 STANDARDS, HAS 
C                              BEEN REMOVED.  THIS CHANGE MEANS THAT THE
C                              TIME INTERPOLATION PERFORMED BY TIMGRD
C                              MUST BE CODED HERE. 
C
C        PURPOSE 
C            TO COMPUTE NCEP MODEL 500-MB THETAE MINUS LAMP SURFACE 
C	     THETAE.  THE LAMP SURFACE THETAE IS COMPUTED FROM LAMP 
C	     SURFACE TEMPERATURE, DEWPOINT, SEA LEVEL PRESSURE, AND 
C	     TERRAIN ELEVATION.  THE ROUTINE ASSUMES THE LAMP AND NCEP
C	     MODEL GRIDS ARE IDENTICAL.   
C	     NOTE:  [THE NCEP MODEL THETAE COULD BE SPECIFIED FOR A 
C	     DIFFERENT LEVEL THAN 500 MB (SAY 700 MB) WITHOUT CHANGING 
C	     CODE.  ONLY ID(2) IN U201.CN, WHICH SPECIFIES THE UPPER 
C	     LEVEL, WOULD NEED TO BE CHANGED.]  THIS CODE CAN COMPUTE
C	     THE VARIABLE AT ANY PROJECTION NEEDED FOR LAMP, SINCE IT
C	     PERFORMS TIME INTERPOLATION OF NCEP MODEL VARIABLES AS 
C	     NEEDED.
C
C            THE FOLLOWING IDPARS(1) AND IDPARS(2) ARE ACCOMMODATED:
C	                     007           162
C
C        DATA SET USE 
C            KFILDO - DEFAULT UNIT NUMBER FOR OUTPUT (PRINT) FILE. 
C		      (OUTPUT) 
C            KFIL10 - UNIT NUMBER OF TDL MOS-2000 FILE SYSTEM ACCESS.
C                     (INPUT-OUTPUT) 
C 
C        VARIABLES 
C              KFILDO = DEFAULT UNIT NUMBER FOR OUTPUT (PRINT) FILE. 
C		        (INPUT) 
C              KFIL10 = UNIT NUMBER OF TDL MOS-2000 FILE SYSTEM ACCESS.
C                       (INPUT)
C           KFILRA(J) = UNIT NUMBERS FOR RANDOM ACCESS FILES
C                       (J=1,NUMRA).  (INPUT)
C           RACESS(J) = NAMES OF RANDOM ACCESS FILES (J=1,NUMRA).
C                       (INPUT/CHARACTER*60)
C               NUMRA = NUMBER OF RANDOM ACCESS FILES.  (INPUT)
C           IDPARS(J) = THE PARSED, INDIVIDUAL COMPONENTS OF THE PRE-
C	 		DICTOR ID CORRESPONDING TO ID( ) (J=1,15).
C                       (INPUT)
C                       J=1--CCC (CLASS OF VARIABLE),
C                       J=2--FFF (SUBCLASS OF VARIABLE),
C                       J=3--B (BINARY INDICATOR),
C                       J=4--DD (DATA SOURCE, MODEL NUMBER),
C                       J=5--V (VERTICAL APPLICATION),
C                       J=6--LBLBLBLB (BOTTOM OF LAYER, 0 IF ONLY 1 
C			     LAYER),
C                       J=7--LTLTLTLT (TOP OF LAYER),
C                       J=8--T (TRANSFORMATION),
C                       J=9--RR (RUN TIME OFFSET, ALWAYS + AND BACK IN 
C			     TIME),
C                       J=10--OT (TIME APPLICATION),
C                       J=11--OH (TIME PERIOD IN HOURS),
C                       J=12--TAU (PROJECTION IN HOURS),
C                       J=13--I (INTERPOLATION TYPE),
C                       J=14--S (SMOOTHING INDICATOR), AND
C                       J=15--G (GRID INDICATOR).
C               JD(J) = THE BASIC INTEGER PREDICTOR ID (J=1,4).
C                       THIS IS THE SAME AS ID(J), EXCEPT THAT THE POR-
C			TIONS PERTAINING TO PROCESSING ARE OMITTED:
C                       B = IDPARS(3),
C                       T = IDPARS(8),
C                       I = IDPARS(13),
C                       S = IDPARS(14),
C                       G = IDPARS(15), AND
C                       THRESH.
C                       JD( ) IS USED TO HELP IDENTIFY THE BASIC MODEL 
C			FIELDS
C                       AS READ FROM THE ARCHIVE.  (INPUT)
C               NDATE = THE DATE/TIME FOR WHICH PREDICTOR IS NEEDED.  
C			(INPUT)
C         NGRIDC(L,M) = HOLDS THE GRID CHARACTERISTICS (L=1,6) FOR EACH 
C			GRID COMBINATION (M=1,NGRID).
C                       L=1--MAP PROJECTION NUMBER (3=LAMBERT, 5=POLAR
C                            STEREOGRAPHIC). 
C                       L=2--GRID LENGTH IN MILLIMETERS,
C                       L=3--LATITUDE AT WHICH GRID LENGTH IS CORRECT 
C			     *10000,
C                       L=4--GRID ORIENTATION IN DEGREES *10000,
C                       L=5--LATITUDE OF LL CORNER IN DEGREES *10000,
C                       L=6--LONGITUDE OF LL CORNER IN DEGREES *10000.
C                ND11 = MAXIMUM NUMBER OF GRID COMBINATIONS THAT CAN BE
C                       DEALT WITH ON THIS RUN.  LAST DIMENSION OF
C                       NGRIDC( , ).  (INPUT)
C               NSLAB = RETURNED FROM GFETCH AS THE VALUE STORED IN
C                       LSTORE(10, ) FOR THE HEIGHTS, WHEN THE HEIGHTS
C                       HAVE BEEN CORRECTLY RETURNED.  THIS VARIABLE 
C                       MUST BE RETURNED TO OPTION.  WHEN IER NE 0, 
C			THIS VALUE SHOULD NOT BE USED.  (OUTPUT) 
C            IPACK(J) = WORK ARRAY (J=1,ND5).  (INTERNAL)
C            IWORK(J) = WORK ARRAY (J=1,ND5).  (INTERNAL)
C           THESM5(J) = FIRST HOLDS 500-MB THETAE, AND THEN SURFACE
C			THETAE MINUS 500-MB THETAE (J=1,ND5).  (OUTPUT)
C		  ND5 = DIMENSION OF IPACK( ),IWORK( ), AND THESM5( ).
C			INPUT
C         LSTORE(L,J) = THE ARRAY HOLDING INFORMATION ABOUT THE DATA 
C                       STORED (L=1,12) (J=1,LITEMS).  (INPUT-OUTPUT)
C                       L=1,4--THE 4 ID'S FOR THE DATA.
C                       L=5  --LOCATION OF STORED DATA.  WHEN IN CORE,
C                              THIS IS THE LOCATION IN CORE( ) WHERE
C                              THE DATA START.  WHEN ON DISK, 
C                              THIS IS MINUS THE RECORD NUMBER WHERE 
C                              THE DATA START.
C                       L=6  --THE NUMBER OF 4-BYTE WORDS STORED.
C                       L=7  --2 FOR DATA PACKED IN TDL GRIB, 1 FOR NOT.
C                       L=8  --THE DATE/TIME OF THE DATA IN FORMAT
C                              YYYYMMDDHH.
C                       L=9  --NUMBER OF TIMES DATA HAVE BEEN RETRIEVED.
C                       L=10 --NUMBER OF THE SLAB IN DIR( , ,L) AND
C                              IN NGRIDC( ,L) DEFINING THE CHARACTERIS-
C			       TICS OF THIS GRID.
C                       L=11 --THE NUMBER OF THE PREDICTOR IN THE SORTED
C                              LIST IN ID( ,N) (N=1,NPRED) FOR WHICH 
C			       THIS VARIABLE IS NEEDED, WHEN IT IS NEED-
C			       ED ONLY ONCE FROM LSTORE( , ).  WHEN IT 
C			       IS NEEDED MORE THAN ONCE, THE VALUE IS 
C			       SET = 7777.
C                       L=12 --USED INITIALLY IN ESTABLISHING 
C			       MOSTORE( , ).
C                              LATER USED AS A WAY OF DETERMINING WHE-
C			       THER TO KEEP THIS VARIABLE.
C                 ND9 = THE SECOND DIMENSION OF LSTORE( , ).  (INPUT)
C              LITEMS = THE NUMBER OF ITEMS (COLUMNS) IN LSTORE( , ) 
C			THAT HAVE BEEN USED IN THIS RUN.  (INPUT)
C             CORE(J) = THE ARRAY TO STORE OR RETIREVE THE DATA IDENTI-
C			FIED IN LSTORE( , ) (J=1,ND10).  WHEN CORE( ) IS
C		        FULL DATA ARE STORED ON DISK.  (INPUT)
C                ND10 = DIMENSION OF CORE( ).  (INPUT)
C              NBLOCK = THE BLOCK SIZE IN WORDS OF THE MOS-2000 RANDOM
C                       DISK FILE.  (INPUT)
C              NFETCH = INCREMENTED EACH TIME GFETCH IS ENTERED.
C                       IT IS A RUNNING  COUNT FROM THE BEGINNING OF THE
C                       PROGRAM.  THIS COUNT IS MAINTAINED IN CASE THE 
C			USER NEEDS IT (DIAGNOSTICS, ETC.).  (OUTPUT)
C              IS0(J) = MOS-2000 GRIB SECTION 0 ID'S (J=1,3).  
C			(INTERNAL)
C              IS1(J) = MOS-2000 GRIB SECTION 1 ID'S (J=1,22+).  
C			(INTERNAL)
C              IS2(J) = MOS-2000 GRIB SECTION 2 ID'S (J=1,12).
C                       IS2(3) AND IS2(4) ARE USED BY THE CALLING
C                       PROGRAM AS THE GRID DIMENSIONS.  (INTERNAL-
C		        OUTPUT)
C              IS4(J) = MOS-2000 GRIB SECTION 4 ID'S (J=1,4).  
C			(INTERNAL)
C                 ND7 = DIMENSION OF IS0( ), IS1( ), IS2( ), AND IS4( ).
C                       NOT ALL LOCATIONS ARE USED.  (INPUT)
C              FD1(K) = WORK ARRAY (K=1,ND2X3).  (INTERNAL)
C              FD2(K) = WORK ARRAY (K=1,ND2X3).  (INTERNAL)
C              FD3(K) = WORK ARRAY (K=1,ND2X3).  (INTERNAL)
C              FD4(K) = WORK ARRAY (K=1,ND2X3).  (INTERNAL)
C              FD5(K) = WORK ARRAY (K=1,ND2X3).  (INTERNAL)
C              FD6(K) = WORK ARRAY (K=1,ND2X3).  (INTERNAL)
C              FD7(K) = WORK ARRAY (K=1,ND2X3).  (INTERNAL)
C               ND2X3 = DIMENSION OF THE SEVEN VARIABLES ABOVE.  (INPUT)
C               ISTAV = SET TO 0 TO INDICATE A GRID FIELD IS BEING RE-
C                       TURNED. (OUTPUT).
C              L3264B = INTEGER WORD LENGTH IN BITS OF MACHINE BEING
C                       USED (EITHER 32 OR 64).  (INPUT)
C              MISTOT = TOTAL NUMBER OF TIMES A MISSING INDICATOR
C                       HAS BEEN ENCOUNTERED IN UNPACKING GRIDS.
C                       (INPUT-OUTPUT)
C                 IER = STATUS RETURN.
C                         0 = GOOD RETURN.
C                        52 = WHEN NSLAB FOR DIFFERENT VARIABLES DO NOT
C                             MATCH
C                       103 = IDPARS(1) AND IDPARS(2) NOT ACCOMMODATED.
C                       SEE GFETCH, TESFC, LCL, AND MIXRAT FOR
C                       OTHER VALUES.
C                       WHEN IER NE 0, DATA ARE RETURNED AS MISSING.
C                       (INTERNAL-OUTPUT)
C              NTIMES = THE NUMBER OF TIMES, INCLUDING THIS ONE, THAT 
C			THE RECORD HAS BEEN FETCHED.  THIS IS STORED IN
C                       LSTORE(9, ).  (INTERNAL)
C               LD(J) = HOLDS THE 4 ID WORDS OF INTERNAL VARIABLES TO  
C                       COMPUTE (J=1,4).  (INTERNAL)
C	    LDPARS(J) = AS FOR IDPARS( ), BUT CORRESPONDING TO LD( )
C			(J=1,15).  (INTERNAL) 
C              IMODEL = NCEP MODEL USED FOR GRIDDED DATA INGEST.  (DATA)
C               MISSP = PRIMARY MISSING VALUE INDICATOR.  RETURNED AS 
C			ZERO WHEN DATA ARE NOT PACKED.  (INTERNAL)
C               MISSS = SECONDARY MISSING VALUE INDICATOR.  RETURNED AS
C		        ZERO WHEN DATA ARE NOT PACKED.  (INTERNAL)
C              IPRESS = VARIABLE CONTAINING THE VALUE OF THE CONSTANT
C                       PRESSURE SURFACE REQUESTED BY THE USER.  THIS
C                       IS THE LOWEST LEVEL OF THE PARCEL.  IT IS THE
C                       SAME AS IDPARS(7).
C                IPPP = 1000/IPRESS, USED IN CALCULATION OF THE
C                       POTENTIAL TEMPERATURE FOR MOIST AIR.  (INTERNAL)
C              RKAPPA = RD/CP, VALUE IS .28573 (OR 2/7) WHERE RD IS
C                       DRY AIR GAS CONSTANT, CP IS SPECIFIC HEAT OF
C                       DRY AIR AT CONSTANT PRESSURE.  (PARAMETER)
C 
C        NONSYSTEM SUBROUTINES CALLED 
C            GFETCH, TESFC, LCL, MIXRAT
C
      PARAMETER(RKAPPA=.28573)
C
      CHARACTER*60 RACESS(NUMRA)
C      
      DIMENSION NGRIDC(6,ND11)
      DIMENSION IDPARS(15),JD(4),LD(4),LDPARS(15),KFILRA(NUMRA)
      DIMENSION FD1(ND2X3),FD2(ND2X3),FD3(ND2X3),FD4(ND2X3),
     1          FD5(ND2X3),FD6(ND2X3),FD7(ND2X3)
      DIMENSION IPACK(ND5),IWORK(ND5),THESM5(ND5)
      DIMENSION IS0(ND7),IS1(ND7),IS2(ND7),IS4(ND7)
      DIMENSION LSTORE(12,ND9)
      DIMENSION CORE(ND10)
      DIMENSION ICCCFFF(4)
C
      DATA IMODEL/08/
      DATA ICCCFFF/003132,                      ! LAMP SFC THETAE
     1             002000,                      ! TEMPERATURE
     2             003161,                      ! LCL TEMPERATURE
     3             003010/                      ! MIXING RATIO
C 	 
C	 CHECK WHETHER THIS ROUTINE APPLIES TO JD(1).
C
C	 NOTE:  THE ID FOR THIS VARIABLE CORRESPONDS TO THAT FOR THE 
C	 NCEP MODEL ...THE "RR" PARAMETER IS NEEDED SINCE THE NCEP MODEL
C	 500-MB TEMPERATURE IS NEEDED.  NOTE:  THIS ROUTINE ASSUMES LAMP
C	 AND NCEP MODEL GRIDS ARE THE SAME SIZE.
C
      IF(IDPARS(1).EQ.007.AND.IDPARS(2).EQ.162) GO TO 30
C
      WRITE(KFILDO,20) JD
 20   FORMAT(/,' **** VARIABLE ',I9.9,2I10.9,I4.3,' CANNOT BE COMPU',
     1         'TED IN TE5MS ...SET IER=103 AND SUPPLY MISSING VALUES')
      IER=103
      GO TO 800   
C
 30   IER=0                                             
      ISTAV=0             
C
C	 GET SURFACE THETAE IN FD1( ) FROM CALL TO TESFC.
C
      LD(1)=ICCCFFF(1)*1000+IDPARS(4)
      LD(2)=000000002
      LD(3)=IDPARS(12)-IDPARS(9)
      LD(4)=JD(4)
      CALL PRSID1(KFILDO,LD,LDPARS)
C
C        NOTE:  THE ARRAYS IPACK( ), IWORK( ), AND FD1( ) ARE DIMENSION-
C               ED ND5 IN TESFC.  HOWEVER, IT IS SAFE TO PASS IN
C               ND2X3 SINCE THEY INVOLVE ONLY MODEL GRIDS.  THIS CHANGE
C               RESULTS IN ND2X3 BEING REPEATED IN THE ARGUMENT LIST.
C
      CALL TESFC(KFILDO,KFIL10,KFILRA,RACESS,NUMRA,LDPARS,LD,
     1           NDATE,NSLABS,IPACK,IWORK,FD1,ND2X3,
     2           LSTORE,ND9,LITEMS,CORE,ND10,NBLOCK,NFETCH,
     3           IS0,IS1,IS2,IS4,ND7,
     4           FD2,FD3,FD4,FD5,ND2X3,
     5           ISTAV,L3264B,MISTOT,IER)
      IF(IER.NE.0) THEN
        WRITE(KFILDO,40) JD
 40     FORMAT(/,'**** IN TE5MS, SFC THETAE COULD NOT BE COMPUTED',
     1           ' ...SUPPLY MISSING VALUES FOR ',4I10.9)
        GO TO 800
      ENDIF
C
      NWORDS=IS2(3)*IS2(4)
C
C	 COMPUTE 500-MB EQUIVALENT POTENTIAL TEMPERATURE IN THESM5(ND5).
C        MUCH OF THE FOLLOWING CODE WAS TAKEN FROM THE MOS-2000 ROUTINE
C        THETAE.  IT WAS ADAPTED, HOWEVER, SO THAT THETAE CAN BE 
C        COMPUTED FOR ANY LAMP PROJECTION.  THIS REQUIRES THE TIME 
C        INTERPOLATION OF BOTH BASIC AND DERIVED (INTERMEDIATE) 
C        VARIABLES FOR THE NON-3-HOURLY TIMES.
C
C        CREATE ID FOR TEMPERATURE AT LIFTED CONDENSATION LEVEL.  IF TAU
C        IS NOT A WHOLE MULTIPLE OF 3 HOURS, LCL TEMP MUST BE OBTAINED
C        AT TWO 3-HOURLY TIMES AND THEN INTERPOLATED.
C
      LD(1)=ICCCFFF(3)*1000+IMODEL
      LD(2)=IDPARS(7)
      LD(4)=0
C
      NTAUMD=MOD(IDPARS(12),3)
C
      IF(NTAUMD.EQ.0) THEN
        LD(3)=IDPARS(9)*1000000+IDPARS(12)
C
C          GET 500-MB LCL TEMP IN FD6( ).
C
        CALL PRSID1(KFILDO,LD,LDPARS)
C
C          NOTE:  THE DIMENSION OF IPACK( ), IWORK( ), AND FD6( ) IS
C                 ND5 IN LCL, BUT IT IS SAFE TO USE ND2X3 SINCE ONLY
C                 MODEL GRIDS ARE USED.  THE DOWNSIDE IS THAT ND2X3
C                 APPEARS TWICE IN THE CALL LIST.
C
        CALL LCL(KFILDO,KFIL10,LDPARS,JD,NDATE,
     1           NGRIDC,ND11,NSLABU,IPACK,IWORK,FD6,ND2X3,
     2           LSTORE,ND9,LITEMS,CORE,ND10,NBLOCK,NFETCH,
     3           IS0,IS1,IS2,IS4,ND7,
     4           FD2,FD3,FD4,FD5,ND2X3,
     5           ISTAV,L3264B,MISTOT,IER)
        IF(IER.NE.0) THEN
          WRITE(KFILDO,50) JD
 50       FORMAT(/,'**** IN TE5MS, LCL TEMP COULD NOT BE COMPUTED',
     1             ' ...SUPPLY MISSING VALUES FOR ',4I10.9)
          GO TO 800
        ENDIF
C
        IF(NSLABS.NE.NSLABU) THEN
          IER=52
          WRITE(KFILDO,60) NSLABS,NSLABU,IER
 60       FORMAT(/,' **** IN TE5MS, NSLAB OF ',I3,' FOR SFC THETAE ',
     1             'NOT THE SAME AS NSLAB OF ',I3,' FOR LCL TEMP',
     2             ' ...SET IER = 52 AND RETURN MISSING VALUES')
          GO TO 800
        ENDIF
C
      ELSE
C
C          GET 500-MB LCL TEMP AT FIRST 3-HOURLY TIME IN FD6( ).
C
        LD(3)=IDPARS(9)*1000000+IDPARS(12)-NTAUMD
        CALL PRSID1(KFILDO,LD,LDPARS)
        CALL LCL(KFILDO,KFIL10,LDPARS,JD,NDATE,
     1           NGRIDC,ND11,NSLABU,IPACK,IWORK,FD6,ND2X3,
     2           LSTORE,ND9,LITEMS,CORE,ND10,NBLOCK,NFETCH,
     3           IS0,IS1,IS2,IS4,ND7,
     4           FD2,FD3,FD4,FD5,ND2X3,
     5           ISTAV,L3264B,MISTOT,IER)
        IF(IER.NE.0) THEN
          WRITE(KFILDO,70) JD
 70       FORMAT(/,'**** IN TE5MS, LCL TEMP COULD NOT BE COMPUTED',
     1           ' FOR FIRST 3-HOURLY TIME ...SUPPLY MISSING VALUES',
     2           ' FOR ',4I10.9)
          GO TO 800
        ENDIF
C
C          GET 500-MB LCL TEMP AT SECOND 3-HOURLY TIME IN FD7( ).
C
        LD(3)=LD(3)+3
        CALL PRSID1(KFILDO,LD,LDPARS)
        CALL LCL(KFILDO,KFIL10,LDPARS,JD,NDATE,
     1           NGRIDC,ND11,NSLABU,IPACK,IWORK,FD7,ND2X3,
     2           LSTORE,ND9,LITEMS,CORE,ND10,NBLOCK,NFETCH,
     3           IS0,IS1,IS2,IS4,ND7,
     4           FD2,FD3,FD4,FD5,ND2X3,
     5           ISTAV,L3264B,MISTOT,IER)
        IF(IER.NE.0) THEN
          WRITE(KFILDO,80) JD
 80       FORMAT(/,'**** IN TE5MS, LCL TEMP COULD NOT BE COMPUTED',
     1           ' FOR 2ND 3-HOURLY TIME ...SUPPLY MISSING VALUES',
     2           ' FOR ',4I10.9)
          GO TO 800
        ENDIF
C
        IF(NSLABS.NE.NSLABU) THEN
          IER=52
          WRITE(KFILDO,60) NSLABS,NSLABU,IER
          GO TO 800
        ENDIF
C
C          DO TIME INTERPOLATION BETWEEN FD6( ) AND FD7( ) ...PUT IT 
C          INTO FD6( ).
C
        F=FLOAT(NTAUMD)/3.
C
        DO 90 J=1,NWORDS
          FD6(J)=(FD7(J)-FD6(J))*F+FD6(J)
 90     CONTINUE
C
      ENDIF
C
C
C        CREATE ID FOR 500-MB MIXING RATIO.  IF TAU IS NOT A WHOLE 
C        MULTIPLE OF 3 HOURS, MIXING RATIO MUST BE OBTAINED AT TWO 
C        3-HOURLY TIMES AND THEN INTERPOLATED.
C
      LD(1)=ICCCFFF(4)*1000+IMODEL
C
      IF(NTAUMD.EQ.0) THEN
        LD(3)=IDPARS(9)*1000000+IDPARS(12)
        CALL PRSID1(KFILDO,LD,LDPARS)
C
C          GET 500-MB MIXING RATIO INTO FD5( ).
C
C          NOTE:  THE DIMENSION OF IPACK( ), IWORK( ), AND FD5( ) IS
C                 ND5 IN MIXRAT, BUT IT IS SAFE TO USE ND2X3 SINCE ONLY
C                 MODEL GRIDS ARE USED.  THE DOWNSIDE IS THAT ND2X3
C                 APPEARS TWICE IN THE CALL LIST.
C
        CALL MIXRAT(KFILDO,KFIL10,LDPARS,JD,NDATE,
     1              NGRIDC,ND11,NSLABU,IPACK,IWORK,FD5,ND2X3,
     2              LSTORE,ND9,LITEMS,CORE,ND10,NBLOCK,NFETCH,
     3              IS0,IS1,IS2,IS4,ND7,
     4              FD2,FD3,FD4,ND2X3,
     5              ISTAV,L3264B,MISTOT,IER)
        IF(IER.NE.0) THEN
          WRITE(KFILDO,100) JD
 100      FORMAT(/,'**** IN TE5MS, 500-MB MIXING RATIO COULD NOT BE',
     1             ' COMPUTED ...SUPPLY MISSING VALUES FOR ',4I10.9)
          GO TO 800
        ENDIF
C
      ELSE
C
C          GET 500-MB MIXING RATIO AT THE FIRST 3-HOURLY TIME IN FD5( ).
C
        LD(3)=IDPARS(9)*1000000+IDPARS(12)-NTAUMD
        CALL PRSID1(KFILDO,LD,LDPARS)
        CALL MIXRAT(KFILDO,KFIL10,LDPARS,JD,NDATE,
     1              NGRIDC,ND11,NSLABU,IPACK,IWORK,FD5,ND2X3,
     2              LSTORE,ND9,LITEMS,CORE,ND10,NBLOCK,NFETCH,
     3              IS0,IS1,IS2,IS4,ND7,
     4              FD2,FD3,FD4,ND2X3,
     5              ISTAV,L3264B,MISTOT,IER)
        IF(IER.NE.0) THEN
          WRITE(KFILDO,105) JD
 105      FORMAT(/,'**** IN TE5MS, 500-MB MIXING RATIO COULD NOT BE',
     1             ' COMPUTED FOR FIRST 3-HOURLY TIME ...SUPPLY',
     2             ' MISSING VALUES FOR ',4I10.9)
          GO TO 800
        ENDIF
C
C          GET 500-MB MIXING RATIO AT THE 2ND 3-HOURLY TIME IN FD7( ).
C
        LD(3)=LD(3)+3
        CALL PRSID1(KFILDO,LD,LDPARS)
        CALL MIXRAT(KFILDO,KFIL10,LDPARS,JD,NDATE,
     1              NGRIDC,ND11,NSLABU,IPACK,IWORK,FD7,ND2X3,
     2              LSTORE,ND9,LITEMS,CORE,ND10,NBLOCK,NFETCH,
     3              IS0,IS1,IS2,IS4,ND7,
     4              FD2,FD3,FD4,ND2X3,
     5              ISTAV,L3264B,MISTOT,IER)
        IF(IER.NE.0) THEN
          WRITE(KFILDO,110) JD
 110      FORMAT(/,'**** IN TE5MS, 500-MB MIXING RATIO COULD NOT BE',
     1             ' COMPUTED FOR 2ND 3-HOURLY TIME ...SUPPLY',
     2             ' MISSING VALUES FOR ',4I10.9)
          GO TO 800
        ENDIF
C
C          DO TIME INTERPOLATION BETWEEN FD5( ) AND FD7( ) ...PUT INTO
C          FD5( ).
C
        DO 120 J=1,NWORDS
          FD5(J)=(FD7(J)-FD5(J))*F+FD5(J)
 120    CONTINUE
C
      ENDIF
C
C        CREATE ID FOR 500-MB TEMPERATURE AT REQUESTED SURFACE.
C
      LD(1)=ICCCFFF(2)*1000+IMODEL
C
C        FETCH 500-MB TEMP AND PUT INTO FD7( ).  IF TAU IS NOT A WHOLE
C        MULTIPLE OF 3 HOURS, THEN TEMP FIELD MUST BE INTERPOLATED BE-
C        TWEEN FD2( ) AND FD7( ).
C
      IF(NTAUMD.EQ.0) THEN
        LD(3)=IDPARS(9)*1000000+IDPARS(12)
C
        CALL GFETCH(KFILDO,KFIL10,LD,7777,LSTORE,ND9,LITEMS,
     1              IS0,IS1,IS2,IS4,ND7,IPACK,IWORK,FD7,ND2X3,
     2              NWORDS,NPACK,NDATE,NTIMES,CORE,ND10,
     3              NBLOCK,NFETCH,NSLABU,MISSP,MISSS,L3264B,
     4              1,IER)
        IF(IER.NE.0)THEN
          MISTOT=MISTOT+1
          WRITE(KFILDO,130) JD
 130      FORMAT(/,'**** IN TE5MS, 500-MB TEMP COULD NOT BE FETCHED',
     1             ' ...SUPPLY MISSING VALUES FOR ',4I10.9)
          GO TO 800
        ENDIF
C
      ELSE
C
C          GET 500-MB TEMP AT THE FIRST 3-HOURLY TIME IN FD2( ).
C
        LD(3)=IDPARS(9)*1000000+IDPARS(12)-NTAUMD
        CALL PRSID1(KFILDO,LD,LDPARS)
        CALL GFETCH(KFILDO,KFIL10,LD,7777,LSTORE,ND9,LITEMS,
     1              IS0,IS1,IS2,IS4,ND7,IPACK,IWORK,FD2,ND2X3,
     2              NWORDS,NPACK,NDATE,NTIMES,CORE,ND10,
     3              NBLOCK,NFETCH,NSLABU,MISSP,MISSS,L3264B,
     4              1,IER)
        IF(IER.NE.0)THEN
          MISTOT=MISTOT+1
          WRITE(KFILDO,140) JD
 140      FORMAT(/,'**** IN TE5MS, 500-MB TEMP COULD NOT BE FETCHED',
     1             ' AT THE FIRST 3-HOURLY TIME ...SUPPLY MISSING',
     2             ' VALUES FOR ',4I10.9)
          GO TO 800
        ENDIF
C
C          GET 500-MB TEMP AT THE 2ND 3-HOURLY TIME IN FD7( ).
C
        LD(3)=LD(3)+3
        CALL PRSID1(KFILDO,LD,LDPARS)
        CALL GFETCH(KFILDO,KFIL10,LD,7777,LSTORE,ND9,LITEMS,
     1              IS0,IS1,IS2,IS4,ND7,IPACK,IWORK,FD7,ND2X3,
     2              NWORDS,NPACK,NDATE,NTIMES,CORE,ND10,
     3              NBLOCK,NFETCH,NSLABU,MISSP,MISSS,L3264B,
     4              1,IER)
        IF(IER.NE.0)THEN
          MISTOT=MISTOT+1
          WRITE(KFILDO,160) JD
 160      FORMAT(/,'**** IN TE5MS, 500-MB TEMP COULD NOT BE FETCHED',
     1             ' AT THE 2ND 3-HOURLY TIME ...SUPPLY MISSING',
     2             ' VALUES FOR ',4I10.9)
          GO TO 800
        ENDIF
C
C          DO TIME INTERPOLATION BETWEEN FD2( ) AND FD7( ) ...PUT INTO
C          FD7( ).
C
        DO 180 J=1,NWORDS
          FD7(J)=(FD7(J)-FD2(J))*F+FD2(J)
 180    CONTINUE
C
      ENDIF
C
C        NOW COMPUTE 500-MB THETAE AND PUT INTO FD4( ).
C
      IPRESS=IDPARS(7)
      IPPP=1000/IPRESS
C
      DO 200 J=1,NWORDS
C
C           COMPUTATION OF THE POTENTIAL TEMPERATURE IS NORMALLY BASED
C           ON POISSON'S EQUATION WHERE THETA=T(1000/P)**KAPPA.
C           FOR THE COMPUTATION OF THE POTENTIAL TEMPERATURE FOR MOIST
C           AIR SEE BOLTON (MWR 1980) OR GEMPAK PARAMETERS APPENDIX
C           THE MIXING RATIO RETURNED FROM MIXRAT (FDMR) HAS THE
C           UNIT KG/KG SO IT IS NOT NECESSARY TO MULTIPLY BY .001
C
         E=RKAPPA*(1.-.28*FD5(J))
         THETA=FD7(J)*(IPPP**E)
C
C           COMPUTE THE EQUIVALENT POTENTIAL TEMPERATURE IN FD4( ).
C           THIS FORMULA IS FOUND IN BOLTON 1980, FORMULA (40)
C
         FD4(J)=THETA*EXP((3.376/FD6(J)-.00254)*
     1          ((1000.*FD5(J))*(1.+.81*FD5(J))))
C
 200  CONTINUE
C         
C	 NOW, COMPUTE 500-MB THETAE - SFC THETAE
C
      DO 300 J=1,NWORDS
         THESM5(J)=FD4(J)-FD1(J)
 300  CONTINUE
C
C          NSLAB MUST BE RETURNED TO OPTION
C
      NSLAB=NSLABU
      GO TO 900
C    
C        SET OUTPUT FIELD TO MISSING WHEN AN ERROR HAS OCCURRED.
C
 800  DO 801 J=1,ND5
         THESM5(J)=9999.
 801  CONTINUE
C
 900  RETURN
      END      
