      SUBROUTINE MDVLMP(KFILDO,KFIL10,KFILRA,RACESS,NUMRA,IDPARS,JD,
     1                  NDATE,NGRIDC,SDATA,ND1,NSTA,ND11,NSLAB,
     2                  IPACK,IWORK,FMRSFC,ND5,
     3                  LSTORE,ND9,LITEMS,CORE,ND10,NBLOCK,NFETCH,
     4                  IS0,IS1,IS2,IS4,ND7,
     5                  FDELV,FDTMP,FDDEW,FDSLP,FD5,FD6,FD7,
     6                  FDSINS,FDMS,ND2X3,
     7                  ISTAV,L3264B,MISTOT,IER)
C
C        DECEMBER 2004  CHARBA  MDL  MOS 2000                      
C	 MAY      2005  CHARBA  REMOVED THE CAPABILITY OF COMPUTING 
C				LAMP SFC GEOSTROPHIC MOISTURE DIVERGENCE
C				[ID(1)=003508] ALTHOUGH THE SUPPORTING 
C				CODE WAS LEFT INTACT.  THUS, THIS VARI-
C				ABLE COULD BE EASILY RESURRECTED.  ALSO 
C				ENHANCED DOCUMENTATION.
C        JUNE     2005  CHARBA  CHANGED INGEST OF LAMP TOPO GRID
C                               FROM SEQUENTIAL FILE TO RANDOM ACCESS
C                               (CONSTANT) FILE.
C        AUGUST   2005  CHARBA  CHANGED TO ACCOMMODATE NEW ID(1) FOR
C                               TERRAIN GRID INGEST.  PREVIOUSLY, DD WAS
C                               MISTAKENLY SET TO 05.  IN THE NEW ID(1)
C                               THE DD VALUE IS 00.
C	 SEPTMBER 2005  CHARBA  CHANGED TO ACCOMMODATE SWITCH IN ID(1)
C				FROM 003509008 TO 003509005.
C        SEPTMBER 2005  CHARBA  CORRECTED CODING ERROR INTRODUCED WHEN 
C				ABOVE CHANGE WAS MADE.
C        MAY      2006  CHARBA  MADE A NUMBER COSMETIC CHANGES BASED ON
C                               CODE WALK-THRU.
C        JULY     2006  CHARBA  CHANGED 9999. TO 9998.5 IN CALL TO 
C                               SMTH9V.
C
C        PURPOSE 
C            TO COMPUTE LAMP SURFACE MOISTURE DIVERGENCE, LAMP SFC GEO-
C	     STROPHIC MOISTURE DIVERGENCE, AND MODIFIED 850-MB 
C	     DIVERGENCE.  IN THE CASE OF ALL THREE VARIABLES THE 
C	     SURFACE MIXING RATIO IS USED AS THE MOISTURE INPUT.  FUR-
C	     THER, THE SURFACE MIXING RATIO IS COMPUTED AT MSL 
C	     AFTER SURFACE TEMPERATURE AND DEWPOINT IS REDUCED TO MSL.
C            THE LAMP SURFACE MOISTURE DIVERGENCE IS COMPUTED FROM THE
C	     ANALYZED SURFACE WIND COMPONENTS.  THUS, THIS VARIABLE 
C            APPLIES ONLY TO TAU=0.  THE LAMP SFC GEOSTROPHIC MOISTURE 
C	     DIVERGENCE USES 1000-MB GEOSTROPHIC WIND; THUS THE VARIABLE
C	     CAN BE COMPUTED FOR ANY TAU VALUE.
C            THE MODIFIED 850-MB MOISTURE DIVERGENCE IS BASED ON THE
C            ABOVE SURFACE MIXING RATIO TOGETHER WITH THE GFS 850-MB 
C	     WINDS.  WHEN THE TAU FOR THE 850-MB WINDS IS NOT A WHOLE
C	     MULTIPLE OF 3 HOURS, THE WINDS ARE TIME INTERPOLATED.  
C	     THE UNITS FOR MOISTURE DIVERGENCE VARIABLES ARE
C	     G/KG/SEC * 10^5.  SMOOTHING FOR ALL THREE VARIABLES IS
C	     PERFORMED IN THIS ROUTINE WITH A 9-PT WEIGHTED AVERAGE WITH
C	     SMOOTHING WEIGHTS TAILORED TO EACH VARIABLE. 
C
C            THE FOLLOWING IDPARS(1) AND IDPARS(2) ARE ACCOMMODATED:
C	        003 - 507  (SURFACE MOISTURE DIVERGENCE--LAMP SFC U, V)
C	        003 - 508  (SURFACE MOISTURE DIVERGENCE--LAMP 1000-MB
C			    GEOSTROPHIC U, V)   ...REMOVED
C		003 - 509  (MODIFIED 850 MB MOISTURE DIVERGENCE)
C
C        DATA SET USE 
C            KFILDO - DEFAULT UNIT NUMBER FOR OUTPUT (PRINT) FILE. 
C		      (OUTPUT) 
C            KFIL10 - UNIT NUMBER OF TDL MOS-2000 FILE SYSTEM ACCESS.
C                     (INPUT-OUTPUT) 
C 
C        VARIABLES 
C              KFILDO = DEFAULT UNIT NUMBER FOR OUTPUT (PRINT) FILE. 
C		        (INPUT) 
C              KFIL10 = UNIT NUMBER OF TDL MOS-2000 FILE SYSTEM ACCESS.
C                       (INPUT)
C               NUMRA = NUMBER OF RANDOM ACCESS FILES.  (INPUT)
C           KFILRA(J) = UNIT NUMBERS FOR RANDOM ACCESS FILES
C                       (J=1,NUMRA).  (INPUT)
C           RACESS(J) = NAMES OF RANDOM ACCESS FILES (J=1,NUMRA).
C                       (INPUT/CHARACTER*60)
C           IDPARS(J) = THE PARSED, INDIVIDUAL COMPONENTS OF THE PRE-
C	 		DICTOR ID CORRESPONDING TO ID( ) (J=1,15).
C                       (INPUT)
C                       J=1--CCC (CLASS OF VARIABLE),
C                       J=2--FFF (SUBCLASS OF VARIABLE),
C                       J=3--B (BINARY INDICATOR),
C                       J=4--DD (DATA SOURCE, MODEL NUMBER),
C                       J=5--V (VERTICAL APPLICATION),
C                       J=6--LBLBLBLB (BOTTOM OF LAYER, 0 IF ONLY 1 
C			     LAYER),
C                       J=7--LTLTLTLT (TOP OF LAYER),
C                       J=8--T (TRANSFORMATION),
C                       J=9--RR (RUN TIME OFFSET, ALWAYS + AND BACK IN 
C			     TIME),
C                       J=10--OT (TIME APPLICATION),
C                       J=11--OH (TIME PERIOD IN HOURS),
C                       J=12--TAU (PROJECTION IN HOURS),
C                       J=13--I (INTERPOLATION TYPE),
C                       J=14--S (SMOOTHING INDICATOR), AND
C                       J=15--G (GRID INDICATOR).
C               JD(J) = THE BASIC INTEGER PREDICTOR ID (J=1,4).
C                       THIS IS THE SAME AS ID(J), EXCEPT THAT THE POR-
C			TIONS PERTAINING TO PROCESSING ARE OMITTED:
C                       B = IDPARS(3),
C                       T = IDPARS(8),
C                       I = IDPARS(13),
C                       S = IDPARS(14),
C                       G = IDPARS(15), AND
C                       THRESH.
C                       JD( ) IS USED TO HELP IDENTIFY THE BASIC MODEL 
C			FIELDS
C                       AS READ FROM THE ARCHIVE.  (INPUT)
C               NDATE = THE DATE/TIME FOR WHICH PREDICTOR IS NEEDED.  
C			(INPUT)
C         NGRIDC(L,M) = HOLDS THE GRID CHARACTERISTICS (L=1,6) FOR EACH 
C			GRID COMBINATION (M=1,NGRID).
C                       L=1--MAP PROJECTION NUMBER (3=LAMBERT, 5=POLAR
C                            STEREOGRAPHIC). 
C                       L=2--GRID LENGTH IN MILLIMETERS,
C                       L=3--LATITUDE AT WHICH GRID LENGTH IS CORRECT 
C			     *10000,
C                       L=4--GRID ORIENTATION IN DEGREES *10000,
C                       L=5--LATITUDE OF LL CORNER IN DEGREES *10000,
C                       L=6--LONGITUDE OF LL CORNER IN DEGREES *10000.
C            SDATA(J) = WORK ARRAY (J=1,ND1).  NOT ACTUALLY USED...NEED-
C			ED FOR LATER CALL TO TIMGRD.  (INTERNAL)
C                 ND1 = DIMENSION OF SDATA( ).  (INPUT)
C                NSTA = NUMBER OF STATIONS.  NOT ACTUALLY USED...NEEDED
C			FOR LATER CALL TO TIMGRD.  (INPUT)
C                ND11 = MAXIMUM NUMBER OF GRID COMBINATIONS THAT CAN BE
C                       DEALT WITH ON THIS RUN.  LAST DIMENSION OF
C                       NGRIDC( , ).  (INPUT)
C               NSLAB = RETURNED FROM GFETCH AS THE VALUE STORED IN
C                       LSTORE(10, ) FOR THE HEIGHTS, WHEN THE HEIGHTS
C                       HAVE BEEN CORRECTLY RETURNED.  WHEN IER NE 0, 
C			THIS VALUE SHOULD NOT BE USED.  (OUTPUT) 
C		  ND5 = DIMENSION OF IPACK( ),IWORK( ), AND THETAE( ).
C			INPUT
C            IPACK(J) = WORK ARRAY (J=1,ND5).  (INTERNAL)
C            IWORK(J) = WORK ARRAY (J=1,ND5).  (INTERNAL)
C           FMRSFC(K) = RETURNS MOISTURE DIVERGENCE, BUT TEMPORARILY 
C			HOLDS SFC MIXING RATIO AND THEN ADVECTIVE COM-
C			PONENT OF MIXING RATIO DIVERGENCE (K=1,ND5).
C			(OUTPUT)
C	      FDDV(J) = HOLDS DIVERGENCE COMPONENT OF MIXING RATIO
C			DIVERGENCE (J=1,ND5).  (INTERNAL/AUTOMATIC)  	
C         LSTORE(L,J) = THE ARRAY HOLDING INFORMATION ABOUT THE DATA 
C                       STORED (L=1,12) (J=1,LITEMS).  (INPUT-OUTPUT)
C                       L=1,4--THE 4 ID'S FOR THE DATA.
C                       L=5  --LOCATION OF STORED DATA.  WHEN IN CORE,
C                              THIS IS THE LOCATION IN CORE( ) WHERE
C                              THE DATA START.  WHEN ON DISK, 
C                              THIS IS MINUS THE RECORD NUMBER WHERE 
C                              THE DATA START.
C                       L=6  --THE NUMBER OF 4-BYTE WORDS STORED.
C                       L=7  --2 FOR DATA PACKED IN TDL GRIB, 1 FOR NOT.
C                       L=8  --THE DATE/TIME OF THE DATA IN FORMAT
C                              YYYYMMDDHH.
C                       L=9  --NUMBER OF TIMES DATA HAVE BEEN RETRIEVED.
C                       L=10 --NUMBER OF THE SLAB IN DIR( , ,L) AND
C                              IN NGRIDC( ,L) DEFINING THE CHARACTERIS-
C			       TICS OF THIS GRID.
C                       L=11 --THE NUMBER OF THE PREDICTOR IN THE SORTED
C                              LIST IN ID( ,N) (N=1,NPRED) FOR WHICH 
C			       THIS VARIABLE IS NEEDED, WHEN IT IS NEED-
C			       ED ONLY ONCE FROM LSTORE( , ).  WHEN IT 
C			       IS NEEDED MORE THAN ONCE, THE VALUE IS 
C			       SET = 7777.
C                       L=12 --USED INITIALLY IN ESTABLISHING 
C			       MOSTORE( , ).
C                              LATER USED AS A WAY OF DETERMINING WHE-
C			       THER TO KEEP THIS VARIABLE.
C                 ND9 = THE SECOND DIMENSION OF LSTORE( , ).  (INPUT)
C              LITEMS = THE NUMBER OF ITEMS (COLUMNS) IN LSTORE( , ) 
C			THAT HAVE BEEN USED IN THIS RUN.  (INPUT)
C             CORE(J) = THE ARRAY TO STORE OR RETIREVE THE DATA IDENTI-
C			FIED IN LSTORE( , ) (J=1,ND10).  WHEN CORE( ) IS
C		        FULL DATA ARE STORED ON DISK.  (INPUT)
C                ND10 = DIMENSION OF CORE( ).  (INPUT)
C              NBLOCK = THE BLOCK SIZE IN WORDS OF THE MOS-2000 RANDOM
C                       DISK FILE.  (INPUT)
C              NFETCH = INCREMENTED EACH TIME GFETCH IS ENTERED.
C                       IT IS A RUNNING  COUNT FROM THE BEGINNING OF THE
C                       PROGRAM.  THIS COUNT IS MAINTAINED IN CASE THE 
C			USER NEEDS IT (DIAGNOSTICS, ETC.).  (OUTPUT)
C              IS0(J) = MOS-2000 GRIB SECTION 0 ID'S (J=1,3).  
C			(INTERNAL)
C              IS1(J) = MOS-2000 GRIB SECTION 1 ID'S (J=1,22+).  
C			(INTERNAL)
C              IS2(J) = MOS-2000 GRIB SECTION 2 ID'S (J=1,12).
C                       IS2(3) AND IS2(4) ARE USED BY THE CALLING
C                       PROGRAM AS THE GRID DIMENSIONS.  (INTERNAL-
C		        OUTPUT)
C              IS4(J) = MOS-2000 GRIB SECTION 4 ID'S (J=1,4).  
C			(INTERNAL)
C                 ND7 = DIMENSION OF IS0( ), IS1( ), IS2( ), AND IS4( ).
C                       NOT ALL LOCATIONS ARE USED.  (INPUT)
C            FDELV(K) = WORK ARRAY TO HOLD THE TERRAIN ELEVATION
C                       (K=1,ND2X3).  (INTERNAL)
C            FDTMP(K) = WORK ARRAY TO HOLD THE TEMPERATURE
C                       (K=1,ND2X3).  (INTERNAL)
C            FDDEW(K) = WORK ARRAY TO HOLD THE DEW POINT   
C                       (K=1,ND2X3).  (INTERNAL)
C            FDSLP(K) = WORK ARRAY TO HOLD THE MEAN SEA LEVEL PRESSURE
C                       (K=1,ND2X3).  (INTERNAL)
C	       FD5(J) = WORK ARRAY (J=1,ND3X3).  (INTERNAL)
C	       FD6(J) = WORK ARRAY (J=1,ND3X3).  (INTERNAL)
C	       FD7(J) = WORK ARRAY (J=1,ND3X3).  (INTERNAL)
C           FDSINS(J) = ARRAY TO SAVE THE SINE OF THE LATITUDE IN
C                       SUBROUTINES MAPLAT (J=1,ND2X3).  IT IS
C                       ONLY USED AS A PLACEHOLDER FOR SUBROUTINE CALLS.
C                       (INTERNAL)
C             FDMS(J) = ARRAY TO SAVE THE MAP FACTOR IN SUBROUTINE
C                       MAPLAT (J=1,ND2X3).  IT IS ONLY USED AS A
C                       PLACEHOLDER FOR SUBROUTINE CALLS. (INTERNAL)
C               ND2X3 = DIMENSION OF SEVERAL VARIABLES.  THE SIZE OF THE
C                       GRID IS NOT KNOWN BEFORE THE HEIGHTS ARE
C                       FETCHED.  (INPUT)
C               ISTAV = SET TO 0 TO INDICATE A GRID FIELD IS BEING RE-
C                       TURNED. (OUTPUT).
C              L3264B = INTEGER WORD LENGTH IN BITS OF MACHINE BEING 
C			USED (EITHER 32 OR 64).  (INPUT)
C              MISTOT = TOTAL NUMBER OF TIMES A MISSING INDICATOR
C                       HAS BEEN ENCOUNTERED IN UNPACKING GRIDS.
C                       (INPUT-OUTPUT)
C                 IER = STATUS RETURN.
C                         0 = GOOD RETURN.
C                       103 = IDPARS(1) AND IDPARS(2) NOT ACCOMMODATED.
C                       SEE GFETCH, CONSTG, ADVTWL, DIVGW, AND ADVCTL 
C                       FOR OTHER VALUES.  WHEN IER NE 0, DATA ARE 
C                       RETURNED AS MISSING.  (INTERNAL-OUTPUT)
C	   ICCCFFF(K) = ID(1) OF VARIABLES USED IN COMPUTATIONS (K=1,10)
C			(INTERNAL)
C              NTIMES = THE NUMBER OF TIMES, INCLUDING THIS ONE, THAT 
C			THE RECORD HAS BEEN FETCHED.  THIS IS STORED IN
C                       LSTORE(9, ).  (INTERNAL)
C               LD(J) = HOLDS THE 4 ID WORDS OF THE DATA RETRIEVED INTO
C                       FDH( ) (J=1,4).  (INTERNAL)
C               MISSP = PRIMARY MISSING VALUE INDICATOR.  RETURNED AS 
C			ZERO WHEN DATA ARE NOT PACKED.  (INTERNAL)
C               MISSS = SECONDARY MISSING VALUE INDICATOR.  RETURNED AS
C		        ZERO WHEN DATA ARE NOT PACKED.  (INTERNAL)
C 
C        NONSYSTEM SUBROUTINES CALLED 
C            GFETCH, CONSTG, SMTH9V, PRSID1, ADVTWL, DIVGW, ADVCTL
C
      CHARACTER*74 TITLE/' '/
      CHARACTER*60 RACESS(NUMRA)
C      
      DIMENSION NGRIDC(6,ND11),SDATA(ND1),KFILRA(NUMRA)
      DIMENSION IDPARS(15),JD(4),LDPARS(15),LD(4),ICCCFFF(10)
      DIMENSION FDELV(ND2X3),FDTMP(ND2X3),FDDEW(ND2X3),FDSLP(ND2X3),
     1          FD5(ND2X3),FD6(ND2X3),FD7(ND2X3),FDSINS(ND2X3),
     2          FDMS(ND2X3)
      DIMENSION FMRSFC(ND5),IPACK(ND5),IWORK(ND5)
      DIMENSION FDDV(ND5)                          ! Automatic array
      DIMENSION IS0(ND7),IS1(ND7),IS2(ND7),IS4(ND7)
      DIMENSION LSTORE(12,ND9)
      DIMENSION CORE(ND10)
      DATA ICCCFFF/409020000,             ! LAMP TERRAIN
     1             002301005,             ! LAMP SFC TEMP
     2             003301005,             ! LAMP SFC DEWPOINT
     3             001201005,             ! LAMP MSL PRESSURE
     4             004051005,             ! LAMP SFC U-GRID
     5             006112005,             ! LAMP SFC WIND DIV
     6             004002005,             ! GEOSTROPHIC U-GRID
     7             006113005,             ! LAMP 1000-MB GEOSTR WIND DIV
     8             004000008,             ! GFS 850-MB U-GRID
     9             006110008/             ! GFS 850-MB WIND DIV
C 	 
C	 CHECK WHETHER THIS ROUTINE APPLIES TO JD(1).
C
C	 NOTE:  THE ID FOR VARIABLE 003509 (MOD 850 MB MDIV) CORRES-
C	 PONDS TO THAT FOR NCEP THE MODEL ...THE "RR" PARAMETER IS NEED-
C	 ED SINCE THE NCEP MODEL 850-MB WIND IS USED.  ALSO THIS ROUTINE
C	 ASSUMES THE LAMP AND NCEP MODEL GRIDS ARE IDENTICAL.
C
      IF(IDPARS(1).EQ.003.AND.(IDPARS(2).EQ.507.OR.
     1   IDPARS(2).EQ.509)) GO TO 30
C
      WRITE(KFILDO,20) JD
 20   FORMAT(/,' **** VARIABLE ',I9.9,2I10.9,I4.3,' CANNOT BE COMPU',
     1         'TED IN MDVLMP ...SET IER=103 AND SUPPLY MISSING VALUES')
      IER=103
      GO TO 800   
C
D     CALL TIMPR(KFILDO,KFILDO,'START THESM5         ')
 30   IER=0
      ISTAV=0
C
C	 FIRST, COMPUTE THE SFC MIXING RATIO FROM LAMP FIELDS.
C	 FETCH LAMP GRID TERRAIN (FROM CONSTANT FILE) INTO FDELV( ).
C
      LD(1)=ICCCFFF(1)
      LD(2)=0
      LD(3)=0
      LD(4)=0
      DO 35 J=1,NUMRA
         IF(KFILRA(J).EQ.44) THEN
C              IT IS SAFE TO USE ND2X3 AS DIMENSION OF FDELV( ) SINCE 
C              THE TERRAIN IS ON THE 80-KM LAMP GRID. 
            CALL CONSTG(KFILDO,KFILRA(J),RACESS(J),LD,
     1                  IPACK,IWORK,FDELV,ND2X3,
     2                  IS0,IS1,IS2,IS4,ND7,
     3                  ISTAV,L3264B,IER)
            IF(IER.NE.0)GO TO 800
            NWORDS=IS2(3)*IS2(4)
            GO TO 40
         ENDIF
 35   CONTINUE
C
C        GRID CONSTANT FILE MISSING.  MISSING VALUES SUPPLIED FOR
C        THETAE.
C
      GO TO 800
C
C	 FETCH LAMP SURFACE TEMP
C
 40   LD(1)=ICCCFFF(2)
      LD(2)=000000002
      LD(3)=IDPARS(12)-IDPARS(9)
C
      CALL GFETCH(KFILDO,KFIL10,LD,7777,LSTORE,ND9,LITEMS,
     1            IS0,IS1,IS2,IS4,ND7,IPACK,IWORK,FDTMP,ND2X3,
     2            NWORDS,NPACK,NDATE,NTIMES,CORE,ND10,
     3            NBLOCK,NFETCH,NSLAB,MISSP,MISSS,L3264B,1,IER)
      IF(MISSP.NE.0)MISTOT=MISTOT+1
      IF(IER.NE.0)GO TO 800
C
C	 FETCH SURFACE DEWPOINT
C
      LD(1)=ICCCFFF(3)
C
      CALL GFETCH(KFILDO,KFIL10,LD,7777,LSTORE,ND9,LITEMS,
     1            IS0,IS1,IS2,IS4,ND7,IPACK,IWORK,FDDEW,ND2X3,
     2            NWORDS,NPACK,NDATE,NTIMES,CORE,ND10,
     3            NBLOCK,NFETCH,NSLAB,MISSP,MISSS,L3264B,1,IER)
      IF(MISSP.NE.0)MISTOT=MISTOT+1
      IF(IER.NE.0)GO TO 800
C
C	 FETCH SL PRESSURE
C
      LD(1)=ICCCFFF(4)
      LD(2)=0
C
      CALL GFETCH(KFILDO,KFIL10,LD,7777,LSTORE,ND9,LITEMS,
     1            IS0,IS1,IS2,IS4,ND7,IPACK,IWORK,FDSLP,ND2X3,
     2            NWORDS,NPACK,NDATE,NTIMES,CORE,ND10,
     3            NBLOCK,NFETCH,NSLAB,MISSP,MISSS,L3264B,1,IER)
      IF(MISSP.NE.0)MISTOT=MISTOT+1
      IF(IER.NE.0)GO TO 800
C
C	 COMPUTE MIXING RATIO AT MSL (G/KG) ...NO CHECKS FOR MISSING.
C
      F=5./9.
C
      DO 100 J=1,NWORDS
        IF(FDDEW(J).GT.9998..OR.FDTMP(J).GT.9998.) THEN
          FMRSFC(J)=9999.
	ELSE
          IF(FDDEW(J).GT.FDTMP(J)) FDDEW(J)=FDTMP(J)
C            NOTE: 273.16 SHOULD BE 273.15, ACCORDING TO MOS2000 NOTES.
C            SINCE 273.16 WAS USED FOR DEVELOPMENT, RETAIN IT IN OPERA-
C            TIONS FOR CONSISTENCY.
          TMP=F*(FDTMP(J)-32.)+273.16+FDELV(J)*.00976
          DEW=F*(FDDEW(J)-32.)+273.16+FDELV(J)*.0017
          P1=FDSLP(J)/10.
          V=.61078*2.71828**((17.269*(DEW-273.16))/(DEW-35.86))
          FMRSFC(J)=.622*(V/(P1-V))*1000.
        ENDIF
 100  CONTINUE
C
      IF(IDPARS(2).EQ.507) THEN
C
C	   COMPUTE SFC MIXING RATIO DIV. ...USE LAMP SFC WIND FOR TAU=0.
C
C	   COMPUTE THE ADVECTIVE COMPONENT OF MR DIV AND PUT INTO 
C	   FMRSFC( ).  USE ADVTWL, A NEW VERSION OF ADVCTW THAT
C	   CAN USE LAMP SFC U,V IN KTS, WHICH ARE CONVERTED TO M/S.  
C	   ADVTWL ALSO PERFORMS TIMEWISE INTERPOLATION OF GFS U,V WHEN
C	   TAU IS NOT A WHOLE MULTIPLE OF 3 HOURS.   
C	   NOTE THAT MIXING RATIO IS OVER-WRITTEN IN ADVCTW, SO,
C	   FIRST SAVE IT IN FD7( ).  NOTE, ALSO, THE UNITS OF MR ADVEC-
C	   ARE G/KG/S.
C
        DO 110 J=1,NWORDS 
          FD7(J)=FMRSFC(J)
 110    CONTINUE
        CALL ADVTWL(KFILDO,KFIL10,IDPARS,ICCCFFF(5),NDATE,
     1	            SDATA,ND1,NSTA,NGRIDC,ND11,NSLAB,IPACK,IWORK,
     2              FMRSFC,ND5,
     3	            LSTORE,ND9,LITEMS,CORE,ND10,NBLOCK,NFETCH,
     4		    IS0,IS1,IS2,IS4,ND7,
     5		    FDELV,FDTMP,FDDEW,FDSLP,FDSINS,FDMS,ND2X3,
     6		    ISTAV,L3264B,MISTOT,IER)
        IF(IER.NE.0)GO TO 800
C          
C	   COMPUTE THE WIND DIVERGENCE WITH A NEW VERSION OF DIVW,
C	   CALLED DIVGW, WHICH INCLUDES CONVERSION OF LAMP MODEL 
C	   SURFACE WIND COMPONENTS FROM KT TO M/S, COMPUTATION OF
C	   GEOSTROPHIC WINDS FROM CONSTANT PRESSURE HEIGHTS, AND
C	   TIMEWISE INTERPOLATION OF GFS WINDS WHEN TAU IS NOT A WHOLE
C	   MULTIPLE OF 3 HOURS.  NOTE:  UNITS OF DIVERGENCE ARE
C	   S^-1 * 10^5.
C
        LD(1)=ICCCFFF(6)
        LD(2)=JD(2)
        LD(3)=JD(3)
        LD(4)=JD(4)
        CALL PRSID1(KFILDO,LD,LDPARS)      
        CALL DIVGW(KFILDO,KFIL10,LDPARS,JD,NDATE,
     1             SDATA,ND1,NSTA,NGRIDC,ND11,NSLAB,IPACK,IWORK,
     2             FDDV,ND5,
     3             LSTORE,ND9,LITEMS,CORE,ND10,NBLOCK,NFETCH,
     4             IS0,IS1,IS2,IS4,ND7,
     5             FDELV,FDTMP,FDDEW,FDSLP,FD5,FD6,FDSINS,FDMS,ND2X3,
     6             ISTAV,L3264B,MISTOT,IER)
        IF(IER.NE.0)GO TO 800
C         
C	   SPECIFY SMOOTHING WEIGHT
C
        SMW=1.6
C
      ELSE IF(IDPARS(2).EQ.508) THEN
C
C	   COMPUTE M.R. DIV BASED ON SFC MIXING RATIO AND 1000-MB GEO-
C	   STROPHIC WIND.
C
C	   COMPUTE THE ADVECTIVE COMPONENT OF SFC M.R. DIV ...ADVCTL 
C	   USES GEOSTROPHIC WIND COMPUTED FROM LAMP 1000-MB HEIGHTS. 
C	   AS WITH ADVTWL, THE ADVECTED SFC MIXING RATIO (OUTPUT) RE-
C	   PLACES THE INPUT SFC MIXING RATIO IN ADVCTL.  SO, FIRST SAVE 
C	   FMRSFC( ) IN FD7( ) AS BEFORE.
C
        DO 120 J=1,NWORDS
	  FD7(J)=FMRSFC(J)
 120    CONTINUE
        CALL ADVCTL(KFILDO,KFIL10,IDPARS,ICCCFFF(7)/1000,NDATE,
     1              NGRIDC,ND11,NSLAB,IPACK,IWORK,FMRSFC,ND5,
     2              LSTORE,ND9,LITEMS,CORE,ND10,NBLOCK,NFETCH,
     3              IS0,IS1,IS2,IS4,ND7,
     4              FDELV,FDTMP,FDDEW,FDSLP,FD5,FD6,FDSINS,FDMS,ND2X3,
     5              ISTAV,L3264B,MISTOT,IER)
        IF(IER.NE.0) GO TO 800
C
C	   COMPUTE THE DIVERGENCE OF THE 1000-MB GEOSTROPHIC WIND.
C
        LD(1)=ICCCFFF(8)
        LD(2)=JD(2)
        LD(3)=JD(3)
        LD(4)=JD(4)
        CALL PRSID1(KFILDO,LD,LDPARS)      
        CALL DIVGW(KFILDO,KFIL10,LDPARS,JD,NDATE,
     1             SDATA,ND1,NSTA,NGRIDC,ND11,NSLAB,IPACK,IWORK,
     2             FDDV,ND5,
     3             LSTORE,ND9,LITEMS,CORE,ND10,NBLOCK,NFETCH,
     4             IS0,IS1,IS2,IS4,ND7,
     5             FDELV,FDTMP,FDDEW,FDSLP,FD5,FD6,FDSINS,FDMS,ND2X3,
     6             ISTAV,L3264B,MISTOT,IER)
        IF(IER.NE.0)GO TO 800
C         
C	   SPECIFY SMOOTHING WEIGHT
C
        SMW=0.9
C
      ELSE 
C
C	   MODIFIED 850-MB MIXING RATIO DIV. ...USE SFC MIXING RATIO 
C	   TOGETHER WITH GFS 850-MB WIND.
C
C	   COMPUTE THE ADVECTIVE COMPONENT FOR MOD 850-MB M.R. DIV, AS 
C	   FOR SFC M.R. DIV. 
C
        DO 130 J=1,NWORDS 
          FD7(J)=FMRSFC(J)
 130    CONTINUE
        CALL ADVTWL(KFILDO,KFIL10,IDPARS,ICCCFFF(9),NDATE,
     1              SDATA,ND1,NSTA,NGRIDC,ND11,NSLAB,IPACK,IWORK,
     2              FMRSFC,ND5,
     3              LSTORE,ND9,LITEMS,CORE,ND10,NBLOCK,NFETCH,
     4		    IS0,IS1,IS2,IS4,ND7,
     5		    FDELV,FDTMP,FDDEW,FDSLP,FDSINS,FDMS,ND2X3,
     6		    ISTAV,L3264B,MISTOT,IER)
        IF(IER.NE.0)GO TO 800
C          
C	   COMPUTE THE DIVERGENCE OF THE 850-MB WIND.
C
        LD(1)=ICCCFFF(10)
        LD(2)=IDPARS(7)
        LD(3)=IDPARS(9)*1000000+IDPARS(12)
        LD(4)=0
        CALL PRSID1(KFILDO,LD,LDPARS)      
        CALL DIVGW(KFILDO,KFIL10,LDPARS,JD,NDATE,
     1             SDATA,ND1,NSTA,NGRIDC,ND11,NSLAB,IPACK,IWORK,
     2             FDDV,ND5,
     3             LSTORE,ND9,LITEMS,CORE,ND10,NBLOCK,NFETCH,
     4             IS0,IS1,IS2,IS4,ND7,
     5             FDELV,FDTMP,FDDEW,FDSLP,FD5,FD6,FDSINS,FDMS,ND2X3,
     6             ISTAV,L3264B,MISTOT,IER)
        IF(IER.NE.0)GO TO 800
C         
C	   SPECIFY SMOOTHING WEIGHT
C
        SMW=0.6
C
      ENDIF
C
C	 COMPUTE MOISTURE DIVERGENCE (G/KG/SEC * 10^5).
C
      DO 140 J=1,NWORDS
        IF(FMRSFC(J).EQ.9999..OR.FD7(J).EQ.9999..OR.FDDV(J).EQ.9999.)
     1     THEN
          FMRSFC(J)=9999.
        ELSE
	  FMRSFC(J)=(FMRSFC(J)+FD7(J)*FDDV(J)*.00001)*100000.  
        ENDIF
 140  CONTINUE
C
C	 SMOOTH THE MIXING RATIO DIVERGENCE GRID USING SMOOTHING WEIGHT
C	 SPECIFIED ABOVE.
C
      CALL SMTH9V(FMRSFC,IS2(3),IS2(4),SMW,IWORK,9998.5)
C
      RETURN
C
 800  DO 801 J=1,ND5
      FMRSFC(J)=9999.
 801  CONTINUE
C
      RETURN
      END      
