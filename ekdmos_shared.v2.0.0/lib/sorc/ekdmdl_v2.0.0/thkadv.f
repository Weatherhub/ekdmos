      SUBROUTINE THKADV(KFILDO,KFIL10,IDPARS,JD,NDATE,
     1                  NGRIDC,ND11,NSLAB,IPACK,IWORK,ADVDTA,ND5,
     2                  LSTORE,ND9,LITEMS,CORE,ND10,NBLOCK,NFETCH,
     3                  IS0,IS1,IS2,IS4,ND7,
     4                  FD1,FD2,FD3,FD4,FD5,FD6,FD7,FDSINS,FDMS,ND2X3,
     5                  ISTAV,L3264B,MISTOT,IER)
C
C        MARCH    2004   GLAHN      TDL MOS-2000
C                                       ADAPTED FROM TMPADV
C        JANUARY  2005   WIEDENFELD MDL MODIFIED WIND IDS TO ADVECT WITH 
C                                       THE GRID ORIENTED GEOSTROPHIC
C                                       WINDS.
C        JUNE     2006   WIEDENFELD MDL CLEANED UP CODE AND DOC BLOCK.
C                                       CHANGED NAME TO THKADV.
C
C        PURPOSE 
C            TO COMPUTE 1000-500 MB THICKNESS ADVECTION.
C            500 MB HEIGHT IS FROM AVN MODEL;1000 MB HEIGHT IS 
C            FROM LAMP.  ADVECTION IS WITH 1000-MB LAMP GEOSTROPHIC
C            U AND V COMPONENTS.  THIS CAN BE EXTENDED TO OTHER
C            THICKNESSES AND WINDS BY ADDING TO IC( , , ).
C
C            THE FOLLOWING IDPARS(1) AND IDPARS(2) ARE ACCOMMODATED:
C
C               004 400 - ADVECTION OF THICKNESS 
C
C        DATA SET USE 
C            KFILDO - DEFAULT UNIT NUMBER FOR OUTPUT (PRINT) FILE   
C                     (OUTPUT) 
C            KFIL10 - UNIT NUMBER OF TDL MOS-2000 FILE SYSTEM ACCESS 
C                     (INPUT-OUTPUT) 
C 
C        VARIABLES 
C              KFILDO = DEFAULT UNIT NUMBER FOR OUTPUT (PRINT) FILE
C                       (INPUT)
C              KFIL10 = UNIT NUMBER OF TDL MOS-2000 FILE SYSTEM ACCESS
C                       (INPUT)
C           IDPARS(J) = PARSED, INDIVIDUAL COMPONENTS OF THE PREDICTOR
C                       ID CORRESPONDING TO ID(J) (J=1,15) DEFINED IN
C                       THE CALLING PROGRAM (INPUT)
C                       J=1 -- CCC (CLASS OF VARIABLE)
C                       J=2 -- FFF (SUBCLASS OF VARIABLE)
C                       J=3 -- B (BINARY INDICATOR)
C                       J=4 -- DD (DATA SOURCE, MODEL NUMBER)
C                       J=5 -- V (VERTICAL APPLICATION)
C                       J=6 -- LBLBLBLB (BOTTOM OF LAYER, 0 IF ONLY 1 
C                              LAYER)
C                       J=7 -- LTLTLTLT (TOP OF LAYER)
C                       J=8 -- T (TRANSFORMATION)
C                       J=9 -- RR (RUN TIME OFFSET -- PREVIOUS CYCLE.
C                              IT IS ALWAYS A POSITIVE NUMBER AND
C                              COUNTED BACKWARDS IN TIME)
C                       J=10 -- OT (TIME APPLICATION)
C                       J=11 -- OH (TIME PERIOD IN HOURS)
C                       J=12 -- TAU (PROJECTION IN HOURS)
C                       J=13 -- I (INTERPOLATION TYPE)
C                       J=14 -- S (SMOOTHING INDICATOR)
C                       J=15 -- G (GRID INDICATOR)
C               JD(J) = THE BASIC INTEGER PREDICTOR ID (J=1,4).  THIS IS
C                       THE SAME AS ID(J) EXCEPT THAT THE PORTIONS
C                       PERTAINING TO PROCESSING ARE OMITTED:
C                       B = IDPARS(3)
C                       T = IDPARS(8)
C                       I = IDPARS(13)
C                       S = IDPARS(14)
C                       G = IDPARS(15)
C                       JD( ) IS USED TO HELP IDENTIFY THE BASIC MODEL
C                       FIELDS AS READ FROM THE ARCHIVE (INPUT)
C               NDATE = DATE/TIME FOR WHICH THE PREDICTOR IS NEEDED
C                       (INPUT)
C         NGRIDC(L,M) = HOLDING THE GRID CHARACTERISTICS (L=1,6) FOR
C                       EACH GRID COMBINATION (M=1,NGRID) (INPUT-OUTPUT)
C                       L=1 -- MAP PROJECTION NUMBER (3=LAMBERT, 5=POLAR
C                              STEREOGRAPHIC)
C                       L=2 -- GRID LENGTH IN METERS
C                       L=3 -- LATITUDE AT WHICH GRID LENGTH IS CORRECT
C                              *1000
C                       L=4 -- GRID ORIENTATION IN DEGREES *1000
C                       L=5 -- LATITUDE OF LL CORNER IN DEGREES *1000
C                       L=6 -- LONGITUDE OF LL CORNER IN DEGREES *1000
C                ND11 = MAXIMUM NUMBER OF GRID COMBINATIONS THAT CAN BE
C                       DEALT WITH IN THIS RUN.  LAST DIMENSION OF
C                       NGRIDC( , ) (INPUT)
C               NSLAB = THE NUMBER OF THE SLAB IN DIR( , , ) AND IN
C                       NGRIDC( , ) DEFINING THE CHARACTERISTICS OF THE
C                       GRID.  IT IS USED TO IDENTIFY THE DATA SOURCE,
C                       I.E., THE MODEL. (OUTPUT)
C            IPACK(J) = WORK ARRAY (J=1,ND5) (INTERNAL)
C            IWORK(J) = WORK ARRAY (J=1,ND5) (INTERNAL)
C           ADVDTA(J) = DATA ARRAY TO HOLD THICKNESS ADVECTION
C                       (M/SEC) SCALED *10000.  (J=1,ND5) 
C                       (OUTPUT)
C                 ND5 = DIMENSION OF IPACK( ),IWORK( ), AND 
C                       ADVDTA( ).  (INPUT)
C         LSTORE(L,J) = THE ARRAY HOLDING INFORMATION ABOUT THE DATA 
C                       STORED (L=1,12) (J=1,LITEMS) (INPUT-OUTPUT)
C                       L=1,4-- THE 4 IDS FOR THE DATA
C                       L=5  -- LOCATION OF STORED DATA.  WHEN IN CORE,
C                               THIS IS THE LOCATION IN CORE( ) WHERE
C                               THE DATA START.  WHEN ON DISK, THIS IS
C                               MINUS THE RECORD NUMBER WHERE THE DATA
C                               START.
C                       L=6  -- THE NUMBER OF 4-BYTE WORDS STORED
C                       L=7  -- 2 FOR DATA PACKED IN TDL GRIB FORMAT,
C                               1 OTHERWISE
C                       L=8  -- DATE/TIME OF THE DATA IN FORMAT
C                               YYYYMMDDHH
C                       L=9  -- NUMBER OF TIMES DATA HAVE BEEN RETRIEVED
C                       L=10 -- NUMBER OF THE SLAB IN DIR( , ,L) AND IN
C                               NGRIDC( ,L) DEFINING THE CHARACTERISTICS
C                               OF THE GRID
C                       L=11 -- NUMBER OF PREDICTORS IN THE SORTED LIST
C                               IN IS( ,N) (N=1,NPRED) FOR WHICH THIS
C                               VARIABLE IS NEEDED ONLY ONCE FROM
C                               LSTORE( , ).  WHEN IT IS NEEDED MORE
C                               THAN ONCE, THE VALUE IS SET TO 7777.
C                       L=12 -- USED INITIALLY IN ESTABLISHING
C                               MSTORE( , ).  LATER USED TO DETERMINE
C                               WHETHER TO KEEP THIS VARIABLE
C                 ND9 = THE SECOND DIMENSION OF LSTORE( , ) (INPUT)
C              LITEMS = THE NUMBER OF ITEMS (COLUMNS) IN LSTORE( , )
C                       THAT HAVE BEEN USED IN THIS RUN (INPUT)
C             CORE(J) = ARRAY TO STORE OR RETRIEVE DATA IDENTIFIED IN
C                       LSTORE( , ) (J=1,ND10).  WHEN CORE( ) IS FULL,
C                       DATA ARE STORED ON DISK.  UPON RETURN TO THE
C                       CALLING PROGRAM, THE ARRAY WILL BE IN THE SIZE
C                       OF LX*LY (OUTPUT).
C                ND10 = DIMENSION OF CORE( ) (INPUT)
C              NBLOCK = BLOCK SIZE IN WORDS OF THE MOS-2000 RANDOM DISK
C                       FILE (INPUT)
C              NFETCH = INCREMENTED EACH TIME GFETCH IS ENTERED.  IT IS
C                       A RUNNING COUNT FROM THE BEGINNING OF THE MAIN
C                       PROGRAM.  THIS COUNT IS MAINTAINED IN CASE THE
C                       USER NEEDS IT FOR DIAGNOSTICS, ETC. (OUTPUT)
C              IS0(J) = MOS-2000 GRIB SECTION 0 IDS (J=1,3) (INTERNAL)
C              IS1(J) = MOS-2000 GRIB SECTION 1 IDS (J=1,22+) (INTERNAL)
C              IS2(J) = MOS-2000 GRIB SECTION 2 IDS (J=1,12)
C                       IS2(3) AND IS2(4) ARE USED BY THE CALLING
C                       PROGRAM AS GRID DIMENSION (INTERNAL-OUTPUT)
C              IS4(J) = MOS-2000 GRIB SECTION 4 IDS (J=1,4) (INTERNAL)
C                 ND7 = DIMENSION OF IS0( ), IS1( ), IS2( ), AND IS4( ).
C                       NOT ALL LOCATIONS ARE USED. (INPUT)
C              FD1(J) = DUMMY WORK ARRAY (J=1,ND2X3) (INTERNAL)
C              FD2(J) = DUMMY WORK ARRAY (J=1,ND2X3) (INTERNAL)
C              FD3(J) = DUMMY WORK ARRAY (J=1,ND2X3) (INTERNAL)
C              FD4(J) = DUMMY WORK ARRAY (J=1,ND2X3) (INTERNAL)
C              FD5(J) = DUMMY WORK ARRAY (J=1,ND2X3) (INTERNAL)
C              FD6(J) = DUMMY WORK ARRAY (J=1,ND2X3) (INTERNAL)
C              FD7(J) = DUMMY WORK ARRAY (J=1,ND2X3) (INTERNAL)
C           FDSINS(J) = USED TO SAVE THE SIN OF THE LATITUDE IN SUBROUTINE
C                       MAPLAT (J=1,ND2X3).  THE USER MUST NOT
C                       USE THIS ARRAY EXCEPT IN CALLING MAPLAT.
C                       (INPUT/OUTPUT)
C             FDMS(J) = USED TO SAVE THE MAP FACTOR IN SUBROUTINE
C                       MAPLAT (J=1,ND2X3).  THE USER MUST NOT
C                       USE THIS ARRAY EXCEPT IN CALLING MAPLAT.
C                       (INPUT/OUTPUT)
C               ND2X3 = DIMENSION OF FD1( ), FD2( ), FD3( ), FD4( ),
C                       FDMS( ), AND FDSINS( ) (INPUT)
C               ISTAV = 0 -- WHEN THE DATA RETURNED ARE GRID DATA OR
C                            DATA ARE NOT AVAILABLE FOR RETURN
C                       1 -- WHEN THE DATA RETURNED ARE STATION DATA
C                       (OUTPUT)
C              L3264B = INTEGER WORD LENGTH IN BITS DEPENDING ON THE
C                       MACHINE BEING USED (EITHER 32 OR 64) (INPUT)
C              MISTOT = TOTAL NUMBER OF MISSING ITEMS ENCOUNTED IN
C                       UNPACKING GRIDS (INPUT-OUTPUT)
C                 IER = STATUS RETURN
C                         0 = GOOD RETURN
C                       100 = GRID CHARACTERISTICS ARE DIFFERENT FOR THE
C                             2 FIELDS
C                       103 = IDPARS(1) AND IDPARS(2) NOT ACCOMMODATED
C                             IN THIS SUBROUTINE
C                       SEE GFETCH FOR OTHER VALUES WHEN IER.NE.0 AND
C                       DATA ARE RETURNED AS MISSING (INTERNAL-OUTPUT)
C           IC(I,J,M) = CONTAINS IDPARS(1) AND IDPARS(2) (I=1,2) FOR:
C                       1 - THICKNESS TO BE COMPUTED 
C                       2 - UPPER LEVEL HEIGHT
C                       3 - LOWER LEVEL HEIGHT
C                       4 - ADVECTIVE GEOSTROPHIC U-WIND
C                       5 - ADVECTIVE GEOSTROPHIC V-WIND
C                       (J=1,5)
C                       FOR VARIABLE M (M=1,NDIM).  (INTERNAL)
C               LD(J) = WORK ARRAY HOLDING THE 4 ID WORDS OF THICKNESS
C                       BEING FETCHED (J=1,4) (INTERNAL)
C               LX,LY = DIMENSIONS OF THE GRID RETURNED FROM CALLING
C                       GFETCH FOR FETCHING THICKNESS (INTERNAL)
C               MD(J) = WORK ARRAY HOLDING THE 4 ID WORDS OF U WIND
C                       COMPONENT FOR PRINTING PURPOSE (J=1,4) IF THE
C                       GRID CHARACTERISTICS ARE DIFFERENT (INTERNAL)
C               MISSP = PRIMARY MISSING VALUE INDICATOR.  RETURNED AS
C                       ZERO FROM CALLING GFETCH WHEN THERE IS NO
C                       MISSING VALUE (INTERNAL)
C               MISSS = SECONDARY MISSING VALUE INDICATOR.  RETURNED AS
C                       ZERO FROM CALLING GFETCH WHEN THERE IS NO
C                       SECONDARY MISSING VALUE (INTERNAL)
C               MX,MY = DIMENSIONS OF THE GRID RETURNED FROM CALLING
C                       ADVCTW FOR THICKNESS ADVECTION (INTERNAL)
C               NPACK = 2 FOR TDL GRIB PACKED DATA; 1 OTHERWISE.  THIS 
C                       IS RETURNED FROM CALLING GFETCH. (INTERNAL)
C              NTIMES = THE NUMBER OF TIMES, INCLUDING THIS ONE, THAT
C                       THE RECORD HAS BEEN FETCHED.  THIS IS STORED IN
C                       LSTORE(9, ) (INTERNAL)
C              NWORDS = NUMBER OF WORDS RETURNED IN ADVDTA( ).  THIS IS
C                       RETURNED FROM CALLING GFETCH. (INTERNAL)
C        1         2         3         4         5         6         7 X
C
C        NONSYSTEM SUBROUTINES CALLED 
C            GFETCH, PRSID1, GWIND, MAPLAT, ADVCTW
C
      PARAMETER (NDIM=1)
C 
      DIMENSION JD(4),IDPARS(15)
      DIMENSION IPACK(ND5),IWORK(ND5)
      DIMENSION IS0(ND7),IS1(ND7),IS2(ND7),IS4(ND7)
      DIMENSION LSTORE(12,ND9)
      DIMENSION NGRIDC(6,ND11)
      DIMENSION IC(2,5,NDIM),LD(4),MD(4),LDPARS(15)
C
      DIMENSION ADVDTA(ND5)
      DIMENSION FD1(ND2X3),FD2(ND2X3),FD3(ND2X3),FD4(ND2X3),
     1          FD5(ND2X3),FD6(ND2X3),FD7(ND2X3),FDMS(ND2X3),
     2          FDSINS(ND2X3)
      DIMENSION CORE(ND10)
C
      DATA IC/004400005,000001000,
     1        001000005,000000500,
     2        001000005,000001000,
     3        004002005,000001000,
     4        004102005,000001000/
C
      IER=0
      ISTAV=0
C
C        CHECK WHETHER THIS CODE ACCOMMODATES THICKNESS ADVECTION, BUT
C        COULD BE EXTENDED TO OTHER SIMILAR VARIABLES.
C
      DO 100 J=1,NDIM
         IF(JD(1).EQ.IC(1,1,J).AND.JD(2).EQ.IC(2,1,J))GO TO 150
 100  CONTINUE
C
C        DROP THROUGH HERE MEANS THE IDS WERE NOT FOUND.
C
      IER=103
      WRITE(KFILDO,140)(JD(J),J=1,4)
 140  FORMAT(/' ****ID(1) AND ID(2) DO NOT INDICATE',
     1        ' THICKNESS ADVECTION.',
     2       /'  VARIABLE ',3(I10.9),I4.3,' NOT ',
     3        ' COMPUTED IN THKADV.')
      GO TO 900
C
C        CREATE IDS FOR FETCHING UPPER LEVEL HEIGHT.
C
 150  LD(1)=IC(1,2,J)
      LD(2)=IC(2,2,J)
      LD(3)=IDPARS(12)
      LD(4)=0
C
C        FETCH UPPER LEVEL HEIGHT INTO FD1( ).
C
      CALL GFETCH(KFILDO,KFIL10,LD,7777,LSTORE,ND9,LITEMS,
     1            IS0,IS1,IS2,IS4,ND7,IPACK,IWORK,FD1,ND2X3,
     2            NWORDS,NPACK,NDATE,NTIMES,CORE,ND10,
     3            NBLOCK,NFETCH,NSLAB1,MISSP,MISSS,L3264B,1,IER)
      IF(MISSP.NE.0)MISTOT=MISTOT+1
      LX=IS2(3)
      LY=IS2(4)
C
D     WRITE(KFILDO,159)(FD1(K),K=1,LX*LY)
D159  FORMAT(' 500-MB HEIGHT'/(10F8.1))
C
      IF(IER.NE.0)THEN
         WRITE(KFILDO,160)(JD(J),J=1,4)
 160     FORMAT(/' ****ATTEMPT TO FETCH UPPER LEVEL HEIGHT',
     1           ' FAILED.  VARIABLE ',3(I10.9),I4.3,' NOT ',
     2           ' COMPUTED IN THKADV.')
         GO TO 900
      ENDIF
C
      MD(1)=IC(1,3,J)
      MD(2)=IC(2,3,J)
      MD(3)=IDPARS(12)
      MD(4)=0
C
C        FETCH LOWER LEVEL HEIGHT INTO FD2( ).
C
      CALL GFETCH(KFILDO,KFIL10,MD,7777,LSTORE,ND9,LITEMS,
     1            IS0,IS1,IS2,IS4,ND7,IPACK,IWORK,FD2,ND2X3,
     2            NWORDS,NPACK,NDATE,NTIMES,CORE,ND10,
     3            NBLOCK,NFETCH,NSLAB2,MISSP,MISSS,L3264B,1,IER)
      IF(MISSP.NE.0)MISTOT=MISTOT+1
C
D     WRITE(KFILDO,169)(FD2(K),K=1,LX*LY)
D169  FORMAT(' 1000-MB HEIGHT'/(10F8.1))
C
      IF(IER.NE.0)THEN
         WRITE(KFILDO,170)(JD(J),J=1,4)
 170     FORMAT(/' ****ATTEMPT TO FETCH LOWER LEVEL HEIGHT',
     1           ' FAILED.  VARIABLE ',3(I10.9),I4.3,' NOT ',
     2           ' COMPUTED IN THKADV.')
         GO TO 900
      ENDIF
C
C        MAKE SURE THE GRIDS HAVE THE SAME CHARACTERISTICS.
C
      IF(NSLAB1.NE.NSLAB2.OR.LX.NE.IS2(3).OR.LY.NE.IS2(4))THEN
C
C           THE GRID CHARACTERISTICS ARE NOT THE SAME.
C
         IER=100
         WRITE(KFILDO,180)(LD(J),J=1,4),(NGRIDC(J,NSLAB1),J=1,6),LX,LY,
     1                    (MD(J),J=1,4),(NGRIDC(J,NSLAB2),J=1,6),MX,MY, 
     2                    IER
 180     FORMAT(/' ****DIFFERENT GRID CHARACTERISTICS OF HEIGHTS.',
     1           '  VARIABLE NOT ',
     2           'COMPUTED IN THKADV.  VALUES FROM NGRIDC( , ) AND X*Y',
     3           ' ARE: ',2(/,2X,3I10.9,I4.3,4X,6I10,4X,I3,'*',I3),
     4           '  IER=',I3)
         GO TO 900
      ENDIF
C
C        COMPUTE THICKNESS IN ADVDTA( ).
C
      DO 190 K=1,LX*LY
         ADVDTA(K)=FD1(K)-FD2(K)
 190  CONTINUE
C
D     WRITE(KFILDO,191)(ADVDTA(K),K=1,LX*LY)
D191  FORMAT( '500-1000 MB THICKNESS'/(10F8.1))
C       
C        CREATE IDS FOR COMPUTING GEOSTROPHIC U-WINDS 
C        FROM LOWER LEVEL HEIGHTS.
C
      LD(1)=IC(1,4,J)
      LD(2)=IC(2,4,J)
      LD(3)=IDPARS(12)
      LD(4)=0
C
C        CALL PRSID1 TO PARSE IDS LD( ) TO LDPARS( ).   
C
      CALL PRSID1(KFILDO,LD,LDPARS)
C
      CALL GWIND(KFILDO,KFIL10,LDPARS,LD,NDATE,
     1           NGRIDC,ND11,NSLAB,IPACK,IWORK,FD2,ND2X3,
     2           LSTORE,ND9,LITEMS,CORE,ND10,NBLOCK,NFETCH,
     3           IS0,IS1,IS2,IS4,ND7,
     4           FD1,FD5,FD6,FD7,FDSINS,FDMS,ND2X3,
     5           ISTAV,L3264B,MISTOT,IER)
C
D     WRITE(KFILDO,199)(FD2(K),K=1,LX*LY)
D199  FORMAT(' 1000-MB U-WIND'/(10F8.1))
C
      IF(IER.NE.0)THEN
         WRITE(KFILDO,200)(JD(J),J=1,4)
 200     FORMAT(/'     ATTEMPT TO COMPUTE U-WIND',
     1           ' FAILED.  VARIABLE ',3(I10.9),I4.3,' NOT ',
     2           ' COMPUTED IN THKADV.')
         GO TO 900
      ENDIF
C     
C        CREATE IDS FOR COMPUTING GEOSTROPHIC V-WINDS 
C        FROM LOWER LEVEL HEIGHTS.
C
      LD(1)=IC(1,5,J)
      LD(2)=IC(2,5,J)
      LD(3)=IDPARS(12)
      LD(4)=0
C
C        CALL PRSID1 TO PARSE IDS LD( ) TO LDPARS( ) .  
C
      CALL PRSID1(KFILDO,LD,LDPARS)
C
      CALL GWIND(KFILDO,KFIL10,LDPARS,LD,NDATE,
     1           NGRIDC,ND11,NSLAB,IPACK,IWORK,FD3,ND2X3,
     2           LSTORE,ND9,LITEMS,CORE,ND10,NBLOCK,NFETCH,
     3           IS0,IS1,IS2,IS4,ND7,
     4           FD1,FD5,FD6,FD7,FDSINS,FDMS,ND2X3,
     5           ISTAV,L3264B,MISTOT,IER)
C
D     WRITE(KFILDO,209)(FD3(K),K=1,LX*LY)
D209  FORMAT(' 1000-MB V-WIND'/(10F8.1))
C
      IF(IER.NE.0)THEN
         WRITE(KFILDO,210)(JD(J),J=1,4)
 210     FORMAT(/'     ATTEMPT TO COMPUTE V-WIND',
     1           ' FAILED.  VARIABLE ',3(I10.9),I4.3,' NOT ',
     2           ' COMPUTED IN THKADV.')
         GO TO 900
      ENDIF
C
C        MAKE SURE THE HEIGHT FOR THICKNESS AND HEIGHT FOR WINDS
C        GRIDS HAVE THE SAME CHARACTERISTICS. 
C 
      IF(NSLAB.NE.NSLAB1.OR.LX.NE.IS2(3).OR.LY.NE.IS2(4))THEN
C
C           THE GRID CHARACTERISTICS ARE NOT THE SAME.
C
         IER=100
         WRITE(KFILDO,220)(LD(J),J=1,4),(NGRIDC(J,NSLAB1),J=1,6),LX,LY,
     1                    (MD(J),J=1,4),(NGRIDC(J,NSLAB2),J=1,6),MX,MY, 
     2                    IER
 220     FORMAT(/' ****DIFFERENT GRID CHARACTERISTICS OF HEIGHT.',
     1           '  PREDICTOR NOT ',
     2           'COMPUTED IN THKADV.  VALUES FROM NGRIDC( , ) AND X*Y',
     3           ' ARE: ',2(/,2X,3I10.9,I4.3,4X,6I10,4X,I3,'*',I3),
     4           '  IER=',I3)
         GO TO 900
      ENDIF
C
C        CALL MAPLAT TO COMPUTE SINE OF LATITUDE AND MAP FACTOR.
C
      CALL MAPLAT(KFILDO,JD,NGRIDC(1,NSLAB),FD5,FD1,FDSINS,FDMS,LX,LY,
     1            IER)
C        FD5( ) IS SINE OF THE LATITUDE (RETURNED).  (NOT NEEDED)
C        FD1( ) IS MAP FACTOR (RETURNED). (USED IN ADVCTW1)
C        FDSINS( ) CARRIED IN.  DO NOT DISTURB.
C        FDMS( ) CARRIED IN.  DO NOT DISTURB.
C
D     WRITE(KFILDO,239)(FD1(K),K=1,LX*LY)
D239  FORMAT(' MAP FACTOR'/(10F8.1))
C
      IF(IER.NE.0)THEN
	 WRITE(KFILDO,240)IER
 240     FORMAT(/' ****ATTEMPT TO COMPUTE SINE(LAT) AND MAP FACTOR '
     1          ,'FAILED IN THKADV.  IER=',I3)
	 GO TO 900
      ENDIF
C
C        CALL ADVCTW1 TO COMPUTE ADVECTION
C
      XMESHL=NGRIDC(2,NSLAB)/1000.
      CALL ADVCTW1(KFILDO,XMESHL,ADVDTA,FD1,FD2,FD3,FD4,LX,LY)
C        ADVDTA( ) IS THE THICKNESS ON INPUT AND ADVECTED
C                  THICKNESS ON OUTPUT.
C        FD1( ) IS THE MAP FACTOR (INPUT).
C        FD2( ) IS THE U-WINDS FOR ADVECTION (INPUT).
C        FD3( ) IS THE V-WINDS FOR ADVECTION (INPUT).
C        FD4( ) IS A WORK ARRAY.
C
C        SCALE THE THICKNESS ADVECTION.
C        THE TEMPERATURE ADVECTION FIELD WAS SCALED BY 10**5.  THE
C        FACTOR 10**5 WAS DECIDED FOR TEMPERATURE BY COMPUTING
C        THE RANGE, MEAN, AND STANDARD DEVIATION OF THE
C        TEMPERATURE FIELD AT 1000 MB AND 500 MB DURING BOTH
C        A SUMMER AND A WINTER CASE, AND THEN DETERMINING AN
C        APPROPRIATE MULTIPLICATION FACTOR WHICH WOULD OBTAIN
C        VALUES WHOSE METEOROLOGICAL SIGNIFICANCE IS CONTAINED
C        IN THE INTEGER PART OF THE NUMBER.  SINCE 1000-500 MB
C        THICKNESS IN M IS ABOUT AN ORDER OF MAGNITUDE GREATER
C        THAN TEMPERATURE IN K, THE SCALING USED HERE IS 10**4.
C
      DO 300 K=1,LX*LY
C
         IF(NINT(ADVDTA(K)).NE.9999)THEN
            ADVDTA(K)=ADVDTA(K)*10000.
         ENDIF
C
 300  CONTINUE
C
D     WRITE(KFILDO,305)(ADVDTA(K),K=1,LX*LY)
D305  FORMAT(' THICKNESS ADVECTION SCALED X 10000'/(10F8.1))
C
      GO TO 920
C
C        FILL IN THE RETURNED ARRAY WITH MISSING VALUES.
C
 900  DO 910 K=1,ND2X3
         ADVDTA(K)=9999.
 910  CONTINUE
C
 920  RETURN
      END
