      SUBROUTINE RDVR66(KFILDO,IP6,IP7,IP8,IP9,KFILP,KFILCP,
     1                  ID,IDPARS,TRESHL,TRESHU,JD,JP,PLAIN,
     2                  ITAU,IWDTH,IPREC,CFMT,ISCALD,HEAD,ND4,
     3                  NVRBL,ISTOP,IER)
C 
C        DECEMBER  1997   GLAHN   TDL   MOS-2000 
C        DECEMBER  1997   GLAHN   REDEFINED JD(4) UPON EXIT
C        DECEMBER  1997   GLAHN   CHECK FOR ASCENDING THRESHOLDS
C                                 FOR IDPARS(3, ) = 3 AT 1295
C        JANUARY   1998   GLAHN   CHECK ABOVE 128 ON ID(4, ) CHANGED.
C        MARCH     1998   GLAHN   ADDED CHECK FOR MODEL NOS. 80, 81 & 82
C        APRIL     1998   GLAHN   SETPLN CALLED FOR PLAIN LANGUAGE, ETC.
C        MAY       1998   GLAHN   MODIFIED FORMAT 231
C        MAY       1998   GLAHN   REMOVED NTYPVR( ) AND ADDED ITAU( );
C                                 REMOVED NPRED AND NTAND; REMOVED CKIDS
C        MAY       1998   GLAHN   REINSERTED DEFINITION OF JD(4, )
C        SEPTEMBER 1998   GLAHN   PRINT CONCERNING JP(1, ) CHANGED
C        OCTOBER   1998   GLAHN   PRINT JD( ) CHANGED TO JP( )
C        JUNE      1999   GLAHN   CHANGED COMMENT FOR JP(1, )
C        APRIL     2000   DALLAVALLE   MODIFIED FORMAT STATEMENTS TO 
C                                      CONFORM TO FORTRAN 90 STANDARDS
C                                      ON THE IBM SP
C
C        PURPOSE 
C            TO READ A COMBINED PREDICTOR AND PREDICTAND LIST AND 
C            ASSOCIATED INFORMATION FROM A FILE ON UNIT KFILP. 
C            KFILP CAN BE THE DEFAULT INPUT FILE, OR CAN BE A 
C            SEPARATE FILE.  ALSO, VARIABLE NAMES AND OTHER
C            INFORMATION FROM THE VARIABLE CONSTANT FILE ON UNIT
C            KFILCP CAN BE MATCHED WITH THE VARIABLES.  SOME INSERTIONS
C            ARE MADE FOR COMPUTED VARIABLES.  EACH VARIABLE ID IN 
C            ID( , ) IS DUPLICATED IN JD( , ) BUT WITH SOME PORTIONS
C            OMITTED; THE RESULT IS CALLED THE "BASIC" ID.  (THIS BASIC 
C            ID IS NOT DEFINED THE SAME WAY IN U201.)   THIS ROUTINE IS
C            USED FOR U660; A SIMILIAR ONE RDPRED IS USED FOR U201
C            AND RDVRBL FOR U600.
C
C        DATA SET USE 
C            KFILDO - DEFAULT UNIT NUMBER FOR OUTPUT (PRINT) FILE.  (OUTPUT) 
C            IP6    - UNIT NUMBER FOR OUTPUT (PRINT) FILE FOR VARIABLE
C                     LIST AS READ IN.  (OUTPUT) 
C            IP7    - UNIT NUMBER FOR OUTPUT (PRINT) FILE FOR VARIABLE
C                     LIST PARSED INTO ITS 15 COMPONENTS.  (OUTPUT)
C            IP8    - UNIT NUMBER FOR OUTPUT (PRINT) FILE FOR VARIABLE
C                     LIST PARSED INTO ITS COMPONENTS.  (OUTPUT)
C            IP9    - UNIT NUMBER FOR OUTPUT (PRINT) FILE FOR PREDICTOR
C                     LIST INCLUDING INFORMATION FROM THE PREDICTOR
C                     CONSTANT FILE.  (OUPUT)
C            KFILP  - UNIT NUMBER FROM WHICH TO READ VARIABLE LIST.
C                     IT IS ASSUMED FILE HAS BEEN OPENED.  (INPUT) 
C           KFILCP  - UNIT NUMBER FROM WHICH TO READ VARIABLE NAMES AND
C                     OTHER ASSOCIATED INFORMATION.  IT IS ASSUMED FILE 
C                     HAS BEEN OPENED.  (INPUT) 
C 
C        VARIABLES 
C              KFILDO = DEFAULT UNIT NUMBER FOR OUTPUT (PRINT) FILE. (INPUT) 
C                 IP6 = INDICATES WHETHER (>0) OR NOT (=0) THE VARIABLE 
C                       ID WILL BE WRITTEN TO UNIT IP6 AS THE VARIABLES
C                       ARE READ IN.  THIS SHOULD BE USEFUL FOR CHECKOUT
C                       OTHERWISE, IP7, IP8, AND/OR IP9 MAY BE PREFERRED.
C                       (INPUT) 
C                 IP7 = INDICATES WHETHER (>0) OR NOT (=0) THE VARIABLE
C                       LIST WILL BE WRITTEN TO UNIT IP7 PARSED INTO ITS
C                       15 INTEGER AND ONE REAL*4 COMPONENT.  IF THERE ARE 
C                       INPUT ERRORS, THE VARIABLE LIST WILL BE WRITTEN 
C                       TO THE DEFAULT OUTPUT FILE UNIT KFILDO AS WELL AS 
C                       TO UNIT IP7 IF THEY ARE DIFFERENT.  (INPUT)
C                 IP8 = SAME AS IP7, EXCEPT TRESHL( ) AND TRESHU( )HAVE
C                       BEEN SET AND PRINTED.  (INPUT)
C                 IP9 = INDICATES WHETHER (>0) OR NOT (=0) THE VARIABLE 
C                       LIST WILL BE WRITTEN TO UNIT IP9.  THE DIFFERENCE
C                       BETWEEN IP8 AND IP9 IS THAT IP9 DOES NOT INCLUDE
C                       THE PARSED ID'S IN IDPARS( , ), BUT RATHER DOES
C                       INCLUDE INFORMATION TAKEN FROM THE VARIABLE
C                       CONSTANT FILE READ ON UNIT KFILCP.  (INPUT) 
C               KFILP = UNIT NUMBER FROM WHICH TO READ VARIABLE LIST.
C                       IT IS ASSUMED FILE HAS BEEN OPENED.  (INPUT)
C              KFILCP = UNIT NUMBER FROM WHICH TO READ VARIOUS VARIABLE
C                       CONSTANTS AND NAMES.  IT IS ASSUMED FILE HAS BEEN
C                       OPENED.  (INPUT)
C             ID(J,N) = THE INTEGER VARIABLE ID'S (J=1,4) (N=1,NVRBL).
C                       (OUTPUT)
C         IDPARS(J,N) = THE PARSED, INDIVIDUAL COMPONENTS OF THE VARIABLE
C                       ID'S CORRESPONDING TO ID( ,N) (J=1,15), (N=1,NVRBL).
C                       (OUTPUT)
C                       J=1--CCC (CLASS OF VARIABLE),
C                       J=2--FFF (SUBCLASS OF VARIABLE),
C                       J=3--B (BINARY INDICATOR),
C                          0 = NOT BINARY,
C                          1 = CUMULATIVE FROM ABOVE, VALUES GE LOWER THRESHOLD
C                              TRESHL = 1,
C                          2 = CUMULATIVE FROM BELOW, VALUES LT UPPER THRESHOLD
C                              TRESHU = 1.
C                          3 = DISCRETE BINARY.  VALUES GE LOWER THRESHOLD AND
C                              LT UPPER THRESHOLD = 1.
C                          5 = GRID BINARY.  VALUES GE LOWER THRESHOLD
C                          ONLY THE VALUE OF 0, 1, OR 5 SHOULD BE USED FOR
C                          PREDICTORS;
C                          0, 1, 2, OR 3 CAN BE USED FOR PREDICTANDS.
C                       J=4--DD (DATA SOURCE, MODEL NUMBER),
C                       J=5--V (VERTICAL APPLICATION),
C                       J=6--LBLBLBLB (BOTTOM OF LAYER, 0 IF ONLY 1 LAYER),
C                       J=7--LTLTLTLT (TOP OF LAYER),
C                       J=8--T (TRANSFORMATION),
C                       J=9--RR (RUN TIME OFFSET, ALWAYS + AND BACK IN TIME),
C                       J=10--OT (TIME APPLICATION),
C                       J=11--OH (TIME PERIOD IN HOURS),
C                       J=12--TAU (PROJECTION IN HOURS),
C                       J=13--I (INTERPOLATION TYPE),
C                       J=14--S (SMOOTHING INDICATOR), AND
C                       J=15--G (GRID INDICATOR).  THIS HAS NO MEANING
C                             EXCEPT IN U201, AND IS SET TO ZERO.  THIS
C                             IN CASE THE SAME VARIABLE LIST IS USED IN
C                             U201 AND OTHER PROGRAMS, SUCH AS U600.
C           TRESHL(N) = AS READ, THE BINARY THRESHOLD CORRESPONDING TO 
C                       IDPARS( ,N) (N=1,ND4).  THIS IS USED IN SUBROUTINE
C                       THSET TO SET THE LOWER AND UPPER THRESHOLDS AS
C                       TRESHL( ) AND TRESHU( ), RESPECTIVELY.  NOTE
C                       THAT, SINCE THE VARIABLES ARE NOT SORTED BY U660
C                       (AS THEY ARE IN U600), THE SETTING OF THRESHOLDS
C                       FOR A DISCRETE BINARY WILL BE DONE CORRECTLY
C                       ONLY IF THE VARIABLES INVOLVED ARE SEQUENTIAL
C                       IN THE INPUT LIST .  (OUTPUT)
C           TRESHU(N) = THE UPPER THRESHOLD (SEE TRESHL( )).  (OUTPUT)
C             JD(J,N) = THE BASIC INTEGER VARIABLE ID'S (J=1,4) (N=1,ND4).
C                       THIS IS THE SAME AS ID(J,N), EXCEPT THAT THE FOLLOWING
C                       PORTIONS ARE OMITTED:
C                       B = IDPARS(3, ),
C                       G = IDPARS(15, ), 
C                       TRESHL( ) AND
C                       TRESHU( ).
C                       JD( , ) IS USED TO IDENTIFY WHICH CALCULATIONS
C                       CAN BE MADE DIRECTLY IN U660, WHICH IS ONLY FORMING
C                       BINARIES.  THE "G" VARIABLE HAS NO MEANING IN U660,
C                       IT BEING ONLY FOR POSSIBLE USE IN U201.  (OUTPUT)
C             JP(J,N) = CONTROLS THE OUTPUT BY VARIABALE (N=1,ND4).
C                       J=1--INDICATES WHETHER (>0) OR NOT (=0) VARIABLE N
C                            WILL BE WRITTEN TO THE BINARY OUTPUT;
C                       J=2--INDICATES WHETHER (>0) OR NOT (=0) VARIABLE N
C                            WILL BE WRITTEN TO UNIT IP(16) WITH THE FORMAT 
C                            PROVIDED WITH THE VARIABLE; AND 
C                       J=3--INDICATES WHETHER (>0) OR NOT (=0) VARIABLE N
C                            WILL BE WRITTEN TO UNIT IP(15) NOT UNDER
C                            CONTROL OF THE FORMAT PROVIDED BUT TO THE
C                            RESOLUTION PACKED.  
C                       (OUTPUT)
C            PLAIN(N) = THE PLAIN LANGUAGE DESCRIPTION OF THE VARIABLES
C                       (N=1,ND4).  (CHARACTER*32)  (OUTPUT)
C             ITAU(N) = THE NUMBER OF HOURS TO ADD TO NDATE TO GET 
C                       THE VARIABLE N (N=1,ND4).  THIS IS THE 
C                       "LOOKAHEAD" FEATURE.  (OUTPUT)
C            IWDTH(J) = WIDTH OF FIELD FOR PRINTING (J=1,ND4).  MAXIMUM
C                       OF 30.  (OUTPUT)
C            IPREC(J) = PRECISION FOR PRINTING (J=1,ND4).  THIS IS THE
C                       NUMBER OF PLACES AFTER THE DECIMAL POINT.  
C                       (OUTPUT)
C             CFMT(J) = FORMAT FOR PRINTING, EITHER I OR F (J=1,ND4).
C                       (CHARACTER*1)  (OUTPUT)
C           ISCALD(N) = THE DECIMAL SCALING CONSTANT TO USE WHEN PACKING THE 
C                       COLLATED DATA (N=1,ND4).  NO BINARY SCALING IS
C                       PROVIDED FOR.  ISCALD COMES FROM THE VARIABLE
C                       CONSTANT FILE, MODIFIED TO BE 2 FOR GRID BINARIES,
C                       AND 0 FOR BINARIES.  ZERO WHEN NOT FOUND IN THE
C                       FILE.  (OUTPUT)
C           HEAD(J,N) = HEADING FOR COLUMNS WHEN PRINTING DATA J=1,30)
C                       (N=1,ND4).  (CHARACTER*1)  (OUTPUT)
C                 ND4 = MAXIMUM NUMBER OF VARIABLES THAT CAN BE DEALT WITH 
C                       IN ONE RUN.  SECOND DIMENSION OF ID( , ) AND
C                       IDPARS( , ) AND DIMENSION OF TRESHL( ), TRESHU( ),
C                       AND ITAU( ).  (INPUT)
C               NVRBL = THE NUMBER OF VARIABLES.  (OUTPUT)
C               ISTOP = INCREASED BY 1 WHENEVER AN ERROR IS ENCOUNTERED.
C                       (INPUT-OUTPUT)
C                 IER = STATUS RETURN.  (OUTPUT)
C                        0 = GOOD RETURN.
C                       40 = ERROR READING VARIABLE LIST.
C                       41 = DIMENSION ND4 ABOUT TO BE EXCEEDED.
C                       42 = NO PREDICTORS OR NO PREDICTANDS.
C            ITEMP(J) = WORK ARRAY (J=1,6).  (INTERNAL)
C                       J=1--FIRST ID = ID(1, ),
C                       J=2--SECOND ID = ID(2, ),
C                       J=3--THIRD ID = ID(3, ),
C                       J=4--LAST PORTION OF ID = ID(4, ),
C                       J=5--FRACTIONAL PART OF TRESHL, AND
C                       J=6--TEN'S EXPONENT OF ITEMP(5).
C                TEMP = SIGN OF THRESHOLD.  (CHARACTER*1)  (INTERNAL)
C               CTEMP = FORMAT DESCRIPTOR FOR A VARIABLE AS READ.
C                       PUT INTO CFMT( ).  (CHARACTER*1)  (INTERNAL)
C               HEADT = HEADING AS READ.  PUT INTO HEAD( , ).
C                       (CHARACTER*30)  (INTERNAL)
C            JTEMP(J) = TEMPORARY ARRAY FOR READING INFORMATION BEFORE
C                       STORING (J=1,6).  (INTERNAL)
C                NERR = COUNTS ERRORS FOR PURPOSES OF KNOWING WHEN TO
C                       PRINT DIAGNOSTICS.   IF NERR EXCEEDS 100,
C                       RDVRBL WILL STOP.  (INTERNAL)
C 
C        NONSYSTEM SUBROUTINES CALLED 
C            PRSID, THSET
C
      CHARACTER*1 TEMP,CTEMP,HEAD(30,ND4),HEADT(30)
      CHARACTER*1 CFMT(ND4)
      CHARACTER*12 UNITS(ND4)
C        UNITS( ) IS AN AUTOMATIC ARRAY FOR CALL TO SETPLN.
      CHARACTER*32 PLAIN(ND4)
C
      DIMENSION ID(4,ND4),IDPARS(15,ND4),TRESHL(ND4),TRESHU(ND4),
     1          JD(4,ND4),JP(3,ND4),ITAU(ND4),
     2          IWDTH(ND4),IPREC(ND4),ISCALD(ND4)
      DIMENSION SMULT(ND4),SADD(ND4),ORIGIN(ND4),CINT(ND4)
C        SMULT( ), SADD( ), ORIGIN( ), AND CINT( ) ARE AUTOMATIC
C        ARRAYS FOR CALL TO SETPLN.
      DIMENSION ITEMP(6),JTEMP(6)
C
      DATA TEMP/' '/
      DATA CTEMP/' '/
      DATA HEADT/30*' '/
C        FOR SOME UNKNOWN REASON, IT SEEMS TEMP AND CTEMP MUST
C        BE INITIALIZED FOR PRINT AT STATEMENT 1031 TO WORK.
C         
      IER=0
      NERR=0
C
C        INITIALIZE HEADING TO AVOID PRINTING NULS.
C
      DO 101 N=1,ND4
      DO 100 J=1,30
      HEAD(J,N)=' '
 100  CONTINUE
 101  CONTINUE
C
      N=1
C
C        READ PRDICTOR ID.
C
 102  READ(KFILP,103,IOSTAT=IOS,ERR=104,END=150)(ITEMP(J),J=1,4),
     1            TEMP,ITEMP(5),ITEMP(6),(JTEMP(J),J=1,4),
     2            CTEMP,(JTEMP(J),J=5,6),(HEADT(J),J=1,MIN(JTEMP(5),30))
 103  FORMAT(I9,1X,I9,1X,I9,1X,I3,1X,A1,1X,I4,1X,I3,4X,3I2,I3,
     1       8X,A1,I2,1X,I1,1X,30A1)
      IF(IP6.NE.0.AND.N.EQ.1)WRITE(IP6,1030)
 1030 FORMAT(/,' VARIABLES AS READ BY RDVR66')
      IF(IP6.NE.0)WRITE(IP6,1031)(ITEMP(J),J=1,4),
     1            TEMP,ITEMP(5),ITEMP(6),(JTEMP(J),J=1,4),
     2            CTEMP,(JTEMP(J),J=5,6),(HEADT(J),J=1,MIN(JTEMP(5),30))
 1031 FORMAT(' ',I9.9,1X,I9.9,1X,I9.9,1X,I3.3,1X,A1,'.',I4.4,'E',I3.2,
     1          4X,3I2,1X,I3,7X,A1,I2.2,'.',I1,1X,30A1)
      GO TO 120
C
 104  NERR=NERR+1
      ISTOP=ISTOP+1
      IER=40
 
      WRITE(KFILDO,107)N,IOS
 107  FORMAT(/,' ****ERROR READING VARIABLE ID NO.',I4,
     1         '.  IOSTAT =',I5,'.  VARIABLE SKIPPED.')
      IF(IP6.NE.KFILDO)WRITE(IP6,107)N,IOS
C        ATTEMPT TO READ ANOTHER RECORD.  HOWEVER, SOME ERRORS WILL
C        KEEP REPEATING AND FILL UP THE PRINT FILE.  GO BACK ONLY IF
C        IT SEEMS THERE WAS AN ERROR ON AN INDIVIDUAL RECORD.  A
C        LIMIT OF NERR = 100 HAS BEEN SET.
C
      IF(NERR.GE.100)THEN
         WRITE(KFILDO,110)
 110     FORMAT(/,' ****READING ERRORS IN RDVR66 HALTED PROGRAM',
     1            ' AT 110.')
         STOP 110
      ENDIF
C
      IF(IOS.EQ.900.OR.
     1   IOS.EQ.915.OR.
     2   IOS.EQ.922.OR.
     3   IOS.EQ.933.OR.
     4   IOS.EQ.945.OR.
     5   IOS.EQ.958)GO TO 102
      GO TO 150
C      
 120  IF(ITEMP(1).EQ.999999)GO TO 150
C
C        STORE THIS VARIABLE ID, UNLESS ND4 WILL BE EXCEEDED.
C
      IF(N.LE.ND4)GO TO 125
      IER=41
      NERR=NERR+1
      ISTOP=ISTOP+1
      WRITE(KFILDO,122)ND4
 122  FORMAT(/,' ****ND4 = ',I4,' TOO SMALL IN RDVR66.')
      GO TO 180
C
C        REMOVE THE "MODEL NUMBER" FOR "CONSTANT" DATA.  THIS IS HERE
C        FOR CONVENIENCE AND SAFETY, BECAUSE A DEFAULT MODEL NUMBER
C        IS USED IN "VECTOR" TYPE PROGRAMS WHICH HAVE ONLY ONE
C        POSSIBLE CONSTANT SOURCE, WHILE U201 USES A MODEL NUMBER
C        TO DESIGNATE MULTIPLE SOURCES.  IF THE VARIABLES WERE JUST
C        COPIED FROM A U201 CONTROL FILE TO A U660 CONTROL FILE,
C        THE USER MIGHT FORGET TO REMOVE THE MODEL NUMBER.
C 
 125  IF(ITEMP(1).GE.400000000.AND.
     1   ITEMP(1).LE.499000000)ITEMP(1)=(ITEMP(1)/100)*100	
C
C        PARSE ID'S INTO 15 COMPONENT PARTS ID(J, ) (J=1,15) AND 
C        TRESHL( ).
C
      CALL PRSID(KFILDO,ITEMP,TEMP,ID(1,N),IDPARS(1,N),TRESHL(N),ISTOP)
C
C        FOR ALL PROGRAMS EXCEPT U201, IDPARS(15, ) AND IT'S ROLE IN
C        ID(4) HAS NO MEANING.  THE VECTOR INPUT FILE WILL NOT
C        INCLUDE IT.  THEREFORE, SET IT TO ZERO.
C
      IDPARS(15,N)=0
      ID(4,N)=(ID(4,N)/10)*10
C
C        PREPARE "BASIC" VARIABLE ID'S.  FOR PROGRAMS READING U201
C        OUTPUT (E.G., U660), JD( , ) = ID( , ) EXCEPT IN ID(1, ) 
C        THE BINARY INDICATOR IS OMITTED AND IN JD(4, ) THE 
C        THRESHOLDS AND IDPARS(15, ) ARE OMITTED.
C
      JD(1,N)=IDPARS(1,N)*1000000+IDPARS(2,N)*1000+IDPARS(4,N)
      JD(2,N)=ID(2,N)
      JD(3,N)=ID(3,N)
      JD(4,N)=IDPARS(13,N)*100+
     1        IDPARS(14,N)*10
C
C        STORE PRINT AND OTHER PARAMETERS.
C
      JP(1,N)=JTEMP(1)
      JP(2,N)=JTEMP(2)
      JP(3,N)=JTEMP(3)
      ITAU(N)=JTEMP(4)
      IWDTH(N)=MIN(JTEMP(5),30)
C        NOTE THAT THE FIELD WIDWH IS LIMITED TO 30 CHARACTERS.  OTHERWISE,
C        PROBLEMS MAY OCCUR LATER ON.
      IPREC(N)=JTEMP(6)
      CFMT(N)=CTEMP
      HEAD(1:JTEMP(5),N)=HEADT(1:JTEMP(5))
C        ONLY AS MANY CHARACTERS ARE USED FOR THE HEADING
C        AS THE FORMAT WIDTH JTEMP(5) ALLOWS.
C
C        OMIT VARIABLE IF IT IS A DUPLICATE.
C
      IF(N.EQ.1)GO TO 130
C
      DO 129 J=1,N-1
      IF(ID(1,J).NE.ID(1,N).OR.
     1   ID(2,J).NE.ID(2,N).OR.
     2   ID(3,J).NE.ID(3,N).OR.
     3   ID(4,J).NE.ID(4,N))GO TO 129
      IF(ITAU(J).NE.ITAU(N))GO TO 129
C        A VARIABLE WITH THE SAME ID'S BUT WITH A DIFFERENT
C        ITAU IS ALLOWED.
      WRITE(KFILDO,128)(ID(L,N),L=1,4)
      IF(IP6.NE.KFILDO.AND.IP6.NE.0)WRITE(IP6,128)(ID(L,N),L=1,4)
 128  FORMAT(/,' ****DUPLICATE VARIABLE DELETED',
     1         1X,I9.9,1X,I9.9,1X,I9.9,1X,I10.3)
      ISTOP=ISTOP+1
      GO TO 102
C
 129  CONTINUE
C
C        INSIST ON SEQUENTIAL DISCRETE BINARIES HAVING LOWER
C        TO HIGHER THRESHOLDS.
C
D     WRITE(KFILDO,1290)IDPARS(3,N),IDPARS(3,N-1),
D    1     TRESHL(N),TRESHL(N-1)
D1290 FORMAT(/,' AT 1295',2I4,2F10.4)
      IF(IDPARS(3,N).NE.3.OR.
     1   IDPARS(3,N-1).NE.3.OR.
     2   TRESHL(N).GT.TRESHL(N-1))GO TO 130
      IF(ID(1,N).NE.ID(1,N-1).OR.
     1   ID(2,N).NE.ID(2,N-1).OR.
     2   ID(3,N).NE.ID(3,N-1).OR.
     3   IDPARS(13,N).NE.IDPARS(13,N-1).OR.
     4   IDPARS(14,N).NE.IDPARS(14,N-1))GO TO 130
      WRITE(KFILDO,1295)(ID(L,N),L=1,4)
      IF(IP6.NE.KFILDO.AND.IP6.NE.0)WRITE(IP6,1295)(ID(L,N),L=1,4)
 1295 FORMAT(/,' ****THRESHOLDS NOT IN ORDER LOW TO HIGH.',
     1         '   VARIABLE DELETED',
     2         1X,I9.9,1X,I9.9,1X,I9.9,1X,I10.3)
      ISTOP=ISTOP+1
      GO TO 102
C
 130  N=N+1
      GO TO 102
C      
 150  NVRBL=N-1
      IF(NVRBL.EQ.0)GO TO 228
C
C        WRITE VARIABLE LIST WHEN REQUIRED.  LIST IS ALWAYS WRITTEN
C        TO DEFAULT OUTPUT WHEN THERE HAS BEEN AN ERROR.
C
 180  IF(NERR.NE.0)WRITE(KFILDO,181)NVRBL
 181  FORMAT(/,' ',I4,' VARIABLES AND PARSED IDS IN ORDER READ IN')
      IF(NERR.NE.0)WRITE(KFILDO,182)(N,(ID(J,N),J=1,4),
     1                  (IDPARS(J,N),J=1,15),TRESHL(N),
     2                  (JP(J,N),J=1,3),ITAU(N),N=1,NVRBL)
 182  FORMAT('  NO.     ID(1)     ID(2)     ID(3)      ID(4)',
     2       '   CCC FFF B DD    V LLLL UUUU    T RR  O HH',
     3       ' TAU    I S G     THRESHOLD JP( )  ITAU',/,
     4      (' ',I4,1X,I9.9,1X,I9.9,1X,I9.9,1X,I10.3,
     5       2X,I4.3,I4.3,I2,I3,3X,I2,I5,I5,3X,
     6       I2,I3,I3,I3,I4,3X,I2,I2,I2,F14.6,3I2,I5))       
C
      IF(NERR.NE.0.AND.KFILDO.NE.IP7.OR.NERR.EQ.0.AND.IP7.NE.0)THEN
         WRITE(IP7,181)NVRBL
         WRITE(IP7,182)(N,(ID(J,N),J=1,4),
     1                 (IDPARS(J,N),J=1,15),TRESHL(N),
     2                 (JP(J,N),J=1,3),ITAU(N),N=1,NVRBL)
      ENDIF
C
C        SET UPPER AND LOWER THRESHOLDS FOR ALL VARIABLES.
C
      CALL THSET(KFILDO,ID,IDPARS,NVRBL,TRESHL,TRESHU,IER)
      IF(IER.NE.0)ISTOP=ISTOP+1
C
C        WRITE VARIABLE LIST AS DESIRED.
C
      IF(IP8.NE.0)WRITE(IP8,191)NVRBL
 191  FORMAT(/,' ',I4,' VARIABLES AND PARSED IDS')
      IF(IP8.NE.0)WRITE(IP8,192)(N,(ID(J,N),J=1,4),
     1                 (IDPARS(J,N),J=1,15),TRESHL(N),TRESHU(N),
     3                 (JP(J,N),J=1,3),ITAU(N),N=1,NVRBL)
 192  FORMAT('  NO.     ID(1)     ID(2)     ID(3)      ID(4)',
     2       '   CCC FFF B DD    V LLLL UUUU    T RR  O HH',
     3       ' TAU    I S G   L--THRESHOLDS--U  JP( ) IT',/,
     4      (' ',I4,1X,I9.9,1X,I9.9,1X,I9.9,1X,I10.3,
     5       2X,I4.3,I4.3,I2,I3,3X,I2,I5,I5,3X,
     6       I2,I3,I3,I3,I4,3X,I2,I2,I2,F10.2,F10.2,3I2,I3))       
C
C        READ THE PLAIN LANGUAGE AND OTHER INFORMATION
C        FROM THE VARIABLE CONSTANT FILE, AND INITIALIZE
C        PLAIN( ) AND OTHER VARIABLES.
C
      CALL SETPLN(KFILDO,KFILCP,
     1            ID,IDPARS,JD,ISCALD,SMULT,SADD,
     2            ORIGIN,CINT,PLAIN,UNITS,ND4,NVRBL,ISTOP,IER)
C
 228  IF(NVRBL.EQ.0)THEN
         WRITE(KFILDO,229)
 229     FORMAT(/,' ****NO VARIABLES FOUND TO PROCESS.')
         ISTOP=ISTOP+1
         IER=42
         GO TO 250
      ENDIF
C
      IF(IP9.NE.0)WRITE(IP9,231)NVRBL
 231  FORMAT(/,' ',I4,' VARIABLES AND INFORMATION FROM VARIABLE',
     1              ' CONSTANT FILE')
      IF(IP9.NE.0)WRITE(IP9,235)(N,(ID(J,N),J=1,4),
     1            PLAIN(N),ISCALD(N),(JP(J,N),J=1,3),
     2            TRESHL(N),TRESHU(N),ITAU(N),N=1,NVRBL)
 235  FORMAT('  NO.     ID(1)     ID(2)     ID(3)      ID(4)',
     1       '       PLAIN LANGUAGE ID           ISCALD  JP( )',
     2       '    L--THRESHOLDS--U    ITAU',/,
     3      (' ',I4,1X,I9.9,1X,I9.9,1X,I9.9,1X,I10.3,2X,
     4       A32,I7,1X,3I2,F11.3,F11.3,I5))
 250  RETURN
      END 
