      SUBROUTINE RSTORE(KFILDO,KFIL,ID,NSLAB,LSTORE,ND9,LITEMS,
     1                  DATA,NWORDS,NPACK,NRR,NDATE,
     2                  CORE,ND10,LASTL,NBLOCK,LASTD,NSTORE,L3264B,IER)
C
C        FEBRUARY 1998   GLAHN   TDL   MOS-2000
C 
C        PURPOSE 
C            TO REPLACE DATA INTO EITHER A LINEAR ARRAY CORE( ) IN CORE
C            OR ON DISK WHEN THE ARRAY IS FULL.  THE ARRAY 
C            LSTORE( ,ND9) IS USED FOR THE KEYS, THE FIRST
C            4 WORDS BEING THOSE IN ID( ).  WHEN LSTORE(1, )=0, THE DATA
C            FOR THIS KEY HAVE BEEN DEEMED NO LONGER NEEDED, AND THIS
C            KEY AND THE ASSOCIATED LOCATION AND SPACE ARE AVAILABLE
C            FOR USE.  LOCATIONS ARE ALWAYS FILLED IN ORDER.  THAT IS,
C            IF SLOT 10 IS FILLED SO WILL BE 1-9, AND IF SLOT 11 IS OPEN
C            SO WILL BE ALL AFTER 11.  IN THIS CASE, LITEMS = 10.
C            RSTORE IS CALLED INSTEAD OF GSTORE WHEN A RECORD IS TO
C            BE REPLACED.  USE OF THIS FEATURE IS LIMITED, POSSIBLY
C            TO U850, AND THE REPLACEMENT MUST BE OF THE SAME SIZE
C            AS THE ONE BEING REPLACED.  IF A CORRESPONDING RECORD
C            IS NOT FOUND, RETURN IS MADE WITH IER = 50.
C
C        DATA SET USE 
C           KFILDO - UNIT NUMBER FOR OUTPUT (PRINT) FILE.  (OUTPUT)
C           KFIL   - UNIT NUMBER FOR WRITING THE DATA IN DATA( ) 
C                    TO DISK WHEN CORE( ) IS FULL.  (OUTPUT)  
C
C        VARIABLES 
C              KFILDO = UNIT NUMBER FOR OUTPUT (PRINT) FILE.  (INPUT)
C                KFIL = UNIT NUMBER FOR WRITING THE DATA IN DATA( )
C                       TO DISK WHEN CORE( ) IS FULL.  IT IS
C                       ASSUMED THE FILE IS OPEN.  (INPUT)
C               ID(J) = THE 4-WORD ID OF THE VARAIBLE TO STORE
C                       (J=1,4).  THIS IS THE ID ON THE INPUT TAPE, SO
C                       IN THE CASE OF GRIDS, IT IS THE NMC ID PUT
C                       INTO TDL FORMAT (I.E., THE "BASIC" PREDICTOR 
C                       THAT SHOULD MATCH JD( ) IN PRED.)  (INPUT)
C               NSLAB = FOR U201, THE NUMBER OF THE GRID COMBINATION
C                       TO STORE IN LSTORE(10, ).  OTHER ROUTINES MAY
C                       USE OTHER VALUES.  RDSTRX USES THIS TO RECORD
C                       WHICH FILE THE VARIABLE CAME FROM.  USE 1
C                       FOR ROUTINES FOR WHICH THIS IS NOT MEANINGFUL.
C                       (INPUT)
C         LSTORE(L,J) = THE ARRAY TO HOLD INFORMATION ABOUT THE DATA 
C                       STORED (L=1,12) (J=1,LITEMS).  (INPUT-OUTPUT)
C                       L=1,4--THE 4 ID'S FOR THE DATA.
C                       L=5  --LOCATION OF STORED DATA.  WHEN IN CORE,
C                              THIS IS THE LOCATION IN CORE( ) WHERE
C                              THE DATA START.  WHEN ON DISK, 
C                              THIS IS MINUS THE RECORD NUMBER WHERE 
C                              THE DATA START.
C                       L=6  --THE NUMBER OF 4-BYTE WORDS STORED.
C                       L=7  --2 FOR DATA PACKED IN TDL GRIB, 1 FOR NOT.
C                       L=8  --THE DATE/TIME OF THE DATA IN FORMAT
C                              YYYYMMDDHH.
C                       L=9  --NUMBER OF TIMES DATA HAVE BEEN RETRIEVED.
C                              COUNTED IN GFETCH.
C                       L=10 --FOR U201, NSLAB, THE NUMBER OF THE SLAB 
C                              IN DIR( , ,L) AND IN NGRIDC( ,L) DEFINING
C                              THE CHARACTERISTICS OF THIS GRID.
C                              FOR OTHER ROUTINES NOT REQUIRING GRID
C                              DEFINITIONS, THIS NUMBER MAY MEAN SOMETHING
C                              ELSE.  FOR INSTANCE, IN U600 IT IS THE
C                              "MODEL NUMBER" OR SOURCE OF THE DATA STORED.
C                       L=11 --THE NUMBER OF THE PREDICTOR IN THE SORTED
C                              LIST IN ID( ,N) (N=1,NPRED) FOR WHICH THIS
C                              VARIABLE IS NEEDED, WHEN IT IS NEEDED ONLY
C                              ONCE FROM LSTORE( , ).  WHEN IT IS NEEDED
C                              MORE THAN ONCE, THE VALUE IS SET = 7777.
C                       L=12 --USED INITIALLY IN ESTABLISHING MSTORE( , ).
C                              LATER USED AS A WAY OF DETERMINING WHETHER
C                              TO KEEP THIS VARIABLE.
C                 ND9 = THE SECOND DIMENSION OF LSTORE( , ).  (INPUT)
C              LITEMS = THE NUMBER OF ITEMS (COLUMNS) IN LSTORE( , ) THAT 
C                       ARE FILLED.  THIS IS INITIALIZED TO 0 ON THE 
C                       FIRST ENTRY TO RSTORE.  LITEMS IS MODIFIED
C                       IF COMPACTION IS DONE WITH SUBROUTINE GCPAC.
C                       (INPUT-OUTPUT)  
C             DATA(J) = THE DATA TO STORE (J=1,NWORDS).  THIS MAY BE JUST
C                       DATA, OR MAY BE A FULL MOS-2000 GRIB MESSAGE 
C                       (SEE NPACK).  (INPUT)
C              NWORDS = NUMBER OF WORDS IN DATA( ) TO STORE.  TREATED AS
C                       DIMENSION OF DATA( ).  THIS IS STORED IN
C                       LSTORE(6, )  (INPUT)
C               NPACK = 2 FOR TDL GRIB PACKED DATA; 1 FOR NOT PACKED.
C                       THIS IS STORED IN LSTORE(7, ).  (INPUT)
C                 NRR = THE VALUE TO STORE IN LSTORE(12, ).  FOR U201,
C                       THIS IS THE LAST DATE/TIME FOR WHICH THE VARIABLE
C                       STORED WILL BE NEEDED.  FOR U600, IT IS THE TAU
C                       WHEN THE VARIABLE IS A PREDICTAND.  (INPUT)
C               NDATE = DATE/TIME OF THE DATA TO BE STORED IN FORMAT
C                       YYYYMMDDHH.  THIS IS STORED IN LSTORE(8, ).  
C                       (INPUT)
C             CORE(J) = THE LINEAR ARRAY WHERE THE DATA ARE TO BE STORED,
C                       WHEN SPACE IS AVAILABLE (J=1,ND10).  NORMALLY, THIS 
C                       IS USED ONLY WITHIN RSTORE, GFETCH, AND GCPAC.
C                       (OUTPUT)
C                ND10 = DIMENSION OF CORE( ).  (INPUT)
C               LASTL = THE LAST LOCATION IN CORE( ) USED.  THIS MAY BE
C                       MODIFIED, ALONG WITH ITEMS, IF COMPACTION IS
C                       DONE BY GCPAC.  INITIALIZED TO ZERO ON FIRST 
C                       ENTRY ONLY.  (INPUT-OUTPUT)
C              NBLOCK = THE BLOCK SIZE IN WORDS OF THE RANDOM DISK FILE.
C                       (INPUT)
C               LASTD = TOTAL NUMBER OF PHYSICAL RECORDS ON DISK.  INITIALIZED
C                       TO ZERO ON FIRST ENTRY ONLY.  (INPUT-OUTPUT)
C              NSTORE = INCREMENTED EACH TIME RSTORE IS ENTERED.
C                       IT IS A RUNNING COUNT FROM THE BEGINNING OF THE PROGRAM.
C                       THIS COUNT IS MAINTAINED IN CASE THE USER NEEDS IT
C                       (DIAGNOSTICS, ETC.).  (OUTPUT)
C              L3264B = INTEGER WORD LENGTH IN BITS OF MACHINE BEING USED
C                       (EITHER 32 OR 64).  (INPUT)
C                 IER = STATUS RETURN.  (OUTPUT)
C                        0 = GOOD RETURN.
C                       50 = DATA CANNOT BE STORED.  NO CORRESPONDING 
C                            RECORD FOUND IN LSTORE( , ) OR THE RECORD SIZE
C                            DIFFERED.
C              IENTER = 0 INITIALLY AND INCREMENTED BY 1 ON EACH ENTRY.  IT
C                       IS THE INTERNAL COUNT BY WHICH NSTORE IS RETURNED AND
C                       IS IMPERVIOUS TO ACTIONS BY THE USER.  THIS
C                       ALLOWS INITIALIZATION ON FIRST ENTRY ONLY.  (INTERNAL)
C              NSTART = STARTING LOCATION FOR SEARCH FOR SLOT.  THIS IS
C                       MAINTAINED FROM ENTRY TO ENTRY, SO THAT THE NEXT
C                       SEARCH STARTS JUST AFTER THE LAST STORE, UNLESS
C                       THE LAST STORE WAS AT THE LAST SLOT IN LSTORE( , ).
C                       (INTERNAL)
C                NEND = ENDING LOCATION FOR SEARCH.  THIS IS THE END OF
C                       LSTORE( , ) UNLESS A RETRY WAS MADE ON THIS ENTRY.
C                       (INTERNAL)
C                         
C        NON SYSTEM SUBROUTINES CALLED 
C           WRDISK
C
      DIMENSION ID(4)
      DIMENSION LSTORE(12,ND9)
      DIMENSION CORE(ND10)
      DIMENSION DATA(NWORDS)
C
      IER=0
C
      DO 120 J=1,LITEMS 
      IF(ID(1).NE.LSTORE(1,J).OR.
     1   ID(2).NE.LSTORE(2,J).OR.
     2   ID(3).NE.LSTORE(3,J).OR.
     3   ID(4).NE.LSTORE(4,J).OR.
     4   NWORDS.NE.LSTORE(6,J))GO TO 120
C
      IF(LSTORE(5,J).LT.0)GO TO 117
C
C        STORE IN CORE( ).
C
      DO 116 M=1,NWORDS
      CORE(LSTORE(5,J)+M-1)=DATA(M)
 116  CONTINUE
C
      GO TO 118
C
C        STORE ON DISK.
C
 117  CALL WRDISK(KFILDO,KFIL,-LSTORE(5,J),DATA,NWORDS,
     1            NBLOCK,NOREC,IER)
      IF(IER.NE.0)GO TO 130
C        REMEMBER THAT A MINUS VALUE REPRESENTS A DISK RECORD NUMBER. 
C        NOREC RETURNED BY WRDISK IS NOT USED.
C
C        THE STATEMENTS FROM HERE TO 130 ARE FOR BOTH CORE AND DISK 
C        STORAGE.
C
 118  LSTORE(7,J)=NPACK
      LSTORE(8,J)=NDATE
      LSTORE(9,J)=0
      LSTORE(10,J)=NSLAB
      LSTORE(11,J)=0
      LSTORE(12,J)=NRR
      GO TO 130
C
 120  CONTINUE
C
C        A FALL THROUGH HERE MEANS RECORD COULD NOT BE FOUND
C        TO REPLACE.  DATA HAVE NOT BEEN STORED.
C
      IER=50
C        IER = 50 INDICATES DATA WERE NOT STORED.
D     WRITE(KFILDO,128)((LSTORE(L,J),L=1,12),J=1,LITEMS)
D128  FORMAT(/' ****NO RECORD FOUND TO REPLACE IN LSTORE( , ).'
D    1        '  STORED VARIABLES ARE:'/
D    2        (' 'I10.9,2I10,I11,3I8,I12,3I8,I12))
C***D    2          (' '3I10.9,I11.3,2I8,I3,I12,2I3,I5,I12))
 130  RETURN
      END            


            

