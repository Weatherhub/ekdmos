      SUBROUTINE TEXGRD(KFILDO,KFIL10,KFILRA,RACESS,NUMRA,IDPARS,JD,
     1                 NDATE,NGRIDC,ND11,NSLAB,IPACK,IWORK,THETAE,ND5,
     2                 LSTORE,ND9,LITEMS,CORE,ND10,NBLOCK,NFETCH,
     3                 IS0,IS1,IS2,IS4,ND7,
     4                 FD1,FD2,FD3,FD4,ND2X3,
     5                 ISTAV,L3264B,MISTOT,IER)
C
C        DECEMBER 2004 CHARBA  MDL  MOS 2000                      
C        MAY      2005 CHARBA  CHANGED CCC IN ID(1) AND IMPROVED DOCU-
C			       MENTATION.
C        JUNE     2005 CHARBA  REPLACED DIRECT COMPUTATION OF SFC THETAE
C			       WITH CALL TO SUBROUTINE TESFC.
C        MAY      2006 CHARBA  MADE COSMETIC CHANGES TO SATISFY CODE
C                              WALK-THRU.
C        JULY     2006 CHARBA  CHANGED 9999 TO 9998.5 IN CALL TO SMTH9V.
C
C        PURPOSE 
C            TO COMPUTE PRODUCT OF SURFACE THETAE AND THE MAGNITUDE OF
C	     THE HORIZONTAL GRADIENT OF SURFACE THETAE.  THE ROUTINE
C	     FIRST COMPUTES SURFACE THETAE AND APPLIES A VERY LIGHT 
C	     9-PT WEIGHTED SMOOTHING TO IT.  IT THEN COMPUTES THE HORI-
C	     ZONTAL GRADIENT OF SURFACE THETAE, APPLIES HEAVY 9-PT 
C	     WEIGHTED SMOOTHING TO THAT, AND FINALLY COMPUTES THE 
C	     PRODUCT. 
C
C            THE FOLLOWING IDPARS(1) AND IDPARS(2) ARE ACCOMMODATED:
C	                     003           182
C
C        DATA SET USE 
C            KFILDO - DEFAULT UNIT NUMBER FOR OUTPUT (PRINT) FILE. 
C		      (OUTPUT) 
C            KFIL10 - UNIT NUMBER OF TDL MOS-2000 FILE SYSTEM ACCESS.
C                     (INPUT-OUTPUT) 
C 
C        VARIABLES 
C              KFILDO = DEFAULT UNIT NUMBER FOR OUTPUT (PRINT) FILE. 
C		        (INPUT) 
C              KFIL10 = UNIT NUMBER OF TDL MOS-2000 FILE SYSTEM ACCESS.
C                       (INPUT)
C           KFILRA(J) = UNIT NUMBERS FOR RANDOM ACCESS FILES
C                       (J=1,NUMRA).  (INPUT)
C           RACESS(J) = NAMES OF RANDOM ACCESS FILES (J=1,NUMRA).
C                       (INPUT/CHARACTER*60)
C               NUMRA = NUMBER OF RANDOM ACCESS FILES.  (INPUT)
C           IDPARS(J) = THE PARSED, INDIVIDUAL COMPONENTS OF THE PRE-
C	 		DICTOR ID CORRESPONDING TO ID( ) (J=1,15).
C                       (INPUT)
C                       J=1--CCC (CLASS OF VARIABLE),
C                       J=2--FFF (SUBCLASS OF VARIABLE),
C                       J=3--B (BINARY INDICATOR),
C                       J=4--DD (DATA SOURCE, MODEL NUMBER),
C                       J=5--V (VERTICAL APPLICATION),
C                       J=6--LBLBLBLB (BOTTOM OF LAYER, 0 IF ONLY 1 
C			     LAYER),
C                       J=7--LTLTLTLT (TOP OF LAYER),
C                       J=8--T (TRANSFORMATION),
C                       J=9--RR (RUN TIME OFFSET, ALWAYS + AND BACK IN 
C			     TIME),
C                       J=10--OT (TIME APPLICATION),
C                       J=11--OH (TIME PERIOD IN HOURS),
C                       J=12--TAU (PROJECTION IN HOURS),
C                       J=13--I (INTERPOLATION TYPE),
C                       J=14--S (SMOOTHING INDICATOR), AND
C                       J=15--G (GRID INDICATOR).
C               JD(J) = THE BASIC INTEGER PREDICTOR ID (J=1,4).
C                       THIS IS THE SAME AS ID(J), EXCEPT THAT THE POR-
C			TIONS PERTAINING TO PROCESSING ARE OMITTED:
C                       B = IDPARS(3),
C                       T = IDPARS(8),
C                       I = IDPARS(13),
C                       S = IDPARS(14),
C                       G = IDPARS(15), AND
C                       THRESH.
C                       JD( ) IS USED TO HELP IDENTIFY THE BASIC MODEL 
C			FIELDS
C                       AS READ FROM THE ARCHIVE.  (INPUT)
C               NDATE = THE DATE/TIME FOR WHICH PREDICTOR IS NEEDED.  
C			(INPUT)
C         NGRIDC(L,M) = HOLDS THE GRID CHARACTERISTICS (L=1,6) FOR EACH 
C			GRID COMBINATION (M=1,NGRID).
C                       L=1--MAP PROJECTION NUMBER (3=LAMBERT, 5=POLAR
C                            STEREOGRAPHIC). 
C                       L=2--GRID LENGTH IN MILLIMETERS,
C                       L=3--LATITUDE AT WHICH GRID LENGTH IS CORRECT 
C			     *10000,
C                       L=4--GRID ORIENTATION IN DEGREES *10000,
C                       L=5--LATITUDE OF LL CORNER IN DEGREES *10000,
C                       L=6--LONGITUDE OF LL CORNER IN DEGREES *10000.
C                ND11 = MAXIMUM NUMBER OF GRID COMBINATIONS THAT CAN BE
C                       DEALT WITH ON THIS RUN.  LAST DIMENSION OF
C                       NGRIDC( , ).  (INPUT)
C               NSLAB = RETURNED FROM GFETCH AS THE VALUE STORED IN
C                       LSTORE(10, ) FOR THE HEIGHTS, WHEN THE HEIGHTS
C                       HAVE BEEN CORRECTLY RETURNED.  WHEN IER NE 0, 
C			THIS VALUE SHOULD NOT BE USED.  (OUTPUT) 
C            IPACK(J) = WORK ARRAY (J=1,ND5).  (INTERNAL)
C            IWORK(J) = WORK ARRAY (J=1,ND5).  (INTERNAL)
C           THETAE(K) = THETAE CALCULATED AT THE SURFACE USING TERRAIN 
C			ELEVATION, TEMPERATURE, DEW POINT AND, MEAN SEA
C		        LEVEL PRESSURE (K=1,ND5).  (OUTPUT)
C		  ND5 = DIMENSION OF IPACK( ),IWORK( ), AND THETAE( ).
C			(INPUT)
C         LSTORE(L,J) = THE ARRAY HOLDING INFORMATION ABOUT THE DATA 
C                       STORED (L=1,12) (J=1,LITEMS).  (INPUT-OUTPUT)
C                       L=1,4--THE 4 ID'S FOR THE DATA.
C                       L=5  --LOCATION OF STORED DATA.  WHEN IN CORE,
C                              THIS IS THE LOCATION IN CORE( ) WHERE
C                              THE DATA START.  WHEN ON DISK, 
C                              THIS IS MINUS THE RECORD NUMBER WHERE 
C                              THE DATA START.
C                       L=6  --THE NUMBER OF 4-BYTE WORDS STORED.
C                       L=7  --2 FOR DATA PACKED IN TDL GRIB, 1 FOR NOT.
C                       L=8  --THE DATE/TIME OF THE DATA IN FORMAT
C                              YYYYMMDDHH.
C                       L=9  --NUMBER OF TIMES DATA HAVE BEEN RETRIEVED.
C                       L=10 --NUMBER OF THE SLAB IN DIR( , ,L) AND
C                              IN NGRIDC( ,L) DEFINING THE CHARACTERIS-
C			       TICS OF THIS GRID.
C                       L=11 --THE NUMBER OF THE PREDICTOR IN THE SORTED
C                              LIST IN ID( ,N) (N=1,NPRED) FOR WHICH 
C			       THIS VARIABLE IS NEEDED, WHEN IT IS NEED-
C			       ED ONLY ONCE FROM LSTORE( , ).  WHEN IT 
C			       IS NEEDED MORE THAN ONCE, THE VALUE IS 
C			       SET = 7777.
C                       L=12 --USED INITIALLY IN ESTABLISHING 
C			       MOSTORE( , ).
C                              LATER USED AS A WAY OF DETERMINING WHE-
C			       THER TO KEEP THIS VARIABLE.
C                 ND9 = THE SECOND DIMENSION OF LSTORE( , ).  (INPUT)
C              LITEMS = THE NUMBER OF ITEMS (COLUMNS) IN LSTORE( , ) 
C			THAT HAVE BEEN USED IN THIS RUN.  (INPUT)
C             CORE(J) = THE ARRAY TO STORE OR RETRIEVE THE DATA IDENTI-
C			FIED IN LSTORE( , ) (J=1,ND10).  WHEN CORE( ) IS
C		        FULL DATA ARE STORED ON DISK.  (INPUT)
C                ND10 = DIMENSION OF CORE( ).  (INPUT)
C              NBLOCK = THE BLOCK SIZE IN WORDS OF THE MOS-2000 RANDOM
C                       DISK FILE.  (INPUT)
C              NFETCH = INCREMENTED EACH TIME GFETCH IS ENTERED.
C                       IT IS A RUNNING COUNT FROM THE BEGINNING OF THE
C                       PROGRAM.  THIS COUNT IS MAINTAINED IN CASE THE 
C			USER NEEDS IT (DIAGNOSTICS, ETC.).  (OUTPUT)
C              IS0(J) = MOS-2000 GRIB SECTION 0 ID'S (J=1,3).  
C			(INTERNAL)
C              IS1(J) = MOS-2000 GRIB SECTION 1 ID'S (J=1,22+).  
C			(INTERNAL)
C              IS2(J) = MOS-2000 GRIB SECTION 2 ID'S (J=1,12).
C                       IS2(3) AND IS2(4) ARE USED BY THE CALLING
C                       PROGRAM AS THE GRID DIMENSIONS.  (INTERNAL-
C		        OUTPUT)
C              IS4(J) = MOS-2000 GRIB SECTION 4 ID'S (J=1,4).  
C			(INTERNAL)
C                 ND7 = DIMENSION OF IS0( ), IS1( ), IS2( ), AND IS4( ).
C                       NOT ALL LOCATIONS ARE USED.  (INPUT)
C              FD1(K) = WORK ARRAY (K=1,ND2X3).  (INTERNAL)
C              FD2(K) = WORK ARRAY (K=1,ND2X3).  (INTERNAL)
C              FD3(K) = WORK ARRAY (K=1,ND2X3).  (INTERNAL)
C              FD4(K) = WORK ARRAY (K=1,ND2X3).  (INTERNAL)
C               ND2X3 = DIMENSION OF ABOVE VARIABLES.  (INPUT)
C               ISTAV = SET TO 0 TO INDICATE A GRID FIELD IS BEING RE-
C                       TURNED. (OUTPUT).
C              L3264B = INTEGER WORD LENGTH IN BITS OF MACHINE BEING 
C			USED (EITHER 32 OR 64).  (INPUT)
C              MISTOT = TOTAL NUMBER OF TIMES A MISSING INDICATOR
C                       HAS BEEN ENCOUNTERED IN UNPACKING GRIDS.
C                       (INPUT-OUTPUT)
C                 IER = STATUS RETURN.
C                         0 = GOOD RETURN.
C                       103 = IDPARS(1) AND IDPARS(2) NOT ACCOMMODATED.
C                       SEE TESFC, DERIVX, AND DERIVY FOR OTHER 
C                       VALUES. 
C                       WHEN IER NE 0, DATA ARE RETURNED AS MISSING.
C                       (INTERNAL-OUTPUT)
C	        LD(J) = CONTAINS VARIABLE IDS FOR SFC THETAE (J=1,4).
C		        (INTERNAL)
C           LDPARS(J) = AS FOR IDPARS( ) CORRESPONDING TO LD( )
C                       (J=1,15).  (INTERNAL)
C              NTIMES = THE NUMBER OF TIMES, INCLUDING THIS ONE, THAT 
C			THE RECORD HAS BEEN FETCHED.  THIS IS STORED IN
C                       LSTORE(9, ).  (INTERNAL)
C               MISSP = PRIMARY MISSING VALUE INDICATOR.  RETURNED AS 
C			ZERO WHEN DATA ARE NOT PACKED.  (INTERNAL)
C               MISSS = SECONDARY MISSING VALUE INDICATOR.  RETURNED AS
C		        ZERO WHEN DATA ARE NOT PACKED.  (INTERNAL)
C 
C        NONSYSTEM SUBROUTINES CALLED 
C            TESFC, SMTH9V, DERIVX, DERIVY, PRSID1
C
      CHARACTER*74 TITLE/' '/
      CHARACTER*60 RACESS(NUMRA)
C      
      DIMENSION NGRIDC(6,ND11)
      DIMENSION IDPARS(15),JD(4),LDPARS(15),LD(4),KFILRA(NUMRA)
      DIMENSION FD1(ND2X3),FD2(ND2X3),FD3(ND2X3),FD4(ND2X3)
      DIMENSION THETAE(ND5),IPACK(ND5),IWORK(ND5)
      DIMENSION IS0(ND7),IS1(ND7),IS2(ND7),IS4(ND7)
      DIMENSION LSTORE(12,ND9)
      DIMENSION CORE(ND10)
C 	 
C	 CHECK WHETHER THIS ROUTINE APPLIES TO ID(1).
C
      IF(IDPARS(1).EQ.003.AND.IDPARS(2).EQ.182) GO TO 30
C
      WRITE(KFILDO,20) JD
 20   FORMAT(/,' **** VARIABLE ',I9.9,2I10.9,I4.3,' CANNOT BE COMPU',
     1         'TED IN TEXGRD ...SET IER=103 AND SUPPLY MISSING VALUES')
      IER=103
      GO TO 800   
C
C        GET SURFACE THETAE( ) FROM CALL TO TESFC.
C
 30   IER=0                                          
      ISTAV=0
      LD(1)=003132005
      LD(2)=JD(2)
      LD(3)=JD(3)
      LD(4)=JD(4)
      CALL PRSID1(KFILDO,LD,LDPARS)
      CALL TESFC(KFILDO,KFIL10,KFILRA,RACESS,NUMRA,LDPARS,LD,
     1           NDATE,NSLAB,IPACK,IWORK,THETAE,ND5,
     2           LSTORE,ND9,LITEMS,CORE,ND10,NBLOCK,NFETCH,
     3           IS0,IS1,IS2,IS4,ND7,
     4           FD1,FD2,FD3,FD4,ND2X3,
     5           ISTAV,L3264B,MISTOT,IER)
      IF(IER.NE.0)GO TO 800
      NWORDS=IS2(3)*IS2(4)
C
C	 COMPUTE MAGNITUDE OF HORIZONTAL GRADIENT OF THETAE.
C
C        COMPUTE DERIVATIVE OF THETAE( ) IN THE X-DIRECTION IN FD1( ).
C        COMPUTE DERIVATIVE OF THETAE( ) IN THE Y-DIRECTION IN FD2( ).
C        COMPUTE MAGNITUDE OF GRADIENT AND PUT INTO FD3( ).
C
      NPRJCT=NGRIDC(1,NSLAB)
      XMESHL=NGRIDC(2,NSLAB)/1000000.
      ORIENT=NGRIDC(4,NSLAB)/10000.
      XLAT=NGRIDC(3,NSLAB)/10000.
      CALL DERIVX(KFILDO,NPRJCT,XMESHL,ORIENT,XLAT,
     1            THETAE,FD1,IS2(3),IS2(4),75.,83.,IER)
      CALL DERIVY(KFILDO,NPRJCT,XMESHL,ORIENT,XLAT,
     1            THETAE,FD2,IS2(3),IS2(4),75.,83.,IER)
      IF(IER.NE.0) THEN
         WRITE(KFILDO,60)
 60      FORMAT('**** NON-ZERO IER RETURNED FROM DERIVX AND DERIVY IN',
     1          ' TEXGRD...SUPPLY MISSING VALUES AND RETURN')
         GO TO 800
      ENDIF
      DO 150 J=1,NWORDS
      FD3(J)=SQRT(FD1(J)*FD1(J)+FD2(J)*FD2(J))
 150  CONTINUE
C
C	 SMOOTH THE GRADIENT FIELD AND COMPUTE THE PRODUCT IN THETAE( ).
C
      CALL SMTH9V(FD3,IS2(3),IS2(4),2.0,IWORK,9998.5)
C
      DO 170 J=1,NWORDS
      THETAE(J)=THETAE(J)*FD3(J)
 170  CONTINUE
      GO TO 900
C
C        SET OUTPUT FIELD TO MISSING WHEN AN ERROR HAS OCCURRED.
C
 800  DO 810 J=1,ND5
      THETAE(J)=9999.
 810  CONTINUE
C
 900  RETURN
      END      
