      SUBROUTINE THKCORR(KFILDO,KFIL10,IDPARS,JD,NDATE,
     1                   NGRIDC,ND11,NSLAB,IPACK,IWORK,CORR,ND5,
     2                   LSTORE,ND9,LITEMS,CORE,ND10,NBLOCK,NFETCH,
     3                   IS0,IS1,IS2,IS4,ND7,
     4                   HGT1,HGT2,THK1,THK2,THK3,THK4,ND2X3,
     5                   ISTAV,L3264B,MISTOT,IER)
C
C        FEBRUARY     2002   CARROLL    TDL   MOS-2000
C        MARCH        2002   CARROLL    ADDED CODE SO THAT IF THE
C                                       PREVIOUS DAYS MODEL RUN IS MISSING
C                                       THE ORIGINAL FIELD IS PRESERVED.
C        MARCH        2002   CARROLL    CLEANED UP COMMENTS.
C        DECEMBER     2002   WEISS      CHANGED ND5 TO ND2X3
C                                       NOTE: CODE WAS NOT TESTED WITH
C                                       THESE CHANGES.
C
C	 PURPOSE:  TO COMPUTE A BIAS CORRECTED FIELD FOR THE THICKNESS OF A LAYER.
C                  THIS SUBROUTINE CALCULATES A THERMAL BIAS FOR THICKNESS BY
C                  SUBTRACTING A FORECAST THICKNESS FIELD FROM A MODEL RUN RR
C                  HOURS AGO FROM THIS MODEL RUNS INITIAL THICKNESS FIELD.  THE
C                  UPPER AND LOWER BOUNDS OF THE LAYER ARE SPECIFIED IN THE
C                  LBLBLBLB AND LTLTLTLT PORTION OF THE MOS-2000 ID.  THE 
C                  CALCULATED BIAS IS THEN ADDED TO THE FORECAST THICKNESS FIELD
C                  SPECIFIED IN THE ID.
C
C                  ID FOR THE 24 HOUR BIAS CORRECTED THICKNESS:
C
C                        0012000DD 0BBBBTTTT = CORRECTED THICKNESS
C
C                                 DD = MODEL NUMBER
C                                 BBBB = BOTTOM OF LAYER 
C                                 TTTT = TOP OF LAYER
C
C
C        DATA SET USE 
C            KFIL10 - UNIT NUMBER OF TDL MOS-2000 FILE SYSTEM ACCESS.
C                     (INPUT-OUTPUT) 
C 
C        VARIABLES 
C              KFILDO = DEFAULT UNIT NUMBER FOR OUTPUT (PRINT) FILE. (INPUT) 
C              KFIL10 = UNIT NUMBER OF TDL MOS-2000 FILE SYSTEM ACCESS.
C                       (INPUT)
C           IDPARS(J) = THE PARSED, INDIVIDUAL COMPONENTS OF THE PREDICTOR
C                       ID CORRESPONDING TO ID( ) (J=1,15).
C                       (INPUT)
C                       J=1--CCC (CLASS OF VARIABLE),
C                       J=2--FFF (SUBCLASS OF VARIABLE),
C                       J=3--B (BINARY INDICATOR),
C                       J=4--DD (DATA SOURCE, MODEL NUMBER),
C                       J=5--V (VERTICAL APPLICATION),
C                       J=6--LBLBLBLB (BOTTOM OF LAYER, 0 IF ONLY 1 LAYER),
C                       J=7--LTLTLTLT (TOP OF LAYER),
C                       J=8--T (TRANSFORMATION),
C                       J=9--RR (RUN TIME OFFSET, ALWAYS + AND BACK IN TIME),
C                       J=10--OT (TIME APPLICATION),
C                       J=11--OH (TIME PERIOD IN HOURS),
C                       J=12--TAU (PROJECTION IN HOURS),
C                       J=13--I (INTERPOLATION TYPE),
C                       J=14--S (SMOOTHING INDICATOR), AND
C                       J=15--G (GRID INDICATOR).
C               JD(J) = THE BASIC INTEGER PREDICTOR ID (J=1,4).
C                       THIS IS THE SAME AS ID(J), EXCEPT THAT THE PORTIONS
C                       PERTAINING TO PROCESSING ARE OMITTED:
C                       B = IDPARS(3),
C                       T = IDPARS(8),
C                       I = IDPARS(13),
C                       S = IDPARS(14),
C                       G = IDPARS(15), AND
C                       THRESH.
C                       JD( ) IS USED TO HELP IDENTIFY THE BASIC MODEL FIELDS
C                       AS READ FROM THE ARCHIVE.  (INPUT)
C               NDATE = THE DATE/TIME FOR WHICH PREDICTOR IS NEEDED.  (INPUT)
C         NGRIDC(L,M) = HOLDS THE GRID CHARACTERISTICS (L=1,6) FOR EACH GRID
C                       COMBINATION (M=1,NGRID).
C                       L=1--MAP PROJECTION NUMBER (3=LAMBERT, 5=POLAR
C                            STEREOGRAPHIC). 
C                       L=2--GRID LENGTH IN METERS,
C                       L=3--LATITUDE AT WHICH GRID LENGTH IS CORRECT *1000,
C                       L=4--GRID ORIENTATION IN DEGREES *1000,
C                       L=5--LATITUDE OF LL CORNER IN DEGREES *1000,
C                       L=6--LONGITUDE OF LL CORNER IN DEGREES *1000.
C                ND11 = MAXIMUM NUMBER OF GRID COMBINATIONS THAT CAN BE
C                       DEALT WITH ON THIS RUN.  LAST DIMENSION OF
C                       NGRIDC( , ).  (INPUT)
C               NSLAB = THE NUMBER OF THE SLAB IN DIR( , , ) AND
C                       IN NGRIDC( , ) DEFINING THE CHARACTERISTICS
C                       OF THIS GRID.  (OUTPUT) 
C            IPACK(J) = WORK ARRAY (J=1,ND2X3).  (INTERNAL)
C            IWORK(J) = WORK ARRAY (J=1,ND2X3).  (INTERNAL)
C             CORR(K) = BIAS CORRECTED THICKNESS IN METERS.
C                       SINCE THERE ARE NO SPATIAL RELATIONSHIPS INVOLVED,
C                       THE COMPUTATION CAN BE IN A LINEAR ARRAY.
C                       UPON RETURN, THE ARRAY WILL BE NX X NY.
C                       (OUTPUT)
C                 ND5 = FORMER DIMENSION OF IPACK( ),IWORK( ), AND CORR( ).
C                       (INPUT)
C         LSTORE(L,J) = THE ARRAY HOLDING INFORMATION ABOUT THE DATA 
C                       STORED (L=1,12) (J=1,LITEMS).  (INPUT-OUTPUT)
C                       L=1,4--THE 4 ID'S FOR THE DATA.
C                       L=5  --LOCATION OF STORED DATA.  WHEN IN CORE,
C                              THIS IS THE LOCATION IN CORE( ) WHERE
C                              THE DATA START.  WHEN ON DISK, 
C                              THIS IS MINUS THE RECORD NUMBER WHERE 
C                              THE DATA START.
C                       L=6  --THE NUMBER OF 4-BYTE WORDS STORED.
C                       L=7  --2 FOR DATA PACKED IN TDL GRIB, 1 FOR NOT.
C                       L=8  --THE DATE/TIME OF THE DATA IN FORMAT
C                              YYYYMMDDHH.
C                       L=9  --NUMBER OF TIMES DATA HAVE BEEN RETRIEVED.
C                       L=10 --NUMBER OF THE SLAB IN DIR( , ,L) AND
C                              IN NGRIDC( ,L) DEFINING THE CHARACTERISTICS
C                              OF THIS GRID.
C                       L=11 --THE NUMBER OF THE PREDICTOR IN THE SORTED
C                              LIST IN ID( ,N) (N=1,NPRED) FOR WHICH THIS
C                              VARIABLE IS NEEDED, WHEN IT IS NEEDED ONLY
C                              ONCE FROM LSTORE( , ).  WHEN IT IS NEEDED
C                              MORE THAN ONCE, THE VALUE IS SET = 7777.
C                       L=12 --USED INITIALLY IN ESTABLISHING MOSTORE( , ).
C                              LATER USED AS A WAY OF DETERMINING WHETHER
C                              TO KEEP THIS VARIABLE.
C                 ND9 = THE SECOND DIMENSION OF LSTORE( , ).  (INPUT)
C              LITEMS = THE NUMBER OF ITEMS (COLUMNS) IN LSTORE( , ) THAT 
C                       HAVE BEEN USED IN THIS RUN.  (INPUT)
C             CORE(J) = THE ARRAY TO STORE OR RETIREVE THE DATA IDENTIFIED IN
C                       LSTORE( , ) (J=1,ND10).  WHEN CORE( ) IS FULL
C                       DATA ARE STORED ON DISK.  (INPUT)
C                ND10 = DIMENSION OF CORE( ).  (INPUT)
C              NBLOCK = THE BLOCK SIZE IN WORDS OF THE MOS-2000 RANDOM
C                       DISK FILE.  (INPUT)
C              NFETCH = INCREMENTED EACH TIME GFETCH IS ENTERED.
C                       IT IS A RUNNING  COUNT FROM THE BEGINNING OF THE 
C                       PROGRAM.  THIS COUNT IS MAINTAINED IN CASE THE USER 
C                       NEEDS IT (DIAGNOSTICS, ETC.).  (OUTPUT)
C              IS0(J) = MOS-2000 GRIB SECTION 0 ID'S (J=1,3).  (INTERNAL)
C              IS1(J) = MOS-2000 GRIB SECTION 1 ID'S (J=1,22+).  (INTERNAL)
C              IS2(J) = MOS-2000 GRIB SECTION 2 ID'S (J=1,12).
C                       IS2(3) AND IS2(4) ARE USED BY THE CALLING
C                       PROGRAM AS THE GRID DIMENSIONS.  (INTERNAL-OUTPUT)
C              IS4(J) = MOS-2000 GRIB SECTION 4 ID'S (J=1,4).  (INTERNAL)
C                 ND7 = DIMENSION OF IS0( ), IS1( ), IS2( ), AND IS4( ).
C                       NOT ALL LOCATIONS ARE USED.  (INPUT)
C             HGT1(K) = INTERNAL WORK ARRAY TO HOLD THE UPPER LEVEL HIEGHT
C                       IN METERS (K=1,ND2X3).  (INTERNAL)
C             HGT2(K) = INTERNAL WORK ARRAY TO HOLD THE LOWER LEVEL HEIGHT
C                       (K=1,ND2X3).  (INTERNAL)
C             THK1(K) = WORK ARRAY TO HOLD THE THICKNESS FIELD FROM THE
C                       MODEL RUN RR HOURS AGO (K=1,ND2X3).  (INTERNAL)
C             THK2(K) = WORK ARRAY TO HOLD THE THICKNESS FIELD FROM THE
C                       INITIAL STATE OF THE CURRENT MODEL RUN  (K=1,ND2X3).
C                       (INTERNAL)
C             THK3(K) = WORK ARRAY TO HOLD TO FORECAST THICKNESS FROM THE
C                       CURRENT MODEL RUN (K=1,ND2X3).  (INTERNAL)
C             THK4(K) = WORK ARRAY TO HOLD TO FORECAST THICKNESS FROM THE
C                       CURRENT MODEL RUN FOR CASE WHERE YESTERDAYS RUN IS
C                       NOT AVAILABLE  (K=1,ND2X3).  (INTERNAL)
C             BIAS(K) = CALCULATED THIKNESS BIAS.  THK2(K) MINUS THK1(K).
C                       (K=1,ND2X3).  (INTERNAL)
C               ND2X3 = DIMENSION OF SEVERAL VARIABLES.  THE SIZE OF THE
C                       GRID IS NOT KNOWN BEFORE THE U AND V WINDS ARE
C                       FETCHED.  (INPUT)
C               ISTAV = 0 SINCE THE DATA RETURNED ARE GRID DATA.  (OUTPUT)
C              L3264B = INTEGER WORD LENGTH IN BITS OF MACHINE BEING USED
C                       (EITHER 32 OR 64).  (INPUT)
C              MISTOT = TOTAL NUMBER OF TIMES A MISSING INDICATOR
C                       HAS BEEN ENCOUNTERED IN UNPACKING GRIDS.
C                       (INPUT-OUTPUT)
C                 IER = STATUS RETURN.
C                         0 = GOOD RETURN.
C                       100 = THE TWO GRIDS NEEDED ARE NOT THE SAME SIZE.
C                       101 = GRID SIZE IS TOO BIG FOR CORR( ) WHOSE
C                             DIMENSION IS ND5.
C                       103 = IDPARS(1) AND IDPARS(2) DO NOT INDICATE 
C                             THICKNESS CORRECTION.
C                       SEE GFETCH FOR OTHER VALUES.
C                       WHEN IER NE 0, DATA ARE RETURNED AS MISSING.
C                       (INTERNAL-OUTPUT)
C              NSLABA = RETURNED FROM GFETCH AS THE VALUE STORED IN
C                       LSTORE(10, ) FOR THE UPPER THICKNESS.  THIS IS
C                       THE VALUE OF NSLAB RETURNED.  WHEN IER NE 0,
C                       THIS VALUE SHOULD NOT BE USED.  (INTERNAL) 
C              NSLABB = RETURNED FROM GFETCH AS THE VALUE STORED IN
C                       LSTORE(10, ) FOR THE LOWER THICKNESS.  THIS IS 
C                       THE VALUE OF NSLAB RETURNED.  WHEN IER NE 0, 
C                       THIS VALUE SHOULD NOT BE USED.  (INTERNAL)
C              NSLABC = RETURNED FROM GFETCH AS THE VALUE STORED IN
C                       LSTORE(10, ) FOR THE UPPER THICKNESS.  THIS IS 
C                       THE VALUE OF NSLAB RETURNED.  WHEN IER NE 0, 
C                       THIS VALUE SHOULD NOT BE USED.  (INTERNAL)
C              NSLABD = RETURNED FROM GFETCH AS THE VALUE STORED IN
C                       LSTORE(10, ) FOR THE LOWER THICKNESS.  THIS IS
C                       THE VALUE OF NSLAB RETURNED.  WHEN IER NE 0, 
C                       THIS VALUE SHOULD NOT BE USED.  (INTERNAL)
C              NSLABE = RETURNED FROM GFETCH AS THE VALUE STORED IN
C                       LSTORE(10, ) FOR THE UPPER THICKNESS.  THIS IS 
C                       THE VALUE OF NSLAB RETURNED.  WHEN IER NE 0, 
C                       THIS VALUE SHOULD NOT BE USED.  (INTERNAL)
C              NSLABF = RETURNED FROM GFETCH AS THE VALUE STORED IN
C                       LSTORE(10, ) FOR THE LOWER THICKNESS.  THIS IS
C                       THE VALUE OF NSLAB RETURNED.  WHEN IER NE 0, 
C                       THIS VALUE SHOULD NOT BE USED.  (INTERNAL)
C              NSLABG = RETURNED FROM GFETCH AS THE VALUE STORED IN
C                       LSTORE(10, ) FOR THE UPPER THICKNESS.  THIS IS 
C                       THE VALUE OF NSLAB RETURNED.  WHEN IER NE 0, 
C                       THIS VALUE SHOULD NOT BE USED.  (INTERNAL)
C              NSLABH = RETURNED FROM GFETCH AS THE VALUE STORED IN
C                       LSTORE(10, ) FOR THE LOWER THICKNESS.  THIS IS
C                       THE VALUE OF NSLAB RETURNED.  WHEN IER NE 0, 
C                       THIS VALUE SHOULD NOT BE USED.  (INTERNAL)
C              NTIMES = THE NUMBER OF TIMES, INCLUDING THIS ONE, THAT THE 
C                       RECORD HAS BEEN FETCHED.  THIS IS STORED IN
C                       LSTORE(9, ).  (INTERNAL)
C              LD1(J) = HOLDS THE 4 ID WORDS OF THE DATA RETRIEVED INTO
C                       HGT1( ) (J=1,4).  (INTERNAL)
C              LD2(J) = HOLDS THE 4 ID WORDS OF THE DATA RETRIEVED INTO
C                       HGT2( ) (J=1,4).  (INTERNAL)
C              LD3(J) = HOLDS THE 4 ID WORDS OF THE DATA RETRIEVED INTO
C                       HGT1( ) (J=1,4).  (INTERNAL)
C              LD4(J) = HOLDS THE 4 ID WORDS OF THE DATA RETRIEVED INTO
C                       HGT2( ) (J=1,4).  (INTERNAL)
C              LD5(J) = HOLDS THE 4 ID WORDS OF THE DATA RETRIEVED INTO
C                       HGT1( ) (J=1,4).  (INTERNAL)
C              LD6(J) = HOLDS THE 4 ID WORDS OF THE DATA RETRIEVED INTO
C                       HGT2( ) (J=1,4).  (INTERNAL)
C              LD7(J) = HOLDS THE 4 ID WORDS OF THE DATA RETRIEVED INTO
C                       HGT1( ) (J=1,4).  (INTERNAL)
C              LD8(J) = HOLDS THE 4 ID WORDS OF THE DATA RETRIEVED INTO
C                       HGT1( ) (J=1,4).  (INTERNAL)
C               MISSP = PRIMARY MISSING VALUE INDICATOR.  RETURNED AS ZERO
C                       WHEN DATA ARE NOT PACKED.  (INTERNAL)
C               MISSS = SECONDARY MISSING VALUE INDICATOR.  RETURNED AS ZERO
C                       WHEN DATA ARE NOT PACKED.  (INTERNAL)
C         ITABLE(I,J) = CCCFFF OF THE THICKNESS (I=1) FOR A GIVEN LAYER.
C                       (INTERNAL)
C 
C        NONSYSTEM SUBROUTINES CALLED 
C            GFETCH
C
      IMPLICIT NONE
      INTEGER NGRIDC(6,ND11)
      INTEGER IDPARS(15),JD(4)
      INTEGER IPACK(ND2X3),IWORK(ND2X3)
      INTEGER IS0(ND7),IS1(ND7),IS2(ND7),IS4(ND7)
      INTEGER LSTORE(12,ND9)
      INTEGER LD1(4),LD2(4),LD3(4),LD4(4),LD5(4),LD6(4)
      INTEGER LD7(4),LD8(4)
      INTEGER ITABLE(1,2)
      INTEGER IER,ISTAV,J,KFILDO,L3264B,JJ,L,
     1        NSLAB,NSLABA,NSLABB,NSLABC,NSLABD,
     2        NSLABE,NSLABF,NSLABG,NSLABH,
     3        MISTOT,MISSP,MISSS,IXJY,NX,NY,ND11,ND5,NDATE,
     4        ND9,NFETCH,ND7,ND2X3,NITEMS,LITEMS,ND10,NBLOCK,
     5        NPACK,NTIMES,KFIL10,NWORDS
      REAL HGT1(ND2X3),HGT2(ND2X3)
      REAL THK1(ND2X3),THK2(ND2X3),THK3(ND2X3),THK4(ND2X3)
      REAL BIAS(ND2X3),CORR(ND2X3)
      REAL CORE(ND10)
C
      DATA ITABLE/001200, 001000/
C
      IER=0
      ISTAV=0
C
C        FIND THE LOCATION IN THE TABLE.
C
      IF(ITABLE(1,1).EQ.IDPARS(1)*1000+IDPARS(2)) GOTO 115
C
      WRITE(KFILDO,110)(JD(L),L=1,4)
 110  FORMAT(' ****THKCORR ENTERED FOR PREDICTOR',
     1         2X,I9.9,1X,I9.9,1X,I9.9,1X,I10.3,
     2       ' NOT ACCOMMODATED.')
      IER=103
      GO TO 800
C
C	FIRST WE WANT TO GET THE THICKNESS FROM RR HOURS AGO.
C	THIS WILL BE USED TO DETERMINE THE BIAS BETEEEN THE INITIAL
C	MODEL THICKNESS AND THE THICKNESS FROM RR HOURS AGO.  WE
C	WILL FETCH THE UPPER LEVEL THICKNESS FIRST, THEN THE LOWER
C	LEVEL AND SUBTRACT THE TWO.
C
C	THK1 = THE THICKNESS THE MODEL RUN RR HOURS AGO AT PROJECTION
C	       RR.
C
 115  LD1(1)=ITABLE(1,2)*1000+IDPARS(3)*100+IDPARS(4)
      LD1(2)=IDPARS(7)
      LD1(3)=IDPARS(9)*1000000+IDPARS(9)
      LD1(4)=0
 116  FORMAT(4(I9.9,1X))
      IF(IDPARS(10).NE.0) THEN
      WRITE(KFILDO,120) IDPARS(10)
 120  FORMAT('****IDPARS(10) DOES NOT EQUAL ZERO.  FOR THKCORR TO ',
     +       'RUN PROPERLY IDPARS(10) MUST EQUAL ZERO.  IDPARS(10) ',
     +       'EQUALS ',I2)
      STOP 120
      ENDIF
      CALL GFETCH(KFILDO,KFIL10,LD1,7777,LSTORE,ND9,LITEMS,
     1            IS0,IS1,IS2,IS4,ND7,IPACK,IWORK,HGT1,ND2X3,
     2            NWORDS,NPACK,NDATE,NTIMES,CORE,ND10,
     3            NBLOCK,NFETCH,NSLABA,MISSP,MISSS,L3264B,1,IER)
      NX=IS2(3)
      NY=IS2(4)
C
      IF(MISSP.NE.0)MISTOT=MISTOT+1
C
C        IF IER.EQ.47, PREVIOUS MODEL RUN IS MISSING AND ORIGINAL FORECAST
C        FIELD IS PRESERVED.
C
      IF(IER.EQ.47) GO TO 700
      IF(IER.NE.0) GO TO 800
C
      LD2(1)=ITABLE(1,2)*1000+IDPARS(3)*100+IDPARS(4)
      LD2(2)=IDPARS(6)
      LD2(3)=IDPARS(9)*1000000+IDPARS(9)
      LD2(4)=0
 121  FORMAT(4(I9.9,1X))
      IF(IDPARS(10).NE.0) THEN
      WRITE(KFILDO,220) IDPARS(10)
 220  FORMAT('****IDPARS(10) DOES NOT EQUAL ZERO.  FOR THKCORR TO ',
     +       'RUN PROPERLY IDPARS(10) MUST EQUAL ZERO.  IDPARS(10) ',
     +       'EQUALS ',I2)
      STOP 220
      ENDIF
      CALL GFETCH(KFILDO,KFIL10,LD2,7777,LSTORE,ND9,LITEMS,
     1            IS0,IS1,IS2,IS4,ND7,IPACK,IWORK,HGT2,ND2X3,
     2            NWORDS,NPACK,NDATE,NTIMES,CORE,ND10,
     3            NBLOCK,NFETCH,NSLABB,MISSP,MISSS,L3264B,1,IER)
      IF(MISSP.NE.0)MISTOT=MISTOT+1
      IF(IER.NE.0) GO TO 800
C
C       CHECK NSLAB'S.
C
      IF(NSLABA.NE.NSLABB) THEN
         WRITE(KFILDO,225) NSLABA, NSLABB
 225     FORMAT('****NSLABA DOES NOT EQUAL NSLABB.  ERROR IN THKCORR. ',
     1          ' NSLABA = ',I2,' NSLABB = ',I2,'.  STOP AT 225.')
         GOTO 800
      ENDIF
C
      DO 250 IXJY=1,NX*NY
           THK1(IXJY)=(HGT1(IXJY)-HGT2(IXJY))
 250  CONTINUE
C
C	NOW WE WANT TO OBTAIN THE THICKNESS FOR THE MODEL INITIAL
C	TIME OR TAU = 00 HOURS.  WE WILL SUBTRACT THE THICKNESS
C	VALUE FROM RR HOURS AGO TO OBTAIN THE BIAS.  THIS WILL
C	THEN BE APPLILED TO ALL FORECAST THICKNESSES.
C
C	THK2 = INITIAL THICKNESS FROM TODAY'S MODEL RUN.
C 
      LD3(1)=ITABLE(1,2)*1000+IDPARS(3)*100+IDPARS(4)
      LD3(2)=IDPARS(7)
      LD3(3)=0
      LD3(4)=0
 256  FORMAT(4(I9.9,1X))
      IF(IDPARS(10).NE.0) THEN
      WRITE(KFILDO,320) IDPARS(10)
 320  FORMAT('****IDPARS(10) DOES NOT EQUAL ZERO.  FOR THKCORR TO ',
     +       'RUN PROPERLY IDPARS(10) MUST EQUAL ZERO.  IDPARS(10) ',
     +       'EQUALS ',I2)
      STOP 320
      ENDIF
      CALL GFETCH(KFILDO,KFIL10,LD3,7777,LSTORE,ND9,LITEMS,
     1            IS0,IS1,IS2,IS4,ND7,IPACK,IWORK,HGT1,ND2X3,
     2            NWORDS,NPACK,NDATE,NTIMES,CORE,ND10,
     3            NBLOCK,NFETCH,NSLABC,MISSP,MISSS,L3264B,1,IER)
      IF(MISSP.NE.0)MISTOT=MISTOT+1
      IF(IER.NE.0) GO TO 800
C
C       CHECK NSLAB'S.
C
      IF(NSLABB.NE.NSLABC) THEN
         WRITE(KFILDO,325) NSLABB, NSLABC
 325     FORMAT('****NSLABB DOES NOT EQUAL NSLABC.  ERROR IN THKCORR. ',
     +          ' NSLABB = ',I2,' NSLABC = ',I2,'.  STOP AT 325.')
         GOTO 800
      ENDIF
C
      LD4(1)=ITABLE(1,2)*1000+IDPARS(3)*100+IDPARS(4)
      LD4(2)=IDPARS(6)
      LD4(3)=0
      LD4(4)=0
 326  FORMAT(4(I9.9,1X))
      IF(IDPARS(10).NE.0) THEN
      WRITE(KFILDO,420) IDPARS(10)
 420  FORMAT('****IDPARS(10) DOES NOT EQUAL ZERO.  FOR THKCORR TO ',
     +       'RUN PROPERLY IDPARS(10) MUST EQUAL ZERO.  IDPARS(10) ',
     +       'EQUALS ',I2)
      STOP 420
      ENDIF
      CALL GFETCH(KFILDO,KFIL10,LD4,7777,LSTORE,ND9,LITEMS,
     1            IS0,IS1,IS2,IS4,ND7,IPACK,IWORK,HGT2,ND2X3,
     2            NWORDS,NPACK,NDATE,NTIMES,CORE,ND10,
     3            NBLOCK,NFETCH,NSLABD,MISSP,MISSS,L3264B,1,IER)
      IF(MISSP.NE.0)MISTOT=MISTOT+1
      IF(IER.NE.0) GO TO 800
C
C       CHECK NSLAB'S.
C
      IF(NSLABC.NE.NSLABD) THEN
         WRITE(KFILDO,425) NSLABC, NSLABD
 425     FORMAT('****NSLABC DOES NOT EQUAL NSLABD.  ERROR IN THKCORR. ',
     +          ' NSLABC = ',I2,' NSLABD = ',I2,'.  STOP AT 425.')
         GOTO 800
      ENDIF
C
      DO 450 IXJY=1,NX*NY
           THK2(IXJY)=(HGT1(IXJY)-HGT2(IXJY))
 450  CONTINUE
C
C	NOW WE NEED THE FORECAST THICKNESSES SO THAT WE CAN APPLY
C	THE MODEL BIAS CORRECTION.
C
C	THK3 = FORECAST THICKNESS.
C
      LD5(1)=ITABLE(1,2)*1000+IDPARS(3)*100+IDPARS(4)
      LD5(2)=IDPARS(7)
      LD5(3)=IDPARS(12)
      LD5(4)=0
      IF(IDPARS(10).NE.0) THEN
      WRITE(KFILDO,520) IDPARS(10)
 520  FORMAT('****IDPARS(10) DOES NOT EQUAL ZERO.  FOR THKCORR TO ',
     +       'RUN PROPERLY IDPARS(10) MUST EQUAL ZERO.  IDPARS(10) ',
     +       'EQUALS ',I2)
      STOP 520
      ENDIF
      CALL GFETCH(KFILDO,KFIL10,LD5,7777,LSTORE,ND9,LITEMS,
     1            IS0,IS1,IS2,IS4,ND7,IPACK,IWORK,HGT1,ND2X3,
     2            NWORDS,NPACK,NDATE,NTIMES,CORE,ND10,
     3            NBLOCK,NFETCH,NSLABE,MISSP,MISSS,L3264B,1,IER)
      IF(MISSP.NE.0)MISTOT=MISTOT+1
      IF(IER.NE.0) GO TO 800
C
C       CHECK NSLAB'S.
C
      IF(NSLABD.NE.NSLABE) THEN
         WRITE(KFILDO,525) NSLABD, NSLABE
 525     FORMAT('****NSLABD DOES NOT EQUAL NSLABE.  ERROR IN THKCORR. ',
     +          ' NSLABD = ',I2,' NSLABE = ',I2,'.  STOP AT 525.')
         GOTO 800
      ENDIF
C
      LD6(1)=ITABLE(1,2)*1000+IDPARS(3)*100+IDPARS(4)
      LD6(2)=IDPARS(6)
      LD6(3)=IDPARS(12)
      LD6(4)=0
      IF(IDPARS(10).NE.0) THEN
      WRITE(KFILDO,620) IDPARS(10)
 620  FORMAT('****IDPARS(10) DOES NOT EQUAL ZERO.  FOR THKCORR TO ',
     +       'RUN PROPERLY IDPARS(10) MUST EQUAL ZERO.  IDPARS(10) ',
     +       'EQUALS ',I2)
      STOP 620
      ENDIF
      CALL GFETCH(KFILDO,KFIL10,LD6,7777,LSTORE,ND9,LITEMS,
     1            IS0,IS1,IS2,IS4,ND7,IPACK,IWORK,HGT2,ND2X3,
     2            NWORDS,NPACK,NDATE,NTIMES,CORE,ND10,
     3            NBLOCK,NFETCH,NSLABF,MISSP,MISSS,L3264B,1,IER)
      IF(MISSP.NE.0)MISTOT=MISTOT+1
      IF(IER.NE.0) GO TO 800
C
C       CHECK NSLAB'S.
C
      IF(NSLABE.NE.NSLABF) THEN
         WRITE(KFILDO,625) NSLABE, NSLABF
 625     FORMAT('****NSLABE DOES NOT EQUAL NSLABF.  ERROR IN THKCORR. ',
     +          ' NSLABE = ',I2,' NSLABF = ',I2,'.  STOP AT 625.')
         GOTO 800
C
      ENDIF
C
      DO 650 IXJY=1,NX*NY
           THK3(IXJY)=(HGT1(IXJY)-HGT2(IXJY))
 650  CONTINUE
C
C	CALCULATE BIAS CORRECTED THICKNESS.
C
      DO 680 IXJY=1,NX*NY
         BIAS(IXJY)=(THK2(IXJY)-THK1(IXJY))
         CORR(IXJY)=(THK3(IXJY)+BIAS(IXJY))
 680  CONTINUE
      GOTO 900 
C
C       IF PREVIOUS MODEL RUN IS MISSING, PRESERVE ORIGINAL
C       THICKNESS FIELD.
C
 700  LD7(1)=ITABLE(1,2)*1000+IDPARS(3)*100+IDPARS(4)
      LD7(2)=IDPARS(7)
      LD7(3)=IDPARS(12)
      LD7(4)=0
      IF(IDPARS(10).NE.0) THEN
      WRITE(KFILDO,710) IDPARS(10)
 710  FORMAT('****IDPARS(10) DOES NOT EQUAL ZERO.  FOR THKCORR TO ',
     +       'RUN PROPERLY IDPARS(10) MUST EQUAL ZERO.  IDPARS(10) ',
     +       'EQUALS ',I2)
      STOP 710
      ENDIF
      CALL GFETCH(KFILDO,KFIL10,LD5,7777,LSTORE,ND9,LITEMS,
     1            IS0,IS1,IS2,IS4,ND7,IPACK,IWORK,HGT1,ND2X3,
     2            NWORDS,NPACK,NDATE,NTIMES,CORE,ND10,
     3            NBLOCK,NFETCH,NSLABG,MISSP,MISSS,L3264B,1,IER)
      IF(MISSP.NE.0)MISTOT=MISTOT+1
      IF(IER.NE.0) GO TO 800
C
      LD8(1)=ITABLE(1,2)*1000+IDPARS(3)*100+IDPARS(4)
      LD8(2)=IDPARS(6)
      LD8(3)=IDPARS(12)
      LD8(4)=0
      IF(IDPARS(10).NE.0) THEN
      WRITE(KFILDO,720) IDPARS(10)
 720  FORMAT('****IDPARS(10) DOES NOT EQUAL ZERO.  FOR THKCORR TO ',
     +       'RUN PROPERLY IDPARS(10) MUST EQUAL ZERO.  IDPARS(10) ',
     +       'EQUALS ',I2)
      STOP 720
      ENDIF
      CALL GFETCH(KFILDO,KFIL10,LD6,7777,LSTORE,ND9,LITEMS,
     1            IS0,IS1,IS2,IS4,ND7,IPACK,IWORK,HGT2,ND2X3,
     2            NWORDS,NPACK,NDATE,NTIMES,CORE,ND10,
     3            NBLOCK,NFETCH,NSLABH,MISSP,MISSS,L3264B,1,IER)
      IF(MISSP.NE.0)MISTOT=MISTOT+1
      IF(IER.NE.0) GO TO 800
C
C       CHECK NSLAB'S.
C
      IF(NSLABG.NE.NSLABH) THEN
         WRITE(KFILDO,730) NSLABG, NSLABH
 730     FORMAT('****NSLABG DOES NOT EQUAL NSLABH.  ERROR IN THKCORR. ',
     +          ' NSLABG = ',I2,' NSLABH = ',I2,'.  STOP AT 625.')
         GOTO 800
C
      ENDIF
C
      DO 740 IXJY=1,NX*NY
           THK4(IXJY)=(HGT1(IXJY)-HGT2(IXJY))
 740  CONTINUE
C
C
C       IF PREVIOUS MODEL FIELD IS MISSING, THEN PRESERVE ORIGINAL FORECAST.
C
      WRITE(KFILDO,745) NDATE
745   FORMAT(' ****THICKNESS FROM PREVIOUS MODEL RUN IS MISSING, ',
     1       'FOR DATE, ',I10,', THICKNESS FIELD IS UNCHANGED ',
     2       'BY THKCORR.')
C
C
      DO 750 IXJY=1,NX*NY
      CORR(IXJY)=THK4(IXJY)
 750  CONTINUE
      GOTO 900
C
C	IF VALUES ARE MISSING SET TO 9999.
C
 800  DO 801 J=1,ND2X3
           CORR(J)=9999.
 801  CONTINUE
C
 900  RETURN
      END
