      SUBROUTINE VERTP(KFILDO,KFIL10,NFIRST,
     1                 ID,IDPARS,THRESH,JD,NDATE,
     2                 KFILRA,RACESS,NUMRA,
     3                 ICALL,CCALL,ICALLD,CCALLD,NAME,
     4                 NELEV,STALAT,STALON,
     5                 ITIMEZ,ISDATA,SDATA,SDATA1,DIR,ND1,NSTA,
     6                 NGRIDC,NGRID,ND11,NSLAB,IPACK,IWORK,DATA,ND5,
     7                 LSTORE,ND9,LITEMS,CORE,ND10,NBLOCK,NFETCH,
     8                 IS0,IS1,IS2,IS4,ND7,
     9                 FD1,FD2,FD3,FD4,FD5,FD6,FD7,
     A                 FDVERT,FDTIME,FDSINS,FDMS,ND2X3,
     B                 ISTAV,L3264B,L3264W,MISTOT,IER)
C 
C        FEBRUARY  1995   GLAHN   TDL   MOS-2000 
C        AUGUST    1996   GLAHN   ADDED MISSS AND MISTOT
C        NOVEMBER  1996   GLAHN   ADDED KFILRA, RACESS, NUMRA, ICALLD,
C                                 CCALLD
C        JUNE      1997   GLAHN   SLIGHT CHANGE TO COMMENTS, NOT CODE
C                                 D COMPILE OPTION COMMENTED OUT
C        JANUARY   1998   GLAHN   ADDED SUBSTITUTE STATIONS IN CCALL( , )
C        MAY       1998   GLAHN   ADDED ITIMEZ( ) 
C        OCTOBER   1998   GLAHN   COMMENT CHANGE; REMOVED TEST FOR ND5
C        NOVEMBER  1998   GLAHN   CHANGED DIMENSIONS OF CCALLD( )
C                                 AND ICALLD( , ) FROM ND1 TO ND5
C        OCTOBER   2002   WEISS   CHANGED ND5 TO ND2X3
C        MAY       2003   GLAHN   CHANGED ND5 TO ND2X3 IN SECOND CALL
C                                 TO OPTN2;  CHANGED ND2X3 TO ND5 IN
C                                 CCALLD( ), ICCALLD( , ), IPACK( ),
C                                 IWORK( ), DATA( ); REMOVED SOME C***
C        JUNE      2003   GLAHN   INSERTED NGRID AND NAME IN CALL AND
C                                 IN CALLS TO OPTN2
C
C        PURPOSE 
C            TO COMPUTE DIFFERENCE, SUM, OR MEAN OF TWO FIELDS OF THE
C            SAME VARIABLE DEFINITION (JD(1) THE SAME), THE SAME TAU,
C            AND THE SAME RUN OFFSET RR AT THE TWO LEVELS GIVEN BY JD(2).
C
C            THE OPERATION IS CONTROLLED BY IDPARS(5):
C               1 = DIFFERENCE IDPARS(7) - IDPARS(6)
C               2 = SUM        IDPARS(7) + IDPARS(6)
C               3 = MEAN      (IDPARS(7) + IDPARS(6))/2.
C
C        DATA SET USE 
C            KFILDO - DEFAULT UNIT NUMBER FOR OUTPUT (PRINT) FILE.  (OUTPUT) 
C            KFIL10 - UNIT NUMBER OF TDL MOS-2000 FILE SYSTEM ACCESS.
C                     (INPUT-OUTPUT) 
C 
C        VARIABLES 
C              KFILDO = DEFAULT UNIT NUMBER FOR OUTPUT (PRINT) FILE. (INPUT) 
C              KFIL10 = UNIT NUMBER OF TDL MOS-2000 FILE SYSTEM ACCESS.
C                       (INPUT)
C              NFIRST = 1 FOR THE 1ST DATE.
C               ID(J) = THE PREDICTOR ID (J=1,4).  (INPUT)
C           IDPARS(J) = THE PARSED, INDIVIDUAL COMPONENTS OF THE PREDICTOR
C                       ID CORRESPONDING TO ID( ) (J=1,15).
C                       (INPUT)
C                       J=1--CCC (CLASS OF VARIABLE),
C                       J=2--FFF (SUBCLASS OF VARIABLE),
C                       J=3--B (BINARY INDICATOR),
C                       J=4--DD (DATA SOURCE, MODEL NUMBER),
C                       J=5--V (VERTICAL APPLICATION),
C                       J=6--LBLBLBLB (BOTTOM OF LAYER, 0 IF ONLY 1 LAYER),
C                       J=7--LTLTLTLT (TOP OF LAYER),
C                       J=8--T (TRANSFORMATION),
C                       J=9--RR (RUN TIME OFFSET, ALWAYS + AND BACK IN TIME),
C                       J=10--OT (TIME APPLICATION),
C                       J=11--OH (TIME PERIOD IN HOURS),
C                       J=12--TAU (PROJECTION IN HOURS),
C                       J=13--I (INTERPOLATION TYPE),
C                       J=14--S (SMOOTHING INDICATOR), AND
C                       J=15--G (GRID INDICATOR).
C              THRESH = THE BINARY THRESHOLD ASSOCIATED WITH IDPARS( ).
C                       (INPUT)
C               JD(J) = THE BASIC INTEGER PREDICTOR ID (J=1,4).
C                       THIS IS THE SAME AS ID(J), EXCEPT THAT THE PORTIONS
C                       PERTAINING TO PROCESSING ARE OMITTED:
C                       B = IDPARS(3),
C                       T = IDPARS(8),
C                       I = IDPARS(13),
C                       S = IDPARS(14),
C                       G = IDPARS(15), AND
C                       THRESH.
C                       JD( ) IS USED TO IDENTIFY THE BASIC MODEL FIELDS
C                       AS READ FROM THE ARCHIVE.  (INPUT)
C               NDATE = THE DATE/TIME FOR WHICH PREDICTOR IS NEEDED.  (INPUT)
C           KFILRA(J) = HOLDS THE UNIT NUMBERS FOR ACCESSING THE MOS-2000
C                       EXTERNAL RANDOM ACCESS FILES (J=1,ND12).  (INPUT)
C           RACESS(J) = THE FILE NAMES CORRESPONDING TO KFILRA(J) (J=1,NUMRA).
C                       (CHARACTER*60)  (INPUT)
C               NUMRA = THE NUMBER OF UNIT NUMBERS AND NAMES IN KFILRA( )
C                       AND RACESS( ).  (INPUT)
C        ICALL(L,K,J) = 8 STATION CALL LETTERS AS CHARACTERS IN AN INTEGER
C                       VARIABLE (L=1,L3264W) (K=1,NSTA) (J=1,6).
C                       EQUIVALENCED TO CCALL( , )  (INPUT)
C          CCALL(K,J) = 8-CHARACTER STATION CALL LETTERS (OR GRIDPOINT
C                       LOCATIONS FOR GRID DEVELOPMENT) TO PROVIDE
C                       OUTPUT FOR (J=1) AND 5 POSSIBLE OTHER STATION
C                       CALL LETTERS (J=2,6) THAT CAN BE USED INSTEAD
C                       IF THE PRIMARY (J=1) STATION CANNOT BE FOUND 
C                       IN AN INPUT DIRECTORY (K=1,NSTA).  ALL STATION
C                       DATA ARE KEYED TO THIS LIST, EXCEPT POSSIBLY 
C                       CCALLD( ).  EQUIVALENCED TO ICALL( , , ).
C                       (CHARACTER*8)  (INPUT)
C         ICALLD(L,K) = 8 STATION CALL LETTERS AS CHARACTERS IN AN INTEGER
C                       VARIABLE (L=1,L3264W) (K=1,ND5).
C                       EQUIVALENCED TO CCALLD( ).  (INTERNAL)
C           CCALLD(K) = 8 STATION CALL LETTERS (K=1,ND5).  THIS LIST IS
C                       USED IN L1D1 TO READ THE REGION LISTS.
C                       (CHARACTER*8) (INTERNAL)
C            NELEV(K) = ELEVATION OF STATIONS (K=1,NSTA).
C           STALAT(K) = LATITUDE OF STATIONS (K=1,NSTA).
C           STALON(K) = LONGITUDE OF STATIONS (K=1,NSTA).
C           ITIMEZ(K) = TIME ZONE INDICATOR.  THE NUMBER OF HOURS
C                       THE STATION IS DIFFERENT FROM UTC (K=1,NSTA).
C                       (INPUT)
C           ISDATA(K) = WORK ARRAY (K=1,ND1).  (INTERNAL)
C            SDATA(K) = INTERPOLATED DATA TO RETURN, WHEN STATION DATA ARE
C                       BEING GENERATED (K=1,NSTA).  (OUTPUT)
C           SDATA1(K) = WORK ARRAY RESERVED FOR USE IN L2D2 (K=1,NSTA).
C                       (INTERNAL)
C          DIR(K,J,M) = THE IX (J=1) AND JY (J=2) POSITIONS ON THE GRID
C                       FOR THE COMBINATION OF GRID CHARACTERISTICS M
C                       (M=1,NGRID) AND STATION K (K=1,NSTA) IN NGRIDC( ,M).
C                       (INPUT)
C                 ND1 = MAXIMUM NUMBER OF STATIONS THAT CAN BE DEALT WITH.
C                       FIRST DIMENSION OF DIR( , , ).  (INPUT)
C                NSTA = NUMBER OF STATIONS OR LOCATIONS BEING DEALT WITH.
C                       (INPUT)
C         NGRIDC(L,M) = HOLDS THE GRID CHARACTERISTICS (L=1,6) FOR EACH GRID
C                       COMBINATION (M=1,NGRID).
C                       L=1--MAP PROJECTION NUMBER (3=LAMBERT, 5=POLAR
C                            STEREOGRAPHIC). 
C                       L=2--GRID LENGTH IN METERS,
C                       L=3--LATITUDE AT WHICH GRID LENGTH IS CORRECT *1000,
C                       L=4--GRID ORIENTATION IN DEGREES *1000,
C                       L=5--LATITUDE OF LL CORNER IN DEGREES *1000,
C                       L=6--LONGITUDE OF LL CORNER IN DEGREES *1000.
C                ND11 = MAXIMUM NUMBER OF GRID COMBINATIONS THAT CAN BE
C                       DEALT WITH ON THIS RUN.  LAST DIMENSION OF
C                       NGRIDC( , ).  (INPUT)
C               NSLAB = RETURNED FROM GFETCH AS THE VALUE STORED IN
C                       LSTORE(10, )  WHEN IER NE 0, THIS
C                       VALUE SHOULD NOT BE USED.  (OUTPUT) 
C            IPACK(J) = WORK ARRAY (J=1,ND5).  (INTERNAL)
C            IWORK(J) = WORK ARRAY (J=1,ND5).  (INTERNAL)
C             DATA(J) = ARRAY TO HOLD RETURNED DATA (J=1,ND5).  
C                       (OUTPUT)
C                 ND5 = DIMENSION OF IPACK( ), IWORK( ), AND DATA( ).
C                       (INPUT)
C         LSTORE(L,J) = THE ARRAY HOLDING INFORMATION ABOUT THE DATA 
C                       STORED (L=1,12) (J=1,LITEMS).  (INPUT-OUTPUT)
C                       L=1,4--THE 4 ID'S FOR THE DATA.
C                       L=5  --LOCATION OF STORED DATA.  WHEN IN CORE,
C                              THIS IS THE LOCATION IN CORE( ) WHERE
C                              THE DATA START.  WHEN ON DISK, 
C                              THIS IS MINUS THE RECORD NUMBER WHERE 
C                              THE DATA START.
C                       L=6  --THE NUMBER OF 4-BYTE WORDS STORED.
C                       L=7  --2 FOR DATA PACKED IN TDL GRIB, 1 FOR NOT.
C                       L=8  --THE DATE/TIME OF THE DATA IN FORMAT
C                              YYYYMMDDHH.
C                       L=9  --NUMBER OF TIMES DATA HAVE BEEN RETRIEVED.
C                       L=10 --NUMBER OF THE SLAB IN DIR( , ,L) AND
C                              IN NGRIDC( ,L) DEFINING THE CHARACTERISTICS
C                              OF THIS GRID.
C                       L=11 --THE NUMBER OF THE PREDICTOR IN THE SORTED
C                              LIST IN ID( ,N) (N=1,NPRED) FOR WHICH THIS
C                              VARIABLE IS NEEDED, WHEN IT IS NEEDED ONLY
C                              ONCE FROM LSTORE( , ).  WHEN IT IS NEEDED
C                              MORE THAN ONCE, THE VALUE IS SET = 7777.
C                       L=12 --USED INITIALLY IN ESTABLISHING MOSTORE( , ).
C                              LATER USED AS A WAY OF DETERMINING WHETHER
C                              TO KEEP THIS VARIABLE.
C                 ND9 = THE SECOND DIMENSION OF LSTORE( , ).  (INPUT)
C              LITEMS = THE NUMBER OF ITEMS (COLUMNS) IN LSTORE( , ) THAT 
C                       HAVE BEEN USED IN THIS RUN.  (INPUT)
C             CORE(J) = THE ARRAY TO STORE OR RETIREVE THE DATA IDENTIFIED IN
C                       LSTORE( , ) (J=1,ND10).  WHEN CORE( ) IS FULL
C                       DATA ARE STORED ON DISK.  (INPUT)
C                ND10 = DIMENSION OF CORE( ).  (INPUT)
C              NBLOCK = THE BLOCK SIZE IN WORDS OF THE MOS-2000 RANDOM
C                       DISK FILE.  (INPUT)
C              NFETCH = INCREMENTED EACH TIME GFETCH IS ENTERED.
C                       IT IS A RUNNING  COUNT FROM THE BEGINNING OF THE 
C                       PROGRAM.  THIS COUNT IS MAINTAINED IN CASE THE USER 
C                       NEEDS IT (DIAGNOSTICS, ETC.).  (INTERNAL)
C              IS0(J) = MOS-2000 GRIB SECTION 0 ID'S (J=1,3).  (INTERNAL)
C              IS1(J) = MOS-2000 GRIB SECTION 1 ID'S (J=1,22+).  (INTERNAL)
C              IS2(J) = MOS-2000 GRIB SECTION 2 ID'S (J=1,12).  (INTERNAL)
C              IS4(J) = MOS-2000 GRIB SECTION 4 ID'S (J=1,4).  (INTERNAL)
C                 ND7 = DIMENSION OF IS0( ), IS1( ), IS2( ), AND IS4( ).
C                       NOT ALL LOCATIONS ARE USED.  (INPUT)
C  FD1(J),FD2(J), ETC = WORK ARRAYS (J=1,ND2X3).  THESE MAY BE USED IN
C                       ROUTINES AS 2-DIMENSIONAL ARRAYS, WHERE THE
C                       TOTAL ARRAY SIZE IS ND2*ND3=ND2X3 AS DECLARED IN
C                       THE CALLING PROGRAM.  DATA( ) IS USED FOR THE
C                       FIRST VARIABLE FETCHED, AND FDVERT( ) IS USED FOR 
C                       THE SECOND.  (INTERNAL)
C           FDVERT(J) = TEMPORARY STORAGE RESERVED FOR SUBROUTINE VERTP
C                       (J=1,ND2X3).  (INTERNAL)
C           FDTIME(J) = TEMPORARY STORAGE RESERVED FOR SUBROUTINE TEMEP
C                       (J=1,ND2X3).  (INTERNAL)
C       FDSINS(IX,JY) = USED TO SAVE THE SIN OF THE LATITUDE IN SUBROUTINE
C                       PSMAPF (IX=1,NX) (JY=1,NY).  THE USER MUST NOT
C                       USE THIS ARRAY EXCEPT IN CALLING PSMAPF.
C                       (INPUT/OUTPUT)
C         FDMS(IX,JY) = USED TO SAVE THE MAP FACTOR IN SUBROUTINE
C                       PSMAPF (IX=1,NX) (JY=1,NY).  THE USER MUST NOT
C                       USE THIS ARRAY EXCEPT IN CALLING PSMAPF.
C                       (INPUT/OUTPUT)
C               ND2X3 = DIMENSION OF FD1( ), FD2( ), ETC.  (INPUT)
C               ISTAV = 0 SINCE THE DATA RETURNED ARE GRID DATA.  (OUTPUT)
C              L3264B = INTEGER WORD LENGTH IN BITS OF MACHINE BEING USED
C                       (EITHER 32 OR 64).  (INPUT)
C              L3264W = NUMBER OF WORDS IN 64 BITS, EITHER 1 OR 2.  (INPUT)
C              MISTOT = TOTAL NUMBER OF TIMES A MISSING INDICATOR
C                       HAS BEEN ENCOUNTERED IN UNPACKING GRIDS.
C                       (INPUT-OUTPUT)
C                 IER = STATUS RETURN.
C                         0 = GOOD RETURN.
C                       100 = THE TWO GRIDS NEEDED ARE NOT THE SAME SIZE.
C                       102 = VERTICAL PROCESSING INDICATOR NOT ACCOMMODATED.
C                       SEE GFETCH FOR OTHER VALUES.  (INTERNAL-OUTPUT)
C              NTIMES = THE NUMBER OF TIMES, INCLUDING THIS ONE, THAT THE 
C                       RECORD HAS BEEN FETCHED.  THIS IS STORED IN
C                       LSTORE(9, ).  (INTERNAL)
C               LD(J) = HOLDS THE 4 ID WORDS OF THE DATA RETRIEVED INTO
C                       DATA( ) (J=1,4).  (INTERNAL)
C               MD(J) = HOLDS THE 4 ID WORDS OF THE DATA RETRIEVED INTO
C                       FDVERT( ) (J=1,4).  (INTERNAL)
C              NSLAB1 = RETURNED FROM GFETCH AS THE VALUE STORED IN
C                       LSTORE(10, ) FOR THE FIRST FIELD.  (INTERNAL)
C              NSLAB2 = RETURNED FROM GFETCH AS THE VALUE STORED IN
C                       LSTORE(10, ) FOR THE SECOND FIELD.  (INTERNAL)
C              NWORDS = NUMBER OF WORDS RETURNED IN DATA( ).  (INTERNAL)
C               MISSP = PRIMARY MISSING VALUE INDICATOR.  RETURNED AS ZERO
C                       WHEN DATA ARE NOT PACKED.  (INTERNAL)
C               MISSS = SECONDARY MISSING VALUE INDICATOR.  RETURNED AS ZERO
C                       WHEN DATA ARE NOT PACKED.  (INTERNAL)
C 
C        NONSYSTEM SUBROUTINES CALLED 
C            OPTN2
C
      PARAMETER (NCDF=11)
C
      CHARACTER*8 CCALL(ND1,6),
     1            CCALLD(ND5)
      CHARACTER*60 RACESS(NUMRA)
D     CHARACTER*74 TITLE/' '/
C        THE ABOVE STATEMENT IS NEEDED FOR GRIDPRINTING.
C
      DIMENSION ID(4),IDPARS(15),JD(4)
      DIMENSION ICALL(L3264W,ND1,6),
     1          NELEV(ND1),STALAT(ND1),STALON(ND1),ITIMEZ(ND1),
     2          ISDATA(ND1),SDATA(ND1),SDATA1(ND1)
      DIMENSION IPACK(ND5),IWORK(ND5),DATA(ND5),ICALLD(L3264W,ND5)
      DIMENSION FD1(ND2X3),FD2(ND2X3),FD3(ND2X3),FD4(ND2X3),
     1          FD5(ND2X3),FD6(ND2X3),FD7(ND2X3),
     2          FDVERT(ND2X3),FDTIME(ND2X3),FDSINS(ND2X3),FDMS(ND2X3)
      DIMENSION IS0(ND7),IS1(ND7),IS2(ND7),IS4(ND7)
      DIMENSION LSTORE(12,ND9),DATACDF(ND5,NCDF)
      DIMENSION CORE(ND10)
      DIMENSION DIR(ND1,2,ND11),NGRIDC(6,ND11)
      DIMENSION KFILRA(NUMRA)
      DIMENSION LD(4),LDPARS(15)
      DIMENSION MD(4),MDPARS(15)
C
C***D     CALL TIMPR(KFILDO,KFILDO,'START VERTP         ')
      IER=0
      ISTAV=0
C
C        GET THE FIRST VARIABLE.
C        THIS ACCOMMODATES RUN OFFSET RR AND TAU.
C
      LD(1)=JD(1)
      LD(2)=IDPARS(7)
      LD(3)=IDPARS(9)*1000000+IDPARS(12)
      LD(4)=0
C        LD( ) IS IN BASIC PREDICTOR FORMAT.
      CALL GFETCH(KFILDO,KFIL10,LD,7777,LSTORE,ND9,LITEMS,
     1            IS0,IS1,IS2,IS4,ND7,IPACK,IWORK,DATA,ND2X3,
     2            NWORDS,NPACK,NDATE,NTIMES,CORE,ND10,
     3            NBLOCK,NFETCH,NSLAB1,MISSP,MISSS,L3264B,1,IER)
      IF(MISSP.NE.0)MISTOT=MISTOT+1
      IF(IER.EQ.0)GO TO 120
      IF(IER.NE.47)GO TO 800
C        IER = 47 MEANS THE DATA COULD NOT BE FOUND.  TRY TO COMPUTE
C        THE FIELD IN OPTN2.
      CALL PRSID1(KFILDO,LD,LDPARS)
C        LD( ) IS IN BASIC PREDICTOR FORMAT.  PUT LDPARS( ) TO MATCH,
C        SINCE LD(3) MAY NOT EQUAL JD(3).  LD( ) HAS TO DO WITH TIME,
C        AND IS THE SAME FOR THE VARIABLE NEEDED THROUGH OPTN2.
      CALL OPTN2(KFILDO,KFIL10,NFIRST,
     1           LD,LDPARS,THRESH,LD,NDATE,
     2           KFILRA,RACESS,NUMRA,
     3           ICALL,CCALL,ICALLD,CCALLD,NAME,
     4           NELEV,STALAT,STALON,
     5           ITIMEZ,ISDATA,SDATA,SDATA1,DIR,ND1,NSTA,
     6           NGRIDC,NGRID,ND11,NSLAB1,IPACK,IWORK,DATA,ND5,
     7           LSTORE,ND9,LITEMS,CORE,ND10,NBLOCK,NFETCH,
     8           IS0,IS1,IS2,IS4,ND7,
     9           FD1,FD2,FD3,FD4,FD5,FD6,FD7,DATACDF,NCDF,
     A           FDVERT,FDTIME,FDSINS,FDMS,ND2X3,
     B           ISTAV,L3264B,L3264W,MISTOT,IER)
      IF(IER.NE.0)GO TO 800
C
 120  NX=IS2(3)
      NY=IS2(4)
C***D     CALL PRTGR(KFILDO,DATA,NX,NY,50.,0.,
C***D    1           10.,0.,0,TITLE,IER)                
C
C        GET THE SECOND VARIABLE.
C        THIS ACCOMMODATES RUN OFFSET RR AND TAU.
C
      MD(1)=JD(1)
      MD(2)=IDPARS(6)
      MD(3)=IDPARS(9)*1000000+IDPARS(12)
      MD(4)=0
C        MD( ) IS IN BASIC PREDICTOR FORMAT.
      CALL GFETCH(KFILDO,KFIL10,MD,7777,LSTORE,ND9,LITEMS,
     1            IS0,IS1,IS2,IS4,ND7,IPACK,IWORK,FDVERT,ND2X3,
     2            NWORDS,NPACK,NDATE,NTIMES,CORE,ND10,
     3            NBLOCK,NFETCH,NSLAB2,MISSP,MISSS,L3264B,1,IER)
      IF(MISSP.NE.0)MISTOT=MISTOT+1
      IF(IER.EQ.0)GO TO 140
      IF(IER.NE.47)GO TO 800
C        IER = 47 MEANS THE DATA COULD NOT BE FOUND.  TRY TO COMPUTE
C        THE FIELD IN OPTN2.
      CALL PRSID1(KFILDO,MD,MDPARS)
C        MD( ) IS IN BASIC PREDICTOR FORMAT.  PUT MDPARS( ) TO MATCH,
C        SINCE MD(3) MAY NOT EQUAL JD(3).  MD( ) HAS TO DO WITH TIME,
C        AND IS THE SAME FOR THE VARIABLE NEEDED THROUGH OPTN2.
      CALL OPTN2(KFILDO,KFIL10,NFIRST,
     1           MD,MDPARS,THRESH,MD,NDATE,
     2           KFILRA,RACESS,NUMRA,
     3           ICALL,CCALL,ICALLD,CCALLD,NAME,
     4           NELEV,STALAT,STALON,
     5           ITIMEZ,ISDATA,SDATA,SDATA1,DIR,ND1,NSTA,
     6           NGRIDC,NGRID,ND11,NSLAB2,IPACK,IWORK,FDVERT,ND2X3,
     7           LSTORE,ND9,LITEMS,CORE,ND10,NBLOCK,NFETCH,
     8           IS0,IS1,IS2,IS4,ND7,
     9           FD1,FD2,FD3,FD4,FD5,FD6,FD7,DATACDF,NCDF,
     A           FDVERT,FDTIME,FDSINS,FDMS,ND2X3,
     B           ISTAV,L3264B,L3264W,MISTOT,IER)
      IF(IER.NE.0)GO TO 800
C
 140  IF(NSLAB1.EQ.NSLAB2.AND.NX.EQ.IS2(3).AND.NY.EQ.IS2(4))GO TO 200
C        THE GRID CHARACTERISTICS ARE NOT THE SAME.
      WRITE(KFILDO,150)(LD(J),J=1,4),(NGRIDC(J,NSLAB1),J=1,6),NX,NY,
     1                 (MD(J),J=1,4),(NGRIDC(J,NSLAB2),J=1,6),
     2                 IS2(3),IS2(4)
 150  FORMAT(/' ****THE TWO GRIDS NEEDED IN VERTP HAVE DIFFERENT',
     1        ' CHARACTERISTICS.  PREDICTOR NOT COMPUTED.',
     2        '  VALUES FROM NGRIDC( , ) AND NX, NY.'/
     3        (5X,I9.9,I10.9,I10.9,I4.3,4X,6I10,4X,2I5))
      IER=100
      GO TO 800
C
 200  NSLAB=NSLAB1
C      
      IF(IDPARS(5).EQ.1)THEN
C
          DO 211 J=1,NX*NY
          DATA(J)=DATA(J)-FDVERT(J)
 211      CONTINUE
C
C***D     CALL PRTGR(KFILDO,FDVERT,NX,NY,50.,0.,
C***D    1           10.,0.,0,TITLE,IER)                
C***D     CALL PRTGR(KFILDO,DATA,NX,NY,50.,0.,
C***D    1           10.,0.,0,TITLE,IER)                
C
      ELSEIF(IDPARS(5).EQ.2)THEN
C
          DO 212 J=1,NX*NY
          DATA(J)=DATA(J)+FDVERT(J)
 212      CONTINUE
C
      ELSEIF(IDPARS(5).EQ.3)THEN
C
          DO 213 J=1,NX*NY
          DATA(J)=(DATA(J)+FDVERT(J))/2.
 213      CONTINUE
C
      ELSE 
         WRITE(KFILDO,219)(JD(L),L=1,4),IDPARS(5)
 219     FORMAT(/' ****VERTP ENTERED FOR PREDICTOR ',
     1             I9.9,2I10.9,I4.3,
     2           ' WITH PROCESSING IDPARS(5) = ',I3,
     3           ' NOT ACCOMMODATED.  CONTINUING.')
      IER=102
      GO TO 800
C
      ENDIF
C
      GO TO 850
C
C        THIS PREDICTOR CANNOT BE COMPUTED.  SET THE ARRAY TO MISSING.
C
 800  DO 801 J=1,ND2X3
      DATA(J)=9999.
 801  CONTINUE 
C
 850  RETURN
      END     
                  
