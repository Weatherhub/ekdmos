      SUBROUTINE LPTSPP(KFILDO,KFIL10,IP12,KFILRA,RACESS,NUMRA,
     1                  ID,IDPARS,JD,ITAU,
     2                  NDATE,MDATE,CCALL,ISDATA,SDATA,ND1,NSTA,
     3                  ICALLD,CCALLD,IPACK,IWORK,DATA,ND5,
     4                  LSTORE,ND9,LITEMS,CORE,ND10,
     5                  NBLOCK,NFETCH,LASTL,LASTD,
     6                  IS0,IS1,IS2,IS4,ND7,
     7                  ISTAV,ISTAB,L3264B,L3264W,IER)
C
C        FEBRUARY 2005  CHARBA   MDL   MOS-2000
C 	 AUGUST   2005  CHARBA   MODIFIED SUCH THAT THE AMOUNT OF 
C				 SMOOTHING OF THE PROBABILITIES IS A 
C				 FUNCTION OF THE FORECAST PROJECTION.
C				 FURTHER, THE AMOUNT OF SMOOTHING IS 
C				 SPECIFIED IN TERMS OF BOTH THE SMOOTH-
C				 ING WEIGHT AND THE NUMBER OF PASSES.
C        OCTOBER  2005  CHARBA   MODIFIED TO ACCOMMODATE 9997 FORECAST
C				 VALUES.  IN THE CASE OF PRIMARY FORE-
C				 CASTS ANY 9997 VALUES ARE SET TO 9999,
C				 AND IN THE CASE OF SECONDARY FORECASTS
C				 ANY 9997 VALUES ARE SET TO 0.0.  
C       DECEMBER  2005  CHARBA   CORRECTED DOCUMENTATION. 
C       APRIL     2006  CHARBA   ADDED CALLS TO SUBROUTINE CONST AND
C                                SMBNDY, WHICH ADDS THE CAPABILITY TO
C                                SMOOTH THE PROBABILITIES WHERE
C                                NEEDED AT REGIONAL BOUNDARIES.
C       MAY       2006  CHARBA   MODIFIED SUCH THAT TWO VARIABLE IDS ARE
C                                ACCOMMODATED.  THE FIRST VARIABLE ID IS
C                                ASSOCIATED WITH SMOOTHING THE PROBABIL-
C                                ITIES ONLY ALONG REGION BOUNDARIES.
C                                THE SECOND VARIABLE ID IS ASSOCIATED 
C                                WITH ADDITIONAL SMOOTHING OF THE PROBA-
C                                BILITIES OVER THE ENTIRE GRID.
C       MAY       2006  CHARBA   MODIFIED SUCH THAT SMOOTHING ALONG REG-
C                                IONAL BOUNDARIES IS PERFORMED IN TWO
C                                SERIAL STEPS.  THE FIRST STEP, PERFORM-
C                                ED BY SMBNDY, APPLIES TO ANY PROBABIL-
C                                ITY VALUE AND IT APPLIES UP TO THREE 
C                                SMOOTHING PASSES.  THE SECOND STEP, 
C                                PERFORMED BY SMBNDY2, APPLIES ONLY TO 
C                                LOW PROBABILITIES, AND IT APPLIES UP TO
C                                TWO SMOOTHING PASSES.  THE FIRST STEP
C                                APPLIES TO ALL FORECAST PROJECTIONS
C                                GREATER OR EQUAL TO MNPROJ, WHEREAS THE
C                                SECOND STEP APPLIES TO ALL PROJECTIONS.
C       MAY       2006  CHARBA   MODIFIED SUCH THAT FORECAST POINTS THAT
C                                ARE FLAGGED AS REGION BOUNDARIES
C                                ARE CORRECTLY LINKED TO THE
C                                STATION IDS.  THIS INVOLVED A CHANGE 
C                                FROM THE USE OF THE STATION IDS IN
C                                CCALLD( ) TO CCALL( ,1).
C       JUNE      2006  CHARBA   RE-ORGANIZED SOME PARTS OF THE CODE AND
C                                CLEANED UP THE ENTIRE CODE.  ALSO,
C                                ADDED DIMENSIONING OF ISDATA( ) WHICH
C                                WAS MISSING, AND REMOVED GRD2 AND ADDED
C                                IER TO CALLS SMBNDY AND SMBNDY2.
C       JUNE      2006  CHARBA   ADDED A CALL TO RETVEC TO FETCH THE 
C                                VARIABLE IN ID(1) (207510105) INTO 
C                                SDATA( ) FOR A PRE-SELECTED SET OF
C                                POINTS.  THIS FEATURE IS USED WITH 
C                                A SEPARATE RUN OF U710/U910 BECAUSE THE
C                                STATION LIST INVOLVED IS A SUB-SET OF 
C                                THAT USED WHEN THE VARIABLE WAS 
C                                ORIGINALLY DERIVED. 
C       JUNE      2006  CHARBA   ADDED CHECKS OF IER BEING RETURNED BY
C                                SMBNDY AND SMBNDY2, AND CHANGED THE 
C                                RANGE OF PROJECTIONS IN WHICH THE GRID
C                                SMOOTHING IS PERFORMED TO ACCOMMODATE
C                                EVEN LAMP CYCLES.  ALSO, MADE COSMETIC
C                                CHANGES SUGGESTED IN CODE WALK-THRU.
C       JULY      2006  CHARBA   REVISED DO 140 LOOP, AND CHANGED 9999
C                                TO 9998.5 IN CALLS TO SMTH9V.
C       AUGUST    2006  CHARBA   REMOVED IER FROM THE ARGUMENTS OF 
C                                SMBNDY AND SMBNDY2.  HOWEVER, IT IS  
C                                POSSIBLE THE SMOOTHING WAS NOT COMPLETE
C                                FOR ONE OR MORE BOUNDARY POINTS IN
C                                EITHER OR BOTH OF THESE ROUTINES.  THIS
C                                IS EXTREMELY UNLIKELY, BUT IF IT WERE
C                                TO OCCUR A MESSAGE WOULD BE ISSUED BY
C                                THE ROUTINE INVOLVED.
C       OCTOBER   2006  CHARBA   INCREASED THE ARRAY DIMENSIONS TO
C                                ACCOMMODATE INCREASED NUMBER OF OVER-
C                                LAPPING REGION BOUNDARY POINTS.
C       NOVEMBER  2006  CHARBA   ADDED IBNDCT TO SAVE STATEMENT.  ALSO
C                                ADDED CHECKS TO MAKE SURE IBNDCT IS
C                                WITHIN VALID RANGE FOR ANY ENTRY TO
C                                ROUTINE.
C
C        PURPOSE
C	    TO PERFORM POST-PROCESSING OF THE LAMP TSTM PROBABILITIES.
C	    THIS CONSISTS OF TRUNCATING THE PROBS TO THE RANGE 
C           0.0 - 1.0, AND THEN PERFORMING TWO TYPES OF SERIAL SMOOTH-
C           INGS.  THE FIRST TYPE CONSISTS OF SMOOTHING WHERE NEEDED 
C           ALONG COMMON REGION BOUNDARIES.  THIS SMOOTHING IS PERFORMED
C           ONLY WHERE A SPATIAL DISCONTINUITY ALONG THE BOUNDARY IS DE-
C           TECTED.  THE POST-PROCESSED PROBABILITY FIELD OBTAINED AT 
C           THIS STAGE IS SAVED FOR SUBSEQUENT APPLICATION TO OBTAIN THE
C           CATEGORICAL FORECASTS.  IN ADDITION, A SECOND SERIAL SMOOTH-
C           ING IS APPLIED TO THIS PROBABILITY FIELD, WHICH YIELDS THE
C           THE FINAL POST-PROCESSED PROBABILITY FORECAST.  BOTH TYPES 
C           OF SMOOTHING APPLICATIONS ARE PERFORMED WITH A WEIGHTED 
C           NINE-POINT SMOOTHING OPERATOR.
C
C	    (THE RAW PROBABILITIES ARE INGESTED AS VECTOR DATA AND THE
C           PROCESSED PROBABILITIES ARE THEN RETURNED AS VECTOR DATA.  
C           ISTAB IS SET TO 1 SO THAT THE RETURNED PROBABILITIES ARE NOT
C           CONVERTED TO BINARY ON RETURN FROM OPTX.)
C
C	    THE FOLLOWING IDPARS(1) AND IDPARS(2) ARE ACCOMMODATED: 
C              207  505  -  POST-PROCESSED (PARTIAL) LAMP TSTM PROBA-
C                           BILITY NEEDED ONLY FOR PRODUCING THE
C                            CATEGORICAL FORECASTS.  (DECIMAL).
C              207  510  -  FINAL POST-PROCESSED LAMP TSTM PROBABILITY
C		            (DECIMAL).
C
C        DATA SET USE
C            KFILDO - DEFAULT UNIT NUMBER FOR OUTPUT (PRINT) FILE.
C                     (OUTPUT)
C            KFIL10 - UNIT NUMBER OF TDL MOS-2000 FILE SYSTEM ACCESS.
C                     (INPUT-OUTPUT)
C            IP12   - INDICATES WHETHER (>1) OR NOT (=0) THE LIST OF
C                     STATIONS ON THE INPUT FILES WILL BE PRINTED TO
C                     THE FILE WHOSE UNIT NUMBER IS IP12.
C
C        VARIABLES
C              KFILDO = DEFAULT UNIT NUMBER FOR OUTPUT (PRINT) FILE.
C                       (INPUT)
C              KFIL10 = UNIT NUMBER OF TDL MOS-2000 FILE SYSTEM
C                       ACCESS.  (INPUT-OUTPUT)
C                IP12 = INDICATES WHETHER (>0) OR NOT (=0) THE LIST OF
C                       STATIONS ON THE EXTERNAL RANDOM ACCESS FILES
C                       WILL BE LISTED TO UNIT IP12.  (INPUT)
C           KFILRA(J) = THE UNIT NUMBERS FOR WHICH RANDOM ACCESS FILES
C                       ARE AVAILABLE (J=1,NUMRA).  (INPUT)
C           RACESS(J) = THE FILE NAMES ASSOCIATED WITH KFILRA(J) 
C                       (J=1,NUMRA).  (CHARACTER*60)  (INPUT)
C               NUMRA = THE NUMBER OF VALUES IN KFILRA( ) AND RACESS( ).
C                       (INPUT)
C	        ID(J) = ID OF VARIABLE BEING PROCESSED (J=1,4).  (INPUT)
C           IDPARS(J) = THE PARSED, INDIVIDUAL COMPONENTS OF THE
C                       PREDICTAND ID CORRESPONDING TO ID( ) (J=1,15).
C                       (INPUT)
C                       J=1--CCC (CLASS OF VARIABLE)
C                       J=2--FFF (SUBCLASS OF VARIABLE)
C                       J=3--B (BINARY INDICATOR)
C                       J=4--DD (DATA SOURCE, MODEL NUMBER)
C                       J=5--V (VERTICAL APPLICATION)
C                       J=6--LBLBLBLB (BOTTOM OF LAYER, 0 IF ONLY 1
C                            LAYER)
C                       J=7--LTLTLTLT (TOP OF LAYER)
C                       J=8--T (TRANSFORMATION)
C                       J=9--RR (RUN TIME OFFSET, ALWAYS + AND BACK
C                            IN TIME)
C                       J=10--OT (TIME APPLICATION)
C                       J=11--OH (TIME PERIOD IN HOURS)
C                       J=12--TAU (PROJECTION IN HOURS), WHICH IN THIS
C			      CASE IS RELATIVE TO THE MOS CYCLE TIME, 
C			      NOT THE LAMP CYCLE TIME.
C                       J=13--I (INTERPOLATION TYPE)
C                       J=14--S (SMOOTHING INDICATOR)
C                       J=15--G (GRID INDICATOR).
C               JD(J) = THE BASIC VARIABLE IDS (J=1,4).
C                       THIS IS THE SAME AS ID(J), EXCEPT THAT THE
C                       PORTIONS PERTAINING TO PROCESSING ARE OMITTED:
C                       B = IDPARS(3)
C                       T = IDPARS(8)
C                       I = IDPARS(13)
C                       S = IDPARS(14)
C                       G = IDPARS(15) AND THRESH.
C                       JD( ) IS USED TO IDENTIFY THE BASIC MODEL
C                       FIELDS AS READ FROM THE ARCHIVE.  (INPUT)
C                ITAU = THE NUMBER OF HOURS AHEAD TO FIND A VARIABLE.
C                       THIS HAS ALREADY BEEN CONSIDERED IN MDATE, BUT
C                       IS NEEDED FOR CALL TO RETVEC.  (INPUT)
C               NDATE = THE DATE/TIME FOR WHICH VARIABLE IS BEING PRO-
C                       CESSED.  (INPUT)
C               MDATE = NDATE UPDATED WITH ITAU.  (INPUT)
C          CCALL(K,J) = 8-CHARACTER STATION CALL LETTERS (OR GRIDPOINT
C                       LOCATIONS FOR GRID DEVELOPMENT) TO PROVIDE
C                       OUTPUT FOR (J=1) AND 5 POSSIBLE OTHER STATION
C                       CALL LETTERS (J=2,6) THAT CAN BE USED INSTEAD
C                       IF THE PRIMARY (J=1) STATION CANNOT BE FOUND
C                       IN AN INPUT DIRECTORY (K=1,NSTA).  ALL STATION
C                       DATA ARE KEYED TO THIS LIST, EXCEPT POSSIBLY
C                       CCALLD( ).  EQUIVALENCED TO ICALL( , , ).
C                       (CHARACTER*8)  (INPUT)
C           ISDATA(K) = WORK ARRAY (K=1,ND1).  (INTERNAL)
C            SDATA(K) = WORK ARRAY AND RETURNED DATA (K=1,ND1).
C                       (INTERNAL/OUTPUT)
C                 ND1 = MAXIMUM NUMBER OF STATIONS THAT CAN BE DEALT
C                       WITH.  DIMENSION OF XDATA( ), YDATA( ), IX( ), 
C			IY( ), SDATA ( ), AND ISDATA( ).  (INPUT)
C                NSTA = NUMBER OF STATIONS OR LOCATIONS BEING DEALT
C                       WITH.  (INPUT)
C         ICALLD(L,K) = 8 STATION CALL LETTERS AS CHARACTERS IN AN INTE-
C                       GER VARIABLE (L=1,L3264W) (K=1,ND5).  THIS ARRAY
C                       IS USED TO READ THE STATION DIRECTORY FROM A 
C                       MOS-2000 EXTERNAL FILE.  EQUIVALENCED TO 
C                       CCALLD( ).  (CHARACTER*8)  (INTERNAL)
C           CCALLD(K) = 8 STATION CALL LETTERS (K=1,ND5).  THIS ARRAY IS
C                       USED IN CONST TO READ THE STATION DIRECTORY.  
C                       EQUIVALENCED TO ICALLD( , ).  (CHARACTER*8)  
C                       (INTERNAL)
C            IPACK(J) = WORK ARRAY (J=1,ND5).  (INTERNAL)
C            IWORK(J) = WORK ARRAY (J=1,ND5).  (INTERNAL)
C             DATA(K) = WORK ARRAY (J=1,ND5).  (INTERNAL)
C                 ND5 = DIMENSION OF IPACK( ), IWORK( ), AND DATA( ).
C                       (INPUT)
C         LSTORE(L,J) = THE ARRAY HOLDING INFORMATION ABOUT THE DATA
C                       STORED (L=1,12) (J=1,LITEMS).  (INPUT-OUTPUT)
C                       L=1,4--THE 4 ID'S FOR THE DATA.
C                       L=5  --LOCATION OF STORED DATA.  WHEN IN CORE,
C                              THIS IS THE LOCATION IN CORE( ) WHERE
C                              THE DATA START.  WHEN ON DISK,
C                              THIS IS MINUS THE RECORD NUMBER WHERE
C                              THE DATA START.
C                       L=6  --THE NUMBER OF 4-BYTE WORDS STORED.
C                       L=7  --2 FOR DATA PACKED IN TDL GRIB, 1 FOR
C                              NOT.
C                       L=8  --THE DATE/TIME OF THE DATA IN FORMAT
C                              YYYYMMDDHH.
C                       L=9  --NUMBER OF TIMES DATA HAVE BEEN
C                              RETRIEVED.
C                       L=10 --NUMBER OF THE SLAB IN DIR( , ,L) AND
C                              IN NGRIDC( ,L) DEFINING THE
C                              CHARACTERISTICS OF THIS GRID.
C                       L=11 --THE NUMBER OF THE PREDICTAND IN THE
C                              SORTED LIST IN ID( ,N) (N=1,NPRED)
C                              FOR WHICH THIS VARIABLE IS NEEDED, WHEN
C                              IT IS NEEDED ONLY ONCE FROM
C                              LSTORE( , ).  WHEN IT IS NEEDED MORE
C                              THAN ONCE, THE VALUE IS SET = 7777.
C                       L=12 --USED INITIALLY IN ESTABLISHING
C                              MSTORE( , ). LATER USED AS A WAY OF
C                              DETERMINING WHETHER TO KEEP THIS
C                              VARIABLE.
C                 ND9 = THE SECOND DIMENSION OF LSTORE( , ) THAT HAVE
C		        BEEN USED IN THIS RUN.  (INPUT)
C              LITEMS = NUMBER OF MOS FORECAST FIELDS HELD IN THE MOS 
C			INTERNAL STORAGE SYSTEM.  (INPUT)
C             CORE(J) = THE ARRAY TO STORE OR RETIREVE THE DATA
C                       IDENTIFIED IN LSTORE( , ) (J=1,ND10). WHEN
C                       CORE( ) IS FULL DATA ARE STORED ON DISK.
C                       (OUTPUT)
C                ND10 = DIMENSION OF CORE( ).  (INPUT)
C              NBLOCK = THE BLOCK SIZE IN WORDS OF THE MOS-2000 RANDOM
C                       DISK FILE.  (INPUT)
C              NFETCH = INCREMENTED EACH TIME GFETCH IS ENTERED.
C                       IT IS A RUNNING  COUNT FROM THE BEGINNING OF
C                       THE PROGRAM.  THIS COUNT IS MAINTAINED IN
C                       CASE THE USER NEEDS IT (DIAGNOSTICS, ETC.).
C                       NEEDS IT (DIAGNOSTICS, ETC.).  (INTERNAL)
C               LASTL = THE LAST LOCATION IN CORE( ) USED.  THIS MAY BE
C                       MODIFIED, ALONG WITH ITEMS, IF COMPACTION IS
C                       DONE BY GCPAC.  INITIALIZED TO ZERO ON FIRST
C                       ENTRY TO GSTORE.  MUST BE CARRIED WHENEVER
C                       GSTORE IS TO BE CALLED.    (INPUT-OUTPUT)
C               LASTD = TOTAL NUMBER OF PHYSICAL RECORDS ON DISK.  
C                       INITIALIZED TO ZERO ON FIRST ENTRY TO GSTORE.  
C                       MUST BE CARRIED WHENEVER GSTORE IS TO BE CALLED.
C                       (INPUT-OUTPUT)
C              IS0(J) = MOS-2000 GRIB SECTION 0 ID'S (J=1,3).
C                       (INTERNAL)
C              IS1(J) = MOS-2000 GRIB SECTION 1 ID'S (J=1,22+).
C                       (INTERNAL)
C              IS2(J) = MOS-2000 GRIB SECTION 2 ID'S (J=1,12).
C                       (INTERNAL)
C              IS4(J) = MOS-2000 GRIB SECTION 4 ID'S (J=1,4).
C                       (INTERNAL)
C                 ND7 = DIMENSION OF IS0, IS1, IS2, AND IS4. NOT ALL
C                       LOCATIONS ARE USED.  (INPUT)
C               ISTAV = 1 SINCE THE DATA RETURNED ARE STATION DATA.
C                       0 WHEN THE DATA RETURNED ARE GRID DATA OR DATA
C                         ARE NOT AVAILABLE FOR RETURN.  RETURNED
C                         FROM SOME COMPUTATIONAL ROUTINES THAT CAN
C                         BE USED IN U201.  NOT NEEDED IN OPTX, SINCE
C                         ALL DATA ARE STATION ORIENTED.  (OUTPUT)
C               ISTAB = 1 WHEN THE VARIABLE RETURNED IS BINARY;
C                       0 OTHERWISE.  (INTERNAL)
C              L3264B = INTEGER WORD LENGTH IN BITS OF MACHINE BEING
C                       USED (EITHER 32 OR 64).  (INPUT)
C              L3264W = NUMBER OF WORDS IN 64 BITS (EITHER 1 OR 2).
C                       CALCULATED BY PARAMETER, BASED ON L3464B.
C                       (INPUT)
C                 IER = STATUS RETURN.
C                         0 = GOOD RETURN.
C                        47 = GRIDPOINT IDS COULD NOT BE CONVERTED.
C                       103 = WHEN THE VARIABLE ID IS NOT ACCOMMODATED.
C                       SEE CONST AND RETVEC FOR OTHER VALUES.  WHEN 
C                       IER NE 0, DATA ARE RETURNED AS MISSING.  
C                       (INTERNAL-OUTPUT)
C
C    OTHER VARIABLES
C	    LDPARS(J) = AS FOR IDPARS( ) BUT PERTAINING TO LD( ) 
C			(J=1,15).  (INTERNAL)     
C               LD(J) = WORK ARRAY FOR VARIABLE IDS FOR WHICH DATA IS
C                       RETRIEVED FROM INTERNAL OR EXTERNAL STORAGE
C                       (J=1,4).  (INTERNAL)
C               MD(J) = HOLDS VARIABLE IDS ASSIGNED IN A DATA STATEMENT
C                       (J=1,4).  (INTERNAL)
C            XDATA(K) = WORK ARRAY (I=1,NSTA).  (INTERNAL/AUTOMATIC)
C		   NX = NUMBER OF GRID POINTS IN THE X-DIRECTION 
C			...NEEDED FOR SMOOTHING.  (PARAMETER)
C		   NY = NUMBER OF GRID POINTS IN THE Y-DIRECTION 
C			...NEEDED FOR SMOOTHING.  (PARAMETER)
C               IX(K) = X-COORDINATES OF STATIONS ...NEEDED FOR SMOOTH-
C			ING (K=1,NSTA).  (INTERNAL/ALLOCATED)
C               IY(K) = Y-COORDINATES OF STATIONS ...NEEDED FOR SMOOTH-
C			ING (K=1,NSTA).  (INTERNAL/ALLOCATED)
C	    GRD1(I,J) = WORK ARRAY USED FOR SMOOTHINGS (I=1,NX,
C			J=1,NY).  (INTERNAL/AUTOMATIC)
C	    GRD2(I,J) = WORK ARRAY USED FOR SMOOTHING (I=1,NX,
C			J=1,NY).  (INTERNAL/AUTOMATIC)
C              IENTRY = SET TO 0 TO GET GRID COORDINATES AND RETRIEVE 
C                       CONSTANT DATA ON FIRST ENTRY; SET TO 0 OTHER-
C                       WISE.  (INTERNAL)
C              MNPROJ = FORECAST PROJECTION BELOW WHICH SMOOTHING ON 
C                       COMMON BOUNDARIES IS NOT PERFORMED.  (INTERNAL)
C         CONDAT(K,M) = WORK ARRAY TO STORE CONSTANT DATA FETCHED FROM
C                       AN EXTERNAL RANDOM ACCESS FILE (K=1,ND1) 
C                       (M=1,NUMCON).  M=1,2, AND 3 HOLDS THE BOUNDARY 
C                       POINTS MASK, LATITUDES, AND LONGITUDES, RESPEC-
C                       TIVELY.  (INTERNAL)
C              NUMCON = NUMBER OF DATA CONSTANT RECORDS READ FROM EX-
C                       TERNAL RANDOM ACCESS FILE.  (PARAMETER)
C              IBNSTA = MAXIMUM NUMBER OF STATIONS THAT LIE ON COMMON
C                       REGION BOUNDARIES.  USED AS THE FIRST DIMENSION
C                       IBNDPT( , ) AND THE DIMENSION OF BNDLAT( ) 
C                       BNDLON( ).  (PARAMETER)
C         IBNDPT(K,L) = ALLOCATED ARRAY THAT STORES X (L=1) and Y (L=2)
C                       COORDINATES OF GRIDPOINTS THAT LIE ON REGION 
C                       COMMON BOUNDARIES (K=1,IBNSTA).  (INTERNAL/
C                       ALLOCATED)
C           BNDLAT(K) = ALLOCATED ARRAY THAT STORES LATITUDES OF GRID-
C                       POINTS THAT LIE ON REGION COMMON BOUNDARIES 
C                       (K=1,IBNSTA).  (INTERNAL/ALLOCATED)
C           BNDLON(K) = ALLOCATED ARRAY THAT STORES LONGITUDES OF GRID-
C                       POINTS THAT LIE ON REGION COMMON BOUNDARIES 
C                       (K=1,IBNSTA).  (INTERNAL/ALLOCATED)
C              IBNDCT = NUMBER OF GRIDPOINTS, WHICH LIE ON REGION 
C                       COMMON BOUNDARIES, WHERE SMOOTHING MAY BE PER-
C                       FORMED.  (INTERNAL) 
C
C        NONSYSTEM SUBROUTINES CALLED
C            RETVEC, SMTH9V, PRSID1, CONST, SMBNDY, SMBNDY2
C
      PARAMETER (NX=301,NY=225,NUMCON=3,IBNSTA=4000)
C
      CHARACTER*8 CCALL(ND1,6)
      CHARACTER*8 CCALLD(ND5)
      CHARACTER*60 RACESS(5)
C
      INTEGER, ALLOCATABLE, DIMENSION(:) :: IX
      INTEGER, ALLOCATABLE, DIMENSION(:) :: JY
      INTEGER, ALLOCATABLE, DIMENSION(:,:) :: IBNDPT
      REAL, ALLOCATABLE, DIMENSION (:) :: BNDLAT
      REAL, ALLOCATABLE, DIMENSION (:) :: BNDLON
C
      DIMENSION IDPARS(15),ID(4),LDPARS(15),LD(4),JD(4)
      DIMENSION IPACK(ND5),IWORK(ND5),DATA(ND5),ICALLD(L3264W,ND5)
      DIMENSION SDATA(ND1),ISDATA(ND1)
      DIMENSION GRD1(NX,NY),GRD2(NX,NY),XDATA(ND1)    ! AUTOMATIC ARRAYS
      DIMENSION IS0(ND7),IS1(ND7),IS2(ND7),IS4(ND7)
      DIMENSION LSTORE(12,ND9),CORE(ND10)
      DIMENSION CONDAT(ND1,NUMCON),MD(4,NUMCON)
C
      DATA IENTRY/0/,MNPROJ/4/
      DATA ((MD(I,J),I=1,4),J=1,NUMCON)
     1       /401200000,0,0,0,             ! TSTM REGION BOUNDARIES MASK
     2        400006000,0,0,0,             ! LATITUDE
     3        400007000,0,0,0/             ! LONGITUDE
C
      SAVE IX,JY,IBNDCT,IBNDPT,BNDLAT,BNDLON,IENTRY,MNPROJ
C
C23456789012345678901234567890123456789012345678901234567890123456789012
C
C        CHECK IF THIS CODE ACCOMMODATES POST-PROCESSING OF LAMP 2-H
C        PROBABILITIES (DEC.)
C
      IF(IDPARS(1).NE.207.OR.(IDPARS(2).NE.505.AND.
     1                        IDPARS(2).NE.510)) THEN
         IER=103 
         WRITE(KFILDO,30) IDPARS(1),IDPARS(2),IER
 30      FORMAT(/,' ****IDPARS(1) AND IDPARS(2)= ',2I4,
     1            ' NOT ACCOMMODATED IN LPTSPP ...SET IER =',I4,
     2            ' AND RETURN MISSING VALUES')
         GO TO 650
      ENDIF
C
      IF(IENTRY.EQ.0) THEN
C
C           GET GRID COORDINATES FROM GRIDPOINT IDS AND SAVE THEM IN 
C           ALLOCATED ARRAYS ...DONE ONLY ON FIRST ENTRY.
C
         ALLOCATE(IX(ND1),STAT=IOS)
         ALLOCATE(JY(ND1),STAT=IOS)
         DO 40 N=1,NSTA
            READ(CCALL(N,1),'(I4.4,4X)',ERR=600) IX(N)
            READ(CCALL(N,1),'(4X,I4.4)',ERR=600) JY(N)
 40      CONTINUE
C
C           FETCH CONSTANT DATA FROM VECTOR CONSTANT FILE ...NEEDED FOR 
C           SMOOTHING ALONG REGIONAL BOUNDARIES [SEE MD( ) SPECIFICATION
C           IN DATA STATEMENT ABOVE FOR VARIABLES FETCHED] ...DONE ONLY 
C           ON FIRST ENTRY.
C
         DO 70 N=1,NUMCON
           LD(1)=MD(1,N)
           LD(2)=MD(2,N)
           LD(3)=MD(3,N)
           LD(4)=MD(4,N)
           CALL PRSID1(KFILDO,LD,LDPARS)
           CALL CONST(KFILDO,KFIL10,IP12,
     1                LD,LDPARS,LD,NDATE,
     2                KFILRA,RACESS,NUMRA,
     3                CCALL,ICALLD,CCALLD,
     4                ISDATA,SDATA,ND1,NSTA,
     5                IPACK,IWORK,DATA,ND5,
     6                LSTORE,ND9,LITEMS,CORE,ND10,LASTL,
     7                NBLOCK,LASTD,NSTORE,NFETCH,
     8                IS0,IS1,IS2,IS4,ND7,
     9                ISTAV,L3264B,L3264W,IER)
           IF(IER.NE.0)THEN
             WRITE(KFILDO,50) (LD(J),J=1,4),NDATE,(ID(J),J=1,4)
 50          FORMAT(/,' **** IN LPTSPP, COULD NOT',
     1                ' FETCH CONSTANT DATA FOR ',4I10.9,
     2                ' FROM RANDOM ACCESS VECTOR FILE ...SUPPLY MISSI',
     3                'NG VALUES FOR DATE =',I10,' AND ID( ) = ',4I10.9)
             GOTO 650
           ENDIF
C
C             COPY CONSTANT DATA INTO WORK ARRAY.
C
           DO 60 K=1,NSTA
              CONDAT(K,N)=SDATA(K)
 60        CONTINUE
C
 70      CONTINUE
C
C           SEPARATE DATA INTO BND___( ) ARRAYS FOR SMBNDY SUBROUTINE.
C           ALSO, SAVE ONLY COMMON BOUNDARY GRIDPOINTS.  THIS STEP IS 
C           PERFORMED ONLY ON THE FIRST ENTRY INTO LPTSPP.
C
C           SINCE DATA STORED IN THE BND___( ) ARRAYS MUST BE SAVED FOR
C           SUBSEQUENT CALLS TO LPTSPP, THESE ARRAYS MUST BE ALLOCATED.
C
         ALLOCATE(IBNDPT(IBNSTA,2),STAT=IOS)
         ALLOCATE(BNDLAT(IBNSTA),STAT=IOS)
         ALLOCATE(BNDLON(IBNSTA),STAT=IOS)
C
         IBNDCT=0
         DO 80 K=1,NSTA
           IF(NINT(CONDAT(K,1)).EQ.1) THEN
             IBNDCT=IBNDCT+1
             READ(CCALL(K,1),'(I4,4X)',ERR=600) IBNDPT(IBNDCT,1)
             READ(CCALL(K,1),'(4X,I4)',ERR=600) IBNDPT(IBNDCT,2)
             BNDLAT(IBNDCT)=CONDAT(K,2)
             BNDLON(IBNDCT)=CONDAT(K,3)
           END IF
 80      CONTINUE
C            
C           SET IENTRY TO 1 SO THAT THE ABOVE PROCESSING STEPS ARE PER-
C           FORMED ONLY ON THE FIRST ENTRY TO LPTSPP.
C
         IENTRY=1
C
C           CHECK IBNDCT TO MAKE SURE IT IS NOT GT IBNSTA.
C
         IF(IBNDCT.GT.IBNSTA) THEN
           WRITE(KFILDO,90) IBNDCT,IBNSTA,NDATE,(ID(K),K=1,4)
 90        FORMAT(/,' **** IN LPTSPP, IBNDCT = ',I6,' EXCEEDS THE',
     1              ' MAXIMUM VALUE OF ',I6,'.  FOR NDATE = ',I10,
     2              ' AND ID( ) = ',4I10.9,' SET VALUES TO MISSING AND',
     3              ' RETURN.')
           GO TO 650
         ENDIF
C
      ENDIF
C
C        INITIALIZATION, WHICH IS NEEDED FOR BOTH OF THE ACCOMMODATED
C        IDS.  
C
      DO 110 J=1,NY
        DO 100 I=1,NX
          GRD1(I,J)=9999.
 100    CONTINUE
 110  CONTINUE
C
C        BYPASS THE SUBSEQUENT SECTION OF THE ROUTINE WHEN 
C        IDPARS(2)=510.
C
      IF(IDPARS(2).EQ.510) GO TO 200
C
C        FETCH RAW LAMP 2-H TSTM PROBABILITY (USING RETVEC) FROM EITHER
C        INTERNAL STORAGE OR EXTERNAL RA FILE.
C
      LD(1)=(ID(1)/1000-5)*1000+IDPARS(3)*100+IDPARS(4)
      LD(2)=ID(2)
      LD(3)=IDPARS(9)*1000000+IDPARS(12)
      LD(4)=ID(4)
C
D     WRITE(KFILDO,120) (ID(J),J=1,4),(LD(J),J=1,4),NDATE
D120  FORMAT(/,'FOR ID =',4I10/,'FETCH LD = ',4I10,' ON NDATE =',I10)
C
      CALL PRSID1(KFILDO,LD,LDPARS)
      CALL RETVEC(KFILDO,KFIL10,IP12,KFILRA,RACESS,NUMRA,
     1            LD,LDPARS,JD,ITAU,
     2            NDATE,MDATE,CCALL,ISDATA,XDATA,ND1,NSTA,
     3            ICALLD,CCALLD,IPACK,IWORK,DATA,ND5,
     4            LSTORE,ND9,LITEMS,CORE,ND10,
     5            NBLOCK,NFETCH,
     6            IS0,IS1,IS2,IS4,ND7,
     7            L3264B,L3264W,IER)
C
      IF(IER.NE.0)THEN
         WRITE(KFILDO,130) (LD(J),J=1,4),NDATE,(ID(J),J=1,4)
 130     FORMAT(' **** IN LPTSPP, COULD NOT FETCH DATA FOR ',4I10.9,
     1          ' FOR DATE = ',I10,' ...RETURN MISSING VALUES',
     2          ' FOR ID( ) = ',4I10.9)
         GO TO 650
      ENDIF
C
C        TRUNCATE PROBABILITY TO THE RANGE 0.0 TO 1.0.  IF PROB = 9997.
C	 SET IT TO 9999. FOR PRIMARY PROB;  = 0.0 FOR SECONDARY PROB.
C
      DO 140 N=1,NSTA
         IF(NINT(XDATA(N)).EQ.9997) THEN
            IF(IDPARS(4).EQ.15) XDATA(N)=9999.
            IF(IDPARS(4).EQ.25) XDATA(N)=0.0  
         ELSEIF(XDATA(N).LE.9998.5) THEN  
            IF(XDATA(N).LT.0.0) XDATA(N)=0.0
            IF(XDATA(N).GT.1.0) XDATA(N)=1.0
         ENDIF
         GRD1(IX(N),JY(N))=XDATA(N)
 140  CONTINUE
C
C        PERFORM CHECK TO MAKE SURE IBNDCT IS IN VALID RANGE FOR THIS
C        ENTRY TO ROUTINE.
C
      IF(IBNDCT.LE.0.OR.IBNDCT.GT.IBNSTA) THEN
         WRITE(KFILDO,160) NDATE,(LD(J),J=1,4),IBNDCT,(ID(K),K=1,4)
 160     FORMAT(' **** IN LPTSPP, PRIOR TO BOUNDARY SMOOTHING FOR ',
     1          'NDATE = ',I10,' AND LD( ) = ',4I10.9,' IBNDCT = ',I6,
     2          ' WHICH IS NOT VALID.  FOR ID( ) = ',4I10.9,' SET ',
     3          'VALUES TO MISSING AND RETURN.')
         GO TO 650
      ENDIF
C
C        CALL SMBNDY SUBROUTINE TO PERFORM SMOOTHING WHERE NEEDED ON 
C        COMMON REGIONAL BOUNDARIES.  THIS IS DONE ONLY FOR FORECAST
C        PROJECTIONS GE MNPROJ.
C
      IF(IDPARS(12).GE.MNPROJ) THEN 
         CALL SMBNDY(KFILDO,GRD1,NX,NY,IBNDCT,IBNDPT,
     1               BNDLAT,BNDLON,IBNSTA,IDPARS(12))
      ENDIF
C
C        SMBNDY2 PERFORMS FOLLOW-UP REGION-BOUNDARY SMOOTHING ONLY FOR
C        POINTS WITH LOW PROBABILITIES ...DONE FOR ALL FORECAST PROJEC-
C        TIONS.
C
      CALL SMBNDY2(KFILDO,GRD1,NX,NY,IBNDCT,IBNDPT,
     1             BNDLAT,BNDLON,IBNSTA,IDPARS(12))
C
C        BYPASS THE SUBSEQUENT SECTIONS OF THE ROUTINE WHEN 
C        IDPARS(2)=505.
C
      IF(IDPARS(2).EQ.505) GO TO 290
C
 200  CALL RETVEC(KFILDO,KFIL10,IP12,KFILRA,RACESS,NUMRA,
     1            ID,IDPARS,JD,ITAU,
     2            NDATE,MDATE,CCALL,ISDATA,SDATA,ND1,NSTA,
     3            ICALLD,CCALLD,IPACK,IWORK,DATA,ND5,
     4            LSTORE,ND9,LITEMS,CORE,ND10,
     5            NBLOCK,NFETCH,
     6            IS0,IS1,IS2,IS4,ND7,
     7            L3264B,L3264W,IER)
C
C        THE ABOVE CALL TO RETVEC IS USED TO FETCH THE VARIABLE IN ID( )
C        (207510105).  IF THE VARIABLE IS NOT AVAILABLE IT WILL BE 
C        COMPUTED IN THE MANNER IN WHICH LPTSPP IS NORMALLY USED.  IN 
C        ESSENCE, THIS CALL TO RETVEC REPRESENTS A NON-STANDARD 
C        APPLICATION OF LPTSPP, BECAUSE IT IS USED WITH A SEPARATE RUN 
C        OF U710/U910 WHERE THE STATION LIST IS USUALLY A SUB-SET OF 
C        THAT USED WHEN THE VARIABLE WAS ORIGINALLY DERIVED. 
C
      IF(IER.EQ.0) GO TO 900
C
C        FETCH PROBABILITIES THAT HAVE ALREADY BEEN PREVIOUSLY SMOOTHED 
C        ALONG REGIONAL BOUNDARIES.
C
      LD(1)=(ID(1)/1000-5)*1000+IDPARS(3)*100+IDPARS(4)
      LD(2)=ID(2)
      LD(3)=IDPARS(9)*1000000+IDPARS(12)
      LD(4)=ID(4)
C
      CALL PRSID1(KFILDO,LD,LDPARS)
      CALL RETVEC(KFILDO,KFIL10,IP12,KFILRA,RACESS,NUMRA,
     1            LD,LDPARS,JD,ITAU,
     2            NDATE,MDATE,CCALL,ISDATA,XDATA,ND1,NSTA,
     3            ICALLD,CCALLD,IPACK,IWORK,DATA,ND5,
     4            LSTORE,ND9,LITEMS,CORE,ND10,
     5            NBLOCK,NFETCH,
     6            IS0,IS1,IS2,IS4,ND7,
     7            L3264B,L3264W,IER)
      IF(IER.NE.0)THEN
         WRITE(KFILDO,205) (LD(J),J=1,4),NDATE,(ID(J),J=1,4)
 205     FORMAT(' **** IN LPTSPP, COULD NOT FETCH DATA FOR ',4I10.9,
     1          ' FOR DATE = ',I10,' ...RETURN MISSING VALUES',
     2          ' FOR ID( ) = ',4I10.9)
         GO TO 650
      ENDIF
C
C         PLACE PROBABILITES IN A 2-DIMENSIONAL ARRAY ...NEEDED FOR 
C         GRID SMOOTHING.
C
      DO 210 N=1,NSTA
         GRD1(IX(N),JY(N))=XDATA(N)
 210  CONTINUE
C
C        APPLY LIGHT SPATIAL SMOOTHING (9 POINTS) TO PROBABILITY GRID.
C	 THE AMOUNT OF SMOOTHING, WHICH IS A FUNCTION OF FORECAST PROJ-
C	 ECTION, IS SPECIFIED IN TERMS OF BOTH THE SMOOTHING WEIGHT AND
C	 THE NUMBER OF SUCCESSIVE TIMES SMTH9V IS CALLED.
C
      IF(IDPARS(12).GE.3.AND.IDPARS(12).LE.7) THEN 
         CALL SMTH9V(GRD1,NX,NY,0.30,GRD2,9998.5)
      ELSEIF(IDPARS(12).GE.8.AND.IDPARS(12).LE.13) THEN
         CALL SMTH9V(GRD1,NX,NY,0.25,GRD2,9998.5)
         CALL SMTH9V(GRD1,NX,NY,0.25,GRD2,9998.5)
      ELSE
 	 CALL SMTH9V(GRD1,NX,NY,0.25,GRD2,9998.5)
 	 CALL SMTH9V(GRD1,NX,NY,0.25,GRD2,9998.5)
 	 CALL SMTH9V(GRD1,NX,NY,0.25,GRD2,9998.5)
      ENDIF
C
C        SMOOTHING FINISHED.  MOVE DATA TO OUTPUT ARRAY AND RETURN.
C
 290  DO 300 N=1,NSTA
         SDATA(N)=GRD1(IX(N),JY(N))
 300  CONTINUE
C
      ISTAV=1
      ISTAB=1
      GO TO 900
C
 600  IER=47
      WRITE(KFILDO,610) IER
 610  FORMAT(/,'**** IN LPTSPP, ERROR IN CONVERSION OF FCST PTS...SET',
     1         ' IER TO ',I3,' AND RETURN MISSING VALUES')
C
 650  DO 660 K=1,ND1
         SDATA(K)=9999.
 660  CONTINUE
C
 900  RETURN
      END
