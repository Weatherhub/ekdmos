      SUBROUTINE GSTORE(KFILDO,KFIL,ID,NSLAB,LSTORE,ND9,LITEMS,
     1                  DATA,NWORDS,NPACK,NRR,NDATE,
     2                  CORE,ND10,LASTLD,NBLOCK,LASTDD,NSTORD,L3264B,
     3                  IER)
C
C        OCTOBER  1994   GLAHN   TDL   MOS-2000
C        JUNE     1997   GLAHN   D COMPILE OPTION DIAGNOSTIC CHANGED
C        FEBRUARY 1998   GLAHN   CHANGED PRINT FOR LSTORE( , )
C        FEBRUARY 2000   GLAHN   CHANGED TO KEEP LASTL, LASTD, NSTORE
C                                IN COMMON
C        MARCH    2000   DALLAVALLE   MODIFIED FORMAT STATEMENTS TO
C                                     CONFORM TO FORTRAN 90 STANDARDS 
C                                     ON THE IBM SP
C 
C        PURPOSE 
C            TO STORE DATA INTO EITHER A LINEAR ARRAY CORE( ) IN CORE
C            OR ON DISK WHEN THE ARRAY IS FULL.  THE ARRAY 
C            LSTORE( ,ND9) IS AVAILABLE FOR THE KEYS, THE FIRST
C            4 WORDS BEING THOSE IN ID( ).  WHEN LSTORE(1, )=0, THE DATA
C            FOR THIS KEY HAVE BEEN DEEMED NO LONGER NEEDED, AND THIS
C            KEY AND THE ASSOCIATED LOCATION AND SPACE ARE AVAILABLE
C            FOR USE.  LOCATIONS ARE ALWAYS FILLED IN ORDER.  THAT IS,
C            IF SLOT 10 IS FILLED SO WILL BE 1-9, AND IF SLOT 11 IS OPEN
C            SO WILL BE ALL AFTER 11.  IN THIS CASE, LITEMS = 10.
C            DUPLICATE ID'S ARE NOT CHECKED FOR; IF TWO FIELDS OF DATA
C            WITH THE SAME ID'S ARE GIVEN TO GSTORE, THEY WILL BOTH BE
C            STORED WITH NO WAY TO TELL THEM APART.  USED FOR U201,
C            U600, U700 AND OTHER PROGRAMS.
C
C        DATA SET USE 
C           KFILDO - UNIT NUMBER FOR OUTPUT (PRINT) FILE.  (OUTPUT)
C           KFIL   - UNIT NUMBER FOR WRITING THE DATA IN DATA( ) 
C                    TO DISK WHEN CORE( ) IS FULL.  (OUTPUT)  
C
C        VARIABLES 
C              KFILDO = UNIT NUMBER FOR OUTPUT (PRINT) FILE.  (INPUT)
C                KFIL = UNIT NUMBER FOR WRITING THE DATA IN DATA( )
C                       TO DISK WHEN CORE( ) IS FULL.  THE FILE
C                       IS OPENED AS SCRATCH ON THE FIRST ENTRY.  (INPUT)
C               ID(J) = THE 4-WORD ID OF THE VARAIBLE TO STORE
C                       (J=1,4).  THIS IS THE ID ON THE INPUT TAPE, SO
C                       IN THE CASE OF GRIDS, IT IS THE NMC ID PUT
C                       INTO TDL FORMAT (I.E., THE "BASIC" PREDICTOR 
C                       THAT SHOULD MATCH JD( ) IN PRED.)  (INPUT)
C               NSLAB = FOR U201, THE NUMBER OF THE GRID COMBINATION
C                       TO STORE IN LSTORE(10, ).  OTHER ROUTINES MAY
C                       USE OTHER VALUES.  RDSTRX USES THIS TO RECORD
C                       WHICH FILE THE VARIABLE CAME FROM.  USE 1
C                       FOR ROUTINES FOR WHICH THIS IS NOT MEANINGFUL.
C                       (INPUT)
C         LSTORE(L,J) = THE ARRAY TO HOLD INFORMATION ABOUT THE DATA 
C                       STORED (L=1,12) (J=1,LITEMS).  THIS IS
C                       INITIALIZED TO ZERO AS NEEDED ON FIRST ENTRY 
C                       ONLY.  (INPUT-OUTPUT)
C                       L=1,4--THE 4 ID'S FOR THE DATA.
C                       L=5  --LOCATION OF STORED DATA.  WHEN IN CORE,
C                              THIS IS THE LOCATION IN CORE( ) WHERE
C                              THE DATA START.  WHEN ON DISK, 
C                              THIS IS MINUS THE RECORD NUMBER WHERE 
C                              THE DATA START.
C                       L=6  --THE NUMBER OF 4-BYTE WORDS STORED.
C                       L=7  --2 FOR DATA PACKED IN TDL GRIB, 1 FOR NOT.
C                       L=8  --THE DATE/TIME OF THE DATA IN FORMAT
C                              YYYYMMDDHH.
C                       L=9  --NUMBER OF TIMES DATA HAVE BEEN RETRIEVED.
C                              COUNTED IN GFETCH.
C                       L=10 --FOR U201, NSLAB, THE NUMBER OF THE SLAB 
C                              IN DIR( , ,L) AND IN NGRIDC( ,L) DEFINING
C                              THE CHARACTERISTICS OF THIS GRID.
C                              FOR OTHER ROUTINES NOT REQUIRING GRID
C                              DEFINITIONS, THIS NUMBER MAY MEAN SOMETHING
C                              ELSE.  FOR INSTANCE, IN U600 IT IS THE
C                              "MODEL NUMBER" OR SOURCE OF THE DATA STORED.
C                       L=11 --THE NUMBER OF THE PREDICTOR IN THE SORTED
C                              LIST IN ID( ,N) (N=1,NPRED) FOR WHICH THIS
C                              VARIABLE IS NEEDED, WHEN IT IS NEEDED ONLY
C                              ONCE FROM LSTORE( , ).  WHEN IT IS NEEDED
C                              MORE THAN ONCE, THE VALUE IS SET = 7777.
C                       L=12 --USED INITIALLY IN ESTABLISHING MSTORE( , ).
C                              LATER USED AS A WAY OF DETERMINING WHETHER
C                              TO KEEP THIS VARIABLE.
C                 ND9 = THE SECOND DIMENSION OF LSTORE( , ).  (INPUT)
C              LITEMS = THE NUMBER OF ITEMS (COLUMNS) IN LSTORE( , ) THAT 
C                       ARE FILLED.  THIS IS INITIALIZED TO 0 ON THE 
C                       FIRST ENTRY TO GSTORE.  LITEMS IS MODIFIED
C                       IF COMPACTION IS DONE WITH SUBROUTINE GCPAC.
C                       (INPUT-OUTPUT)  
C             DATA(J) = THE DATA TO STORE (J=1,NWORDS).  THIS MAY BE JUST
C                       DATA, OR MAY BE A FULL MOS-2000 GRIB MESSAGE 
C                       (SEE NPACK).  (INPUT)
C              NWORDS = NUMBER OF WORDS IN DATA( ) TO STORE.  TREATED AS
C                       DIMENSION OF DATA( ).  THIS IS STORED IN
C                       LSTORE(6, )  (INPUT)
C               NPACK = 2 FOR TDL GRIB PACKED DATA; 1 FOR NOT PACKED.
C                       THIS IS STORED IN LSTORE(7, ).  (INPUT)
C                 NRR = THE VALUE TO STORE IN LSTORE(12, ).  FOR U201,
C                       THIS IS THE LAST DATE/TIME FOR WHICH THE VARIABLE
C                       STORED WILL BE NEEDED.  FOR U600, IT IS THE TAU
C                       WHEN THE VARIABLE IS A PREDICTAND.  (INPUT)
C               NDATE = DATE/TIME OF THE DATA TO BE STORED IN FORMAT
C                       YYYYMMDDHH.  THIS IS STORED IN LSTORE(8, ).  
C                       (INPUT)
C             CORE(J) = THE LINEAR ARRAY WHERE THE DATA ARE TO BE STORED,
C                       WHEN SPACE IS AVAILABLE (J=1,ND10).  NORMALLY, THIS 
C                       IS USED ONLY WITHIN GSTORE, GFETCH, AND GCPAC.
C                       (OUTPUT)
C                ND10 = DIMENSION OF CORE( ).  (INPUT)
C              LASTLD = THE LAST LOCATION IN CORE( ) USED.  THIS IS
C                       RETURNED AS THE VALUE IN LASTL SAVED IN COMMON.
C                       (OUTPUT)
C              NBLOCK = THE BLOCK SIZE IN WORDS OF THE RANDOM DISK FILE.
C                       (INPUT)
C              LASTDD = TOTAL NUMBER OF PHYSICAL RECORDS ON DISK.  THIS IS
C                       RETURNED AS THE VALUE IN LASTD SAVED IN COMMON.
C                       (OUTPUT)
C              NSTORD = A COUNT OF THE NUMBER OF TIMES GSTORE IS ENTERED.
C                       IT IS A RUNNING COUNT FROM THE BEGINNING OF THE PROGRAM.
C                       THIS COUNT IS MAINTAINED AS NSTORE IN COMMON.
C                       (OUTPUT)
C              L3264B = INTEGER WORD LENGTH IN BITS OF MACHINE BEING USED
C                       (EITHER 32 OR 64).  (INPUT)
C                 IER = STATUS RETURN.  (OUTPUT)
C                        0 = GOOD RETURN.
C                       50 = DATA CANNOT BE STORED.  NO SPACE CAN BE MADE
C                            AVAILABLE IN LSTORE( , ).
C              IENTER = 0 INITIALLY AND SET TO 1 ON FIRST ENTRY ONLY. 
C                       IT INDICATES WHETHER (=0) OR NOT (=1) 
C                       INITIALIZATION IS TO BE DONE.
C              NSTORE = INTENAL COUNT, SAVED IN COMMON BLOCK SVLAST OF
C                       THE NUMBER OF TIMES GSTORE IS ENTERED.  IT IS
C                       RETURNED TO THE USER THROUGH THE CALL AS NSTORD.
C                       (COMMON)
C               LASTL = THE LAST LOCATION IN CORE( ) USED.  IT IS KEPT IN
C                       COMMON AND IS CHANGED ONLY IN GSTORE AND GCPAC.
C                       (COMMON)
C               LASTD = TOTAL NUMBER OF PHYSICAL RECORDS ON DISK.  IT IS
C                       KEPT IN COMMON AND IS CHANGED ONLY IN GSTORE AND
C                       GCPAC.  (COMMON)
C              NSTART = STARTING LOCATION FOR SEARCH FOR SLOT.  THIS IS
C                       MAINTAINED FROM ENTRY TO ENTRY, SO THAT THE NEXT
C                       SEARCH STARTS JUST AFTER THE LAST STORE, UNLESS
C                       THE LAST STORE WAS AT THE LAST SLOT IN LSTORE( , ).
C                       (INTERNAL)
C                NEND = ENDING LOCATION FOR SEARCH.  THIS IS THE END OF
C                       LSTORE( , ) UNLESS A RETRY WAS MADE ON THIS ENTRY.
C                       (INTERNAL)
C                         
C        NON SYSTEM SUBROUTINES CALLED 
C           WRDISK
C
      DIMENSION ID(4)
      DIMENSION LSTORE(12,ND9)
      DIMENSION CORE(ND10)
      DIMENSION DATA(NWORDS)
C
      DATA IENTER/0/
      DATA NSTART/1/
C
      COMMON/SVLAST/LASTL,LASTD,NSTORE
C
C        INITIALIZE AND INCREMENT AS NEEDED.
C
      IER=0
      IF(IENTER.NE.0)GO TO 105
C
      IENTER=1
      LASTL=0
      LASTD=0
      LITEMS=0
C
      DO 104 J=1,ND9
      LSTORE(1,J)=0
      LSTORE(5,J)=0
 104  CONTINUE
C
      OPEN(UNIT=KFIL,FORM='UNFORMATTED',STATUS='SCRATCH',
     1    ACCESS='DIRECT',RECL=NBLOCK*L3264B/8,IOSTAT=IOS,ERR=1045)
C        BLOCK SIZE IN BYTES TAKES ACCOUNT OF MACHINE WORD LENGTH.
 1045 IF(IOS.EQ.0)GO TO 105
      WRITE(KFILDO,1046)IOS
 1046 FORMAT(/,' ****TROUBLE OPENING INTERMEDIATE FILE, IOSTAT =',I5,
     1        '  PROCEEDING.')
C        IT MAY BE THAT THE INTERMEDIATE FILE IS NEVER NEEDED.  AN
C        ERROR ON OPENING IS IGNORED, EXCEPT FOR PRINTING A DIAGNOSTIC.
 105  NSTORE=NSTORE+1
      NEND=MIN(LITEMS+1,ND9)
      IF(NSTART.GT.NEND)NSTART=1
C
C        FIND A LOCATION IN LSTORE( , ) AVAILABLE FOR STORAGE, IF ANY.
C
 110  CONTINUE
D     WRITE(KFILDO,111)(ID(J),J=1,4),NDATE,NSTART,NEND,NSTORE,
D    1                  LASTL,LASTD,LITEMS,NWORDS
D111  FORMAT(' GSTORE, STORING VARIABLE',1X,I9.9,2I10.9,I11.3,
D    1       ' FOR DATE',I11,/, 
D    2       '  NSTART   NEND NSTORE  LASTL  LASTD  ITEMS NWORDS',/,
D    2       ' ',7I7)
C
      DO 120 J=NSTART,NEND 
      IF(LSTORE(1,J).NE.0)GO TO 120
C        THIS SLOT IS AVAILABLE.  THE FIRST ID DETERMIMES THIS,
C        WHICH MEANS THE FIRST ID CANNOT BE ZERO.
C  
C        THIS IS AN OPEN SLOT.  LASTL AND LASTD ARE
C        MAINTAINED, EVEN UPON COMPRESSION.
C
      NEXTC=LASTL+1
      NEXTD=LASTD+1
C
      IF(LASTL+NWORDS.GT.ND10)GO TO 117
C
C        STORE IN CORE( ).
C
      LSTORE(5,J)=NEXTC
      LASTL=MAX((LSTORE(5,J)+NWORDS-1),LASTL)
C
      DO 116 M=1,NWORDS
      CORE(LSTORE(5,J)+M-1)=DATA(M)
 116  CONTINUE
C
      GO TO 118
C
C        STORE ON DISK.
C
 117  CALL WRDISK(KFILDO,KFIL,NEXTD,DATA,NWORDS,
     1            NBLOCK,NOREC,IER)
      IF(IER.NE.0)GO TO 130
      LSTORE(5,J)=-NEXTD
C        REMEMBER THAT A MINUS VALUE REPRESENTS A DISK RECORD NUMBER. 
      LASTD=MAX(NEXTD+NOREC-1,LASTD)
C        NOREC IS RETURNED BY WRDISK.
C
C        THE STATEMENTS FROM HERE TO 130 ARE FOR BOTH CORE AND DISK 
C        STORAGE.
C
 118  DO 119 K=1,4
      LSTORE(K,J)=ID(K)
 119  CONTINUE
C
      LSTORE(6,J)=NWORDS
      LSTORE(7,J)=NPACK
      LSTORE(8,J)=NDATE
      LSTORE(9,J)=0
      LSTORE(10,J)=NSLAB
      LSTORE(11,J)=0
      LSTORE(12,J)=NRR
      LITEMS=MAX(LITEMS,J)
      NSTART=J+1
      IF(J+1.GT.ND9)NSTART=1
      GO TO 130
C
 120  CONTINUE
C
C        A FALL THROUGH HERE MEANS DATA HAVE NOT BEEN STORED.
C        RETRY WHEN NSTART NE 1.  (NOTE:  THE WAY U201 USES THIS
C        ROUTINE, LOCATIONS ARE FILLED FROM THE TOP AND A RETRY
C        WILL NOT BE SUCCESSFUL.  THIS HAS BEEN LEFT IN FOR
C        POSSIBLE OTHER USES, AND DOES NO HARM.
      IF(NSTART.EQ.1)GO TO 125
      NEND=NSTART-1
      NSTART=1
      GO TO 110
C
 125  IER=50
C        IER = 50 IS A FATAL ERROR.  DATA WERE NOT STORED.
      WRITE(KFILDO,128)IER,ND9,((LSTORE(J,K),J=1,12),K=1,LITEMS)
 128  FORMAT(/,' ****NO SLOTS AVAILABLE IN LSTORE( , ).  IER =',I4,
     1         ' IS A FATAL USER ERROR.',/,'     ND9 =',I8,
     2         ' CAN BE INCREASED IN THE MAIN PROGRAM.',
     3         '  STORED VARIABLES ARE:',/,
     4      (' ',I10.9,2I10,I11,3I8,I12,3I8,I12))
 130  LASTLD=LASTL
      LASTDD=LASTD
      NSTORD=NSTORE
C        LASTLD, LASTDD, AND NSTORD RETURN LASTL, LASTD, AND
C        NSTORE, RESPECIVELY.
      RETURN
      END            
