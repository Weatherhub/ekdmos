      SUBROUTINE MRFTEST(KFILDO,KFIL10,IP12,KFILRA,RACESS,NUMRA,
     1                   ID,IDPARS,JD,ITAU,
     2                   NDATE,MDATE,CCALL,ISDATA,XDATA,ND1,NSTA,
     3                   ICALLD,CCALLD,IPACK,IWORK,DATA,ND5,
     4                   LSTORE,ND9,LITEMS,CORE,ND10,
     5                   NBLOCK,NFETCH,
     6                   IS0,IS1,IS2,IS4,ND7,
     7                   L3264B,L3264W,IER)
C 
C        JUNE      1999   RUDACK   TDL   MOS-2000
C        AUGUST    1999   RUDACK   CHANGED CALL AND CALL TO RETVEC
c                                  FROM GFETCH
C        SEPTEMBER 1999   GLAHN    ADDED ZDATA( )
C        APRIL     2000   RUDACK   CHANGED IDS FOR OPERATIONAL USE
C        APRIL     2000   GLAHN    IMPROVED COMMENTS; CHECKED SPELLING;
C                                  ADDED DIMENSION FOR ISDATA( );
C                                  INSURED /, IN **** COMMENTS 
C        APRIL     2000   RUDACK   ADDED DATA LDPARS/15*0/ 
C        MAY       2000   RUDACK   CHANGED ITABLE FROM FOUR COLUMNS TO 
C                                  THREE COLUMNS;  EDITED COMMENTS
C        MARCH     2001   ALLEN    ADDED IDS TO ITABLE TO ACCOMMODATE
C                                  RFC MAX/MIN IDS
C        MARCH     2001   ALLEN    CORRECTED IT SO THE ROUTINE WOULD
C                                  SKIP THE AVERAGING ALGORITHM WHEN
C                                  THE BASE FORECAST WAS MISSING.
C        NOVEMBER  2003   MALONEY  FOR CCCFFF=202140 & 202240, IF 
C                                  IDPARS(12) > 282, USE 202100
C                                  AND 202200 INSTEAD OF 202120 AND
C                                  202220.
C        OCTOBER   2008   WIEDENFELD  MODIFIED CODE SO THAT RETVEC IS CALL
C                                  WITH NEW LD IF IT CANNOT BE FOUND ON 
C                                  THE FIRST CALL. THIS HAPPENS WHEN
C                                  THERE ARE NO TEMPERATURE FORECASTS
C                                  BUT THERE ARE MAX/MIN TEMPERATURES
C                                  TO COMPARE AGAINST. 
C
C        PURPOSE
C           SUBROUTINE MRFTEST ENSURES THAT THE CURRENT MAXIMUM
C           (MINIMUM) TEMPERATURE IS CONSISTENT WITH THE PREVIOUS 
C           MINIMUM (MAXIMUM) AND FOLLOWING MINIMUM (MAXIMUM)
C           TEMPERATURES.
C
C            IDPARS(1) & IDPARS(2) OF TEMPERATURE  
C            ARE MAPPED INTO     FROM
C                       202140   202120, 202220  (OR 202100, 202200
C                       202145   202105, 202205   IF VARIABLE IS NOT FOUND)
C                       202240   202220, 202120  (OR 202200, 202100
C                       202245   202205, 202105   IF VARIABLE IS NOT FOUND)
C
C        DATA SET USE 
C            KFILDO - DEFAULT UNIT NUMBER FOR OUTPUT (PRINT) FILE.
C                     (OUTPUT) 
C            KFIL10 - UNIT NUMBER OF TDL MOS-2000 FILE SYSTEM ACCESS.
C                     (INPUT-OUTPUT) 
C            IP12   - INDICATES WHETHER (>1) OR NOT (=0) THE LIST OF
C                     STATIONS ON THE INPUT FILES WILL BE PRINTED TO 
C                     THE FILE WHOSE UNIT NUMBER IS IP12.  (OUTPUT)
C         KFILRA(J) - THE UNIT NUMBERS FOR WHICH RANDOM ACCESS FILES
C                     ARE AVAILABLE (J=1,NUMRA).  (INPUT)
C 
C        VARIABLES 
C              KFILDO = DEFAULT UNIT NUMBER FOR OUTPUT (PRINT) FILE.
C                       (INPUT) 
C              KFIL10 = UNIT NUMBER OF TDL MOS-2000 FILE SYSTEM ACCESS.
C                       (INPUT)
C                IP12 = INDICATES WHETHER (>0) OR NOT (=0) THE LIST OF
C                       STATIONS ON THE EXTERNAL RANDOM ACCESS FILES
C                       WILL BE LISTED TO UNIT IP12.  (INPUT)
C           KFILRA(J) = THE UNIT NUMBERS FOR WHICH RANDOM ACCESS FILES
C                       ARE AVAILABLE (J=1,NUMRA).  (INPUT)
C           RACESS(J) = THE FILE NAMES ASSOCIATED WITH KFILRA(J) (J=1,NUMRA).
C                       (CHARACTER*60)  (INPUT)
C               NUMRA = THE NUMBER OF VALUES IN KFILRA( ) AND RACESS( ).
C                       (INPUT)
C               ID(J) = THE PREDICTOR ID (J=1,4).  (INPUT)
C           IDPARS(J) = THE PARSED, INDIVIDUAL COMPONENTS OF THE 
C                       PREDICTOR ID CORRESPONDING TO ID( ) (J=1,15).
C                       (INPUT)
C                       J=1--CCC (CLASS OF VARIABLE),
C                       J=2--FFF (SUBCLASS OF VARIABLE),
C                       J=3--B (BINARY INDICATOR),
C                       J=4--DD (DATA SOURCE, MODEL NUMBER),
C                       J=5--V (VERTICAL APPLICATION),
C                       J=6--LBLBLBLB (BOTTOM OF LAYER, 0 IF ONLY 
C                            1 LAYER),
C                       J=7--LTLTLTLT (TOP OF LAYER),
C                       J=8--T (TRANSFORMATION),
C                       J=9--RR (RUN TIME OFFSET, ALWAYS + AND BACK IN 
C                            TIME),
C                       J=10--OT (TIME APPLICATION),
C                       J=11--OH (TIME PERIOD IN HOURS),
C                       J=12--TAU (PROJECTION IN HOURS),
C                       J=13--I (INTERPOLATION TYPE),
C                       J=14--S (SMOOTHING INDICATOR), AND
C                       J=15--G (GRID INDICATOR).
C               JD(J) = THE BASIC INTEGER PREDICTOR ID (J=1,4).
C                       THIS IS THE SAME AS ID(J), EXCEPT THAT THE
C                       PORTIONS PERTAINING TO PROCESSING ARE OMITTED:
C                       B = IDPARS(3),
C                       T = IDPARS(8),
C                       I = IDPARS(13),
C                       S = IDPARS(14),
C                       G = IDPARS(15), AND
C                       THRESH.
C                       JD( ) IS USED TO IDENTIFY THE BASIC MODEL FIELDS
C                       AS READ FROM THE ARCHIVE.  (INPUT)
C                ITAU = THE NUMBER OF HOURS AHEAD TO FIND A VARIABLE.
C                       THIS HAS ALREADY BEEN CONSIDERED IN MDATE, BUT
C                       IS NEEDED FOR CALL TO RETVEC.  (INPUT)
C               NDATE = THE DATE/TIME FOR WHICH PREDICTOR IS NEEDED.
C                       (INPUT)
C               MDATE = NDATE UPDATED WITH ITAU( ).  (INPUT)
C          CCALL(K,J) = 8-CHARACTER STATION CALL LETTERS (OR GRIDPOINT
C                       LOCATIONS FOR GRID DEVELOPMENT) TO PROVIDE
C                       OUTPUT FOR (J=1) AND 5 POSSIBLE OTHER STATION
C                       CALL LETTERS (J=2,6) THAT CAN BE USED INSTEAD
C                       IF THE PRIMARY (J=1) STATION CANNOT BE FOUND 
C                       IN AN INPUT DIRECTORY (K=1,NSTA).  ALL STATION
C                       DATA ARE KEYED TO THIS LIST, EXCEPT POSSIBLY 
C                       CCALLD( ).  EQUIVALENCED TO ICALL( , , ). 
C                       (CHARACTER*8)  (INPUT)
C           ISDATA(K) = WORK ARRAY (K=1,ND1).  (INTERNAL)
C            XDATA(K) = MAX OR MIN TEMPERATURE (K=1,NSTA).  (OUTPUT)
C                 ND1 = MAXIMUM NUMBER OF STATIONS THAT CAN BE DEALT 
C                       WITH.  DIMENSION OF XDATA( ), ISDATA( ) AND
C                       YDATA( ).  (INPUT)
C                NSTA = NUMBER OF STATIONS OR LOCATIONS BEING DEALT
C                       WITH.  (INPUT)
C         ICALLD(L,K) = 8 STATION CALL LETTERS AS CHARACTERS IN AN 
C                       INTEGER VARIABLE (L=1,L3264W) (K=1,ND5).
C                       THIS ARRAY IS USED TO READ THE STATION 
C                       DIRECTORY FROM A MOS-2000 EXTERNAL FILE.
C                       EQUIVALENCED TO CCALLD( ).
C                       (INTERNAL)
C           CCALLD(K) = 8 STATION CALL LETTERS (K=1,ND5).  EQUIVALENCED
C                       TO ICALLD( , ).   (CHARACTER*8)   (INTERNAL)
C            IPACK(J) = WORK ARRAY (J=1,ND5).  (INTERNAL)
C            IWORK(J) = WORK ARRAY (J=1,ND5).  (INTERNAL)
C             DATA(K) = WORK ARRAY (J=1,ND5).  (INTERNAL)
C                 ND5 = DIMENSION OF IPACK( ), IWORK( ), AND DATA( ).
C                       (INPUT)
C         LSTORE(L,J) = THE ARRAY HOLDING INFORMATION ABOUT THE DATA 
C                       STORED (L=1,12) (J=1,LITEMS).  (INPUT-OUTPUT)
C                       L=1,4--THE 4 ID'S FOR THE DATA.
C                       L=5  --LOCATION OF STORED DATA.  WHEN IN CORE,
C                              THIS IS THE LOCATION IN CORE( ) WHERE
C                              THE DATA START.  WHEN ON DISK, 
C                              THIS IS MINUS THE RECORD NUMBER WHERE 
C                              THE DATA START.
C                       L=6  --THE NUMBER OF 4-BYTE WORDS STORED.
C                       L=7  --2 FOR DATA PACKED IN TDL GRIB, 1 FOR NOT.
C                       L=8  --THE DATE/TIME OF THE DATA IN FORMAT
C                              YYYYMMDDHH.
C                       L=9  --NUMBER OF TIMES DATA HAVE BEEN RETRIEVED.
C                       L=10 --NUMBER OF THE SLAB IN DIR( , ,L) AND
C                              IN NGRIDC( ,L) DEFINING THE 
C                              CHARACTERISTICS OF THIS GRID.
C                       L=11 --THE NUMBER OF THE PREDICTOR IN THE SORTED
C                              LIST IN ID( ,N) (N=1,NPRED) FOR WHICH 
C                              THIS VARIABLE IS NEEDED, WHEN IT IS 
C                              NEEDED ONLY ONCE FROM LSTORE( , ). 
C                              WHEN IT IS NEEDED MORE THAN ONCE, THE 
C                              VALUE IS SET = 7777.
C                       L=12 --USED INITIALLY IN ESTABLISHING 
C                              MSTORE( , ).  LATER USED AS A WAY OF
C                              DETERMINING WHETHER TO KEEP THIS 
C                              VARIABLE.
C                 ND9 = THE SECOND DIMENSION OF LSTORE( , ).  (INPUT)
C              LITEMS = THE NUMBER OF ITEMS (COLUMNS) IN LSTORE( , )
C                       THAT HAVE BEEN USED IN THIS RUN.  (INPUT)
C             CORE(J) = THE ARRAY TO STORE OR RETRIEVE THE DATA 
C                       IDENTIFIED IN LSTORE( , ) (J=1,ND10).  WHEN 
C                       CORE( ) IS FULL DATA ARE STORED ON DISK.
C                       (INPUT)
C                ND10 = DIMENSION OF CORE( ).  (INPUT)
C              NBLOCK = THE BLOCK SIZE IN WORDS OF THE MOS-2000 RANDOM
C                       DISK FILE.  (INPUT)
C              NFETCH = THE NUMBER OF TIMES RETVEC HAS BEEN ENTERED.
C                       RETVEC KEEPS TRACK OF THIS AND RETURNS THE
C                       VALUE.  (OUTPUT)
C              IS0(J) = MOS-2000 GRIB SECTION 0 ID'S (J=1,3). 
C                       (INTERNAL)
C              IS1(J) = MOS-2000 GRIB SECTION 1 ID'S (J=1,22+). 
C                       (INTERNAL)
C              IS2(J) = MOS-2000 GRIB SECTION 2 ID'S (J=1,12). 
C                       (INTERNAL)
C              IS4(J) = MOS-2000 GRIB SECTION 4 ID'S (J=1,4). 
C                       (INTERNAL)
C                 ND7 = DIMENSION OF IS0( ), IS1( ), IS2( ), AND IS4( ).
C                       NOT ALL LOCATIONS ARE USED.  (INPUT)
C              L3264B = INTEGER WORD LENGTH IN BITS OF MACHINE BEING
C                       USED (EITHER 32 OR 64).  (INPUT)
C              L3264W = NUMBER OF WORDS IN 64 BITS (EITHER 1 OR 2).  
C                       CALCULATED BY PARAMETER, BASED ON L3464B.
C                       (INPUT)
C                 IER = STATUS RETURN.
C                         0 = GOOD RETURN.
C                       102 = ID NOT ACCOMMODATED.
C                       SEE RETVEC FOR OTHER VALUES.  (OUTPUT)
C               LD(J) = HOLDS THE 4 ID WORDS OF THE DATA RETRIEVED INTO
C                       XDATA( ) AND THEN ZDATA( ) AND YDATA( ) (J=1,4).
C                       (INTERNAL)
C           LDPARS(J) = PARSED VALUES CORRESPONDING TO LD( ) (J=1,15)
C                       (INTERNAL)
C            YDATA(K) = WORK ARRAY FOR FUTURE FORECAST TEMPERATURE
C                       (K=1,ND1).  (AUTOMATIC)
C            ZDATA(K) = WORK ARRAY FOR PREVIOUS FORECAST TEMPERATURE
C                       (K=1,ND1).  (AUTOMATIC)
C         ITABLE(I,J) = VALUES OF CCCFFF ACCOMMODATED (I=1) AND
C                       THE ASSOCIATED VARIABLES NEEDED (I=2-4)
C                       (J=1,NDIM).  (INTERNAL)
C                NDIM = SECOND DIMENSION OF ITABLE( , ).  SET BY
C                       PARAMETER.  (INTERNAL)
C 
C        NONSYSTEM SUBROUTINES CALLED 
C            PRSID1,RETVEC
C
      PARAMETER(NDIM=4)
C      
      CHARACTER*8 CCALL(ND1,6)
      CHARACTER*8 CCALLD(ND5)
      CHARACTER*60 RACESS(5)
C
      DIMENSION ISDATA(ND1),XDATA(ND1),YDATA(ND1),ZDATA(ND1)
C        YDATA( ) AND ZDATA( ) ARE AUTOMATIC ARRAYS.
      DIMENSION ID(4),IDPARS(15),JD(4),LD(4)
      DIMENSION IPACK(ND5),IWORK(ND5),DATA(ND5),KFILRA(5)
      DIMENSION IS0(ND7),IS1(ND7),IS2(ND7),IS4(ND7)
      DIMENSION LSTORE(12,ND9),ICALLD(L3264W,ND5)
      DIMENSION CORE(ND10),LDPARS(15)
      DIMENSION ITABLE(3,NDIM)
C   
      DATA LDPARS/15*0/  
      DATA ITABLE/202140,202120,202220,
     1            202145,202105,202205,
     2            202240,202220,202120,
     3            202245,202205,202105/  
      IER=0
C     
C        VERIFY THE PROCESSING INDICATOR, IDPARS(1).
C
      DO 100 JJ=1,NDIM
      IF(ITABLE(1,JJ).EQ.(IDPARS(1)*1000+IDPARS(2)))GOTO 120
 100  CONTINUE
C
      WRITE(KFILDO,107)(JD(L),L=1,4)
 107  FORMAT(/,' ****MRFTEST ENTERED FOR VARIABLE',
     1         2X,I9.9,1X,I9.9,1X,I9.9,1X,I10.3,
     2       ' NOT ACCOMMODATED.')
      IER=102
      GO TO 300
C
C        GET THE FOUR WORD ID FOR THE CURRENT FORECAST TEMPERATURE.
C
 120  LD(1)=ITABLE(2,JJ)*1000+IDPARS(4)
      LD(2)=JD(2)
      LD(3)=JD(3)
      LD(4)=IDPARS(13)*100+IDPARS(14)*10+IDPARS(15) 
C                  
C        MAKE CHANGES TO LD(1) IF BEYOND 282 HRS
C
C
C        FETCHING THE CURRENT FORECAST TEMPERATURE.
C
      CALL PRSID1(KFILDO,LD,LDPARS)
      CALL RETVEC(KFILDO,KFIL10,IP12,KFILRA,RACESS,NUMRA,
     1            LD,LDPARS,JD,ITAU,
     2            NDATE,MDATE,CCALL,ISDATA,XDATA,ND1,NSTA,
     3            ICALLD,CCALLD,IPACK,IWORK,DATA,ND5,
     4            LSTORE,ND9,LITEMS,CORE,ND10,
     5            NBLOCK,NFETCH,
     6            IS0,IS1,IS2,IS4,ND7,
     7            L3264B,L3264W,IER)
C
C        IT IS POSSIBLE THAT THE TEMPERATURS DO NOT EXIST AFTER
C        CERTAIN PROJECTION HOURS. TRY FETCH WITH DIFFERENT ID 
C        IN THAT CASE.
C
      IF(IER.NE.0.AND.(JJ.EQ.1.OR.JJ.EQ.3))THEN
         IER=0
         LD(1)=LD(1)-20000
         CALL PRSID1(KFILDO,LD,LDPARS)
         CALL RETVEC(KFILDO,KFIL10,IP12,KFILRA,RACESS,NUMRA,
     1               LD,LDPARS,JD,ITAU,
     2               NDATE,MDATE,CCALL,ISDATA,XDATA,ND1,NSTA,
     3               ICALLD,CCALLD,IPACK,IWORK,DATA,ND5,
     4               LSTORE,ND9,LITEMS,CORE,ND10,
     5               NBLOCK,NFETCH,
     6               IS0,IS1,IS2,IS4,ND7,
     7               L3264B,L3264W,IER)
      ENDIF
C
C        JD( ) IS NOT ACTUALLY USED IN RETVEC.  IT IS USED
C        IN CALL TO CONST, BUT CONST DOES NOT USE IT EITHER.
C
      IF(IER.NE.0)THEN
         WRITE(KFILDO,125)(LD(J),J=1,4)
  125    FORMAT(/,' ****VARIABLE NOT RETRIEVED BY RETVEC IN MRFTEST',
     1          2X,I9.9,1X,I9.9,1X,I9.9,1X,I10.3)
         GO TO 300
      ENDIF
C          
C        GET THE FOUR WORD ID FOR THE PREVIOUS FORECAST TEMPERATURE.
C
      LD(1)=ITABLE(3,JJ)*1000+IDPARS(4)
      LD(3)=(JD(3)-12) 
C
C         FETCHING THE PREVIOUS FORECAST TEMPERATURE.
C
      CALL PRSID1(KFILDO,LD,LDPARS)
      CALL RETVEC(KFILDO,KFIL10,IP12,KFILRA,RACESS,NUMRA,
     1            LD,LDPARS,JD,ITAU,
     2            NDATE,MDATE,CCALL,ISDATA,ZDATA,ND1,NSTA,
     3            ICALLD,CCALLD,IPACK,IWORK,DATA,ND5,
     4            LSTORE,ND9,LITEMS,CORE,ND10,
     5            NBLOCK,NFETCH,
     6            IS0,IS1,IS2,IS4,ND7,
     7            L3264B,L3264W,IER)
C
C        IT IS POSSIBLE THAT THE TEMPERATURS DO NOT EXIST AFTER
C        CERTAIN PROJECTION HOURS. TRY FETCH WITH DIFFERENT ID 
C        IN THAT CASE.
C
      IF(IER.NE.0.AND.(JJ.EQ.1.OR.JJ.EQ.3))THEN
         IER=0
         LD(1)=LD(1)-20000
         CALL PRSID1(KFILDO,LD,LDPARS)
         CALL RETVEC(KFILDO,KFIL10,IP12,KFILRA,RACESS,NUMRA,
     1               LD,LDPARS,JD,ITAU,
     2               NDATE,MDATE,CCALL,ISDATA,ZDATA,ND1,NSTA,
     3               ICALLD,CCALLD,IPACK,IWORK,DATA,ND5,
     4               LSTORE,ND9,LITEMS,CORE,ND10,
     5               NBLOCK,NFETCH,
     6               IS0,IS1,IS2,IS4,ND7,
     7               L3264B,L3264W,IER)
      ENDIF
C
C        JD( ) IS NOT ACTUALLY USED IN RETVEC.  IT IS USED
C        IN CALL TO CONST, BUT CONST DOES NOT USE IT EITHER.
C
      IF(IER.NE.0)THEN
         WRITE(KFILDO,127)(LD(J),J=1,4)
  127    FORMAT(/,' ****VARIABLE NOT RETRIEVED BY RETVEC IN MRFTEST',
     1          2X,I9.9,1X,I9.9,1X,I9.9,1X,I10.3)
         IER=0
      ENDIF
C     
C         GET THE FOUR WORD ID FOR THE FUTURE FORECAST TEMPERATURE.
C
      LD(1)=ITABLE(3,JJ)*1000+IDPARS(4)
      LD(3)=(JD(3)+12)    
C
C         FETCHING FUTURE FORECAST TEMPERATURE.
C
      CALL PRSID1(KFILDO,LD,LDPARS)
      CALL RETVEC(KFILDO,KFIL10,IP12,KFILRA,RACESS,NUMRA,
     1            LD,LDPARS,JD,ITAU,
     2            NDATE,MDATE,CCALL,ISDATA,YDATA,ND1,NSTA,
     3            ICALLD,CCALLD,IPACK,IWORK,DATA,ND5,
     4            LSTORE,ND9,LITEMS,CORE,ND10,
     5            NBLOCK,NFETCH,
     6            IS0,IS1,IS2,IS4,ND7,
     7            L3264B,L3264W,IER)
C
C        IT IS POSSIBLE THAT THE TEMPERATURS DO NOT EXIST AFTER
C        CERTAIN PROJECTION HOURS. TRY FETCH WITH DIFFERENT ID 
C        IN THAT CASE.
C
      IF(IER.NE.0.AND.(JJ.EQ.1.OR.JJ.EQ.3))THEN
         IER=0
         LD(1)=LD(1)-20000
         CALL PRSID1(KFILDO,LD,LDPARS)
         CALL RETVEC(KFILDO,KFIL10,IP12,KFILRA,RACESS,NUMRA,
     1               LD,LDPARS,JD,ITAU,
     2               NDATE,MDATE,CCALL,ISDATA,YDATA,ND1,NSTA,
     3               ICALLD,CCALLD,IPACK,IWORK,DATA,ND5,
     4               LSTORE,ND9,LITEMS,CORE,ND10,
     5               NBLOCK,NFETCH,
     6               IS0,IS1,IS2,IS4,ND7,
     7               L3264B,L3264W,IER)
      ENDIF
C
C        JD( ) IS NOT ACTUALLY USED IN RETVEC.  IT IS USED
C        IN CALL TO CONST, BUT CONST DOES NOT USE IT EITHER.
C
      IF(IER.NE.0)THEN
         WRITE(KFILDO,135)(LD(J),J=1,4)
  135    FORMAT(/,' ****VARIABLE NOT RETRIEVED BY RETVEC IN MRFTEST',
     1          2X,I9.9,1X,I9.9,1X,I9.9,1X,I10.3)
         IER=0
      ENDIF
C     
C        DETERMINING IF THE FIRST VALUE IN THE TIME SERIES IS A MAXIMUM
C        OR A MINIMUM.  THE THIRD AND FOURTH IDS IN ITABLE ARE THE
C        MINIMUM TEMPERATURE IDS.
C
      IF((JJ.EQ.3).OR.(JJ.EQ.4))GO TO 195
C
C        CHECK CURRENT MAXIMUM TEMPERATURE WITH PREVIOUS MINIMUM
C        TEMPERATURE AND THE NEXT MINIMUM TEMPERATURE FOR CONSISTENCY.
C
      DO 165 K=1,NSTA
C
C        IF THE MAXIMUM TEMPERATURE IS MISSING, DO NOT BOTHER
C        CHECKING IT AGAINST THE MINIMUMS
C
      IF((NINT(XDATA(K)).EQ.9999).OR.(NINT(XDATA(K)).EQ.9997))GO TO 165
C
C        BOTH THE PREVIOUS MIN. AND NEXT MIN. TEMPERATURE ARE MISSING.
C
      IF(NINT(ZDATA(K)).EQ.9999.AND.
     1   NINT(YDATA(K)).EQ.9999)GO TO 165
C                   
      IF(NINT(ZDATA(K)).EQ.9999)THEN
C
C           MAX. TEMP AND NEXT MIN. TEMPERATURE ARE AVAILABLE, NOT THE 
C           PREVIOUS MIN. TEMPERATURE. 
C 
         IF(XDATA(K).LT.YDATA(K))THEN  
            XDATA(K)=(XDATA(K)+YDATA(K))/2.
         ENDIF
C         
      ELSEIF(NINT(YDATA(K)).EQ.9999)THEN
C          
C           MAX. TEMP AND PREVIOUS MIN. TEMPERATURE ARE AVAILABLE, NOT 
C           THE NEXT MIN. TEMPERATURE.
C
         IF(XDATA(K).LT.ZDATA(K))THEN  
            XDATA(K)=(XDATA(K)+ZDATA(K))/2.
         ENDIF
C          
      ELSE
C
C           MAX. TEMP, PREVIOUS MIN. AND THE NEXT MIN. TEMPERATURES ARE ALL
C           AVAILABLE. 
C   
         IF(XDATA(K).GE.ZDATA(K).AND.
     1      XDATA(K).LT.YDATA(K))THEN
               XDATA(K)=(XDATA(K)+YDATA(K))/2.
         ENDIF
C 
         IF(XDATA(K).GE.YDATA(K).AND.
     1      XDATA(K).LT.ZDATA(K))THEN
               XDATA(K)=(XDATA(K)+ZDATA(K))/2.
         ENDIF
C
         IF(XDATA(K).LT.ZDATA(K).AND.
     1      XDATA(K).LT.YDATA(K))THEN
               XDATA(K)=(ZDATA(K)+XDATA(K)+2.*YDATA(K))/4.
         ENDIF
C      
      ENDIF                                                     
C                                                         
 165  CONTINUE
C
      GO TO 350
C              
C        CHECK CURRENT MINIMUM TEMPERATURE WITH PREVIOUS MAXIMUM
C        TEMPERATURE AND THE NEXT MAXIMUM TEMPERATURE FOR CONSISTENCY.
C
C
 195  DO 205 K=1,NSTA
C
C        IF THE MINIMUM TEMPERATURE IS MISSING, DO NOT BOTHER
C        CHECKING IT AGAINST THE MAXIMUMS
C
      IF((NINT(XDATA(K)).EQ.9999).OR.(NINT(XDATA(K)).EQ.9997))GO TO 205
C
C         BOTH THE PREVIOUS MAX. AND NEXT MAX. TEMPERATURE ARE MISSING.
C
      IF(NINT(ZDATA(K)).EQ.9999.AND.
     1   NINT(YDATA(K)).EQ.9999)GO TO 205
C
      IF(NINT(ZDATA(K)).EQ.9999)THEN
C     
C           MIN. TEMP AND NEXT MAX. TEMPERATURE ARE AVAILABLE, NOT THE 
C           PREVIOUS MAX. TEMPERATURE. 
C
         IF(XDATA(K).GT.YDATA(K))THEN  
            XDATA(K)=(XDATA(K)+YDATA(K))/2.
         ENDIF
C
C           MIN. TEMP AND PREVIOUS MAX. TEMPERATURE ARE AVAILABLE, NOT THE 
C           NEXT MAX. TEMPERATURE.
C
      ELSEIF(NINT(YDATA(K)).EQ.9999)THEN
C                                                    
         IF(XDATA(K).GT.ZDATA(K))THEN  
             XDATA(K)=(XDATA(K)+ZDATA(K))/2. 
         ENDIF
C      
      ELSE
C
C           MIN. TEMP, PREVIOUS MAX. AND THE NEXT MAX. TEMPERATURES 
C           ARE ALL AVAILABLE. 
C
         IF((XDATA(K).LE.ZDATA(K)).AND.(XDATA(K).GT.YDATA(K)))THEN
            XDATA(K)=(XDATA(K)+YDATA(K))/2.
         ENDIF
C 
         IF((XDATA(K).LE.YDATA(K)).AND.(XDATA(K).GT.ZDATA(K)))THEN
             XDATA(K)=(XDATA(K)+ZDATA(K))/2.
         ENDIF
C
         IF((XDATA(K).GT.ZDATA(K)).AND.(XDATA(K).GT.YDATA(K)))THEN
             XDATA(K)=(ZDATA(K)+XDATA(K)+2.*YDATA(K))/4.
         ENDIF
C
      ENDIF
C
 205  CONTINUE
C 
      GO TO 350
C
C        THIS VARIABLE CANNOT BE COMPUTED.  SET XDATA( ) TO MISSING.
C        THIS IS FOR SAFETY; XDATA( ) SHOULD ALREADY BE SET TO MISSING.
C        
 300  DO 310 K=1,NSTA
         XDATA(K)=9999.
 310  CONTINUE
C                                                 
 350  RETURN
      END
