SHELL=/bin/sh
#
SRCS=test_g2tmpl_table_233.f
OBJS=test_g2tmpl_table_233.o

# Tunable parameters
#
# FC		Name of the fortran compiling system to use
# LDFLAGS	Flags to the loader
# LIBS		List of libraries
# CMD		Name of the executable
# PROFLIB	Library needed for profiling
#
FC =		ifort

INC= /global/save/Boi.Vuong/g2tmpl.v1.4.0/v1.4.0/include/g2tmpl_v1.4.0
LIBS= -L/global/save/Boi.Vuong/g2tmpl.v1.4.0/v1.4.0 -lg2tmpl_v1.4.0

CMD =		test_g2tmpl_table_233
PROFLIB =	-lprof

# To perform the default compilation, use the first line
# To compile with flowtracing turned on, use the second line
# To compile giving profile additonal information, use the third line
# WARNING:  SIMULTANEOUSLY PROFILING AND FLOWTRACING IS NOT RECOMMENDED 
# FFLAGS =         -O3 -free  -g -DUNDERSCORE -I $(INC)
 FFLAGS =         -O3 -free  -g -I $(INC)
# LDFLAGS = -DUNDERSCORE
LDFLAGS =
#FFLAGS =	 -F
#FFLAGS =	 -Wf"-ez"

# Lines from here on down should not need to be changed.  They are the
# actual rules which make uses to build a.out.
#
all:		$(CMD)

$(CMD):		$(OBJS)
	$(FC) $(LDFLAGS) -o $(@) $(OBJS) $(LIBS)
	rm -f *.o

# Make the profiled version of the command and call it a.out.prof
#
$(CMD).prof:	$(OBJS)
	$(FC) $(LDFLAGS) -o $(@) $(OBJS) $(PROFLIB) $(LIBS)
	rm -f *.o

clean:
	-rm -f $(OBJS)

clobber:	clean
	-rm -f $(CMD) $(CMD).prof

void:	clobber
	-rm -f $(SRCS) makefile
